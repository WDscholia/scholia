require=(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function async(data, options, callback) {
  if (typeof options === 'function' && !callback) {
    callback = options;
    options = undefined;
  }
  const promise = new this().setAsync(data, options);
  if (typeof callback === 'function') {
    promise.then(callback);
    return undefined;
  } else {
    return promise;
  }
}
var _default = exports.default = async;
},{}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.format = format;
exports.get = get;
exports.getIds = getIds;
var _validate = require("./validate.js");
var _output = require("../plugins/output.js");
var _csl = require("../plugins/input/csl.js");
function getIds() {
  return this.data.map(entry => entry.id);
}
function format(format, ...options) {
  return (0, _output.format)(format, (0, _csl.clean)(this.data), ...options);
}
function get(options = {}) {
  (0, _validate.validateOutputOptions)(options);
  const parsedOptions = Object.assign({}, this.defaultOptions, this._options.output, options);
  const {
    type,
    style
  } = parsedOptions;
  const [styleType, styleFormat] = style.split('-');
  const newStyle = styleType === 'citation' ? 'bibliography' : styleType === 'csl' ? 'data' : styleType;
  const newType = type === 'string' ? 'text' : type === 'json' ? 'object' : type;
  let formatOptions;
  switch (newStyle) {
    case 'bibliography':
      {
        const {
          lang,
          append,
          prepend
        } = parsedOptions;
        formatOptions = {
          template: styleFormat,
          lang,
          format: newType,
          append,
          prepend
        };
        break;
      }
    case 'data':
    case 'bibtex':
    case 'bibtxt':
    case 'ndjson':
    case 'ris':
      formatOptions = {
        type: newType
      };
      break;
    default:
      throw new Error(`Invalid style "${newStyle}"`);
  }
  const result = this.format(newStyle, Object.assign(formatOptions, options._newOptions));
  const {
    format
  } = parsedOptions;
  if (format === 'real' && newType === 'html' && typeof document !== 'undefined' && typeof document.createElement === 'function') {
    const tmp = document.createElement('div');
    tmp.innerHTML = result;
    return tmp.firstChild;
  } else if (format === 'string' && typeof result === 'object') {
    return JSON.stringify(result);
  } else {
    return result;
  }
}
},{"../plugins/input/csl.js":24,"../plugins/output.js":32,"./validate.js":9}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var log = _interopRequireWildcard(require("./log.js"));
var options = _interopRequireWildcard(require("./options.js"));
var set = _interopRequireWildcard(require("./set.js"));
var sort = _interopRequireWildcard(require("./sort.js"));
var get = _interopRequireWildcard(require("./get.js"));
var staticMethods = _interopRequireWildcard(require("./static.js"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function Cite(data, options = {}) {
  if (!(this instanceof Cite)) {
    return new Cite(data, options);
  }
  this._options = options;
  this.log = [];
  this.data = [];
  this.set(data, options);
  this.options(options);
  return this;
}
Object.assign(Cite.prototype, log, options, set, sort, get);
Cite.prototype[Symbol.iterator] = function* () {
  yield* this.data;
};
Object.assign(Cite, staticMethods);
var _default = exports.default = Cite;
},{"./get.js":2,"./log.js":4,"./options.js":5,"./set.js":6,"./sort.js":7,"./static.js":8}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.currentVersion = currentVersion;
exports.retrieveLastVersion = retrieveLastVersion;
exports.retrieveVersion = retrieveVersion;
exports.save = save;
exports.undo = undo;
function currentVersion() {
  return this.log.length;
}
function retrieveVersion(versnum = 1) {
  if (versnum <= 0 || versnum > this.currentVersion()) {
    return null;
  } else {
    const [data, options] = this.log[versnum - 1];
    const image = new this.constructor(JSON.parse(data), JSON.parse(options));
    image.log = this.log.slice(0, versnum);
    return image;
  }
}
function undo(number = 1) {
  return this.retrieveVersion(this.currentVersion() - number);
}
function retrieveLastVersion() {
  return this.retrieveVersion(this.currentVersion());
}
function save() {
  this.log.push([JSON.stringify(this.data), JSON.stringify(this._options)]);
  return this;
}
},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultOptions = void 0;
exports.options = options;
var _validate = require("./validate.js");
const defaultOptions = exports.defaultOptions = {
  format: 'real',
  type: 'json',
  style: 'csl',
  lang: 'en-US'
};
function options(options, log) {
  (0, _validate.validateOutputOptions)(options);
  if (log) {
    this.save();
  }
  Object.assign(this._options, options);
  return this;
}
},{"./validate.js":9}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.add = add;
exports.addAsync = addAsync;
exports.reset = reset;
exports.set = set;
exports.setAsync = setAsync;
var _index = require("../plugins/input/index.js");
var _fetchId = _interopRequireDefault(require("../util/fetchId.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function add(data, options = {}, log = false) {
  if (options === true || log === true) {
    this.save();
  }
  this.data.push(...(0, _index.chain)(data, options));
  this.data.filter(entry => !Object.prototype.hasOwnProperty.call(entry, 'id')).forEach(entry => {
    entry.id = (0, _fetchId.default)(this.getIds(), 'temp_id_');
  });
  return this;
}
async function addAsync(data, options = {}, log = false) {
  if (options === true || log === true) {
    this.save();
  }
  this.data.push(...(await (0, _index.chainAsync)(data, options)));
  this.data.filter(entry => !Object.prototype.hasOwnProperty.call(entry, 'id')).forEach(entry => {
    entry.id = (0, _fetchId.default)(this.getIds(), 'temp_id_');
  });
  return this;
}
function set(data, options = {}, log = false) {
  if (options === true || log === true) {
    this.save();
  }
  this.data = [];
  return typeof options !== 'boolean' ? this.add(data, options) : this.add(data);
}
async function setAsync(data, options = {}, log = false) {
  if (options === true || log === true) {
    this.save();
  }
  this.data = [];
  return typeof options !== 'boolean' ? this.addAsync(data, options) : this.addAsync(data);
}
function reset(log) {
  if (log) {
    this.save();
  }
  this.data = [];
  this._options = {};
  return this;
}
},{"../plugins/input/index.js":28,"../util/fetchId.js":36}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sort = sort;
var _label = require("../plugin-common/output/label.js");
var _name = require("@citation-js/name");
function getComparisonValue(obj, prop, label = prop === 'label') {
  let value = label ? (0, _label.getLabel)(obj) : obj[prop];
  switch (prop) {
    case 'author':
    case 'editor':
      return value.map(name => name.literal || name.family || (0, _name.format)(name));
    case 'accessed':
    case 'issued':
      return value['date-parts'][0];
    case 'page':
      return value.split('-').map(num => parseInt(num));
    case 'edition':
    case 'issue':
    case 'volume':
      value = parseInt(value);
      return !isNaN(value) ? value : -Infinity;
    default:
      return value || -Infinity;
  }
}
function compareProp(entryA, entryB, prop, flip = /^!/.test(prop)) {
  prop = prop.replace(/^!/, '');
  const a = getComparisonValue(entryA, prop);
  const b = getComparisonValue(entryB, prop);
  return (flip ? -1 : 1) * (a > b ? 1 : a < b ? -1 : 0);
}
function getSortCallback(...props) {
  return (a, b) => {
    const keys = props.slice();
    let output = 0;
    while (!output && keys.length) {
      output = compareProp(a, b, keys.shift());
    }
    return output;
  };
}
function sort(method = [], log) {
  if (log) {
    this.save();
  }
  this.data.sort(typeof method === 'function' ? method : getSortCallback(...method, 'label'));
  return this;
}
},{"../plugin-common/output/label.js":19,"@citation-js/name":46}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  async: true
};
Object.defineProperty(exports, "async", {
  enumerable: true,
  get: function () {
    return _async.default;
  }
});
var _async = _interopRequireDefault(require("./async.js"));
var _validate = require("./validate.js");
Object.keys(_validate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _validate[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _validate[key];
    }
  });
});
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
},{"./async.js":1,"./validate.js":9}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateOptions = validateOptions;
exports.validateOutputOptions = validateOutputOptions;
const formats = ['real', 'string'];
const types = ['json', 'html', 'string', 'rtf'];
const styles = ['csl', 'bibtex', 'bibtxt', 'citation-*', 'ris', 'ndjson'];
const wrapperTypes = ['string', 'function'];
function validateOutputOptions(options) {
  if (typeof options !== 'object') {
    throw new TypeError('Options not an object!');
  }
  const {
    format,
    type,
    style,
    lang,
    append,
    prepend
  } = options;
  if (format && !formats.includes(format)) {
    throw new TypeError(`Option format ("${format}") should be one of: ${formats}`);
  } else if (type && !types.includes(type)) {
    throw new TypeError(`Option type ("${type}") should be one of: ${types}`);
  } else if (style && !styles.includes(style) && !/^citation/.test(style)) {
    throw new TypeError(`Option style ("${style}") should be one of: ${styles}`);
  } else if (lang && typeof lang !== 'string') {
    throw new TypeError(`Option lang should be a string, but is a ${typeof lang}`);
  } else if (prepend && !wrapperTypes.includes(typeof prepend)) {
    throw new TypeError(`Option prepend should be a string or a function, but is a ${typeof prepend}`);
  } else if (append && !wrapperTypes.includes(typeof append)) {
    throw new TypeError(`Option append should be a string or a function, but is a ${typeof append}`);
  }
  if (/^citation/.test(style) && type === 'json') {
    throw new Error(`Combination type/style of json/citation-* is not valid: ${type}/${style}`);
  }
  return true;
}
function validateOptions(options) {
  if (typeof options !== 'object') {
    throw new TypeError('Options should be an object');
  }
  if (options.output) {
    validateOutputOptions(options.output);
  } else if (options.maxChainLength && typeof options.maxChainLength !== 'number') {
    throw new TypeError('Option maxChainLength should be a number');
  } else if (options.forceType && typeof options.forceType !== 'string') {
    throw new TypeError('Option forceType should be a string');
  } else if (options.generateGraph != null && typeof options.generateGraph !== 'boolean') {
    throw new TypeError('Option generateGraph should be a boolean');
  } else if (options.strict != null && typeof options.strict !== 'boolean') {
    throw new TypeError('Option strict should be a boolean');
  } else if (options.target != null && typeof options.target !== 'string') {
    throw new TypeError('Option target should be a boolean');
  }
  return true;
}
},{}],10:[function(require,module,exports){
(function (process){(function (){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const logger = {
  _output(level, scope, msg) {
    this._log.push(scope, msg);
    if (this._levels.indexOf(level) < this._levels.indexOf(this.level)) {
      return;
    }
    this._console.log(scope, ...msg);
  },
  _console: null,
  _log: [],
  _levels: ['http', 'debug', 'unmapped', 'info', 'warn', 'error', 'silent'],
  level: 'silent'
};
for (const level of logger._levels) {
  logger[level] = (scope, ...msg) => logger._output(level, scope, msg);
}
if (typeof console.Console === 'function') {
  logger._console = new console.Console(process.stderr);
} else {
  logger._console = console;
}
var _default = exports.default = logger;
}).call(this)}).call(this,require('_process'))
},{"_process":159}],11:[function(require,module,exports){
"use strict";

var plugins = _interopRequireWildcard(require("../plugins"));
var _input = require("./input/");
var _output = _interopRequireDefault(require("./output/"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
plugins.add(_input.ref, {
  input: _input.formats,
  output: _output.default
});
},{"../plugins":22,"./input/":14,"./output/":17}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parse = parse;
function parse() {
  return [];
}
},{}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parse = parse;
function parse(input) {
  return input.value || input.textContent;
}
},{}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ref = exports.parsers = exports.formats = void 0;
var empty = _interopRequireWildcard(require("./empty.js"));
var json = _interopRequireWildcard(require("./json.js"));
var jquery = _interopRequireWildcard(require("./jquery.js"));
var html = _interopRequireWildcard(require("./html.js"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const ref = exports.ref = '@else';
const parsers = exports.parsers = {
  empty,
  json,
  jquery,
  html
};
const formats = exports.formats = {
  '@empty/text': {
    parse: empty.parse,
    parseType: {
      dataType: 'String',
      predicate: input => input === ''
    }
  },
  '@empty/whitespace+text': {
    parse: empty.parse,
    parseType: {
      dataType: 'String',
      predicate: /^\s+$/
    }
  },
  '@empty': {
    parse: empty.parse,
    parseType: {
      dataType: 'Primitive',
      predicate: input => input == null
    }
  },
  '@else/json': {
    parse: json.parse,
    parseType: {
      dataType: 'String',
      predicate: /^\s*(\{[\S\s]*\}|\[[\S\s]*\])\s*$/
    }
  },
  '@else/url': {
    parseType: {
      dataType: 'String',
      predicate: /^https?:\/\/(([\w-]+\.)*[\w-]+)(:\d+)?(\/[^?/]*)*(\?[^#]*)?(#.*)?$/i
    }
  },
  '@else/jquery': {
    parse: jquery.parse,
    parseType: {
      dataType: 'ComplexObject',
      predicate(input) {
        return typeof jQuery !== 'undefined' && input instanceof jQuery;
      }
    }
  },
  '@else/html': {
    parse: html.parse,
    parseType: {
      dataType: 'ComplexObject',
      predicate(input) {
        return typeof HTMLElement !== 'undefined' && input instanceof HTMLElement;
      }
    }
  }
};
},{"./empty.js":12,"./html.js":13,"./jquery.js":15,"./json.js":16}],15:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parse = parse;
function parse(input) {
  return input.val() || input.text() || input.html();
}
},{}],16:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.parse = parseJSON;
var _logger = _interopRequireDefault(require("../../logger.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const substituters = [[/((?:\[|:|,)\s*)'((?:\\'|[^'])*?[^\\])?'(?=\s*(?:\]|}|,))/g, '$1"$2"'], [/((?:(?:"|]|}|\/[gmiuys]|\.|(?:\d|\.|-)*\d)\s*,|{)\s*)(?:"([^":\n]+?)"|'([^":\n]+?)'|([^":\n]+?))(\s*):/g, '$1"$2$3$4"$5:']];
function parseJSON(str) {
  if (typeof str !== 'string') {
    return JSON.parse(str);
  }
  try {
    return JSON.parse(str);
  } catch (e) {
    _logger.default.debug('[plugin-common]', 'Invalid JSON, switching to experimental parser');
    substituters.forEach(([regex, subst]) => {
      str = str.replace(regex, subst);
    });
    return JSON.parse(str);
  }
}
},{"../../logger.js":10}],17:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _json = _interopRequireDefault(require("./json.js"));
var _label = _interopRequireDefault(require("./label.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default = exports.default = Object.assign({}, _json.default, _label.default);
},{"./json.js":18,"./label.js":19}],18:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.getJsonWrapper = getJsonWrapper;
var plugins = _interopRequireWildcard(require("../../plugins/index.js"));
var util = _interopRequireWildcard(require("../../util/index.js"));
var _logger = _interopRequireDefault(require("../../logger.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function appendCommas(string, index, array) {
  return string + (index < array.length - 1 ? ',' : '');
}
function getJsonObject(src, dict) {
  const isArray = Array.isArray(src);
  let entries;
  if (isArray) {
    entries = src.map(entry => getJsonValue(entry, dict));
  } else {
    entries = Object.keys(src).filter(prop => JSON.stringify(src[prop])).map(prop => `"${prop}": ${getJsonValue(src[prop], dict)}`);
  }
  entries = entries.map(appendCommas).map(entry => dict.listItem.join(entry));
  entries = dict.list.join(entries.join(''));
  return isArray ? `[${entries}]` : `{${entries}}`;
}
function getJsonValue(src, dict) {
  if (typeof src === 'object' && src !== null) {
    if (src.length === 0) {
      return '[]';
    } else if (Object.keys(src).length === 0) {
      return '{}';
    } else {
      return getJsonObject(src, dict);
    }
  } else {
    return JSON.stringify(src);
  }
}
function getJson(src, dict) {
  let entries = src.map(entry => getJsonObject(entry, dict));
  entries = entries.map(appendCommas).map(entry => dict.entry.join(entry));
  entries = entries.join('');
  return dict.bibliographyContainer.join(`[${entries}]`);
}
function getJsonWrapper(src) {
  return getJson(src, plugins.dict.get('html'));
}
var _default = exports.default = {
  data(data, {
    type,
    format = type || 'text',
    version = '1.0.2'
  } = {}) {
    if (version < '1.0.2') {
      data = util.downgradeCsl(data);
    }
    if (format === 'object') {
      return util.deepCopy(data);
    } else if (format === 'text') {
      return JSON.stringify(data, null, 2);
    } else {
      _logger.default.warn('[core]', 'This feature (JSON output with special formatting) is unstable. See https://github.com/larsgw/citation.js/issues/144');
      return getJson(data, plugins.dict.get(format));
    }
  },
  ndjson(data, {
    version = '1.0.2'
  } = {}) {
    if (version < '1.0.2') {
      data = util.downgradeCsl(data);
    }
    return data.map(entry => JSON.stringify(entry)).join('\n');
  }
};
},{"../../logger.js":10,"../../plugins/index.js":22,"../../util/index.js":38}],19:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.getLabel = getLabel;
function getLabel(entry) {
  if ('citation-label' in entry) {
    return entry['citation-label'];
  }
  let res = '';
  if (entry.author) {
    res += entry.author[0].family || entry.author[0].literal;
  }
  if (entry.issued && entry.issued['date-parts'] && entry.issued['date-parts'][0]) {
    res += entry.issued['date-parts'][0][0];
  }
  if (entry['year-suffix']) {
    res += entry['year-suffix'];
  } else if (entry.title) {
    res += entry.title.replace(/<\/?.*?>/g, '').match(/^(?:(?:the|a|an)\s+)?(\S+)/i)[1];
  }
  return res;
}
var _default = exports.default = {
  label(data) {
    return data.reduce((object, entry) => {
      object[entry.id] = getLabel(entry);
      return object;
    }, {});
  }
};
},{}],20:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.add = add;
exports.get = get;
exports.has = has;
exports.list = list;
exports.remove = remove;
const configs = {};
function add(ref, config) {
  configs[ref] = config;
}
function get(ref) {
  return configs[ref];
}
function has(ref) {
  return Object.prototype.hasOwnProperty.call(configs, ref);
}
function remove(ref) {
  delete configs[ref];
}
function list() {
  return Object.keys(configs);
}
},{}],21:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.add = add;
exports.get = get;
exports.has = has;
exports.htmlDict = void 0;
exports.list = list;
exports.register = void 0;
exports.remove = remove;
exports.textDict = void 0;
var _register = _interopRequireDefault(require("../util/register.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function validate(name, dict) {
  if (typeof name !== 'string') {
    throw new TypeError(`Invalid dict name, expected string, got ${typeof name}`);
  } else if (typeof dict !== 'object') {
    throw new TypeError(`Invalid dict, expected object, got ${typeof dict}`);
  }
  for (const entryName in dict) {
    const entry = dict[entryName];
    if (!Array.isArray(entry) || entry.some(part => typeof part !== 'string')) {
      throw new TypeError(`Invalid dict entry "${entryName}", expected array of strings`);
    }
  }
}
const register = exports.register = new _register.default({
  html: {
    bibliographyContainer: ['<div class="csl-bib-body">', '</div>'],
    entry: ['<div class="csl-entry">', '</div>'],
    list: ['<ul style="list-style-type:none">', '</ul>'],
    listItem: ['<li>', '</li>']
  },
  text: {
    bibliographyContainer: ['', '\n'],
    entry: ['', '\n'],
    list: ['\n', ''],
    listItem: ['\t', '\n']
  }
});
function add(name, dict) {
  validate(name, dict);
  register.set(name, dict);
}
function remove(name) {
  register.remove(name);
}
function has(name) {
  return register.has(name);
}
function list() {
  return register.list();
}
function get(name) {
  if (!register.has(name)) {
    throw new Error(`Dict "${name}" unavailable`);
  }
  return register.get(name);
}
const htmlDict = exports.htmlDict = {
  wr_start: '<div class="csl-bib-body">',
  wr_end: '</div>',
  en_start: '<div class="csl-entry">',
  en_end: '</div>',
  ul_start: '<ul style="list-style-type:none">',
  ul_end: '</ul>',
  li_start: '<li>',
  li_end: '</li>'
};
const textDict = exports.textDict = {
  wr_start: '',
  wr_end: '\n',
  en_start: '',
  en_end: '\n',
  ul_start: '\n',
  ul_end: '',
  li_start: '\t',
  li_end: '\n'
};
},{"../util/register.js":39}],22:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.add = add;
exports.dict = exports.config = void 0;
exports.has = has;
exports.input = void 0;
exports.list = list;
exports.output = void 0;
exports.remove = remove;
var input = _interopRequireWildcard(require("./input/index.js"));
exports.input = input;
var output = _interopRequireWildcard(require("./output.js"));
exports.output = output;
var dict = _interopRequireWildcard(require("./dict.js"));
exports.dict = dict;
var config = _interopRequireWildcard(require("./config.js"));
exports.config = config;
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const registers = {
  input,
  output,
  dict,
  config
};
const indices = {};
function add(ref, plugins = {}) {
  const mainIndex = indices[ref] = {};
  for (const type in plugins) {
    if (type === 'config') {
      mainIndex.config = {
        [ref]: plugins.config
      };
      registers.config.add(ref, plugins.config);
      continue;
    }
    const typeIndex = mainIndex[type] = {};
    const typePlugins = plugins[type];
    for (const name in typePlugins) {
      const typePlugin = typePlugins[name];
      typeIndex[name] = true;
      registers[type].add(name, typePlugin);
    }
  }
}
function remove(ref) {
  const mainIndex = indices[ref];
  for (const type in mainIndex) {
    const typeIndex = mainIndex[type];
    for (const name in typeIndex) {
      registers[type].remove(name);
    }
  }
  delete indices[ref];
}
function has(ref) {
  return ref in indices;
}
function list() {
  return Object.keys(indices);
}
},{"./config.js":20,"./dict.js":21,"./input/index.js":28,"./output.js":32}],23:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.chainLinkAsync = exports.chainLink = exports.chainAsync = exports.chain = void 0;
var _index = require("../../util/index.js");
var _logger = _interopRequireDefault(require("../../logger.js"));
var _register = require("./register.js");
var _type = require("./type.js");
var _data = require("./data.js");
var _graph = require("./graph.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function prepareParseGraph(graph) {
  return graph.reduce((array, next) => {
    const last = array[array.length - 1];
    if (last && last.type === next.type) {
      last.count = last.count + 1 || 2;
    } else {
      array.push(next);
    }
    return array;
  }, []).map(element => (element.count > 1 ? element.count + 'x ' : '') + element.type).join(' -> ');
}
class ChainParser {
  constructor(input, options = {}) {
    this.options = Object.assign({
      generateGraph: true,
      forceType: (0, _type.type)(input),
      maxChainLength: 10,
      strict: true,
      target: '@csl/list+object'
    }, options);
    this.type = this.options.forceType;
    this.data = typeof input === 'object' ? (0, _index.deepCopy)(input) : input;
    this.graph = [{
      type: this.type,
      data: input
    }];
    this.iteration = 0;
  }
  iterate() {
    if (this.iteration !== 0) {
      const typeInfo = (0, _register.get)(this.type);
      if (typeInfo && typeInfo.outputs) {
        this.type = typeInfo.outputs;
      } else {
        this.type = (0, _type.type)(this.data);
      }
      this.graph.push({
        type: this.type
      });
    }
    if (this.error || this.type === this.options.target) {
      return false;
    } else if (this.iteration >= this.options.maxChainLength) {
      this.error = new RangeError(`Max. number of parsing iterations reached (${prepareParseGraph(this.graph)})`);
      return false;
    } else {
      this.iteration++;
      return true;
    }
  }
  end() {
    if (this.error) {
      _logger.default.error('[core]', this.error.message);
      if (this.options.strict !== false) {
        throw this.error;
      } else {
        return [];
      }
    } else if (this.options.target === '@csl/list+object') {
      return (0, _index.upgradeCsl)(this.data).map(this.options.generateGraph ? entry => (0, _graph.applyGraph)(entry, this.graph) : _graph.removeGraph);
    } else {
      return this.data;
    }
  }
}
const chain = (...args) => {
  const chain = new ChainParser(...args);
  while (chain.iterate()) {
    try {
      chain.data = (0, _data.data)(chain.data, chain.type);
    } catch (e) {
      chain.error = e;
    }
  }
  return chain.end();
};
exports.chain = chain;
const chainLink = input => {
  const type = (0, _type.type)(input);
  const output = type.match(/array|object/) ? (0, _index.deepCopy)(input) : input;
  return (0, _data.data)(output, type);
};
exports.chainLink = chainLink;
const chainAsync = async (...args) => {
  const chain = new ChainParser(...args);
  while (chain.iterate()) {
    chain.data = await (0, _data.dataAsync)(chain.data, chain.type).catch(e => {
      chain.error = e;
    });
  }
  return chain.end();
};
exports.chainAsync = chainAsync;
const chainLinkAsync = async input => {
  const type = (0, _type.type)(input);
  const output = type.match(/array|object/) ? (0, _index.deepCopy)(input) : input;
  return (0, _data.dataAsync)(output, type);
};
exports.chainLinkAsync = chainLinkAsync;
},{"../../logger.js":10,"../../util/index.js":38,"./data.js":25,"./graph.js":27,"./register.js":30,"./type.js":31}],24:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clean = parseCsl;
var _name = require("@citation-js/name");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
const NAME = 1;
const NAME_LIST = 2;
const DATE = 3;
const TYPE = 4;
const entryTypes = {
  article: true,
  'article-journal': true,
  'article-magazine': true,
  'article-newspaper': true,
  bill: true,
  book: true,
  broadcast: true,
  chapter: true,
  classic: true,
  collection: true,
  dataset: true,
  document: true,
  entry: true,
  'entry-dictionary': true,
  'entry-encyclopedia': true,
  event: true,
  figure: true,
  graphic: true,
  hearing: true,
  interview: true,
  legal_case: true,
  legislation: true,
  manuscript: true,
  map: true,
  motion_picture: true,
  musical_score: true,
  pamphlet: true,
  'paper-conference': true,
  patent: true,
  performance: true,
  periodical: true,
  personal_communication: true,
  post: true,
  'post-weblog': true,
  regulation: true,
  report: true,
  review: true,
  'review-book': true,
  software: true,
  song: true,
  speech: true,
  standard: true,
  thesis: true,
  treaty: true,
  webpage: true,
  'journal-article': 'article-journal',
  'book-chapter': 'chapter',
  'posted-content': 'manuscript',
  'proceedings-article': 'paper-conference',
  dissertation: 'thesis'
};
const fieldTypes = {
  author: NAME_LIST,
  chair: NAME_LIST,
  'collection-editor': NAME_LIST,
  compiler: NAME_LIST,
  composer: NAME_LIST,
  'container-author': NAME_LIST,
  contributor: NAME_LIST,
  curator: NAME_LIST,
  director: NAME_LIST,
  editor: NAME_LIST,
  'editorial-director': NAME_LIST,
  'executive-producer': NAME_LIST,
  guest: NAME_LIST,
  host: NAME_LIST,
  interviewer: NAME_LIST,
  illustrator: NAME_LIST,
  narrator: NAME_LIST,
  organizer: NAME_LIST,
  'original-author': NAME_LIST,
  performer: NAME_LIST,
  producer: NAME_LIST,
  'reviewed-author': NAME_LIST,
  recipient: NAME_LIST,
  'script-writer': NAME_LIST,
  'series-creator': NAME_LIST,
  translator: NAME_LIST,
  accessed: DATE,
  'available-date': DATE,
  container: DATE,
  'event-date': DATE,
  issued: DATE,
  'original-date': DATE,
  submitted: DATE,
  type: TYPE,
  categories: 'object',
  custom: 'object',
  id: ['string', 'number'],
  language: 'string',
  journalAbbreviation: 'string',
  shortTitle: 'string',
  abstract: 'string',
  annote: 'string',
  archive: 'string',
  archive_collection: 'string',
  archive_location: 'string',
  'archive-place': 'string',
  authority: 'string',
  'call-number': 'string',
  'chapter-number': 'string',
  'citation-number': 'string',
  'citation-key': 'string',
  'citation-label': 'string',
  'collection-number': 'string',
  'collection-title': 'string',
  'container-title': 'string',
  'container-title-short': 'string',
  dimensions: 'string',
  division: 'string',
  DOI: 'string',
  edition: ['string', 'number'],
  event: 'string',
  'event-title': 'string',
  'event-place': 'string',
  'first-reference-note-number': 'string',
  genre: 'string',
  ISBN: 'string',
  ISSN: 'string',
  issue: ['string', 'number'],
  jurisdiction: 'string',
  keyword: 'string',
  locator: 'string',
  medium: 'string',
  note: 'string',
  number: ['string', 'number'],
  'number-of-pages': 'string',
  'number-of-volumes': ['string', 'number'],
  'original-publisher': 'string',
  'original-publisher-place': 'string',
  'original-title': 'string',
  page: 'string',
  'page-first': 'string',
  'part-number': ['string', 'number'],
  'part-title': 'string',
  PMCID: 'string',
  PMID: 'string',
  printing: 'string',
  publisher: 'string',
  'publisher-place': 'string',
  references: 'string',
  'reviewed-title': 'string',
  'reviewed-genre': 'string',
  scale: 'string',
  section: 'string',
  source: 'string',
  status: 'string',
  supplement: ['string', 'number'],
  title: 'string',
  'title-short': 'string',
  URL: 'string',
  version: 'string',
  volume: ['string', 'number'],
  'volume-title': 'string',
  'volume-title-short': 'string',
  'year-suffix': 'string'
};
function correctName(name, bestGuessConversions) {
  if (typeof name === 'object' && name !== null && (name.literal || name.given || name.family)) {
    if (name.ORCID || name.orcid || name._ORCID) {
      name = _objectSpread({
        _orcid: name.ORCID || name.orcid || name._ORCID
      }, name);
      delete name.ORCID;
      delete name.orcid;
      delete name._ORCID;
    }
    return name;
  } else if (!bestGuessConversions) {
    return undefined;
  } else if (typeof name === 'string') {
    return (0, _name.parse)(name);
  }
}
function correctNameList(nameList, bestGuessConversions) {
  if (nameList instanceof Array) {
    const names = nameList.map(name => correctName(name, bestGuessConversions)).filter(Boolean);
    return names.length ? names : undefined;
  }
}
function correctDateParts(dateParts, bestGuessConversions) {
  if (dateParts.every(part => typeof part === 'number')) {
    return dateParts;
  } else if (!bestGuessConversions || dateParts.some(part => isNaN(parseInt(part)))) {
    return undefined;
  } else {
    return dateParts.map(part => parseInt(part));
  }
}
function correctDate(date, bestGuessConversions) {
  const dp = 'date-parts';
  if (typeof date !== 'object' || date === null) {
    return undefined;
  } else if (date[dp] instanceof Array && date[dp].every(part => part instanceof Array)) {
    const range = date[dp].map(dateParts => correctDateParts(dateParts, bestGuessConversions)).filter(Boolean);
    return range.length ? _objectSpread(_objectSpread({}, date), {}, {
      'date-parts': range
    }) : undefined;
  } else if (date instanceof Array && date.every(part => part[dp] instanceof Array)) {
    const range = date.map(dateParts => correctDateParts(dateParts[dp], bestGuessConversions)).filter(Boolean);
    return range.length ? {
      'date-parts': range
    } : undefined;
  } else if (date[dp] instanceof Array) {
    const dateParts = correctDateParts(date[dp], bestGuessConversions);
    return dateParts && {
      'date-parts': [dateParts]
    };
  } else if ('literal' in date || 'raw' in date) {
    return date;
  }
}
function correctType(type, bestGuessConversions) {
  type = correctField('language', type, bestGuessConversions);
  if (entryTypes[type] === true) {
    return type;
  }
  if (bestGuessConversions) {
    if (type in entryTypes) {
      return entryTypes[type];
    } else if (type.toLowerCase() !== type) {
      return correctType(type.toLowerCase(), bestGuessConversions);
    }
  }
  return undefined;
}
function correctField(fieldName, value, bestGuessConversions) {
  const fieldType = [].concat(fieldTypes[fieldName]);
  switch (fieldTypes[fieldName]) {
    case NAME:
      return correctName(value, bestGuessConversions);
    case NAME_LIST:
      return correctNameList(value, bestGuessConversions);
    case DATE:
      return correctDate(value, bestGuessConversions);
    case TYPE:
      return correctType(value, bestGuessConversions);
  }
  if (bestGuessConversions) {
    if (typeof value === 'string' && fieldType.includes('number') && !fieldType.includes('string') && !isNaN(+value)) {
      return parseFloat(value);
    } else if (typeof value === 'number' && fieldType.includes('string') && !fieldType.includes('number')) {
      return value.toString();
    } else if (Array.isArray(value) && value.length) {
      return correctField(fieldName, value[0], bestGuessConversions);
    }
  }
  if (fieldType.includes(typeof value)) {
    return value;
  }
}
function parseCsl(data, bestGuessConversions = true) {
  return data.map(function (entry) {
    const clean = {};
    for (const field in entry) {
      const correction = correctField(field, entry[field], bestGuessConversions);
      if (correction !== undefined) {
        clean[field] = correction;
      }
    }
    return clean;
  });
}
},{"@citation-js/name":46}],25:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addDataParser = addDataParser;
exports.data = data;
exports.dataAsync = dataAsync;
exports.hasDataParser = hasDataParser;
exports.listDataParser = listDataParser;
exports.removeDataParser = removeDataParser;
var _type = require("./type.js");
const parsers = {};
const asyncParsers = {};
const nativeParsers = {
  '@csl/object': input => [input],
  '@csl/list+object': input => input,
  '@else/list+object': input => input.map(item => {
    const type = (0, _type.type)(item);
    return data(item, type);
  }).flat(),
  '@invalid': () => {
    throw new Error('This format is not supported or recognized');
  }
};
const nativeAsyncParsers = {
  '@else/list+object': input => Promise.all(input.map(item => {
    const type = (0, _type.type)(item);
    return dataAsync(item, type);
  })).then(input => input.flat())
};
function data(input, type) {
  if (typeof parsers[type] === 'function') {
    return parsers[type](input);
  } else if (typeof nativeParsers[type] === 'function') {
    return nativeParsers[type](input);
  } else {
    throw new TypeError(`No synchronous parser found for ${type}`);
  }
}
async function dataAsync(input, type) {
  if (typeof asyncParsers[type] === 'function') {
    return asyncParsers[type](input);
  } else if (typeof nativeAsyncParsers[type] === 'function') {
    return nativeAsyncParsers[type](input);
  } else if (hasDataParser(type, false)) {
    return data(input, type);
  } else {
    throw new TypeError(`No parser found for ${type}`);
  }
}
function addDataParser(format, {
  parser,
  async
}) {
  if (async) {
    asyncParsers[format] = parser;
  } else {
    parsers[format] = parser;
  }
}
function hasDataParser(type, async) {
  return async ? asyncParsers[type] || nativeAsyncParsers[type] : parsers[type] || nativeParsers[type];
}
function removeDataParser(type, async) {
  delete (async ? asyncParsers : parsers)[type];
}
function listDataParser(async) {
  return Object.keys(async ? asyncParsers : parsers);
}
},{"./type.js":31}],26:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dataTypeOf = dataTypeOf;
exports.typeOf = typeOf;
function typeOf(thing) {
  switch (thing) {
    case undefined:
      return 'Undefined';
    case null:
      return 'Null';
    default:
      return thing.constructor.name;
  }
}
function dataTypeOf(thing) {
  switch (typeof thing) {
    case 'string':
      return 'String';
    case 'object':
      if (Array.isArray(thing)) {
        return 'Array';
      } else if (typeOf(thing) === 'Object') {
        return 'SimpleObject';
      } else if (typeOf(thing) !== 'Null') {
        return 'ComplexObject';
      }
    default:
      return 'Primitive';
  }
}
},{}],27:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.applyGraph = applyGraph;
exports.removeGraph = removeGraph;
function applyGraph(entry, graph) {
  if (entry._graph) {
    const index = graph.findIndex(({
      type
    }) => type === '@else/list+object');
    if (index !== -1) {
      graph.splice(index + 1, 0, ...entry._graph.slice(0, -1));
    }
  }
  entry._graph = graph;
  return entry;
}
function removeGraph(entry) {
  delete entry._graph;
  return entry;
}
},{}],28:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  util: true
};
exports.util = void 0;
var dataType = _interopRequireWildcard(require("./dataType.js"));
var graph = _interopRequireWildcard(require("./graph.js"));
var parser = _interopRequireWildcard(require("./parser.js"));
var csl = _interopRequireWildcard(require("./csl.js"));
var _register = require("./register");
Object.keys(_register).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _register[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _register[key];
    }
  });
});
var _chain = require("./chain");
Object.keys(_chain).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _chain[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _chain[key];
    }
  });
});
var _type = require("./type");
Object.keys(_type).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _type[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _type[key];
    }
  });
});
var _data = require("./data");
Object.keys(_data).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _data[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _data[key];
    }
  });
});
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const util = exports.util = Object.assign({}, dataType, graph, parser, csl);
},{"./chain":23,"./csl.js":24,"./data":25,"./dataType.js":26,"./graph.js":27,"./parser.js":29,"./register":30,"./type":31}],29:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TypeParser = exports.FormatParser = exports.DataParser = void 0;
var _type = require("./type.js");
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
class TypeParser {
  constructor(data) {
    _defineProperty(this, "validDataTypes", ['String', 'Array', 'SimpleObject', 'ComplexObject', 'Primitive']);
    this.data = data;
  }
  validateDataType() {
    const dataType = this.data.dataType;
    if (dataType && !this.validDataTypes.includes(dataType)) {
      throw new RangeError(`dataType was ${dataType}; expected one of ${this.validDataTypes}`);
    }
  }
  validateParseType() {
    const predicate = this.data.predicate;
    if (predicate && !(predicate instanceof RegExp || typeof predicate === 'function')) {
      throw new TypeError(`predicate was ${typeof predicate}; expected RegExp or function`);
    }
  }
  validateTokenList() {
    const tokenList = this.data.tokenList;
    if (tokenList && typeof tokenList !== 'object') {
      throw new TypeError(`tokenList was ${typeof tokenList}; expected object or RegExp`);
    }
  }
  validatePropertyConstraint() {
    const propertyConstraint = this.data.propertyConstraint;
    if (propertyConstraint && typeof propertyConstraint !== 'object') {
      throw new TypeError(`propertyConstraint was ${typeof propertyConstraint}; expected array or object`);
    }
  }
  validateElementConstraint() {
    const elementConstraint = this.data.elementConstraint;
    if (elementConstraint && typeof elementConstraint !== 'string') {
      throw new TypeError(`elementConstraint was ${typeof elementConstraint}; expected string`);
    }
  }
  validateExtends() {
    const extend = this.data.extends;
    if (extend && typeof extend !== 'string') {
      throw new TypeError(`extends was ${typeof extend}; expected string`);
    }
  }
  validate() {
    if (this.data === null || typeof this.data !== 'object') {
      throw new TypeError(`typeParser was ${typeof this.data}; expected object`);
    }
    this.validateDataType();
    this.validateParseType();
    this.validateTokenList();
    this.validatePropertyConstraint();
    this.validateElementConstraint();
    this.validateExtends();
  }
  parseTokenList() {
    let tokenList = this.data.tokenList;
    if (!tokenList) {
      return [];
    } else if (tokenList instanceof RegExp) {
      tokenList = {
        token: tokenList
      };
    }
    const {
      token,
      split = /\s+/,
      trim = true,
      every = true
    } = tokenList;
    const trimInput = input => trim ? input.trim() : input;
    const testTokens = every ? 'every' : 'some';
    const predicate = input => trimInput(input).split(split)[testTokens](part => token.test(part));
    return [predicate];
  }
  parsePropertyConstraint() {
    const constraints = [].concat(this.data.propertyConstraint || []);
    return constraints.map(({
      props,
      match,
      value
    }) => {
      props = [].concat(props);
      switch (match) {
        case 'any':
        case 'some':
          return input => props.some(prop => prop in input && (!value || value(input[prop])));
        case 'none':
          return input => !props.some(prop => prop in input && (!value || value(input[prop])));
        case 'every':
        default:
          return input => props.every(prop => prop in input && (!value || value(input[prop])));
      }
    });
  }
  parseElementConstraint() {
    const constraint = this.data.elementConstraint;
    return !constraint ? [] : [input => input.every(entry => (0, _type.type)(entry) === constraint)];
  }
  parsePredicate() {
    if (this.data.predicate instanceof RegExp) {
      return [this.data.predicate.test.bind(this.data.predicate)];
    } else if (this.data.predicate) {
      return [this.data.predicate];
    } else {
      return [];
    }
  }
  getCombinedPredicate() {
    const predicates = [...this.parsePredicate(), ...this.parseTokenList(), ...this.parsePropertyConstraint(), ...this.parseElementConstraint()];
    if (predicates.length === 0) {
      return () => true;
    } else if (predicates.length === 1) {
      return predicates[0];
    } else {
      return input => predicates.every(predicate => predicate(input));
    }
  }
  getDataType() {
    if (this.data.dataType) {
      return this.data.dataType;
    } else if (this.data.predicate instanceof RegExp) {
      return 'String';
    } else if (this.data.tokenList) {
      return 'String';
    } else if (this.data.elementConstraint) {
      return 'Array';
    } else {
      return 'Primitive';
    }
  }
  get dataType() {
    return this.getDataType();
  }
  get predicate() {
    return this.getCombinedPredicate();
  }
  get extends() {
    return this.data.extends;
  }
}
exports.TypeParser = TypeParser;
class DataParser {
  constructor(parser, {
    async
  } = {}) {
    this.parser = parser;
    this.async = async;
  }
  validate() {
    const parser = this.parser;
    if (typeof parser !== 'function') {
      throw new TypeError(`parser was ${typeof parser}; expected function`);
    }
  }
}
exports.DataParser = DataParser;
class FormatParser {
  constructor(format, parsers = {}) {
    this.format = format;
    if (parsers.parseType) {
      this.typeParser = new TypeParser(parsers.parseType);
    }
    if (parsers.parse) {
      this.dataParser = new DataParser(parsers.parse, {
        async: false
      });
    }
    if (parsers.parseAsync) {
      this.asyncDataParser = new DataParser(parsers.parseAsync, {
        async: true
      });
    }
  }
  validateFormat() {
    const format = this.format;
    if (!_type.typeMatcher.test(format)) {
      throw new TypeError(`format name was "${format}"; didn't match expected pattern`);
    }
  }
  validate() {
    this.validateFormat();
    if (this.typeParser) {
      this.typeParser.validate();
    }
    if (this.dataParser) {
      this.dataParser.validate();
    }
    if (this.asyncDataParser) {
      this.asyncDataParser.validate();
    }
  }
}
exports.FormatParser = FormatParser;
},{"./type.js":31}],30:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.add = add;
exports.get = get;
exports.has = has;
exports.list = list;
exports.remove = remove;
var _parser = require("./parser.js");
var _type = require("./type.js");
var _data = require("./data.js");
const formats = {};
function add(format, parsers) {
  const formatParser = new _parser.FormatParser(format, parsers);
  formatParser.validate();
  const index = formats[format] || (formats[format] = {});
  if (formatParser.typeParser) {
    (0, _type.addTypeParser)(format, formatParser.typeParser);
    index.type = true;
  }
  if (formatParser.dataParser) {
    (0, _data.addDataParser)(format, formatParser.dataParser);
    index.data = true;
  }
  if (formatParser.asyncDataParser) {
    (0, _data.addDataParser)(format, formatParser.asyncDataParser);
    index.asyncData = true;
  }
  if (parsers.outputs) {
    index.outputs = parsers.outputs;
  }
}
function get(format) {
  return formats[format];
}
function remove(format) {
  const index = formats[format];
  if (!index) {
    return;
  }
  if (index.type) {
    (0, _type.removeTypeParser)(format);
  }
  if (index.data) {
    (0, _data.removeDataParser)(format);
  }
  if (index.asyncData) {
    (0, _data.removeDataParser)(format, true);
  }
  delete formats[format];
}
function has(format) {
  return format in formats;
}
function list() {
  return Object.keys(formats);
}
},{"./data.js":25,"./parser.js":29,"./type.js":31}],31:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addTypeParser = addTypeParser;
exports.hasTypeParser = hasTypeParser;
exports.listTypeParser = listTypeParser;
exports.removeTypeParser = removeTypeParser;
exports.treeTypeParser = treeTypeParser;
exports.type = type;
exports.typeMatcher = void 0;
var _logger = _interopRequireDefault(require("../../logger.js"));
var _dataType = require("./dataType.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const types = {};
const dataTypes = {};
const unregExts = {};
function parseNativeTypes(input, dataType) {
  switch (dataType) {
    case 'Array':
      if (input.length === 0 || input.every(entry => type(entry) === '@csl/object')) {
        return '@csl/list+object';
      } else {
        return '@else/list+object';
      }
    case 'SimpleObject':
    case 'ComplexObject':
      return '@csl/object';
    default:
      return '@invalid';
  }
}
function matchType(typeList = [], data) {
  for (const type of typeList) {
    if (types[type].predicate(data)) {
      return matchType(types[type].extensions, data) || type;
    }
  }
}
function type(input) {
  const dataType = (0, _dataType.dataTypeOf)(input);
  if (dataType === 'Array' && input.length === 0) {
    return parseNativeTypes(input, dataType);
  }
  const match = matchType(dataTypes[dataType], input);
  return match || parseNativeTypes(input, dataType);
}
function addTypeParser(format, {
  dataType,
  predicate,
  extends: extend
}) {
  let extensions = [];
  if (format in unregExts) {
    extensions = unregExts[format];
    delete unregExts[format];
    _logger.default.debug('[core]', `Subclasses "${extensions}" finally registered to parent type "${format}"`);
  }
  const object = {
    predicate,
    extensions
  };
  types[format] = object;
  if (extend) {
    const parentTypeParser = types[extend];
    if (parentTypeParser) {
      parentTypeParser.extensions.push(format);
    } else {
      if (!unregExts[extend]) {
        unregExts[extend] = [];
      }
      unregExts[extend].push(format);
      _logger.default.debug('[core]', `Subclass "${format}" is waiting on parent type "${extend}"`);
    }
  } else {
    const typeList = dataTypes[dataType] || (dataTypes[dataType] = []);
    typeList.push(format);
  }
}
function hasTypeParser(type) {
  return Object.prototype.hasOwnProperty.call(types, type);
}
function removeTypeParser(type) {
  delete types[type];
  const typeLists = [...Object.keys(dataTypes).map(key => dataTypes[key]), ...Object.keys(types).map(type => types[type].extensions).filter(list => list.length > 0)];
  typeLists.forEach(typeList => {
    const index = typeList.indexOf(type);
    if (index > -1) {
      typeList.splice(index, 1);
    }
  });
}
function listTypeParser() {
  return Object.keys(types);
}
function treeTypeParser() {
  const attachNode = name => ({
    name,
    children: types[name].extensions.map(attachNode)
  });
  return {
    name: 'Type tree',
    children: Object.keys(dataTypes).map(name => ({
      name,
      children: dataTypes[name].map(attachNode)
    }))
  };
}
const typeMatcher = exports.typeMatcher = /^(?:@(.+?))(?:\/(?:(.+?)\+)?(?:(.+)))?$/;
},{"../../logger.js":10,"./dataType.js":26}],32:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.add = add;
exports.format = format;
exports.has = has;
exports.list = list;
exports.register = void 0;
exports.remove = remove;
var _register = _interopRequireDefault(require("../util/register.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function validate(name, formatter) {
  if (typeof name !== 'string') {
    throw new TypeError(`Invalid output format name, expected string, got ${typeof name}`);
  } else if (typeof formatter !== 'function') {
    throw new TypeError(`Invalid formatter, expected function, got ${typeof formatter}`);
  }
}
const register = exports.register = new _register.default();
function add(name, formatter) {
  validate(name, formatter);
  register.set(name, formatter);
}
function remove(name) {
  register.remove(name);
}
function has(name) {
  return register.has(name);
}
function list() {
  return register.list();
}
function format(name, data, ...options) {
  if (!register.has(name)) {
    throw new Error(`Output format "${name}" unavailable`);
  }
  return register.get(name)(data, ...options);
}
},{"../util/register.js":39}],33:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.downgradeCsl = downgradeCsl;
exports.upgradeCsl = upgradeCsl;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function upgradeCsl(item) {
  if (Array.isArray(item)) {
    return item.map(upgradeCsl);
  }
  item = _objectSpread({}, item);
  if ('event' in item) {
    item['event-title'] = item.event;
    delete item.event;
  }
  if (item.type === 'book' && 'version' in item) {
    item.type = 'software';
  }
  return item;
}
function downgradeCsl(item) {
  if (Array.isArray(item)) {
    return item.map(downgradeCsl);
  }
  item = _objectSpread({}, item);
  if ('event-title' in item) {
    item.event = item['event-title'];
    delete item['event-title'];
  }
  if (item.type === 'software') {
    item.type = 'book';
  }
  return item;
}
},{}],34:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deepCopy = deepCopy;
exports.default = void 0;
function deepCopy(value, seen = new Set()) {
  if (typeof value !== 'object' || value === null || value.constructor !== Object && value.constructor !== Array) {
    return value;
  }
  if (seen.has(value)) {
    throw new TypeError('Recursively copying circular structure');
  }
  seen.add(value);
  let copy;
  if (value.constructor === Array) {
    copy = value.map(value => deepCopy(value, seen));
  } else {
    const object = {};
    for (const key in value) {
      object[key] = deepCopy(value[key], seen);
    }
    copy = object;
  }
  seen.delete(value);
  return copy;
}
var _default = exports.default = deepCopy;
},{}],35:[function(require,module,exports){
(function (process){(function (){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.fetchFile = fetchFile;
exports.fetchFileAsync = fetchFileAsync;
exports.setUserAgent = setUserAgent;
var _syncFetch = _interopRequireDefault(require("sync-fetch"));
var _fetchPonyfill = _interopRequireDefault(require("fetch-ponyfill"));
var _logger = _interopRequireDefault(require("../logger.js"));
var _package = _interopRequireDefault(require("../../package.json"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const isBrowser = typeof location !== 'undefined' && typeof navigator !== 'undefined';
const {
  fetch: asyncFetch,
  Headers: asyncHeaders
} = typeof fetch === 'function' && isBrowser ? {
  fetch,
  Headers
} : (0, _fetchPonyfill.default)();
let userAgent = `Citation.js/${_package.default.version}`;
if (typeof process !== 'undefined' && process && process.release && process.release.name === 'node' && process.version) {
  userAgent += ` Node.js/${process.version}`;
}
function normaliseHeaders(headers) {
  const result = {};
  const entries = headers instanceof asyncHeaders || headers instanceof _syncFetch.default.Headers ? Array.from(headers) : Object.entries(headers);
  for (const [name, header] of entries) {
    result[name.toLowerCase()] = header.toString();
  }
  return result;
}
function parseOpts(opts = {}) {
  const reqOpts = {
    headers: {
      accept: '*/*'
    },
    method: 'GET',
    checkContentType: opts.checkContentType
  };
  if (userAgent && !isBrowser) {
    reqOpts.headers['user-agent'] = userAgent;
  }
  if (opts.body) {
    reqOpts.method = 'POST';
    const isJson = typeof opts.body !== 'string';
    reqOpts.body = isJson ? JSON.stringify(opts.body) : opts.body;
    reqOpts.headers['content-type'] = isJson ? 'application/json' : 'text/plain';
  }
  if (opts.headers) {
    Object.assign(reqOpts.headers, normaliseHeaders(opts.headers));
  }
  return reqOpts;
}
function sameType(request, response) {
  if (!request.accept || request.accept === '*/*' || !response['content-type']) {
    return true;
  }
  const [a, b] = response['content-type'].split(';')[0].trim().split('/');
  return request.accept.split(',').map(type => type.split(';')[0].trim().split('/')).some(([c, d]) => (c === a || c === '*') && (d === b || d === '*'));
}
function checkResponse(response, opts) {
  const {
    status,
    headers
  } = response;
  let error;
  if (status >= 400) {
    error = new Error(`Server responded with status code ${status}`);
  } else if (opts.checkContentType === true && !sameType(opts.headers, normaliseHeaders(headers))) {
    error = new Error(`Server responded with content-type ${headers.get('content-type')}`);
  }
  if (error) {
    error.status = status;
    error.headers = headers;
    error.body = response.body;
    throw error;
  }
  return response;
}
function fetchFile(url, opts) {
  const reqOpts = parseOpts(opts);
  _logger.default.http('[core]', reqOpts.method, url, reqOpts);
  const response = checkResponse((0, _syncFetch.default)(url, reqOpts), reqOpts);
  return response.text();
}
async function fetchFileAsync(url, opts) {
  const reqOpts = parseOpts(opts);
  _logger.default.http('[core]', reqOpts.method, url, reqOpts);
  return asyncFetch(url, reqOpts).then(response => checkResponse(response, reqOpts)).then(response => response.text());
}
function setUserAgent(newUserAgent) {
  userAgent = newUserAgent;
}
var _default = exports.default = fetchFile;
}).call(this)}).call(this,require('_process'))
},{"../../package.json":42,"../logger.js":10,"_process":159,"fetch-ponyfill":131,"sync-fetch":160}],36:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function fetchId(list, prefix) {
  let id;
  while (id === undefined || list.includes(id)) {
    id = `${prefix}${Math.random().toString().slice(2)}`;
  }
  return id;
}
var _default = exports.default = fetchId;
},{}],37:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Grammar = void 0;
var _deepCopy = require("./deepCopy.js");
class Grammar {
  constructor(rules, state) {
    this.rules = rules;
    this.defaultState = state;
    this.mainRule = Object.keys(rules)[0];
    this.log = [];
  }
  parse(iterator, mainRule) {
    this.lexer = iterator;
    this.token = this.lexer.next();
    this.state = (0, _deepCopy.deepCopy)(this.defaultState);
    this.log = [];
    return this.consumeRule(mainRule || this.mainRule);
  }
  matchEndOfFile() {
    return !this.token;
  }
  matchToken(type) {
    return this.token && type === this.token.type;
  }
  consumeToken(type, optional) {
    const token = this.token;
    if (!type || token && token.type === type) {
      this.token = this.lexer.next();
      return token;
    } else if (optional) {
      return undefined;
    } else {
      const got = token ? `"${token.type}"` : 'EOF';
      const error = new SyntaxError(this.lexer.formatError(token, `expected "${type}", got ${got}`));
      error.message += ` (${this.log.join('->')})`;
      throw error;
    }
  }
  consumeRule(rule) {
    this.log.push(rule);
    const result = this.rules[rule].call(this);
    this.log.pop();
    return result;
  }
}
exports.Grammar = Grammar;
},{"./deepCopy.js":34}],38:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Grammar", {
  enumerable: true,
  get: function () {
    return _grammar.Grammar;
  }
});
Object.defineProperty(exports, "Register", {
  enumerable: true,
  get: function () {
    return _register.default;
  }
});
Object.defineProperty(exports, "TokenStack", {
  enumerable: true,
  get: function () {
    return _stack.default;
  }
});
Object.defineProperty(exports, "Translator", {
  enumerable: true,
  get: function () {
    return _translator.Translator;
  }
});
Object.defineProperty(exports, "deepCopy", {
  enumerable: true,
  get: function () {
    return _deepCopy.default;
  }
});
Object.defineProperty(exports, "downgradeCsl", {
  enumerable: true,
  get: function () {
    return _csl.downgradeCsl;
  }
});
Object.defineProperty(exports, "fetchFile", {
  enumerable: true,
  get: function () {
    return _fetchFile.fetchFile;
  }
});
Object.defineProperty(exports, "fetchFileAsync", {
  enumerable: true,
  get: function () {
    return _fetchFile.fetchFileAsync;
  }
});
Object.defineProperty(exports, "fetchId", {
  enumerable: true,
  get: function () {
    return _fetchId.default;
  }
});
Object.defineProperty(exports, "setUserAgent", {
  enumerable: true,
  get: function () {
    return _fetchFile.setUserAgent;
  }
});
Object.defineProperty(exports, "upgradeCsl", {
  enumerable: true,
  get: function () {
    return _csl.upgradeCsl;
  }
});
var _csl = require("./csl.js");
var _deepCopy = _interopRequireDefault(require("./deepCopy.js"));
var _fetchFile = require("./fetchFile.js");
var _fetchId = _interopRequireDefault(require("./fetchId.js"));
var _stack = _interopRequireDefault(require("./stack.js"));
var _register = _interopRequireDefault(require("./register.js"));
var _grammar = require("./grammar.js");
var _translator = require("./translator.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
},{"./csl.js":33,"./deepCopy.js":34,"./fetchFile.js":35,"./fetchId.js":36,"./grammar.js":37,"./register.js":39,"./stack.js":40,"./translator.js":41}],39:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
class Register {
  constructor(data = {}) {
    this.data = data;
  }
  set(key, value) {
    this.data[key] = value;
    return this;
  }
  add(...args) {
    return this.set(...args);
  }
  delete(key) {
    delete this.data[key];
    return this;
  }
  remove(...args) {
    return this.delete(...args);
  }
  get(key) {
    return this.data[key];
  }
  has(key) {
    return Object.prototype.hasOwnProperty.call(this.data, key);
  }
  list() {
    return Object.keys(this.data);
  }
}
var _default = exports.default = Register;
},{}],40:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
class TokenStack {
  constructor(array) {
    this.stack = array;
    this.index = 0;
    this.current = this.stack[this.index];
  }
  static getPatternText(pattern) {
    return `"${pattern instanceof RegExp ? pattern.source : pattern}"`;
  }
  static getMatchCallback(pattern) {
    if (Array.isArray(pattern)) {
      const matches = pattern.map(TokenStack.getMatchCallback);
      return token => matches.some(matchCallback => matchCallback(token));
    } else if (pattern instanceof Function) {
      return pattern;
    } else if (pattern instanceof RegExp) {
      return token => pattern.test(token);
    } else {
      return token => pattern === token;
    }
  }
  tokensLeft() {
    return this.stack.length - this.index;
  }
  matches(pattern) {
    return TokenStack.getMatchCallback(pattern)(this.current, this.index, this.stack);
  }
  matchesSequence(sequence) {
    const part = this.stack.slice(this.index, this.index + sequence.length).join('');
    return typeof sequence === 'string' ? part === sequence : sequence.every((pattern, index) => TokenStack.getMatchCallback(pattern)(part[index]));
  }
  consumeToken(pattern = /^[\s\S]$/, {
    inverse = false,
    spaced = true
  } = {}) {
    if (spaced) {
      this.consumeWhitespace();
    }
    const token = this.current;
    const match = TokenStack.getMatchCallback(pattern)(token, this.index, this.stack);
    if (match) {
      this.current = this.stack[++this.index];
    } else {
      throw new SyntaxError(`Unexpected token at index ${this.index}: Expected ${TokenStack.getPatternText(pattern)}, got "${token}"`);
    }
    if (spaced) {
      this.consumeWhitespace();
    }
    return token;
  }
  consumeWhitespace(pattern = /^\s$/, {
    optional = true
  } = {}) {
    return this.consume(pattern, {
      min: +!optional
    });
  }
  consumeN(length) {
    if (this.tokensLeft() < length) {
      throw new SyntaxError('Not enough tokens left');
    }
    const start = this.index;
    while (length--) {
      this.current = this.stack[++this.index];
    }
    return this.stack.slice(start, this.index).join('');
  }
  consumeSequence(sequence) {
    if (this.matchesSequence(sequence)) {
      return this.consumeN(sequence.length);
    } else {
      throw new SyntaxError(`Expected "${sequence}", got "${this.consumeN(sequence.length)}"`);
    }
  }
  consume(pattern = /^[\s\S]$/, {
    min = 0,
    max = Infinity,
    inverse = false,
    tokenMap,
    tokenFilter
  } = {}) {
    const start = this.index;
    const match = TokenStack.getMatchCallback(pattern);
    while (match(this.current, this.index, this.stack) !== inverse) {
      this.current = this.stack[++this.index];
    }
    let consumed = this.stack.slice(start, this.index);
    if (consumed.length < min) {
      throw new SyntaxError(`Not enough ${TokenStack.getPatternText(pattern)}`);
    } else if (consumed.length > max) {
      throw new SyntaxError(`Too many ${TokenStack.getPatternText(pattern)}`);
    }
    if (tokenMap) {
      consumed = consumed.map(tokenMap);
    }
    if (tokenFilter) {
      consumed = consumed.filter(tokenFilter);
    }
    return consumed.join('');
  }
}
var _default = exports.default = TokenStack;
},{}],41:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Translator = void 0;
function createConditionEval(condition) {
  return function conditionEval(input) {
    if (typeof condition === 'boolean') {
      return condition;
    }
    return Object.keys(condition).every(prop => {
      const value = condition[prop];
      if (value === true) {
        return prop in input;
      } else if (value === false) {
        return !(prop in input);
      } else if (typeof value === 'function') {
        return value(input[prop]);
      } else if (Array.isArray(value)) {
        return value.includes(input[prop]);
      } else {
        return input[prop] === value;
      }
    });
  };
}
function parsePropStatement(prop, toSource) {
  let inputProp;
  let outputProp;
  let convert;
  let condition;
  if (typeof prop === 'string') {
    inputProp = outputProp = prop;
  } else if (prop) {
    inputProp = toSource ? prop.target : prop.source;
    outputProp = toSource ? prop.source : prop.target;
    if (prop.convert) {
      convert = toSource ? prop.convert.toSource : prop.convert.toTarget;
    }
    if (prop.when) {
      condition = toSource ? prop.when.target : prop.when.source;
      if (condition != null) {
        condition = createConditionEval(condition);
      }
    }
  } else {
    return null;
  }
  inputProp = [].concat(inputProp).filter(Boolean);
  outputProp = [].concat(outputProp).filter(Boolean);
  return {
    inputProp,
    outputProp,
    convert,
    condition
  };
}
function createConverter(props, toSource) {
  toSource = toSource === Translator.CONVERT_TO_SOURCE;
  props = props.map(prop => parsePropStatement(prop, toSource)).filter(Boolean);
  return function converter(input) {
    const output = {};
    for (const {
      inputProp,
      outputProp,
      convert,
      condition
    } of props) {
      if (outputProp.length === 0) {
        continue;
      } else if (condition && !condition(input)) {
        continue;
      } else if (inputProp.length !== 0 && inputProp.every(prop => !(prop in input))) {
        continue;
      }
      let outputData = inputProp.map(prop => input[prop]);
      if (convert) {
        try {
          const converted = convert.apply(input, outputData);
          outputData = outputProp.length === 1 ? [converted] : converted;
        } catch (cause) {
          throw new Error(`Failed to convert ${inputProp} to ${outputProp}`, {
            cause
          });
        }
      }
      outputProp.forEach((prop, index) => {
        const value = outputData[index];
        if (value !== undefined) {
          output[prop] = value;
        }
      });
    }
    return output;
  };
}
class Translator {
  constructor(props) {
    this.convertToSource = createConverter(props, Translator.CONVERT_TO_SOURCE);
    this.convertToTarget = createConverter(props, Translator.CONVERT_TO_TARGET);
  }
}
exports.Translator = Translator;
Translator.CONVERT_TO_SOURCE = Symbol('convert to source');
Translator.CONVERT_TO_TARGET = Symbol('convert to target');
},{}],42:[function(require,module,exports){
module.exports={
  "name": "@citation-js/core",
  "version": "0.7.18",
  "description": "Convert different bibliographic metadata sources",
  "keywords": [
    "citation-js",
    "citation",
    "bibliography"
  ],
  "author": "Lars Willighagen <lars.willighagen@gmail.com>",
  "license": "MIT",
  "main": "lib/index.js",
  "module": "lib-mjs/index.js",
  "directories": {
    "lib": "src",
    "test": "__tests__"
  },
  "homepage": "https://citation.js.org/",
  "repository": {
    "type": "git",
    "url": "https://github.com/citation-js/citation-js.git",
    "directory": "packages/core"
  },
  "bugs": {
    "url": "https://github.com/citation-js/citation-js/issues"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "files": [
    "lib",
    "lib-mjs"
  ],
  "scripts": {
    "test": "mocha -c -R dot test/*.spec.js"
  },
  "dependencies": {
    "@citation-js/date": "^0.5.0",
    "@citation-js/name": "^0.4.2",
    "fetch-ponyfill": "^7.1.0",
    "sync-fetch": "^0.4.1"
  },
  "gitHead": "c4ac806070502051e36cf3ab8ad29f3d97e85978"
}

},{}],43:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "format", {
  enumerable: true,
  get: function get() {
    return _output.default;
  }
});
Object.defineProperty(exports, "parse", {
  enumerable: true,
  get: function get() {
    return _input.default;
  }
});

var _input = _interopRequireDefault(require("./input"));

var _output = _interopRequireDefault(require("./output"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./input":44,"./output":45}],44:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

const monthMap = {
  jan: 1,
  feb: 2,
  mar: 3,
  apr: 4,
  may: 5,
  jun: 6,
  jul: 7,
  aug: 8,
  sep: 9,
  oct: 10,
  nov: 11,
  dec: 12
};
const dateRangeDelimiters = / (?:to|[-/]) | ?(?:--|[–—]) ?/;
const dateRangePattern = /^(\d{4}-\d{2}-\d{2})\/(\d{4}-\d{2}-\d{2})$/;

function getMonth(monthName) {
  return monthMap[monthName.toLowerCase().slice(0, 3)];
}

function parseEpoch(date) {
  const epoch = new Date(date);

  if (typeof date === 'number' && !isNaN(epoch.valueOf())) {
    return [epoch.getFullYear(), epoch.getMonth() + 1, epoch.getDate()];
  } else {
    return null;
  }
}

const parseIso8601 = function parseIso8601(date) {
  const pattern = /^(\d{4}|[-+]\d{6,})-(\d{2})(?:-(\d{2}))?/;

  if (typeof date !== 'string' || !pattern.test(date)) {
    return null;
  }

  const _date$match = date.match(pattern),
        _date$match2 = _slicedToArray(_date$match, 4),
        year = _date$match2[1],
        month = _date$match2[2],
        day = _date$match2[3];

  if (!+month) {
    return [year];
  } else if (!+day) {
    return [year, month];
  } else {
    return [year, month, day];
  }
};

const parseRfc2822 = function parseRfc2822(date) {
  const pattern = /^(?:[a-z]{3},\s*)?(\d{1,2}) ([a-z]{3}) (\d{4,})/i;

  if (typeof date !== 'string' || !pattern.test(date)) {
    return null;
  }

  let _date$match3 = date.match(pattern),
      _date$match4 = _slicedToArray(_date$match3, 4),
      day = _date$match4[1],
      month = _date$match4[2],
      year = _date$match4[3];

  month = getMonth(month);

  if (!month) {
    return null;
  }

  return [year, month, day];
};

function parseAmericanDay(date) {
  const pattern = /^(\d{1,2})\/(\d{1,2})\/(\d{2}(?:\d{2})?)/;

  if (typeof date !== 'string' || !pattern.test(date)) {
    return null;
  }

  const _date$match5 = date.match(pattern),
        _date$match6 = _slicedToArray(_date$match5, 4),
        month = _date$match6[1],
        day = _date$match6[2],
        year = _date$match6[3];

  const check = new Date(year, month, day);

  if (check.getMonth() === parseInt(month)) {
    return [year, month, day];
  } else {
    return null;
  }
}

function parseDay(date) {
  const pattern = /^(\d{1,2})[ .\-/](\d{1,2}|[a-z]{3,10})[ .\-/](-?\d+)/i;
  const reversePattern = /^(-?\d+)[ .\-/](\d{1,2}|[a-z]{3,10})[ .\-/](\d{1,2})/i;
  let year;
  let month;
  let day;

  if (typeof date !== 'string') {
    return null;
  } else if (pattern.test(date)) {
    var _date$match7 = date.match(pattern);

    var _date$match8 = _slicedToArray(_date$match7, 4);

    day = _date$match8[1];
    month = _date$match8[2];
    year = _date$match8[3];
  } else if (reversePattern.test(date)) {
    var _date$match9 = date.match(reversePattern);

    var _date$match10 = _slicedToArray(_date$match9, 4);

    year = _date$match10[1];
    month = _date$match10[2];
    day = _date$match10[3];
  } else {
    return null;
  }

  if (getMonth(month)) {
    month = getMonth(month);
  } else if (isNaN(month)) {
    return null;
  }

  return [year, month, day];
}

function parseMonth(date) {
  const pattern = /^([a-z]{3,10}|-?\d+)[^\w-]+([a-z]{3,10}|-?\d+)$/i;

  if (typeof date === 'string' && pattern.test(date)) {
    const values = date.match(pattern).slice(1, 3);
    let month;

    if (getMonth(values[1])) {
      month = getMonth(values.pop());
    } else if (getMonth(values[0])) {
      month = getMonth(values.shift());
    } else if (values.some(isNaN) || values.every(value => +value < 0)) {
      return null;
    } else if (+values[0] < 0) {
      month = values.pop();
    } else if (+values[0] > +values[1] && +values[1] > 0) {
      month = values.pop();
    } else {
      month = values.shift();
    }

    const year = values.pop();
    return [year, month];
  } else {
    return null;
  }
}

function parseYear(date) {
  if (typeof date !== 'string') {
    return null;
  }

  const adBc = date.match(/^(\d+) ?(a\.?d\.?|b\.?c\.?)$/i);

  if (adBc) {
    const _adBc$slice = adBc.slice(1),
          _adBc$slice2 = _slicedToArray(_adBc$slice, 2),
          date = _adBc$slice2[0],
          suffix = _adBc$slice2[1];

    return [date * (suffix.toLowerCase()[0] === 'a' ? 1 : -1)];
  } else if (/^-?\d+$/.test(date)) {
    return [date];
  } else {
    return null;
  }
}

function parseDateParts(value) {
  const dateParts = parseEpoch(value) || parseIso8601(value) || parseRfc2822(value) || parseAmericanDay(value) || parseDay(value) || parseMonth(value) || parseYear(value);
  return dateParts && dateParts.map(string => parseInt(string));
}

function splitDateRange(range) {
  if (dateRangePattern.test(range)) {
    return range.match(dateRangePattern).slice(1, 3);
  } else {
    return range.split(dateRangeDelimiters);
  }
}

function parseDate(rangeStart, rangeEnd) {
  const range = [];
  const rangeStartAsRange = typeof rangeStart === 'string' && splitDateRange(rangeStart);

  if (rangeEnd) {
    range.push(rangeStart, rangeEnd);
  } else if (rangeStartAsRange && rangeStartAsRange.length === 2) {
    range.push(...rangeStartAsRange);
  } else {
    range.push(rangeStart);
  }

  const dateParts = range.map(parseDateParts);

  if (dateParts.filter(Boolean).length === range.length) {
    return {
      'date-parts': dateParts
    };
  } else {
    return {
      raw: rangeEnd ? range.join('/') : rangeStart
    };
  }
}

var _default = parseDate;
exports.default = _default;
},{}],45:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function padStart(str, len, chr) {
  if (str.length >= len) {
    return str;
  }

  while (str.length < len) {
    str = chr + str;
  }

  return str.slice(-len);
}

const getDate = function getDate(date, delimiter = '-') {
  if (!date['date-parts']) {
    return date.raw;
  }

  const dateParts = date['date-parts'][0].map(part => part.toString());

  switch (dateParts.length) {
    case 3:
      dateParts[2] = padStart(dateParts[2], 2, '0');

    case 2:
      dateParts[1] = padStart(dateParts[1], 2, '0');

    case 1:
      dateParts[0] = padStart(dateParts[0], 4, '0');
      break;
  }

  return dateParts.join(delimiter);
};

var _default = getDate;
exports.default = _default;
},{}],46:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "parse", {
  enumerable: true,
  get: function get() {
    return _input.default;
  }
});
Object.defineProperty(exports, "format", {
  enumerable: true,
  get: function get() {
    return _output.default;
  }
});

var _input = _interopRequireDefault(require("./input"));

var _output = _interopRequireDefault(require("./output"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./input":47,"./output":48}],47:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.parse = exports.types = exports.scope = void 0;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

const punctutationMatcher = string => string.replace(/$|( )|(?!^)(?=[A-Z])/g, '\\.?$1');

const getListMatcher = list => `(?:${list.join('|')})\\b`;

const getSplittingRegex = (matcher, flags) => new RegExp(`(?:^| )(${matcher}$)`, flags);

const titles = ['mr', 'mrs', 'ms', 'miss', 'dr', 'herr', 'monsieur', 'hr', 'frau', 'a v m', 'admiraal', 'admiral', 'air cdre', 'air commodore', 'air marshal', 'air vice marshal', 'alderman', 'alhaji', 'ambassador', 'baron', 'barones', 'brig', 'brig gen', 'brig general', 'brigadier', 'brigadier general', 'brother', 'canon', 'capt', 'captain', 'cardinal', 'cdr', 'chief', 'cik', 'cmdr', 'coach', 'col', 'col dr', 'colonel', 'commandant', 'commander', 'commissioner', 'commodore', 'comte', 'comtessa', 'congressman', 'conseiller', 'consul', 'conte', 'contessa', 'corporal', 'councillor', 'count', 'countess', 'crown prince', 'crown princess', 'dame', 'datin', 'dato', 'datuk', 'datuk seri', 'deacon', 'deaconess', 'dean', 'dhr', 'dipl ing', 'doctor', 'dott', 'dott sa', 'dr', 'dr ing', 'dra', 'drs', 'embajador', 'embajadora', 'en', 'encik', 'eng', 'eur ing', 'exma sra', 'exmo sr', 'f o', 'father', 'first lieutient', 'first officer', 'flt lieut', 'flying officer', 'fr', 'frau', 'fraulein', 'fru', 'gen', 'generaal', 'general', 'governor', 'graaf', 'gravin', 'group captain', 'grp capt', 'h e dr', 'h h', 'h m', 'h r h', 'hajah', 'haji', 'hajim', 'her highness', 'her majesty', 'herr', 'high chief', 'his highness', 'his holiness', 'his majesty', 'hon', 'hr', 'hra', 'ing', 'ir', 'jonkheer', 'judge', 'justice', 'khun ying', 'kolonel', 'lady', 'lcda', 'lic', 'lieut', 'lieut cdr', 'lieut col', 'lieut gen', 'lord', 'm', 'm l', 'm r', 'madame', 'mademoiselle', 'maj gen', 'major', 'master', 'mevrouw', 'miss', 'mlle', 'mme', 'monsieur', 'monsignor', 'mr', 'mrs', 'ms', 'mstr', 'nti', 'pastor', 'president', 'prince', 'princess', 'princesse', 'prinses', 'prof', 'prof dr', 'prof sir', 'professor', 'puan', 'puan sri', 'rabbi', 'rear admiral', 'rev', 'rev canon', 'rev dr', 'rev mother', 'reverend', 'rva', 'senator', 'sergeant', 'sheikh', 'sheikha', 'sig', 'sig na', 'sig ra', 'sir', 'sister', 'sqn ldr', 'sr', 'sr d', 'sra', 'srta', 'sultan', 'tan sri', 'tan sri dato', 'tengku', 'teuku', 'than puying', 'the hon dr', 'the hon justice', 'the hon miss', 'the hon mr', 'the hon mrs', 'the hon ms', 'the hon sir', 'the very rev', 'toh puan', 'tun', 'vice admiral', 'viscount', 'viscountess', 'wg cdr'];
const suffixes = ['I', 'II', 'III', 'IV', 'V', 'Senior', 'Junior', 'Jr', 'Sr', 'PhD', 'Ph\\.D', 'APR', 'RPh', 'PE', 'MD', 'MA', 'DMD', 'CME', 'BVM', 'CFRE', 'CLU', 'CPA', 'CSC', 'CSJ', 'DC', 'DD', 'DDS', 'DO', 'DVM', 'EdD', 'Esq', 'JD', 'LLD', 'OD', 'OSB', 'PC', 'Ret', 'RGS', 'RN', 'RNC', 'SHCJ', 'SJ', 'SNJM', 'SSMO', 'USA', 'USAF', 'USAFR', 'USAR', 'USCG', 'USMC', 'USMCR', 'USN', 'USNR'];
const particles = ['Vere', 'Von', 'Van', 'De', 'Del', 'Della', 'Di', 'Da', 'Pietro', 'Vanden', 'Du', 'St.', 'St', 'La', 'Lo', 'Ter', 'O', 'O\'', 'Mac', 'Fitz'];
const titleMatcher = getListMatcher(titles.map(punctutationMatcher));
const suffixMatcher = getListMatcher(suffixes.map(punctutationMatcher));
const particleMatcher = getListMatcher(particles);
const titleSplitter = new RegExp(`^((?:${titleMatcher} )*)(.*)$`, 'i');
const suffixSplitter = getSplittingRegex(`(?:${suffixMatcher}, )*(?:${suffixMatcher})`, 'i');
const particleSplitter = getSplittingRegex(`${/(?:[A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1C90-\u1CBA\u1CBD-\u1CBF\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2160-\u216F\u2183\u24B6-\u24CF\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AE\uA7B0-\uA7B4\uA7B6\uA7B8\uFF21-\uFF3A]|\uD801[\uDC00-\uDC27\uDCB0-\uDCD3]|\uD803[\uDC80-\uDCB2]|\uD806[\uDCA0-\uDCBF]|\uD81B[\uDE40-\uDE5F]|\uD835[\uDC00-\uDC19\uDC34-\uDC4D\uDC68-\uDC81\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB5\uDCD0-\uDCE9\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD38\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD6C-\uDD85\uDDA0-\uDDB9\uDDD4-\uDDED\uDE08-\uDE21\uDE3C-\uDE55\uDE70-\uDE89\uDEA8-\uDEC0\uDEE2-\uDEFA\uDF1C-\uDF34\uDF56-\uDF6E\uDF90-\uDFA8\uDFCA]|\uD83A[\uDD00-\uDD21]|\uD83C[\uDD30-\uDD49\uDD50-\uDD69\uDD70-\uDD89])/.source}.*`);
const endSplitter = getSplittingRegex(`(?:${/(?:[a-z\xAA\xB5\xBA\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02B8\u02C0\u02C1\u02E0-\u02E4\u0345\u0371\u0373\u0377\u037A-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0560-\u0588\u10D0-\u10FA\u10FD-\u10FF\u13F8-\u13FD\u1C80-\u1C88\u1D00-\u1DBF\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u2071\u207F\u2090-\u209C\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2170-\u217F\u2184\u24D0-\u24E9\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7D\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B-\uA69D\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7AF\uA7B5\uA7B7\uA7B9\uA7F8-\uA7FA\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A]|\uD801[\uDC28-\uDC4F\uDCD8-\uDCFB]|\uD803[\uDCC0-\uDCF2]|\uD806[\uDCC0-\uDCDF]|\uD81B[\uDE60-\uDE7F]|\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD83A[\uDD22-\uDD43])/.source}.*|${particleMatcher}.*|\\S*)`);

const parseName = function parseName(name = '') {
  if (typeof name !== 'string') {
    name = name + '';
  }

  let start = '';
  let mid = '';
  let end = '';

  if (/[^.], /.test(name)) {
    const parts = name.split(', ');
    end = parts.shift();
    const suffixMatch = RegExp(suffixMatcher).exec(parts.join(', '));
    start = parts.splice(suffixMatch && suffixMatch.index !== 0 ? 0 : -1, 1)[0];
    mid = parts.join(', ');
  } else {
    const parts = name.split(suffixSplitter, 2);
    const main = parts.shift().split(endSplitter, 2);
    start = main[0];
    end = main[1];
    mid = parts.pop();
  }

  const _start$match = start.match(titleSplitter),
        _start$match2 = _slicedToArray(_start$match, 3),
        droppingParticle = _start$match2[1],
        given = _start$match2[2];

  const suffix = mid;

  const _end$split$reverse = end.split(particleSplitter, 2).reverse(),
        _end$split$reverse2 = _slicedToArray(_end$split$reverse, 2),
        family = _end$split$reverse2[0],
        nonDroppingParticle = _end$split$reverse2[1];

  if (!given && family) {
    return family.includes(' ') ? {
      literal: family
    } : {
      family
    };
  } else if (family) {
    const nameObject = {
      'dropping-particle': droppingParticle,
      given,
      suffix,
      'non-dropping-particle': nonDroppingParticle,
      family
    };
    Object.keys(nameObject).forEach(key => {
      if (!nameObject[key]) {
        delete nameObject[key];
      }
    });
    return nameObject;
  } else {
    return {
      literal: name
    };
  }
};

exports.default = exports.parse = parseName;
const scope = '@name';
exports.scope = scope;
const types = '@name';
exports.types = types;
},{}],48:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const startParts = ['dropping-particle', 'given'];
const suffixParts = ['suffix'];
const endParts = ['non-dropping-particle', 'family'];

const getName = function getName(name, reversed = false) {
  const get = parts => parts.map(entry => name[entry] || '').filter(Boolean).join(' ');

  if (name.literal) {
    return name.literal;
  } else if (reversed) {
    const suffixPart = get(suffixParts) ? `, ${get(suffixParts)}` : '';
    const startPart = get(startParts) ? `, ${get(startParts)}` : '';
    return get(endParts) + suffixPart + startPart;
  } else {
    return `${get([...startParts, ...suffixParts, ...endParts])}`;
  }
};

var _default = getName;
exports.default = _default;
},{}],49:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _biblatexTypes = _interopRequireDefault(require("./mapping/biblatexTypes.json"));
var _bibtexTypes = _interopRequireDefault(require("./mapping/bibtexTypes.json"));
var constants = _interopRequireWildcard(require("./input/constants.js"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default = exports.default = {
  constants,
  types: {
    biblatex: _biblatexTypes.default,
    bibtex: _bibtexTypes.default
  },
  parse: {
    biblatex: true,
    strict: false,
    sentenceCase: 'never'
  },
  format: {
    useIdAsLabel: false,
    checkLabel: true,
    asciiOnly: true
  },
  biber: {
    annotationMarker: '+an',
    namedAnnotationMarker: ':'
  }
};
},{"./input/constants.js":52,"./mapping/biblatexTypes.json":62,"./mapping/bibtexTypes.json":64}],50:[function(require,module,exports){
"use strict";

var _core = require("@citation-js/core");
var _index = require("./input/index.js");
var _config = _interopRequireDefault(require("./config.js"));
var _index2 = _interopRequireDefault(require("./output/index.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
_core.plugins.add(_index.ref, {
  input: _index.formats,
  output: _index2.default,
  config: _config.default
});
},{"./config.js":49,"./input/index.js":56,"./output/index.js":71,"@citation-js/core":"citation-js"}],51:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.textEntry = exports.text = exports.parse = void 0;
const bibTxtRegex = {
  splitEntries: /\n\s*(?=\[)/g,
  parseEntry: /^\[(.+?)\]\s*(?:\n([\s\S]+))?$/,
  splitPairs: /((?=.)\s)*\n\s*/g,
  splitPair: /:(.*)/
};
const parseBibTxtEntry = entry => {
  const [, label, pairs] = entry.match(bibTxtRegex.parseEntry) || [];
  if (!label || !pairs) {
    return {};
  } else {
    const out = {
      type: 'book',
      label,
      properties: {}
    };
    pairs.trim().split(bibTxtRegex.splitPairs).filter(v => v).forEach(pair => {
      let [key, value] = pair.split(bibTxtRegex.splitPair);
      if (value) {
        key = key.trim();
        value = value.trim();
        if (key === 'type') {
          out.type = value;
        } else {
          out.properties[key] = value;
        }
      }
    });
    return out;
  }
};
exports.textEntry = parseBibTxtEntry;
const parseBibTxt = src => src.trim().split(bibTxtRegex.splitEntries).map(parseBibTxtEntry);
exports.text = exports.parse = parseBibTxt;
},{}],52:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sentenceCaseLanguages = exports.required = exports.mathScripts = exports.mathScriptFormatting = exports.mathCommands = exports.ligatures = exports.ligaturePattern = exports.formattingEnvs = exports.formattingCommands = exports.formatting = exports.fieldTypes = exports.diacritics = exports.defaultStrings = exports.commands = exports.argumentCommands = void 0;
var _required2 = _interopRequireDefault(require("./required.json"));
var _fieldTypes2 = _interopRequireDefault(require("./fieldTypes.json"));
var _unicode = _interopRequireDefault(require("./unicode.json"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const required = exports.required = _required2.default;
const fieldTypes = exports.fieldTypes = _fieldTypes2.default;
const diacritics = exports.diacritics = _unicode.default.diacritics;
const commands = exports.commands = _unicode.default.commands;
const mathCommands = exports.mathCommands = _unicode.default.mathCommands;
const defaultStrings = exports.defaultStrings = {
  jan: '01',
  feb: '02',
  mar: '03',
  apr: '04',
  may: '05',
  jun: '06',
  jul: '07',
  aug: '08',
  sep: '09',
  oct: '10',
  nov: '11',
  dec: '12',
  acmcs: 'ACM Computing Surveys',
  acta: 'Acta Informatica',
  cacm: 'Communications of the ACM',
  ibmjrd: 'IBM Journal of Research and Development',
  ibmsj: 'IBM Systems Journal',
  ieeese: 'IEEE Transactions on Software Engineering',
  ieeetc: 'IEEE Transactions on Computers',
  ieeetcad: 'IEEE Transactions on Computer-Aided Design of Integrated Circuits',
  ipl: 'Information Processing Letters',
  jacm: 'Journal of the ACM',
  jcss: 'Journal of Computer and System Sciences',
  scp: 'Science of Computer Programming',
  sicomp: 'SIAM Journal on Computing',
  tocs: 'ACM Transactions on Computer Systems',
  tods: 'ACM Transactions on Database Systems',
  tog: 'ACM Transactions on Graphics',
  toms: 'ACM Transactions on Mathematical Software',
  toois: 'ACM Transactions on Office Information Systems',
  toplas: 'ACM Transactions on Programming Languages and Systems',
  tcs: 'Theoretical Computer Science'
};
const formattingEnvs = exports.formattingEnvs = {
  it: 'italics',
  itshape: 'italics',
  sl: 'italics',
  slshape: 'italics',
  em: 'italics',
  bf: 'bold',
  bfseries: 'bold',
  sc: 'smallcaps',
  scshape: 'smallcaps',
  rm: undefined,
  sf: undefined,
  tt: undefined
};
const formattingCommands = exports.formattingCommands = {
  textit: 'italics',
  textsl: 'italics',
  emph: 'italics',
  mkbibitalic: 'italics',
  mkbibemph: 'italics',
  textbf: 'bold',
  strong: 'bold',
  mkbibbold: 'bold',
  textsc: 'smallcaps',
  textsuperscript: 'superscript',
  textsubscript: 'subscript',
  enquote: 'quotes',
  mkbibquote: 'quotes',
  textmd: undefined,
  textrm: undefined,
  textsf: undefined,
  texttt: undefined,
  textup: undefined
};
const formatting = exports.formatting = {
  italics: ['<i>', '</i>'],
  bold: ['<b>', '</b>'],
  superscript: ['<sup>', '</sup>'],
  subscript: ['<sub>', '</sub>'],
  smallcaps: ['<span style="font-variant:small-caps;">', '</span>'],
  nocase: ['<span class="nocase">', '</span>'],
  quotes: ['\u201C', '\u201D']
};
const argumentCommands = exports.argumentCommands = {
  ElsevierGlyph(glyph) {
    return String.fromCharCode(parseInt(glyph, 16));
  },
  href(url, text) {
    return url;
  },
  url(url) {
    return url;
  }
};
const ligaturePattern = exports.ligaturePattern = /---?|''|``|~/g;
const ligatures = exports.ligatures = {
  '--': '\u2013',
  '---': '\u2014',
  '``': '\u201C',
  "''": '\u201D',
  '~': '\u00A0'
};
const mathScriptFormatting = exports.mathScriptFormatting = {
  '^': 'superscript',
  sp: 'superscript',
  _: 'subscript',
  sb: 'subscript',
  mathrm: undefined
};
const mathScripts = exports.mathScripts = {
  '^': {
    '0': '\u2070',
    '1': '\u00B9',
    '2': '\u00B2',
    '3': '\u00B3',
    '4': '\u2074',
    '5': '\u2075',
    '6': '\u2076',
    '7': '\u2077',
    '8': '\u2078',
    '9': '\u2079',
    '+': '\u207A',
    '-': '\u207B',
    '=': '\u207C',
    '(': '\u207D',
    ')': '\u207E',
    'i': '\u2071',
    'n': '\u207F'
  },
  '_': {
    '0': '\u2080',
    '1': '\u2081',
    '2': '\u2082',
    '3': '\u2083',
    '4': '\u2084',
    '5': '\u2085',
    '6': '\u2086',
    '7': '\u2087',
    '8': '\u2088',
    '9': '\u2089',
    '+': '\u208A',
    '-': '\u208B',
    '=': '\u208C',
    '(': '\u208D',
    ')': '\u208E',
    'a': '\u2090',
    'e': '\u2091',
    'o': '\u2092',
    'x': '\u2093',
    '\u0259': '\u2094',
    'h': '\u2095',
    'k': '\u2096',
    'l': '\u2097',
    'm': '\u2098',
    'n': '\u2099',
    's': '\u209A',
    'p': '\u209B',
    't': '\u209C'
  }
};
const sentenceCaseLanguages = exports.sentenceCaseLanguages = ['american', 'british', 'canadian', 'english', 'australian', 'newzealand', 'usenglish', 'ukenglish', 'en', 'eng', 'en-au', 'en-bz', 'en-ca', 'en-cb', 'en-gb', 'en-ie', 'en-jm', 'en-nz', 'en-ph', 'en-tt', 'en-us', 'en-za', 'en-zw', 'anglais'];
},{"./fieldTypes.json":54,"./required.json":58,"./unicode.json":59}],53:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parse = parse;
exports.parseBibtex = parseBibtex;
var _config = _interopRequireDefault(require("../config.js"));
var _index = require("../mapping/index.js");
var _value = require("./value.js");
var _constants = require("./constants.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function validate(entries, requirements) {
  const problems = [];
  for (const {
    type,
    label,
    properties
  } of entries) {
    if (type in requirements) {
      const missing = [];
      for (const field of requirements[type]) {
        if (Array.isArray(field) && !field.some(field => field in properties)) {
          missing.push(field.join('/'));
        } else if (typeof field === 'string' && !(field in properties)) {
          missing.push(field);
        }
      }
      if (missing.length) {
        problems.push([label, `missing fields: ${missing.join(', ')}`]);
      }
    } else {
      problems.push([label, `invalid type: "${type}"`]);
    }
  }
  if (problems.length) {
    throw new RangeError(['Invalid entries:'].concat(problems.map(([label, problem]) => `  - ${label} has ${problem}`)).join('\n'));
  }
}
function parseEntryValues(entry) {
  const output = {};
  if ('language' in entry.properties) {
    output.language = (0, _value.parse)(entry.properties.language, 'language');
  }
  for (const property in entry.properties) {
    const value = entry.properties[property];
    if (value === '') {
      continue;
    }
    output[property] = (0, _value.parse)(value + '', property, output.language);
  }
  for (const property in entry.annotations) {
    for (const annotation in entry.annotations[property]) {
      output[property + '+an:' + annotation] = (0, _value.parseAnnotation)(entry.annotations[property][annotation]);
    }
  }
  return _objectSpread(_objectSpread({}, entry), {}, {
    properties: output
  });
}
function parse(entries) {
  if (_config.default.parse.strict) {
    validate(entries, _constants.required.biblatex);
  }
  return (0, _index.parse)(entries.map(parseEntryValues));
}
function parseBibtex(entries) {
  if (_config.default.parse.strict) {
    validate(entries, _constants.required.bibtex);
  }
  return (0, _index.parseBibtex)(entries.map(parseEntryValues));
}
},{"../config.js":49,"../mapping/index.js":66,"./constants.js":52,"./value.js":60}],54:[function(require,module,exports){
module.exports={
  "abstract": ["field", "literal"],
  "addendum": ["field", "literal"],
  "afterword": ["list", "name"],
  "annotation": ["field", "literal"],
  "annotator": ["list", "name"],
  "author": ["list", "name"],
  "authortype": ["field", "key"],
  "bookauthor": ["list", "name"],
  "bookpagination": ["field", "key"],
  "booksubtitle": ["field", "literal"],
  "booktitle": ["field", "title"],
  "booktitleaddon": ["field", "literal"],
  "chapter": ["field", "literal"],
  "commentator": ["list", "name"],
  "date": ["field", "date"],
  "doi": ["field", "verbatim"],
  "edition": ["field", "literal"],
  "editor": ["list", "name"],
  "editora": ["list", "name"],
  "editorb": ["list", "name"],
  "editorc": ["list", "name"],
  "editortype": ["field", "key"],
  "editoratype": ["field", "key"],
  "editorbtype": ["field", "key"],
  "editorctype": ["field", "key"],
  "eid": ["field", "literal"],
  "entrysubtype": ["field", "literal"],
  "eprint": ["field", "verbatim"],
  "eprintclass": ["field", "literal"],
  "eprinttype": ["field", "literal"],
  "eventdate": ["field", "date"],
  "eventtitle": ["field", "title"],
  "eventtitleaddon": ["field", "literal"],
  "file": ["field", "verbatim"],
  "foreword": ["list", "name"],
  "holder": ["list", "name"],
  "howpublished": ["field", "literal"],
  "indextitle": ["field", "literal"],
  "institution": ["list", "literal"],
  "introduction": ["list", "name"],
  "isan": ["field", "literal"],
  "isbn": ["field", "literal"],
  "ismn": ["field", "literal"],
  "isrn": ["field", "literal"],
  "issn": ["field", "literal"],
  "issue": ["field", "literal"],
  "issuesubtitle": ["field", "literal"],
  "issuetitle": ["field", "literal"],
  "iswc": ["field", "literal"],
  "journalsubtitle": ["field", "literal"],
  "journaltitle": ["field", "literal"],
  "label": ["field", "literal"],
  "language": ["list", "key"],
  "library": ["field", "literal"],
  "location": ["list", "literal"],
  "mainsubtitle": ["field", "literal"],
  "maintitle": ["field", "title"],
  "maintitleaddon": ["field", "literal"],
  "month": ["field", "literal"],
  "nameaddon": ["field", "literal"],
  "note": ["field", "literal"],
  "number": ["field", "literal"],
  "organization": ["list", "literal"],
  "origdate": ["field", "date"],
  "origlanguage": ["list", "key"],
  "origlocation": ["list", "literal"],
  "origpublisher": ["list", "literal"],
  "origtitle": ["field", "title"],
  "pages": ["field", "range"],
  "pagetotal": ["field", "literal"],
  "pagination": ["field", "key"],
  "part": ["field", "literal"],
  "publisher": ["list", "literal"],
  "pubstate": ["field", "key"],
  "reprinttitle": ["field", "literal"],
  "series": ["field", "title"],
  "shortauthor": ["list", "name"],
  "shorteditor": ["list", "name"],
  "shorthand": ["field", "literal"],
  "shorthandintro": ["field", "literal"],
  "shortjournal": ["field", "literal"],
  "shortseries": ["field", "literal"],
  "shorttitle": ["field", "title"],
  "subtitle": ["field", "literal"],
  "title": ["field", "title"],
  "titleaddon": ["field", "literal"],
  "translator": ["list", "name"],
  "type": ["field", "title"],
  "url": ["field", "uri"],
  "urldate": ["field", "date"],
  "venue": ["field", "literal"],
  "version": ["field", "literal"],
  "volume": ["field", "integer"],
  "volumes": ["field", "integer"],
  "year": ["field", "literal"],
  "crossref": ["field", "entry key"],
  "entryset": ["separated", "literal"],
  "execute": ["field", "code"],
  "gender": ["field", "gender"],
  "langid": ["field", "identifier"],
  "langidopts": ["field", "literal"],
  "ids": ["separated", "entry key"],
  "indexsorttitle": ["field", "literal"],
  "keywords": ["separated", "literal"],
  "options": ["separated", "options"],
  "presort": ["field", "string"],
  "related": ["separated", "literal"],
  "relatedoptions": ["separated", "literal"],
  "relatedtype": ["field", "identifier"],
  "relatedstring": ["field", "literal"],
  "sortkey": ["field", "literal"],
  "sortname": ["list", "name"],
  "sortshorthand": ["field", "literal"],
  "sorttitle": ["field", "literal"],
  "sortyear": ["field", "integer"],
  "xdata": ["separated", "entry key"],
  "xref": ["field", "entry key"],
  "namea": ["list", "name"],
  "nameb": ["list", "name"],
  "namec": ["list", "name"],
  "nameatype": ["field", "key"],
  "namebtype": ["field", "key"],
  "namectype": ["field", "key"],
  "lista": ["list", "literal"],
  "listb": ["list", "literal"],
  "listc": ["list", "literal"],
  "listd": ["list", "literal"],
  "liste": ["list", "literal"],
  "listf": ["list", "literal"],
  "usera": ["field", "literal"],
  "userb": ["field", "literal"],
  "userc": ["field", "literal"],
  "userd": ["field", "literal"],
  "usere": ["field", "literal"],
  "userf": ["field", "literal"],
  "verba": ["field", "literal"],
  "verbb": ["field", "literal"],
  "verbc": ["field", "literal"],
  "address": ["list", "literal"],
  "annote": ["field", "literal"],
  "archiveprefix": ["field", "literal"],
  "journal": ["field", "literal"],
  "key": ["field", "literal"],
  "pdf": ["field", "verbatim"],
  "primaryclass": ["field", "literal"],
  "school": ["list", "literal"],
  "numpages": ["field", "integer"],
  "pmid": ["field", "literal"],
  "pmcid": ["field", "literal"]
}

},{}],55:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bibtexGrammar = void 0;
exports.parse = parse;
var _core = require("@citation-js/core");
var _moo = _interopRequireDefault(require("moo"));
var _config = _interopRequireDefault(require("../config.js"));
var _constants = require("./constants.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
const identifier = /[a-zA-Z_][a-zA-Z0-9_:+-]*/;
const whitespace = {
  comment: /%.*/,
  whitespace: {
    match: /\s+/,
    lineBreaks: true
  }
};
const lexer = _moo.default.states({
  main: {
    junk: {
      match: /@[cC][oO][mM][mM][eE][nN][tT].+|[^@]+/,
      lineBreaks: true
    },
    at: {
      match: '@',
      push: 'entry'
    }
  },
  entry: _objectSpread(_objectSpread({}, whitespace), {}, {
    otherEntryType: {
      match: /[sS][tT][rR][iI][nN][gG]|[pP][rR][eE][aA][mM][bB][lL][eE]/,
      next: 'otherEntryContents'
    },
    dataEntryType: {
      match: identifier,
      next: 'dataEntryContents'
    }
  }),
  otherEntryContents: _objectSpread(_objectSpread({}, whitespace), {}, {
    lbrace: {
      match: /[{(]/,
      next: 'fields'
    }
  }),
  dataEntryContents: _objectSpread(_objectSpread({}, whitespace), {}, {
    lbrace: {
      match: /[{(]/,
      next: 'dataEntryContents'
    },
    label: /[^,\s]+/,
    comma: {
      match: ',',
      next: 'fields'
    }
  }),
  fields: _objectSpread(_objectSpread({}, whitespace), {}, {
    identifier,
    number: /-?\d+/,
    hash: '#',
    equals: '=',
    comma: ',',
    quote: {
      match: '"',
      push: 'quotedLiteral'
    },
    lbrace: {
      match: '{',
      push: 'bracedLiteral'
    },
    rbrace: {
      match: /[})]/,
      pop: true
    }
  }),
  quotedLiteral: {
    lbrace: {
      match: '{',
      push: 'bracedLiteral'
    },
    quote: {
      match: '"',
      pop: true
    },
    text: {
      match: /(?:\\[\\{]|[^{"])+/,
      lineBreaks: true
    }
  },
  bracedLiteral: {
    lbrace: {
      match: '{',
      push: 'bracedLiteral'
    },
    rbrace: {
      match: '}',
      pop: true
    },
    text: {
      match: /(?:\\[\\{}]|[^{}])+/,
      lineBreaks: true
    }
  }
});
const delimiters = {
  '(': ')',
  '{': '}'
};
const bibtexGrammar = exports.bibtexGrammar = new _core.util.Grammar({
  Main() {
    const entries = [];
    while (true) {
      while (this.matchToken('junk')) {
        this.consumeToken('junk');
      }
      if (this.matchEndOfFile()) {
        break;
      }
      entries.push(this.consumeRule('Entry'));
    }
    return entries.filter(Boolean);
  },
  _() {
    let oldToken;
    while (oldToken !== this.token) {
      oldToken = this.token;
      this.consumeToken('whitespace', true);
      this.consumeToken('comment', true);
    }
  },
  Entry() {
    this.consumeToken('at');
    this.consumeRule('_');
    const type = (this.matchToken('otherEntryType') ? this.consumeToken('otherEntryType') : this.consumeToken('dataEntryType')).value.toLowerCase();
    this.consumeRule('_');
    const openBrace = this.consumeToken('lbrace').value;
    this.consumeRule('_');
    let result;
    if (type === 'string') {
      const [key, value] = this.consumeRule('Field');
      this.state.strings[key] = value;
    } else if (type === 'preamble') {
      this.consumeRule('Expression');
    } else {
      const label = this.consumeToken('label').value;
      this.consumeRule('_');
      this.consumeToken('comma');
      this.consumeRule('_');
      const entryBody = this.consumeRule('EntryBody');
      result = _objectSpread({
        type,
        label
      }, entryBody);
    }
    this.consumeRule('_');
    const closeBrace = this.consumeToken('rbrace').value;
    if (closeBrace !== delimiters[openBrace]) {
      _core.logger.warn('[plugin-bibtex]', `entry started with "${openBrace}", but ends with "${closeBrace}"`);
    }
    return result;
  },
  EntryBody() {
    const output = {
      properties: {}
    };
    while (this.matchToken('identifier')) {
      const [field, value] = this.consumeRule('Field');
      let annotationField;
      let annotationName = 'default';
      if (field.endsWith(_config.default.biber.annotationMarker)) {
        annotationField = field.slice(0, -_config.default.biber.annotationMarker.length);
      } else if (field.includes(_config.default.biber.annotationMarker + _config.default.biber.namedAnnotationMarker)) {
        [annotationField, annotationName] = field.split(_config.default.biber.annotationMarker + _config.default.biber.namedAnnotationMarker);
      }
      if (annotationField) {
        if (!output.annotations) {
          output.annotations = {};
        }
        if (!output.annotations[annotationField]) {
          output.annotations[annotationField] = {};
        }
        output.annotations[annotationField][annotationName] = value;
      } else {
        output.properties[field] = value;
      }
      this.consumeRule('_');
      if (this.consumeToken('comma', true)) {
        this.consumeRule('_');
      } else {
        break;
      }
    }
    return output;
  },
  Field() {
    const field = this.consumeToken('identifier').value.toLowerCase();
    this.consumeRule('_');
    this.consumeToken('equals');
    this.consumeRule('_');
    const value = this.consumeRule('Expression');
    return [field, value];
  },
  Expression() {
    let output = this.consumeRule('ExpressionPart');
    this.consumeRule('_');
    while (this.matchToken('hash')) {
      this.consumeToken('hash');
      this.consumeRule('_');
      output += this.consumeRule('ExpressionPart').toString();
      this.consumeRule('_');
    }
    return output;
  },
  ExpressionPart() {
    if (this.matchToken('identifier')) {
      return this.state.strings[this.consumeToken('identifier').value.toLowerCase()] || '';
    } else if (this.matchToken('number')) {
      return parseInt(this.consumeToken('number'));
    } else if (this.matchToken('quote')) {
      return this.consumeRule('QuoteString');
    } else {
      return this.consumeRule('BracketString');
    }
  },
  QuoteString() {
    let output = '';
    this.consumeToken('quote');
    while (!this.matchToken('quote')) {
      output += this.consumeRule('Text');
    }
    this.consumeToken('quote');
    return output;
  },
  BracketString() {
    let output = '';
    this.consumeToken('lbrace');
    while (!this.matchToken('rbrace')) {
      output += this.consumeRule('Text');
    }
    this.consumeToken('rbrace');
    return output;
  },
  Text() {
    if (this.matchToken('lbrace')) {
      return `{${this.consumeRule('BracketString')}}`;
    } else {
      return this.consumeToken('text').value;
    }
  }
}, {
  strings: _constants.defaultStrings
});
function parse(text) {
  return bibtexGrammar.parse(lexer.reset(text));
}
},{"../config.js":49,"./constants.js":52,"@citation-js/core":"citation-js","moo":158}],56:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ref = exports.formats = void 0;
var _file = require("./file.js");
var _bibtxt = require("./bibtxt.js");
var _entries = require("./entries.js");
const ref = exports.ref = '@bibtex';
const formats = exports.formats = {
  '@biblatex/text': {
    parse: _file.parse,
    parseType: {
      dataType: 'String',
      predicate: /@\s{0,5}[A-Za-z]{1,13}\s{0,5}\{\s{0,5}[^@{}"=,\\\s]{0,100}\s{0,5},[\s\S]*\}/
    }
  },
  '@biblatex/entry+object': {
    parse(input) {
      return (0, _entries.parse)([input]);
    },
    parseType: {
      dataType: 'SimpleObject',
      propertyConstraint: {
        props: ['type', 'label', 'properties']
      }
    }
  },
  '@biblatex/entries+list': {
    parse: _entries.parse,
    parseType: {
      elementConstraint: '@biblatex/entry+object'
    }
  },
  '@bibtex/text': {
    parse: _file.parse,
    outputs: '@bibtex/entries+list'
  },
  '@bibtex/entry+object': {
    parse(input) {
      return (0, _entries.parseBibtex)([input]);
    }
  },
  '@bibtex/entries+list': {
    parse: _entries.parseBibtex
  },
  '@bibtxt/text': {
    parse: _bibtxt.parse,
    parseType: {
      dataType: 'String',
      predicate: /^\s*(\[(?!\s*[{[]).*?\]\s*(\n\s*[^[]((?!:)\S)+\s*:\s*.+?\s*)*\s*)+$/
    }
  }
};
},{"./bibtxt.js":51,"./entries.js":53,"./file.js":55}],57:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatNameParts = formatNameParts;
exports.getStringCase = getStringCase;
exports.orderNameParts = orderNameParts;
exports.orderNamePieces = orderNamePieces;
function getStringCase(string) {
  const a = string.toUpperCase();
  const b = string.toLowerCase();
  for (let i = 0; i < string.length; i++) {
    if (a[i] !== b[i]) {
      return a[i] === string[i];
    }
  }
  return null;
}
function formatNameParts(parts) {
  if (parts.length === 0) {
    return undefined;
  }
  let piece = '';
  while (parts.length > 1) {
    const {
      value,
      hyphenated
    } = parts.shift();
    piece += value + (hyphenated ? '-' : ' ');
  }
  const output = piece + parts[0].value;
  return output[0] && output;
}
function orderNameParts(parts, orderGiven = true) {
  const given = [];
  const undecided = [];
  if (orderGiven) {
    while (parts.length > 1 && parts[0].upperCase !== false) {
      given.push(...undecided);
      undecided.length = 0;
      while (parts.length > 1 && parts[0].upperCase !== false && !parts[0].hyphenated) {
        given.push(parts.shift());
      }
      while (parts.length > 0 && parts[0].upperCase !== false && parts[0].hyphenated) {
        undecided.push(parts.shift());
      }
    }
  }
  const prefix = [];
  const family = [];
  while (parts.length > 1) {
    prefix.push(...family);
    family.length = 0;
    while (parts.length > 1 && parts[0].upperCase === false) {
      prefix.push(parts.shift());
    }
    while (parts.length > 0 && parts[0].upperCase !== false) {
      family.push(parts.shift());
    }
  }
  if (undecided.length) {
    family.unshift(...undecided);
  }
  if (parts.length) {
    family.push(parts[0]);
  }
  return [formatNameParts(given), formatNameParts(prefix), formatNameParts(family)];
}
function orderNamePieces(pieces) {
  if (pieces[0][0].label) {
    const name = {};
    for (const [{
      value,
      label
    }] of pieces) {
      name[label] = value;
    }
    return name;
  }
  const name = {};
  const [given, prefix, family] = orderNameParts(pieces[0], pieces.length === 1);
  if (family) {
    name.family = family;
  }
  if (prefix) {
    name.prefix = prefix;
  }
  if (pieces.length === 3) {
    name.given = formatNameParts(pieces[2]);
    name.suffix = formatNameParts(pieces[1]);
  } else if (pieces.length === 2) {
    name.given = formatNameParts(pieces[1]);
  } else if (given) {
    name.given = given;
  }
  return name;
}
},{}],58:[function(require,module,exports){
module.exports={"biblatex":{"article":["author","title","journaltitle",["year","date"]],"book":["author","title",["year","date"]],"mvbook":["author","title",["year","date"]],"inbook":["author","title","booktitle",["year","date"]],"booklet":[["author","editor"],"title",["year","date"]],"collection":["editor","title",["year","date"]],"mvcollection":["editor","title",["year","date"]],"incollection":["author","title","booktitle",["year","date"]],"dataset":[["author","editor"],"title",["year","date"]],"online":[["author","editor"],"title",["year","date"],["doi","eprint","url"]],"patent":["author","title","number",["year","date"]],"periodical":["editor","title",["year","date"]],"proceedings":["title",["year","date"]],"mvproceedings":["title",["year","date"]],"inproceedings":["author","title","booktitle",["year","date"]],"report":["author","title","type","institution",["year","date"]],"thesis":["author","title","type","institution",["year","date"]],"unpublished":["author","title",["year","date"]],"conference":["author","title","booktitle",["year","date"]],"electronic":[["author","editor"],"title",["year","date"],["doi","eprint","url"]],"mastersthesis":["author","title","institution",["year","date"]],"phdthesis":["author","title","institution",["year","date"]],"techreport":["author","title","institution",["year","date"]],"www":[["author","editor"],"title",["year","date"],["doi","eprint","url"]]},"bibtex":{"article":["author","title","journal","year"],"book":[["author","editor"],"title","publisher","year"],"booklet":["title"],"inbook":[["author","editor"],"title",["chapter","pages"],"publisher","year"],"incollection":["author","title","booktitle","publisher","year"],"inproceedings":["author","title","booktitle","year"],"mastersthesis":["author","title","school","year"],"phdthesis":["author","title","school","year"],"proceedings":["title","year"],"techreport":["author","title","institution","year"],"unpublished":["author","title","note"]}}
},{}],59:[function(require,module,exports){
module.exports={"diacritics":{"`":"̀","'":"́","^":"̂","~":"̃","=":"̄","u":"̆",".":"̇","\"":"̈","r":"̊","H":"̋","v":"̌","b":"̲","d":"̣","c":"̧","k":"̨","t":"͡","textcommabelow":"̦"},"commands":{"textquotesingle":"'","textasciigrave":"`","textquotedbl":"\"","textdollar":"$","textless":"<","textgreater":">","textbackslash":"\\","textasciicircum":"^","textunderscore":"_","textbraceleft":"{","textbar":"|","textbraceright":"}","textasciitilde":"~","textexclamdown":"¡","textcent":"¢","textsterling":"£","textcurrency":"¤","textyen":"¥","textbrokenbar":"¦","textsection":"§","textasciidieresis":"¨","textcopyright":"©","textordfeminine":"ª","guillemetleft":"«","guillemotleft":"«","textlnot":"¬","textregistered":"®","textasciimacron":"¯","textdegree":"°","textpm":"±","texttwosuperior":"²","textthreesuperior":"³","textasciiacute":"´","textmu":"µ","textparagraph":"¶","textperiodcentered":"·","textonesuperior":"¹","textordmasculine":"º","guillemetright":"»","guillemotright":"»","textonequarter":"¼","textonehalf":"½","textthreequarters":"¾","textquestiondown":"¿","AE":"Æ","DH":"Ð","texttimes":"×","O":"Ø","TH":"Þ","ss":"ß","ae":"æ","dh":"ð","textdiv":"÷","o":"ø","th":"þ","DJ":"Đ","dj":"đ","i":"ı","IJ":"Ĳ","ij":"ĳ","L":"Ł","l":"ł","NG":"Ŋ","ng":"ŋ","OE":"Œ","oe":"œ","textflorin":"ƒ","j":"ȷ","textasciicaron":"ˇ","textasciibreve":"˘","textacutedbl":"˝","textgravedbl":"˵","texttildelow":"˷","textbaht":"฿","SS":"ẞ","textcompwordmark":"‌","textendash":"–","textemdash":"—","textbardbl":"‖","textquoteleft":"‘","textquoteright":"’","quotesinglbase":"‚","textquotedblleft":"“","textquotedblright":"”","quotedblbase":"„","textdagger":"†","textdaggerdbl":"‡","textbullet":"•","textellipsis":"…","textperthousand":"‰","textpertenthousand":"‱","guilsinglleft":"‹","guilsinglright":"›","textreferencemark":"※","textinterrobang":"‽","textfractionsolidus":"⁄","textlquill":"⁅","textrquill":"⁆","textdiscount":"⁒","textcolonmonetary":"₡","textlira":"₤","textnaira":"₦","textwon":"₩","textdong":"₫","texteuro":"€","textpeso":"₱","textcelsius":"℃","textnumero":"№","textcircledP":"℗","textrecipe":"℞","textservicemark":"℠","texttrademark":"™","textohm":"Ω","textmho":"℧","textestimated":"℮","textleftarrow":"←","textuparrow":"↑","textrightarrow":"→","textdownarrow":"↓","textminus":"−","Hwithstroke":"Ħ","hwithstroke":"ħ","textasteriskcentered":"∗","textsurd":"√","textlangle":"〈","textrangle":"〉","textblank":"␢","textvisiblespace":"␣","textopenbullet":"◦","textbigcircle":"◯","textmusicalnote":"♪","textmarried":"⚭","textdivorced":"⚮","textinterrobangdown":"⸘","textcommabelow":null,"copyright":"©"},"mathCommands":{"Gamma":"Γ","Delta":"Δ","Theta":"Θ","Lambda":"Λ","Xi":"Ξ","Pi":"Π","Sigma":"Σ","Phi":"Φ","Psi":"Ψ","Omega":"Ω","alpha":"α","beta":"β","gamma":"γ","delta":"δ","varepsilon":"ε","zeta":"ζ","eta":"η","theta":"θ","iota":"ι","kappa":"κ","lambda":"λ","mu":"μ","nu":"ν","xi":"ξ","pi":"π","rho":"ρ","varsigma":"ς","sigma":"σ","tau":"τ","upsilon":"υ","varphi":"φ","chi":"χ","psi":"ψ","omega":"ω","vartheta":"ϑ","Upsilon":"ϒ","phi":"ϕ","varpi":"ϖ","varrho":"ϱ","epsilon":"ϵ"}}

},{}],60:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parse = parse;
exports.parseAnnotation = parseAnnotation;
exports.valueGrammar = void 0;
var _core = require("@citation-js/core");
var _moo = _interopRequireDefault(require("moo"));
var _config = _interopRequireDefault(require("../config.js"));
var constants = _interopRequireWildcard(require("./constants.js"));
var _name = require("./name.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
const text = {
  commandBegin: {
    match: '\\begin',
    push: 'environment'
  },
  command: {
    match: /\\(?:[a-zA-Z]+|.) */,
    value: s => s.slice(1).trim()
  },
  lbrace: {
    match: '{',
    push: 'bracedLiteral'
  },
  mathShift: {
    match: '$',
    push: 'mathLiteral'
  },
  whitespace: {
    match: /[\s]+|~/,
    lineBreaks: true,
    value(token) {
      return token === '~' ? '\xa0' : ' ';
    }
  }
};
const lexer = _moo.default.states({
  stringLiteral: _objectSpread(_objectSpread({}, text), {}, {
    text: /[^{$}\s~\\]+/
  }),
  namesLiteral: _objectSpread(_objectSpread({
    and: /\s+[aA][nN][dD]\s+/,
    comma: ',',
    hyphen: '-',
    equals: '='
  }, text), {}, {
    text: /[^{$}\s~\\,=-]+/
  }),
  listLiteral: _objectSpread(_objectSpread({
    and: /\s+and\s+/
  }, text), {}, {
    text: /[^{$}\s~\\]+/
  }),
  separatedLiteral: _objectSpread(_objectSpread({
    comma: ','
  }, text), {}, {
    text: /[^{$}\s~\\,]+/
  }),
  annotation: _objectSpread(_objectSpread({}, text), {}, {
    colon: ':',
    equals: '=',
    comma: ',',
    semicolon: ';',
    quote: '"',
    itemCount: /\d+/,
    text: /[^{$}\s~\\":;,=]+/
  }),
  bracedLiteral: _objectSpread(_objectSpread({}, text), {}, {
    rbrace: {
      match: '}',
      pop: true
    },
    text: /[^{$}\s~\\]+/
  }),
  mathLiteral: _objectSpread(_objectSpread({}, text), {}, {
    mathShift: {
      match: '$',
      pop: true
    },
    script: /[\^_]/,
    text: /[^{$}\s~\\^_]+/
  }),
  environment: _objectSpread(_objectSpread({
    commandEnd: {
      match: '\\end',
      pop: true
    }
  }, text), {}, {
    text: /[^{$}\s~\\]+/
  })
});
function flattenConsString(string) {
  string[0];
  return string;
}
function applyFormatting(text, format) {
  if (format in constants.formatting) {
    return text && constants.formatting[format].join(text);
  } else {
    return text;
  }
}
const valueGrammar = exports.valueGrammar = new _core.util.Grammar({
  String() {
    let output = '';
    while (!this.matchEndOfFile()) {
      output += this.consumeRule('Text');
    }
    return flattenConsString(output);
  },
  StringNames() {
    const list = [];
    while (true) {
      this.consumeToken('whitespace', true);
      list.push(this.consumeRule('Name'));
      this.consumeToken('whitespace', true);
      if (this.matchEndOfFile()) {
        return list;
      } else {
        this.consumeToken('and');
      }
    }
  },
  Name() {
    const pieces = [];
    while (true) {
      pieces.push(this.consumeRule('NamePiece'));
      if (this.matchEndOfFile() || this.matchToken('and')) {
        return (0, _name.orderNamePieces)(pieces);
      } else {
        this.consumeToken('comma');
        this.consumeToken('whitespace', true);
      }
    }
  },
  NamePiece() {
    const parts = [];
    while (true) {
      const part = this.consumeRule('NameToken');
      if (part.label) {
        part.label = (0, _name.formatNameParts)([...parts, {
          value: part.label
        }]);
        return [part];
      }
      parts.push(part);
      if (this.matchEndOfFile() || this.matchToken('and') || this.matchToken('comma')) {
        return parts;
      } else {
        while (this.matchToken('hyphen') || this.matchToken('whitespace')) {
          this.consumeToken();
        }
      }
    }
  },
  NameToken() {
    let upperCase = null;
    let value = '';
    while (true) {
      if (upperCase === null && this.matchToken('text')) {
        const text = this.consumeToken().value;
        value += text;
        upperCase = (0, _name.getStringCase)(text);
      } else if (this.matchEndOfFile() || this.matchToken('and') || this.matchToken('comma') || this.matchToken('whitespace')) {
        return {
          value,
          upperCase
        };
      } else if (this.matchToken('hyphen')) {
        return {
          value,
          upperCase,
          hyphenated: true
        };
      } else if (this.matchToken('equals')) {
        this.consumeToken('equals');
        const text = this.consumeRule('NamePiece');
        if (text[0].label) {
          value += '=' + text[0].label;
        }
        return {
          value: (0, _name.formatNameParts)(text),
          label: value
        };
      } else {
        value += this.consumeRule('Text');
      }
    }
  },
  StringList() {
    const list = [];
    while (!this.matchEndOfFile()) {
      let output = '';
      while (!this.matchEndOfFile() && !this.matchToken('and')) {
        output += this.consumeRule('Text');
      }
      list.push(flattenConsString(output));
      this.consumeToken('and', true);
    }
    return list.length === 1 ? list[0] : list;
  },
  StringSeparated() {
    const list = [];
    while (!this.matchEndOfFile()) {
      let output = '';
      while (!this.matchEndOfFile() && !this.matchToken('comma')) {
        output += this.consumeRule('Text');
      }
      list.push(output.trim());
      this.consumeToken('comma', true);
      this.consumeToken('whitespace', true);
    }
    return list;
  },
  StringVerbatim() {
    let output = '';
    while (!this.matchEndOfFile()) {
      output += this.consumeToken().text;
    }
    return flattenConsString(output);
  },
  StringUri() {
    const uri = this.consumeRule('StringVerbatim');
    try {
      if (decodeURI(uri) === uri) {
        return encodeURI(uri);
      } else {
        return uri;
      }
    } catch (e) {
      return encodeURI(uri);
    }
  },
  StringTitleCase() {
    this.state.sentenceCase = true;
    let output = '';
    while (!this.matchEndOfFile()) {
      output += this.consumeRule('Text');
    }
    return flattenConsString(output);
  },
  Annotations() {
    const annotations = {};
    while (true) {
      const {
        scope,
        item,
        part,
        value
      } = this.consumeRule('Annotation');
      if (scope === 'part') {
        if (!annotations.part) {
          annotations.part = [];
        }
        if (!annotations.part[item]) {
          annotations.part[item] = {};
        }
        annotations.part[item][part] = value;
      } else if (scope === 'item') {
        if (!annotations.item) {
          annotations.item = [];
        }
        annotations.item[item] = value;
      } else {
        annotations.field = value;
      }
      if (this.matchEndOfFile()) {
        break;
      } else {
        this.consumeToken('semicolon');
        this.consumeRule('_');
      }
    }
    return annotations;
  },
  Annotation() {
    const annotation = {};
    if (this.matchToken('itemCount')) {
      annotation.item = parseInt(this.consumeToken('itemCount')) - 1;
      if (this.matchToken('colon')) {
        this.consumeToken('colon');
        annotation.part = this.consumeToken('text');
        annotation.scope = 'part';
      } else {
        annotation.scope = 'item';
      }
    } else {
      annotation.scope = 'field';
    }
    this.consumeToken('equals');
    this.consumeRule('_');
    if (this.matchToken('quote')) {
      this.consumeToken('quote');
      let literal = '';
      while (!this.matchToken('quote')) {
        if (this.matchToken('itemCount') || this.matchToken('colon') || this.matchToken('comma') || this.matchToken('semicolon') || this.matchToken('equals')) {
          literal += this.token.value;
          this.token = this.lexer.next();
        } else {
          literal += this.consumeRule('Text');
        }
      }
      this.consumeToken('quote');
      annotation.value = flattenConsString(literal);
      this.consumeRule('_');
    } else {
      annotation.value = [];
      let output = '';
      while (true) {
        output += this.consumeRule('Text');
        if (this.matchToken('comma')) {
          this.consumeToken('comma');
          this.consumeRule('_');
          annotation.value.push(flattenConsString(output));
          output = '';
        } else if (this.matchEndOfFile() || this.matchToken('semicolon')) {
          annotation.value.push(flattenConsString(output));
          break;
        }
      }
    }
    return annotation;
  },
  BracketString() {
    var _this$state;
    let output = '';
    this.consumeToken('lbrace');
    const sentenceCase = this.state.sentenceCase;
    this.state.sentenceCase = sentenceCase && this.matchToken('command');
    (_this$state = this.state).partlyLowercase && (_this$state.partlyLowercase = this.state.sentenceCase);
    while (!this.matchToken('rbrace')) {
      output += this.consumeRule('Text');
    }
    const topLevel = sentenceCase && !this.state.sentenceCase;
    const protectCase = topLevel && this.state.partlyLowercase;
    this.state.sentenceCase = sentenceCase;
    this.consumeToken('rbrace');
    return protectCase ? applyFormatting(output, 'nocase') : output;
  },
  MathString() {
    let output = '';
    this.consumeToken('mathShift');
    while (!this.matchToken('mathShift')) {
      if (this.matchToken('script')) {
        const script = this.consumeToken('script').value;
        const text = this.consumeRule('Text').split('');
        if (text.every(char => char in constants.mathScripts[script])) {
          output += text.map(char => constants.mathScripts[script][char]).join('');
        } else {
          const formatName = constants.mathScriptFormatting[script];
          output += constants.formatting[formatName].join(text.join(''));
        }
        continue;
      }
      if (this.matchToken('command')) {
        const command = this.token.value;
        if (command in constants.mathScriptFormatting) {
          this.consumeToken('command');
          const text = this.consumeRule('BracketString');
          output += applyFormatting(text, constants.mathScriptFormatting[command]);
          continue;
        }
      }
      output += this.consumeRule('Text');
    }
    this.consumeToken('mathShift');
    return output;
  },
  Text() {
    if (this.matchToken('lbrace')) {
      return this.consumeRule('BracketString');
    } else if (this.matchToken('mathShift')) {
      return this.consumeRule('MathString');
    } else if (this.matchToken('whitespace')) {
      return this.consumeToken('whitespace').value;
    } else if (this.matchToken('commandBegin')) {
      return this.consumeRule('EnclosedEnv');
    } else if (this.matchToken('command')) {
      return this.consumeRule('Command');
    }
    const text = this.consumeToken('text').value.replace(constants.ligaturePattern, ligature => constants.ligatures[ligature]);
    const afterPunctuation = this.state.afterPunctuation;
    this.state.afterPunctuation = /[?!.:]$/.test(text);
    if (!this.state.sentenceCase) {
      var _this$state2;
      (_this$state2 = this.state).partlyLowercase || (_this$state2.partlyLowercase = text === text.toLowerCase() && text !== text.toUpperCase());
      return text;
    }
    const [first, ...otherCharacters] = text;
    const rest = otherCharacters.join('');
    const restLowerCase = rest.toLowerCase();
    if (rest !== restLowerCase) {
      return text;
    }
    if (!afterPunctuation) {
      return text.toLowerCase();
    }
    return first + restLowerCase;
  },
  Command() {
    const commandToken = this.consumeToken('command');
    const command = commandToken.value;
    if (command in constants.formattingEnvs) {
      const text = this.consumeRule('Env');
      const format = constants.formattingEnvs[command];
      return applyFormatting(text, format);
    } else if (command in constants.formattingCommands) {
      const text = this.consumeRule('BracketString');
      const format = constants.formattingCommands[command];
      return applyFormatting(text, format);
    } else if (command in constants.commands) {
      return constants.commands[command];
    } else if (command in constants.mathCommands) {
      return constants.mathCommands[command];
    } else if (command in constants.diacritics && !this.matchEndOfFile()) {
      const text = this.consumeRule('Text');
      const diacritic = text[0] + constants.diacritics[command];
      return diacritic.normalize('NFC') + text.slice(1);
    } else if (command in constants.argumentCommands) {
      const func = constants.argumentCommands[command];
      const args = [];
      let arity = func.length;
      while (arity-- > 0) {
        this.consumeToken('whitespace', true);
        args.push(this.consumeRule('BracketString'));
      }
      return func(...args);
    } else if (/^[&%$#_{}]$/.test(command)) {
      return commandToken.text.slice(1);
    } else {
      return commandToken.text;
    }
  },
  Env() {
    let output = '';
    while (!this.matchEndOfFile() && !this.matchToken('rbrace')) {
      output += this.consumeRule('Text');
    }
    return output;
  },
  EnclosedEnv() {
    this.consumeToken('commandBegin');
    const beginEnv = this.consumeRule('BracketString');
    let output = '';
    while (!this.matchToken('commandEnd')) {
      output += this.consumeRule('Text');
    }
    const end = this.consumeToken('commandEnd');
    const endEnv = this.consumeRule('BracketString');
    if (beginEnv !== endEnv) {
      throw new SyntaxError(this.lexer.formatError(end, `environment started with "${beginEnv}", ended with "${endEnv}"`));
    }
    return applyFormatting(output, constants.formattingEnvs[beginEnv]);
  },
  _() {
    while (this.matchToken('whitespace')) {
      this.consumeToken('whitespace');
    }
  }
}, {
  sentenceCase: false,
  partlyLowercase: false,
  afterPunctuation: true
});
function singleLanguageIsEnglish(language) {
  return constants.sentenceCaseLanguages.includes(language.toLowerCase());
}
function isEnglish(languages) {
  if (Array.isArray(languages)) {
    return languages.every(singleLanguageIsEnglish);
  }
  return singleLanguageIsEnglish(languages);
}
function getMainRule(fieldType, languages) {
  if (fieldType[1] === 'name') {
    return fieldType[0] === 'list' ? 'StringNames' : 'Name';
  }
  if (fieldType[1] === 'title') {
    const option = _config.default.parse.sentenceCase;
    if (option === 'always' || option === 'english' && isEnglish(languages)) {
      return 'StringTitleCase';
    } else {
      return 'String';
    }
  }
  switch (fieldType[0] === 'field' ? fieldType[1] : fieldType[0]) {
    case 'list':
      return 'StringList';
    case 'separated':
      return 'StringSeparated';
    case 'verbatim':
      return 'StringVerbatim';
    case 'uri':
      return 'StringUri';
    case 'title':
    case 'literal':
    default:
      return 'String';
  }
}
function getLexerState(fieldType) {
  if (fieldType[1] === 'name') {
    return 'namesLiteral';
  }
  switch (fieldType[0]) {
    case 'list':
      return 'listLiteral';
    case 'separated':
      return 'separatedLiteral';
    case 'field':
    default:
      return 'stringLiteral';
  }
}
function parse(text, field, languages = []) {
  const fieldType = constants.fieldTypes[field] || [];
  return valueGrammar.parse(lexer.reset(text, {
    state: getLexerState(fieldType),
    line: 0,
    col: 0
  }), getMainRule(fieldType, languages));
}
function parseAnnotation(text) {
  return valueGrammar.parse(lexer.reset(text, {
    state: 'annotation',
    line: 0,
    col: 0
  }), 'Annotations');
}
},{"../config.js":49,"./constants.js":52,"./name.js":57,"@citation-js/core":"citation-js","moo":158}],61:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _core = require("@citation-js/core");
var _date = require("@citation-js/date");
var _biblatexTypes = _interopRequireDefault(require("./biblatexTypes.json"));
var _shared = require("./shared.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const nonSpec = [{
  source: 'note',
  target: 'accessed',
  when: {
    source: false,
    target: {
      note: false,
      addendum: false
    }
  },
  convert: {
    toSource(accessed) {
      return `[Online; accessed ${(0, _date.format)(accessed)}]`;
    }
  }
}, {
  source: 'numpages',
  target: 'number-of-pages',
  when: {
    source: {
      pagetotal: false
    },
    target: false
  }
}, {
  source: 'pmid',
  target: 'PMID',
  when: {
    source: {
      eprinttype(type) {
        return type !== 'pmid';
      },
      archiveprefix(type) {
        return type !== 'pmid';
      }
    },
    target: false
  }
}, {
  source: 'pmcid',
  target: 'PMCID',
  when: {
    target: false
  }
}, {
  source: 's2id',
  target: 'custom',
  convert: {
    toTarget(S2ID) {
      return {
        S2ID
      };
    },
    toSource({
      S2ID
    }) {
      return S2ID;
    }
  }
}];
const aliases = [{
  source: 'annote',
  target: 'annote',
  when: {
    source: {
      annotation: false
    },
    target: false
  }
}, {
  source: 'address',
  target: 'publisher-place',
  convert: _shared.Converters.PICK,
  when: {
    source: {
      location: false
    },
    target: false
  }
}, {
  source: ['eprint', 'archiveprefix'],
  target: 'PMID',
  convert: _shared.Converters.EPRINT,
  when: {
    source: {
      eprinttype: false
    },
    target: false
  }
}, {
  source: 'journal',
  target: 'container-title',
  when: {
    source: {
      maintitle: false,
      booktitle: false,
      journaltitle: false
    },
    target: false
  }
}, {
  source: 'school',
  target: 'publisher',
  convert: _shared.Converters.PICK,
  when: {
    source: {
      institution: false,
      organization: false,
      publisher: false
    },
    target: false
  }
}];
var _default = exports.default = new _core.util.Translator([...aliases, ...nonSpec, {
  source: 'abstract',
  target: 'abstract'
}, {
  source: 'urldate',
  target: 'accessed',
  convert: _shared.Converters.DATE
}, {
  source: 'annotation',
  target: 'annote'
}, {
  source: ['author', 'author+an:orcid'],
  target: 'author',
  convert: _shared.Converters.NAMES_ORCID
}, {
  source: 'library',
  target: 'call-number'
}, {
  source: 'chapter',
  target: 'chapter-number'
}, {
  source: 'bookauthor',
  target: 'container-author',
  convert: _shared.Converters.NAMES
}, {
  source: ['maintitle', 'mainsubtitle', 'maintitleaddon'],
  target: 'container-title',
  when: {
    source: true,
    target: {
      'number-of-volumes': true
    }
  },
  convert: _shared.Converters.TITLE
}, {
  source: ['booktitle', 'booksubtitle', 'booktitleaddon'],
  target: 'container-title',
  when: {
    source: {
      maintitle: false
    },
    target: {
      'number-of-volumes': false,
      type(type) {
        return !type || !type.startsWith('article');
      }
    }
  },
  convert: _shared.Converters.TITLE
}, {
  source: ['journaltitle', 'journalsubtitle', 'journaltitleaddon'],
  target: 'container-title',
  when: {
    source: {
      [_shared.TYPE]: 'article'
    },
    target: {
      type: ['article', 'article-newspaper', 'article-journal', 'article-magazine']
    }
  },
  convert: _shared.Converters.TITLE
}, {
  source: 'shortjournal',
  target: 'container-title-short',
  when: {
    source: {
      [_shared.TYPE]: 'article'
    },
    target: {
      type: ['article', 'article-newspaper', 'article-journal', 'article-magazine']
    }
  }
}, {
  source: 'shortjournal',
  target: 'journalAbbreviation',
  when: {
    source: false,
    target: {
      'container-title-short': false
    }
  }
}, {
  source: 'number',
  target: 'collection-number',
  when: {
    source: {
      [_shared.TYPE]: ['book', 'mvbook', 'inbook', 'bookinbook', 'suppbook', 'collection', 'mvcollection', 'incollection', 'suppcollection', 'manual', 'suppperiodical', 'proceedings', 'mvproceedings', 'refererence']
    },
    target: {
      type: ['bill', 'book', 'broadcast', 'chapter', 'dataset', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'interview', 'legislation', 'legal_case', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'post', 'post-weblog', 'personal_communication', 'review', 'review-book', 'song', 'speech', 'thesis', 'treaty', 'webpage']
    }
  }
}, {
  source: 'series',
  target: 'collection-title'
}, {
  source: 'shortseries',
  target: 'collection-title-short'
}, {
  source: 'doi',
  target: 'DOI'
}, {
  source: 'edition',
  target: 'edition'
}, {
  source: 'editor',
  target: 'editor',
  convert: _shared.Converters.NAMES
}, {
  source: [_shared.TYPE, 'entrysubtype', 'type'],
  target: ['type', 'genre'],
  convert: {
    toTarget(type, subtype, typeKey) {
      if (!typeKey) {
        if (type === 'mastersthesis') {
          typeKey = 'mathesis';
        }
        if (type === 'phdthesis') {
          typeKey = 'phdthesis';
        }
        if (type === 'techreport') {
          typeKey = 'techreport';
        }
      }
      return [_biblatexTypes.default.source[type] || 'document', typeKey || subtype];
    },
    toSource(type, genre) {
      const sourceType = _biblatexTypes.default.target[type] || 'misc';
      return genre in _shared.TYPE_KEYS ? [sourceType, undefined, genre] : [sourceType, genre];
    }
  }
}, {
  source: _shared.TYPE,
  when: {
    target: {
      type: false
    }
  },
  convert: {
    toSource() {
      return 'misc';
    }
  }
}, {
  source: 'eventdate',
  target: 'event-date',
  convert: _shared.Converters.DATE
}, {
  source: 'venue',
  target: 'event-place'
}, {
  source: ['eventtitle', 'eventtitleaddon'],
  target: 'event-title',
  convert: _shared.Converters.EVENT_TITLE
}, {
  source: ['eventtitle', 'eventtitleaddon'],
  target: 'event',
  convert: _shared.Converters.EVENT_TITLE,
  when: {
    source: false,
    target: {
      'event-title': false
    }
  }
}, {
  source: _shared.LABEL,
  target: ['id', 'citation-key', 'author', 'issued', 'year-suffix', 'title'],
  convert: _shared.Converters.LABEL
}, {
  source: 'isbn',
  target: 'ISBN'
}, {
  source: 'issn',
  target: 'ISSN'
}, {
  source: 'issue',
  target: 'issue',
  when: {
    source: {
      number: false,
      [_shared.TYPE]: ['article', 'periodical']
    },
    target: {
      issue(issue) {
        return typeof issue === 'string' && !issue.match(/\d+/);
      },
      type: ['article', 'article-journal', 'article-newspaper', 'article-magazine', 'periodical']
    }
  }
}, {
  source: 'number',
  target: 'issue',
  when: {
    source: {
      [_shared.TYPE]: ['article', 'periodical', 'inproceedings']
    },
    target: {
      issue(issue) {
        return issue && (typeof issue === 'number' || issue.match(/\d+/));
      },
      type: ['article', 'article-journal', 'article-newspaper', 'article-magazine', 'paper-conference', 'periodical']
    }
  }
}, {
  source: 'date',
  target: 'issued',
  convert: _shared.Converters.DATE
}, {
  source: ['year', 'month', 'day'],
  target: 'issued',
  convert: _shared.Converters.YEAR_MONTH,
  when: {
    source: {
      date: false
    },
    target: false
  }
}, {
  source: 'location',
  target: 'jurisdiction',
  when: {
    source: {
      type: 'patent'
    },
    target: {
      type: 'patent'
    }
  }
}, {
  source: 'keywords',
  target: 'keyword',
  convert: _shared.Converters.KEYWORDS
}, {
  source: 'language',
  target: 'language',
  convert: _shared.Converters.PICK
}, {
  source: 'langid',
  target: 'language',
  when: {
    source: {
      language: false
    },
    target: false
  }
}, {
  source: 'note',
  target: 'note'
}, {
  source: 'addendum',
  target: 'note',
  when: {
    source: {
      note: false
    },
    target: false
  }
}, {
  source: 'eid',
  target: 'number',
  when: {
    target: {
      type: ['article-journal']
    }
  }
}, {
  source: ['isan', 'ismn', 'isrn', 'iswc'],
  target: 'number',
  convert: _shared.Converters.STANDARD_NUMBERS,
  when: {
    source: {
      [_shared.TYPE](type) {
        return type !== 'patent';
      }
    },
    target: {
      type(type) {
        return type !== 'patent';
      }
    }
  }
}, {
  source: 'number',
  target: 'number',
  when: {
    source: {
      [_shared.TYPE]: ['patent', 'report', 'techreport', 'legislation']
    },
    target: {
      type: ['patent', 'report', 'legislation']
    }
  }
}, {
  source: 'origdate',
  target: 'original-date',
  convert: _shared.Converters.DATE
}, {
  source: 'origlocation',
  target: 'original-publisher-place',
  convert: _shared.Converters.PICK
}, {
  source: 'origpublisher',
  target: 'original-publisher',
  convert: _shared.Converters.PICK
}, {
  source: 'origtitle',
  target: 'original-title'
}, {
  source: 'pages',
  target: 'page',
  when: {
    source: {
      bookpagination: [undefined, 'page']
    }
  },
  convert: _shared.Converters.PAGES
}, {
  source: 'pagetotal',
  target: 'number-of-pages'
}, {
  source: 'part',
  target: 'part-number'
}, {
  source: ['eprint', 'eprinttype'],
  target: 'PMID',
  convert: _shared.Converters.EPRINT
}, {
  source: 'location',
  target: 'publisher-place',
  convert: _shared.Converters.PICK
}, {
  source: 'publisher',
  target: 'publisher',
  convert: _shared.Converters.PICK,
  when: {
    source: true,
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'chapter', 'classic', 'collection', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'event', 'figure', 'graphic', 'hearing', 'interview', 'legal_case', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'patent', 'performance', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'review', 'review-book', 'software', 'song', 'speech', 'standard', 'treaty']
    }
  }
}, {
  source: 'organization',
  target: 'publisher',
  convert: _shared.Converters.PICK,
  when: {
    source: {
      publisher: false
    },
    target: {
      type: ['paper-conference', 'webpage']
    }
  }
}, {
  source: 'institution',
  target: 'publisher',
  convert: _shared.Converters.PICK,
  when: {
    source: {
      publisher: false,
      organization: false
    },
    target: {
      type: ['report', 'thesis']
    }
  }
}, {
  source: 'howpublished',
  target: 'publisher',
  convert: _shared.Converters.PICK,
  when: {
    source: {
      howpublished(howPublished) {
        return howPublished && !howPublished.startsWith('http');
      },
      publisher: false,
      organization: false,
      institution: false
    },
    target: {
      type: 'manuscript'
    }
  }
}, {
  source: ['pages', 'bookpagination'],
  target: 'section',
  when: {
    source: {
      bookpagination: 'section'
    },
    target: {
      page: false
    }
  },
  convert: {
    toTarget(section) {
      return section;
    },
    toSource(section) {
      return [section, 'section'];
    }
  }
}, {
  source: 'pubstate',
  target: 'status',
  convert: _shared.Converters.STATUS
}, {
  source: 'shorttitle',
  target: 'title-short'
}, {
  source: 'shorttitle',
  target: 'shortTitle',
  when: {
    source: false,
    target: {
      'title-short': false
    }
  }
}, {
  source: ['title', 'subtitle', 'titleaddon'],
  target: 'title',
  convert: _shared.Converters.TITLE
}, {
  source: 'translator',
  target: 'translator',
  convert: _shared.Converters.NAMES
}, {
  source: 'url',
  target: 'URL'
}, {
  source: 'howpublished',
  target: 'URL',
  convert: _shared.Converters.HOW_PUBLISHED,
  when: {
    source: {
      url: false
    },
    target: false
  }
}, {
  source: 'version',
  target: 'version'
}, {
  source: 'volume',
  target: 'volume'
}, {
  source: 'volumes',
  target: 'number-of-volumes'
}, {
  source: ['issuetitle', 'issuesubtitle', 'issuetitleaddon'],
  target: 'volume-title',
  convert: _shared.Converters.TITLE
}]);
},{"./biblatexTypes.json":62,"./shared.js":67,"@citation-js/core":"citation-js","@citation-js/date":43}],62:[function(require,module,exports){
module.exports={
  "source": {
    "article": "article-journal",
    "book": "book",
    "mvbook": "book",
    "inbook": "chapter",
    "bookinbook": "book",
    "booklet": "book",
    "collection": "book",
    "mvcollection": "book",
    "incollection": "chapter",
    "dataset": "dataset",
    "manual": "report",
    "misc": "document",
    "online": "webpage",
    "patent": "patent",
    "periodical": "periodical",
    "proceedings": "book",
    "mvproceedings": "book",
    "inproceedings": "paper-conference",
    "reference": "book",
    "mvreference": "book",
    "inreference": "entry",
    "report": "report",
    "software": "software",
    "thesis": "thesis",
    "unpublished": "manuscript",
    "artwork": "graphic",
    "audio": "song",
    "image": "figure",
    "jurisdiction": "legal_case",
    "legislation": "legislation",
    "legal": "treaty",
    "letter": "personal_communication",
    "movie": "motion_picture",
    "music": "musical_score",
    "performance": "performance",
    "review": "review",
    "standard": "standard",
    "video": "motion_picture",
    "conference": "paper-conference",
    "electronic": "webpage",
    "mastersthesis": "thesis",
    "phdthesis": "thesis",
    "techreport": "report",
    "www": "webpage"
  },
  "target": {
    "article": "article",
    "article-journal": "article",
    "article-magazine": "article",
    "article-newspaper": "article",
    "bill": "legislation",
    "book": "book",
    "broadcast": "audio",
    "chapter": "inbook",
    "classic": "unpublished",
    "collection": "misc",
    "dataset": "dataset",
    "document": "misc",
    "entry": "inreference",
    "entry-dictionary": "inreference",
    "entry-encyclopedia": "inreference",
    "event": "misc",
    "figure": "artwork",
    "graphic": "artwork",
    "hearing": "legal",
    "interview": "audio",
    "legal_case": "jurisdiction",
    "legislation": "legislation",
    "manuscript": "unpublished",
    "motion_picture": "movie",
    "musical_score": "music",
    "paper-conference": "inproceedings",
    "patent": "patent",
    "performance": "performance",
    "periodical": "periodical",
    "personal_communication": "letter",
    "post": "online",
    "post-weblog": "online",
    "regulation": "legal",
    "report": "report",
    "review": "review",
    "review-book": "review",
    "software": "software",
    "song": "music",
    "speech": "audio",
    "standard": "standard",
    "thesis": "thesis",
    "treaty": "legal",
    "webpage": "online"
  }
}

},{}],63:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _core = require("@citation-js/core");
var _date = require("@citation-js/date");
var _bibtexTypes = _interopRequireDefault(require("./bibtexTypes.json"));
var _shared = require("./shared.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default = exports.default = new _core.util.Translator([{
  source: 'note',
  target: 'accessed',
  when: {
    source: false,
    target: {
      note: false
    }
  },
  convert: {
    toSource(accessed) {
      return `[Online; accessed ${(0, _date.format)(accessed)}]`;
    }
  }
}, {
  source: 'annote',
  target: 'annote'
}, {
  source: 'address',
  target: 'publisher-place',
  convert: _shared.Converters.PICK
}, {
  source: 'author',
  target: 'author',
  convert: _shared.Converters.NAMES
}, {
  source: 'chapter',
  target: 'chapter-number'
}, {
  source: 'number',
  target: 'collection-number',
  when: {
    source: {
      [_shared.TYPE]: ['book', 'mvbook', 'inbook', 'collection', 'mvcollection', 'incollection', 'suppcollection', 'manual', 'suppperiodical', 'proceedings', 'mvproceedings', 'refererence']
    },
    target: {
      type: ['bill', 'book', 'broadcast', 'chapter', 'dataset', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'interview', 'legislation', 'legal_case', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'post', 'post-weblog', 'personal_communication', 'review', 'review-book', 'song', 'speech', 'thesis', 'treaty', 'webpage']
    }
  }
}, {
  source: 'series',
  target: 'collection-title'
}, {
  source: 'booktitle',
  target: 'container-title',
  when: {
    target: {
      type: ['chapter', 'paper-conference']
    }
  }
}, {
  source: 'journal',
  target: 'container-title',
  when: {
    source: {
      [_shared.TYPE]: 'article'
    },
    target: {
      type: ['article', 'article-newspaper', 'article-journal', 'article-magazine']
    }
  }
}, {
  source: 'doi',
  target: 'DOI'
}, {
  source: 'edition',
  target: 'edition'
}, {
  source: 'editor',
  target: 'editor',
  convert: _shared.Converters.NAMES
}, {
  source: _shared.LABEL,
  target: ['id', 'citation-key', 'author', 'issued', 'year-suffix', 'title'],
  convert: _shared.Converters.LABEL
}, {
  source: 'isbn',
  target: 'ISBN'
}, {
  source: 'issn',
  target: 'ISSN'
}, {
  source: 'number',
  target: 'issue',
  when: {
    source: {
      [_shared.TYPE]: ['article', 'periodical', 'inproceedings']
    },
    target: {
      issue(issue) {
        return typeof issue === 'number' || typeof issue === 'string' && issue.match(/\d+/);
      },
      type: ['article', 'article-journal', 'article-newspaper', 'article-magazine', 'paper-conference', 'periodical']
    }
  }
}, {
  source: ['year', 'month', 'day'],
  target: 'issued',
  convert: _shared.Converters.YEAR_MONTH
}, {
  source: 'note',
  target: 'note'
}, {
  source: 'number',
  target: 'number',
  when: {
    source: {
      [_shared.TYPE]: ['patent', 'report', 'techreport']
    },
    target: {
      type: ['patent', 'report']
    }
  }
}, {
  source: 'eid',
  target: 'number',
  when: {
    source: {
      number: false
    },
    target: {
      type: ['article-journal']
    }
  }
}, {
  source: 'pages',
  target: 'page',
  convert: _shared.Converters.PAGES
}, {
  source: 'publisher',
  target: 'publisher',
  convert: _shared.Converters.PICK,
  when: {
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'chapter', 'classic', 'collection', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'event', 'figure', 'graphic', 'hearing', 'interview', 'legal_case', 'legislation', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'patent', 'performance', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'review', 'review-book', 'software', 'song', 'speech', 'standard', 'treaty', 'webpage']
    }
  }
}, {
  source: 'organization',
  target: 'publisher',
  convert: _shared.Converters.PICK,
  when: {
    source: {
      publisher: false
    },
    target: {
      type: 'paper-conference'
    }
  }
}, {
  source: 'institution',
  target: 'publisher',
  convert: _shared.Converters.PICK,
  when: {
    source: {
      publisher: false,
      organization: false
    },
    target: {
      type: 'report'
    }
  }
}, {
  source: 'school',
  target: 'publisher',
  convert: _shared.Converters.PICK,
  when: {
    source: {
      institution: false,
      organization: false,
      publisher: false
    },
    target: {
      type: 'thesis'
    }
  }
}, {
  source: 'howpublished',
  target: 'publisher',
  convert: _shared.Converters.PICK,
  when: {
    source: {
      howpublished(howPublished) {
        return howPublished && !howPublished.startsWith('http');
      },
      publisher: false,
      organization: false,
      institution: false,
      school: false
    },
    target: {
      type: 'manuscript'
    }
  }
}, {
  source: 'title',
  target: 'title'
}, {
  source: [_shared.TYPE, 'type'],
  target: ['type', 'genre'],
  convert: {
    toTarget(sourceType, subType) {
      const type = _bibtexTypes.default.source[sourceType] || 'document';
      if (subType) {
        return [type, subType];
      } else if (sourceType === 'mastersthesis') {
        return [type, 'Master\'s thesis'];
      } else if (sourceType === 'phdthesis') {
        return [type, 'PhD thesis'];
      } else {
        return [type];
      }
    },
    toSource(targetType, genre) {
      const type = _bibtexTypes.default.target[targetType] || 'misc';
      if (/^(master'?s|diploma) thesis$/i.test(genre)) {
        return ['mastersthesis'];
      } else if (/^(phd|doctoral) thesis$/i.test(genre)) {
        return ['phdthesis'];
      } else {
        return [type, genre];
      }
    }
  }
}, {
  source: _shared.TYPE,
  when: {
    target: {
      type: false
    }
  },
  convert: {
    toSource() {
      return 'misc';
    }
  }
}, {
  source: 'url',
  target: 'URL'
}, {
  source: 'howpublished',
  target: 'URL',
  convert: _shared.Converters.HOW_PUBLISHED,
  when: {
    target: {
      publisher: false
    }
  }
}, {
  source: 'volume',
  target: 'volume'
}]);
},{"./bibtexTypes.json":64,"./shared.js":67,"@citation-js/core":"citation-js","@citation-js/date":43}],64:[function(require,module,exports){
module.exports={
  "source": {
    "article": "article-journal",
    "book": "book",
    "booklet": "book",
    "conference": "paper-conference",
    "inbook": "chapter",
    "incollection": "chapter",
    "inproceedings": "paper-conference",
    "manual": "report",
    "mastersthesis": "thesis",
    "misc": "document",
    "phdthesis": "thesis",
    "proceedings": "book",
    "techreport": "report",
    "unpublished": "manuscript"
  },
  "target": {
    "article": "article",
    "article-journal": "article",
    "article-magazine": "article",
    "article-newspaper": "article",
    "book": "book",
    "chapter": "inbook",
    "manuscript": "unpublished",
    "paper-conference": "inproceedings",
    "report": "techreport",
    "review": "article",
    "review-book": "article"
  }
}

},{}],65:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.crossref = crossref;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
const BOOK = new Set(['book', 'inbook', 'bookinbook', 'suppbook']);
const BOOK_PART = new Set(['inbook', 'bookinbook', 'suppbook']);
const COLLECTION = new Set(['collection', 'reference', 'incollection', 'inreference', 'suppcollection']);
const COLLECTION_PART = new Set(['incollection', 'inreference', 'suppcollection']);
const PROCEEDINGS = new Set(['proceedings', 'inproceedings']);
const PROCEEDINGS_PART = new Set(['inproceedings']);
const PERIODICAL_PART = new Set(['article', 'suppperiodical']);
const TITLE_MAP = {
  mvbook: ['main', BOOK],
  mvcollection: ['main', COLLECTION],
  mvreference: ['main', COLLECTION],
  mvproceedings: ['main', PROCEEDINGS],
  book: ['book', BOOK_PART],
  collection: ['book', COLLECTION_PART],
  reference: ['book', COLLECTION_PART],
  proceedings: ['book', PROCEEDINGS_PART],
  periodical: ['journal', PERIODICAL_PART]
};
function crossref(target, entry, registry) {
  if (entry.crossref in registry) {
    const parent = registry[entry.crossref];
    if (parent.properties === entry) {
      return entry;
    }
    const data = _objectSpread({}, crossref(parent.type, parent.properties, registry));
    delete data.ids;
    delete data.crossref;
    delete data.xref;
    delete data.entryset;
    delete data.entrysubtype;
    delete data.execute;
    delete data.label;
    delete data.options;
    delete data.presort;
    delete data.related;
    delete data.relatedoptions;
    delete data.relatedstring;
    delete data.relatedtype;
    delete data.shortand;
    delete data.shortandintro;
    delete data.sortkey;
    if ((parent.type === 'mvbook' || parent.type === 'book') && BOOK_PART.has(target)) {
      data.bookauthor = data.author;
    }
    if (parent.type in TITLE_MAP) {
      const [prefix, targets] = TITLE_MAP[parent.type];
      if (targets.has(target)) {
        data[prefix + 'title'] = data.title;
        data[prefix + 'subtitle'] = data.subtitle;
        if (prefix !== 'journal') {
          data[prefix + 'titleaddon'] = data.titleaddon;
        }
        delete data.title;
        delete data.subtitle;
        delete data.titleaddon;
        delete data.shorttitle;
        delete data.sorttitle;
        delete data.indextitle;
        delete data.indexsorttitle;
      }
    }
    return Object.assign(data, entry);
  }
  return entry;
}
},{}],66:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.format = format;
exports.formatBibtex = formatBibtex;
exports.parse = parse;
exports.parseBibtex = parseBibtex;
var _shared = require("./shared.js");
var _biblatex = _interopRequireDefault(require("./biblatex.js"));
var _bibtex = _interopRequireDefault(require("./bibtex.js"));
var _crossref = require("./crossref.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _parse(input, spec) {
  const registry = {};
  for (const entry of input) {
    registry[entry.label] = entry;
  }
  return input.map(({
    type,
    label,
    properties
  }) => spec.convertToTarget(_objectSpread({
    [_shared.TYPE]: type,
    [_shared.LABEL]: label
  }, (0, _crossref.crossref)(type, properties, registry))));
}
function _format(input, spec) {
  return input.map(entry => {
    const _spec$convertToSource = spec.convertToSource(entry),
      {
        [_shared.TYPE]: type,
        [_shared.LABEL]: label
      } = _spec$convertToSource,
      properties = _objectWithoutProperties(_spec$convertToSource, [_shared.TYPE, _shared.LABEL].map(_toPropertyKey));
    return {
      type,
      label,
      properties
    };
  });
}
function parseBibtex(input) {
  return _parse(input, _bibtex.default);
}
function formatBibtex(input) {
  return _format(input, _bibtex.default);
}
function parse(input) {
  return _parse(input, _biblatex.default);
}
function format(input) {
  return _format(input, _biblatex.default);
}
},{"./biblatex.js":61,"./bibtex.js":63,"./crossref.js":65,"./shared.js":67}],67:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TYPE_KEYS = exports.TYPE = exports.STANDARD_NUMBERS_PATTERN = exports.MONTHS = exports.LABEL = exports.Converters = void 0;
exports.formatLabel = formatLabel;
exports.parseDate = parseDate;
exports.parseMonth = parseMonth;
var _core = require("@citation-js/core");
var _config = _interopRequireDefault(require("../config.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const stopWords = new Set(['the', 'a', 'an']);
const unsafeChars = /(?:<\/?.*?>|[\u0020-\u002F\u003A-\u0040\u005B-\u005E\u0060\u007B-\u007F])+/g;
const unicode = /[^\u0020-\u007F]+/g;
function isLabelSafe(text) {
  return !_config.default.format.checkLabel || !text.match(unsafeChars);
}
function formatLabelFromId(id) {
  if (id === null) {
    return 'null';
  } else if (id === undefined) {
    return 'undefined';
  } else if (_config.default.format.checkLabel) {
    return id.toString().replace(unsafeChars, '');
  } else {
    return id.toString();
  }
}
function firstWord(text) {
  if (!text) {
    return '';
  } else {
    return text.normalize('NFKD').replace(unicode, '').split(unsafeChars).find(word => word.length && !stopWords.has(word.toLowerCase()));
  }
}
const name = new _core.util.Translator([{
  source: 'given',
  target: 'given'
}, {
  source: 'family',
  target: 'family'
}, {
  source: 'suffix',
  target: 'suffix'
}, {
  source: 'prefix',
  target: 'non-dropping-particle'
}, {
  source: 'family',
  target: 'literal',
  when: {
    source: false,
    target: {
      family: false,
      given: false
    }
  }
}]);
const months = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];
const TYPE = exports.TYPE = 'BibTeX type';
const LABEL = exports.LABEL = 'BibTeX label';
const MONTHS = exports.MONTHS = {
  jan: 1,
  feb: 2,
  mar: 3,
  apr: 4,
  may: 5,
  jun: 6,
  jul: 7,
  aug: 8,
  sep: 9,
  oct: 10,
  nov: 11,
  dec: 12,
  january: 1,
  february: 2,
  march: 3,
  april: 4,
  may: 5,
  june: 6,
  july: 7,
  august: 8,
  september: 9,
  october: 10,
  november: 11,
  december: 12
};
const TYPE_KEYS = exports.TYPE_KEYS = {
  bathesis: 'Bachelor\'s thesis',
  mathesis: 'Master\'s thesis',
  phdthesis: 'PhD thesis',
  candthesis: 'Candidate thesis',
  techreport: 'technical report',
  resreport: 'research report',
  software: 'computer software',
  datacd: 'data cd',
  audiocd: 'audio cd',
  patent: 'patent',
  patentde: 'German patent',
  patenteu: 'European patent',
  patentfr: 'French patent',
  patentuk: 'British patent',
  patentus: 'U.S. patent',
  patreq: 'patent request',
  patreqde: 'German patent request',
  patreqeu: 'European patent request',
  patreqfr: 'French patent request',
  patrequk: 'British patent request',
  patrequs: 'U.S. patent request'
};
const STANDARD_NUMBERS_PATTERN = exports.STANDARD_NUMBERS_PATTERN = /(^(?:ISAN )?(?:[0-9a-f]{4}-){4}[0-9a-z](?:-(?:[0-9a-f]{4}-){2}[0-9a-z])?$)|(^(?:979-?0-?|M-?)(?:\d{9}|(?=[\d-]{11}$)\d+-\d+-\d)$)|(^ISRN .{1,36}$)|(^(?:ISWC )?T-?\d{9}-?\d$)/i;
function parseDate(date) {
  const parts = date.split('T')[0].replace(/[?~%]$/, '').split('-');
  const year = +parts[0].replace(/^Y(?=-?\d{4}\d+)/, '').replace(/X/g, '0');
  const month = +parts[1];
  const day = +parts[2];
  if (!month || month > 20) {
    return [year];
  } else if (!day) {
    return [year, month];
  } else {
    return [year, month, day];
  }
}
function parseMonth(value) {
  if (value == null) {
    return [];
  }
  if (+value) {
    return [parseInt(value, 10)];
  }
  value = value.trim().toLowerCase();
  if (value in MONTHS) {
    return [MONTHS[value]];
  }
  const parts = value.split(/\s+/);
  let month;
  let day;
  if (parts[0] in MONTHS) {
    month = MONTHS[parts[0]];
    day = parseInt(parts[1]);
  } else if (parts[1] in MONTHS) {
    month = MONTHS[parts[1]];
    day = parseInt(parts[0]);
  }
  return day ? [month, day] : month ? [month] : [];
}
function formatLabel(author, issued, suffix, title) {
  let label = '';
  if (author && author[0]) {
    label += firstWord(author[0].family || author[0].literal);
  }
  if (issued && issued['date-parts'] && issued['date-parts'][0]) {
    label += issued['date-parts'][0][0];
  }
  if (suffix) {
    label += suffix;
  } else if (title) {
    label += firstWord(title);
  }
  return label;
}
const Converters = exports.Converters = {
  PICK: {
    toTarget(...args) {
      return args.find(Boolean);
    },
    toSource(value) {
      return [value];
    }
  },
  DATE: {
    toTarget(date) {
      const parts = date.split('/').map(part => part && part !== '..' ? parseDate(part) : undefined);
      return isNaN(parts[0][0]) ? {
        literal: date
      } : {
        'date-parts': parts
      };
    },
    toSource(date) {
      if ('date-parts' in date) {
        return date['date-parts'].map(datePart => datePart.map(datePart => datePart.toString().padStart(2, '0')).join('-')).join('/');
      }
    }
  },
  YEAR_MONTH: {
    toTarget(year, month, day) {
      if (isNaN(+year)) {
        return {
          literal: year
        };
      } else if (!isNaN(+day) && !isNaN(+month)) {
        return {
          'date-parts': [[+year, +month, +day]]
        };
      } else {
        return {
          'date-parts': [[+year, ...parseMonth(month)]]
        };
      }
    },
    toSource(date) {
      if ('date-parts' in date) {
        const [year, month, day] = date['date-parts'][0];
        return [year.toString(), month ? day ? `${months[month - 1]} ${day}` : month : undefined];
      } else {
        return [];
      }
    }
  },
  EPRINT: {
    toTarget(id, type) {
      if (type === 'pubmed') {
        return id;
      }
    },
    toSource(id) {
      return [id, 'pubmed'];
    }
  },
  EVENT_TITLE: {
    toTarget(title, addon) {
      if (addon) {
        title += ' (' + addon + ')';
      }
      return title;
    },
    toSource(title) {
      return title.match(/^(.+)(?: \((.+)\))?$/).slice(1, 3);
    }
  },
  HOW_PUBLISHED: {
    toTarget(howPublished) {
      if (howPublished.startsWith('http')) {
        return howPublished;
      }
    }
  },
  KEYWORDS: {
    toTarget(list) {
      return list.join(',');
    },
    toSource(list) {
      return list.split(',');
    }
  },
  LABEL: {
    toTarget(label) {
      return [label, label];
    },
    toSource(id, label, author, issued, suffix, title) {
      if (label && isLabelSafe(label)) {
        return label;
      } else if (_config.default.format.useIdAsLabel) {
        return formatLabelFromId(id);
      } else {
        return formatLabel(author, issued, suffix, title) || formatLabelFromId(id);
      }
    }
  },
  NAMES: {
    toTarget(list) {
      return list.map(name.convertToTarget);
    },
    toSource(list) {
      return list.map(name.convertToSource);
    }
  },
  NAMES_ORCID: {
    toTarget(list, orcid) {
      return list.map((inputName, i) => {
        var _orcid$item;
        const outputName = name.convertToTarget(inputName);
        if (typeof (orcid === null || orcid === void 0 || (_orcid$item = orcid.item) === null || _orcid$item === void 0 ? void 0 : _orcid$item[i]) === 'string') {
          outputName._orcid = orcid.item[i];
        }
        return outputName;
      });
    },
    toSource(list) {
      const names = [];
      const orcid = [];
      for (let i = 0; i < list.length; i++) {
        names.push(name.convertToSource(list[i]));
        if (list[i]._orcid) {
          orcid[i] = list[i]._orcid;
        }
      }
      return [names, orcid.length ? {
        item: orcid
      } : undefined];
    }
  },
  PAGES: {
    toTarget(pages) {
      return pages.replace(/[–—]/, '-');
    },
    toSource(pages) {
      return pages.replace('-', '--');
    }
  },
  STANDARD_NUMBERS: {
    toTarget(...args) {
      return args.find(Boolean);
    },
    toSource(number) {
      const match = number.toString().match(STANDARD_NUMBERS_PATTERN);
      return match ? match.slice(1, 5) : [];
    }
  },
  STATUS: {
    toSource(state) {
      if (/^(inpreparation|submitted|forthcoming|inpress|prepublished)$/i.test(state)) {
        return state;
      }
    }
  },
  TITLE: {
    toTarget(title, subtitle, addon) {
      if (subtitle) {
        title += ': ' + subtitle;
      }
      return title;
    },
    toSource(title) {
      return [title];
    }
  }
};
},{"../config.js":49,"@citation-js/core":"citation-js"}],68:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.format = format;
var _config = _interopRequireDefault(require("../config.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function formatField(field, value, dict) {
  return dict.listItem.join(`${field} = {${value}},`);
}
function formatEntry(entry, dict) {
  const fields = [];
  for (const field in entry.properties) {
    fields.push(formatField(field, entry.properties[field], dict));
    if (entry.annotations && entry.annotations[field]) {
      for (const annotation in entry.annotations[field]) {
        let annotationField = field + _config.default.biber.annotationMarker;
        if (annotation !== 'default') {
          annotationField += _config.default.biber.namedAnnotationMarker + annotation;
        }
        fields.push(formatField(annotationField, entry.annotations[field][annotation], dict));
      }
    }
  }
  return dict.entry.join(`@${entry.type}{${entry.label},${dict.list.join(fields.join(''))}}`);
}
function format(src, dict) {
  const entries = src.map(entry => formatEntry(entry, dict)).join('');
  return dict.bibliographyContainer.join(entries);
}
},{"../config.js":49}],69:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.format = format;
function formatEntry({
  type,
  label,
  properties
}, dict) {
  const fields = Object.entries(properties).concat([['type', type]]).map(([field, value]) => dict.listItem.join(`${field}: ${value}`));
  return dict.entry.join(`[${label}]${dict.list.join(fields.join(''))}`);
}
function format(src, dict) {
  const entries = src.map(entry => formatEntry(entry, dict)).join('\n');
  return dict.bibliographyContainer.join(entries);
}
},{}],70:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.format = format;
exports.formatBibtex = formatBibtex;
var _index = require("../mapping/index.js");
var _value = require("./value.js");
function formatEntryValues({
  type,
  label,
  properties
}) {
  const output = {
    type,
    label,
    properties: {}
  };
  for (const property in properties) {
    const value = properties[property];
    const [field, annotation] = property.split('+an:');
    if (annotation) {
      if (!output.annotations) {
        output.annotations = {};
      }
      if (!output.annotations[field]) {
        output.annotations[field] = {};
      }
      output.annotations[field][annotation] = (0, _value.formatAnnotation)(value);
    } else {
      output.properties[property] = (0, _value.format)(property, value);
    }
  }
  return output;
}
function format(entries) {
  return (0, _index.format)(entries).map(formatEntryValues);
}
function formatBibtex(entries) {
  return (0, _index.formatBibtex)(entries).map(formatEntryValues);
}
},{"../mapping/index.js":66,"./value.js":72}],71:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _core = require("@citation-js/core");
var _entries = require("./entries.js");
var _bibtex = require("./bibtex.js");
var _bibtxt = require("./bibtxt.js");
const factory = function (mapper, formatter) {
  return function (data, opts = {}) {
    const {
      type,
      format = type || 'text'
    } = opts;
    data = mapper(data);
    if (format === 'object') {
      return data;
    } else if (_core.plugins.dict.has(format)) {
      return formatter(data, _core.plugins.dict.get(format), opts);
    } else {
      throw new RangeError(`Output dictionary "${format}" not available`);
    }
  };
};
var _default = exports.default = {
  bibtex: factory(_entries.formatBibtex, _bibtex.format),
  biblatex: factory(_entries.format, _bibtex.format),
  bibtxt: factory(_entries.formatBibtex, _bibtxt.format)
};
},{"./bibtex.js":68,"./bibtxt.js":69,"./entries.js":70,"@citation-js/core":"citation-js"}],72:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.format = format;
exports.formatAnnotation = formatAnnotation;
var _config = _interopRequireDefault(require("../config.js"));
var _constants = require("../input/constants.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const unicode = {};
for (const command in _constants.commands) {
  unicode[_constants.commands[command]] = command;
}
for (const diacritic in _constants.diacritics) {
  unicode[_constants.diacritics[diacritic]] = diacritic;
}
for (const ligature in _constants.ligatures) {
  unicode[_constants.ligatures[ligature]] = ligature;
}
const mathUnicode = {};
for (const command in _constants.mathCommands) {
  mathUnicode[_constants.mathCommands[command]] = command;
}
const UNSAFE_UNICODE = /[^a-zA-Z0-9\s!"'()*+,\-./:;=?@[\]\u0300-\u0308\u030a-\u030c\u0332\u0323\u0327\u0328\u0361\u0326]/g;
const DIACRITIC_PATTERN = /.[\u0300-\u0308\u030a-\u030c\u0332\u0323\u0327\u0328\u0361\u0326]+/g;
const LONE_DIACRITIC_PATTERN = /[\u0300-\u0308\u030a-\u030c\u0332\u0323\u0327\u0328\u0361\u0326]/g;
const listDelimiters = {
  separated: ',',
  list: ' and '
};
const richTextMappings = {
  i: '\\textit{',
  b: '\\textbf{',
  sc: '\\textsc{',
  sup: '\\textsuperscript{',
  sub: '\\textsubscript{',
  'span style="font-variant:small-caps;"': '\\textsc{',
  'span class="nocase"': '{'
};
function escapeCharacter(char) {
  if (char in unicode) {
    return unicode[char] in _constants.ligatures ? unicode[char] : `\\${unicode[char]}{}`;
  } else if (char in mathUnicode) {
    return `$\\${mathUnicode[char]}$`;
  } else if (/^[&%$#_{}]$/.test(char)) {
    return `\\${char}`;
  } else {
    return '';
  }
}
function escapeValue(value) {
  if (!_config.default.format.asciiOnly) {
    return value;
  }
  return value.normalize('NFKD').replace(UNSAFE_UNICODE, char => escapeCharacter(char)).replace(DIACRITIC_PATTERN, match => Array.from(match).reduce((subject, diacritic) => `{\\${unicode[diacritic]} ${subject}}`)).replace(LONE_DIACRITIC_PATTERN, '');
}
function formatRichText(value) {
  const closingTags = [];
  let tokens = value.split(/<(\/?(?:i|b|sc|sup|sub|span)|span .*?)>/g);
  tokens = tokens.map((token, index) => {
    if (index % 2 === 0) {
      return escapeValue(token);
    } else if (token in richTextMappings) {
      closingTags.push('/' + token.split(' ')[0]);
      return richTextMappings[token];
    } else if (token === closingTags[closingTags.length - 1]) {
      closingTags.pop();
      return '}';
    } else {
      return '';
    }
  });
  return tokens.join('');
}
function formatName(name) {
  if (name.family && !name.prefix && !name.given & !name.suffix) {
    return name.family.includes(listDelimiters.list) ? name.family : `{${name.family}}`;
  }
  const parts = [''];
  if (name.prefix && name.family) {
    parts[0] += name.prefix + ' ';
  }
  if (name.family) {
    parts[0] += name.family;
  }
  if (name.suffix) {
    parts.push(name.suffix);
    parts.push(name.given || '');
  } else {
    parts.push(name.given);
  }
  return escapeValue(parts.join(', ').trim());
}
function formatTitle(title) {
  return formatRichText(title).split(/(:\s*)/).map((part, i) => i % 2 ? part : part.replace(/([^\\])\b([a-z]*[A-Z].*?)\b/g, '$1{$2}')).join('');
}
function formatSingleValue(value, valueType) {
  switch (valueType) {
    case 'title':
      return formatTitle(value);
    case 'literal':
      return formatRichText(value.toString());
    case 'name':
      return formatName(value);
    case 'verbatim':
    case 'uri':
      return value.toString();
    default:
      return escapeValue(value.toString());
  }
}
function formatList(values, valueType, listType) {
  const delimiter = listDelimiters[listType];
  return values.map(value => {
    const formatted = formatSingleValue(value, valueType);
    return formatted.includes(delimiter) ? `{${formatted}}` : formatted;
  }).join(delimiter);
}
function formatAnnotationValue(values) {
  if (Array.isArray(values)) {
    return values.map(value => escapeValue(value).replace(/([;,"])/g, '{$1}')).join(', ');
  } else {
    return '"' + escapeValue(values).replace(/(["])/g, '{$1}') + '"';
  }
}
function format(field, value) {
  if (!(field in _constants.fieldTypes)) {
    return formatSingleValue(value, 'verbatim');
  }
  const [listType, valueType] = _constants.fieldTypes[field];
  if (listType in listDelimiters) {
    return formatList(value, valueType, listType);
  } else {
    return formatSingleValue(value, valueType);
  }
}
function formatAnnotation(value) {
  const annotations = [];
  if (value.field) {
    annotations.push('=' + formatAnnotationValue(value.field));
  }
  if (value.item) {
    for (const [itemCount, itemValue] of Object.entries(value.item)) {
      if (!itemValue) {
        continue;
      }
      const i = parseInt(itemCount) + 1;
      annotations.push(i + '=' + formatAnnotationValue(itemValue));
    }
  }
  if (value.part) {
    for (const [itemCount, itemValue] of Object.entries(value.part)) {
      if (!itemValue) {
        continue;
      }
      const i = parseInt(itemCount) + 1;
      for (const part in itemValue) {
        if (!itemValue[part]) {
          continue;
        }
        annotations.push(i + ':' + part + '=' + formatAnnotationValue(itemValue[part]));
      }
    }
  }
  return annotations.join('; ');
}
},{"../config.js":49,"../input/constants.js":52}],73:[function(require,module,exports){
"use strict";

var _core = require("@citation-js/core");

var _date = require("@citation-js/date");

require("@citation-js/plugin-yaml");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const TYPES_TO_TARGET = {
  art: 'graphic',
  article: 'article-journal',
  audiovisual: 'motion_picture',
  bill: 'bill',
  blog: 'post-weblog',
  book: 'book',
  catalogue: 'collection',
  conference: 'event',
  'conference-paper': 'paper-conference',
  data: 'dataset',
  database: 'dataset',
  dictionary: 'entry-dictionary',
  'edited-work': 'document',
  encyclopedia: 'entry-encyclopedia',
  'film-broadcast': 'broadcast',
  generic: 'document',
  'government-document': 'regulation',
  grant: 'document',
  hearing: 'hearing',
  'historical-work': 'classic',
  'legal-case': 'legal_case',
  'legal-rule': 'legislation',
  'magazine-article': 'article-magazine',
  manual: 'report',
  map: 'map',
  multimedia: 'motion_picture',
  music: 'musical_score',
  'newspaper-article': 'article-newspaper',
  pamphlet: 'pamphlet',
  patent: 'patent',
  'personal-communication': 'personal_communication',
  proceedings: 'book',
  report: 'report',
  serial: 'periodical',
  slides: 'speech',
  software: 'software',
  'software-code': 'software',
  'software-container': 'software',
  'software-executable': 'software',
  'software-virtual-machine': 'software',
  'sound-recording': 'song',
  standard: 'standard',
  statute: 'legislation',
  thesis: 'thesis',
  unpublished: 'article',
  video: 'motion_picture',
  website: 'webpage'
};
const TYPES_TO_SOURCE = {
  article: 'article',
  'article-journal': 'article',
  'article-magazine': 'magazine-article',
  'article-newspaper': 'newspaper-article',
  bill: 'bill',
  book: 'book',
  broadcast: 'film-broadcast',
  chapter: 'generic',
  classic: 'historical-work',
  collection: 'catalogue',
  dataset: 'data',
  document: 'generic',
  entry: 'generic',
  'entry-dictionary': 'dictionary',
  'entry-encyclopedia': 'encyclopedia',
  event: 'conference',
  figure: 'generic',
  graphic: 'art',
  hearing: 'hearing',
  interview: 'sound-recording',
  legal_case: 'legal-case',
  legislation: 'statute',
  manuscript: 'historical-work',
  map: 'map',
  motion_picture: 'film-broadcast',
  musical_score: 'music',
  pamphlet: 'pamphlet',
  'paper-conference': 'conference-paper',
  patent: 'patent',
  performance: 'generic',
  periodical: 'serial',
  personal_communication: 'personal-communication',
  post: 'serial',
  'post-weblog': 'blog',
  regulation: 'government-document',
  report: 'report',
  review: 'generic',
  'review-book': 'generic',
  software: 'software',
  song: 'sound-recording',
  speech: 'slides',
  standard: 'standard',
  thesis: 'thesis',
  treaty: 'generic',
  webpage: 'website'
};
const ENTITY_PROPS = [{
  source: 'family-names',
  target: 'family'
}, {
  source: 'given-names',
  target: 'given'
}, {
  source: 'name-particle',
  target: 'non-dropping-particle'
}, {
  source: 'name-suffix',
  target: 'suffix'
}, {
  source: 'name',
  target: 'literal'
}, {
  source: 'orcid',
  target: '_orcid'
}];
const entity = new _core.util.Translator(ENTITY_PROPS);
const PROP_CONVERTERS = {
  names: {
    toTarget(names) {
      return names.map(entity.convertToTarget);
    },

    toSource(names) {
      return names.map(entity.convertToSource);
    }

  },
  publisher: {
    toTarget({
      name,
      city,
      region,
      country
    }) {
      const place = [city, region, country].filter(Boolean).join(', ');
      return [name, place || undefined];
    },

    toSource(name, place) {
      const entity = {
        name
      };

      if (place) {
        const parts = place.split(', ');
        entity.country = parts.pop();

        if (parts.length === 2) {
          entity.region = parts.pop();
        }

        if (parts.length === 1) {
          entity.city = parts.pop();
        }
      }

      return entity;
    }

  },
  date: {
    toTarget(date) {
      return (0, _date.parse)(date.toISOString());
    },

    toSource(date) {
      if (date.raw) {
        return date.raw;
      }

      const [year, month, day] = date['date-parts'][0];

      if (day) {
        return new Date(Date.UTC(year, month - 1, day));
      } else if (month) {
        return new Date(Date.UTC(year, month - 1));
      } else {
        return new Date(Date.UTC(year));
      }
    }

  }
};
const SHARED_PROPS = ['abstract', {
  source: 'authors',
  target: 'author',
  convert: PROP_CONVERTERS.names
}, {
  source: 'date-released',
  target: 'issued',
  when: {
    target: {
      type: 'software'
    }
  },
  convert: PROP_CONVERTERS.date
}, {
  source: 'doi',
  target: 'DOI'
}, {
  source: 'identifiers',
  target: ['DOI', 'ISBN', 'ISSN', 'PMCID', 'PMID', 'URL'],
  convert: {
    toTarget(identifiers) {
      const newIdentifiers = Array(6).fill(undefined);

      for (const {
        type,
        value
      } of identifiers) {
        if (!this.doi && type === 'doi') {
          newIdentifiers[0] = value;
        }

        if (!this.url && type === 'url') {
          newIdentifiers[5] = value;
        }

        if (type === 'other' && value.startsWith('urn:isbn:')) {
          newIdentifiers[1] = value.slice(9);
        }

        if (type === 'other' && value.startsWith('urn:issn:')) {
          newIdentifiers[2] = value.slice(9);
        }

        if (type === 'other' && value.startsWith('pmcid:')) {
          newIdentifiers[3] = value.slice(6);
        }

        if (type === 'other' && value.startsWith('pmid:')) {
          newIdentifiers[4] = value.slice(5);
        }
      }

      return newIdentifiers;
    },

    toSource(doi, isbn, issn, pmcid, pmid, url) {
      return [doi && {
        type: 'doi',
        value: doi
      }, url && {
        type: 'url',
        value: url
      }, isbn && {
        type: 'other',
        value: `urn:isbn:${isbn}`
      }, issn && {
        type: 'other',
        value: `urn:issn:${issn}`
      }, pmcid && {
        type: 'other',
        value: `pmcid:${pmcid}`
      }, pmid && {
        type: 'other',
        value: `pmid:${pmid}`
      }].filter(Boolean);
    }

  }
}, {
  source: 'keywords',
  target: 'keyword',
  convert: {
    toTarget(keywords) {
      return keywords.join(',');
    },

    toSource(keywords) {
      return keywords.split(/,\s*/g);
    }

  }
}, {
  source: 'title',
  target: 'title',
  when: {
    source: {
      term: false,
      entry: false
    },
    target: {
      type(type) {
        return !['entry', 'entry-dictionary', 'entry-encyclopedia'].includes(type);
      }

    }
  }
}, {
  source: 'title',
  target: 'container-title',
  when: {
    source: {
      entry: true,
      journal: false
    },
    target: {
      type: ['entry']
    }
  }
}, {
  source: 'title',
  target: 'container-title',
  when: {
    source: {
      term: true,
      journal: false
    },
    target: {
      type: ['entry-dictionary', 'entry-encyclopedia']
    }
  }
}, {
  source: 'url',
  target: 'URL'
}, 'version'];
const MAIN_PROPS = [{
  source: 'type',
  target: 'type',
  convert: {
    toSource(type) {
      return type === 'dataset' ? 'dataset' : 'software';
    },

    toTarget(type) {
      return type === 'dataset' ? 'dataset' : 'software';
    }

  }
}, ...SHARED_PROPS];
const REF_PROPS = [...SHARED_PROPS, {
  source: 'abbreviation',
  target: 'title-short'
}, {
  source: 'abbreviation',
  target: 'shortTitle'
}, 'collection-title', {
  source: 'recipients',
  target: 'recipient',
  convert: PROP_CONVERTERS.names
}, {
  source: 'senders',
  target: 'authors',
  convert: PROP_CONVERTERS.names
}, {
  source: 'conference',
  target: ['event-title', 'event-date', 'event-place', 'event'],
  convert: {
    toSource(name, date, place, nameFallback) {
      const entity = {
        name: name || nameFallback
      };

      if (place) {
        entity.location = place;
      }

      if (date) {
        entity['date-start'] = PROP_CONVERTERS.date.toSource(date);

        if (date['date-parts'] && date['date-parts'].length === 2) {
          entity['date-end'] = PROP_CONVERTERS.date.toSource({
            'date-parts': [date['date-parts'][1]]
          });
        }
      }

      return entity;
    },

    toTarget(event) {
      return [event.name, (0, _date.parse)(event['date-start'].toISOString(), event['date-end'].toISOString()), event.location];
    }

  }
}, {
  source: 'database',
  target: 'source'
}, {
  source: 'date-accessed',
  target: 'accessed',
  convert: PROP_CONVERTERS.date
}, {
  source: 'date-downloaded',
  target: 'accessed',
  convert: PROP_CONVERTERS.date,
  when: {
    source: {
      'date-accessed': false
    },
    target: false
  }
}, {
  source: 'date-published',
  target: 'issued',
  convert: PROP_CONVERTERS.date,
  when: {
    source: {
      'date-released': false
    },

    target() {
      return this.type !== 'book' || !this.version;
    }

  }
}, {
  source: ['year', 'month'],
  target: 'issued',
  when: {
    source: {
      'date-published': false,
      'date-released': false,
      year: true
    }
  },
  convert: {
    toTarget(year, month) {
      const date = month ? [year, month] : [year];
      return {
        'date-parts': [date]
      };
    },

    toSource(issued) {
      const [year, month] = issued['date-parts'][0];
      return [year, month];
    }

  }
}, {
  source: 'year-original',
  target: 'original-date',
  convert: {
    toTarget(year) {
      return {
        'date-parts': [[year]]
      };
    },

    toSource(date) {
      return date['date-parts'][0][0];
    }

  }
}, 'edition', {
  source: 'editors',
  target: 'editor',
  convert: PROP_CONVERTERS.names
}, {
  source: 'editors-series',
  target: 'collection-editor',
  convert: PROP_CONVERTERS.names
}, {
  source: 'entry',
  target: 'title',
  when: {
    source: {
      term: false
    },
    target: {
      type: 'entry'
    }
  }
}, {
  source: 'term',
  target: 'title',
  when: {
    target: {
      type: ['entry-dictionary', 'entry-encyclopedia']
    }
  }
}, {
  source: 'format',
  target: 'dimensions'
}, 'medium', {
  source: 'data-type',
  target: 'genre',
  when: {
    target: {
      type(type) {
        return type !== 'thesis';
      }

    }
  }
}, {
  source: 'thesis-type',
  target: 'genre',
  when: {
    source: {
      'data-type': false
    },
    target: {
      type: 'thesis'
    }
  }
}, {
  source: 'isbn',
  target: 'ISBN'
}, {
  source: 'issn',
  target: 'ISSN'
}, {
  source: 'pmcid',
  target: 'PMCID'
}, 'issue', {
  source: 'journal',
  target: 'container-title'
}, {
  source: 'volume-title',
  target: 'volume-title'
}, {
  source: 'issue-title',
  target: 'volume-title',
  when: {
    source: {
      'volume-title': false
    },
    target: false
  }
}, {
  source: 'languages',
  target: 'language',
  when: {
    target: true,
    source: {
      language(code) {
        return /[a-z]{2,3}/.test(code);
      }

    }
  },
  convert: {
    toSource(language) {
      return [language];
    },

    toTarget(languages) {
      return languages[0];
    }

  }
}, {
  source: 'location',
  target: ['archive', 'archive-place'],
  convert: PROP_CONVERTERS.publisher
}, {
  source: 'notes',
  target: 'note',
  when: {
    source: {
      scope: false
    }
  }
}, {
  source: 'scope',
  target: 'note',
  when: {
    target: false
  }
}, 'number', {
  source: 'patent-states',
  target: 'jurisdiction',
  when: {
    target: false
  },
  convert: {
    toTarget(states) {
      return states.join(', ');
    }

  }
}, {
  source: ['institution', 'department'],
  target: ['publisher', 'publisher-place'],
  when: {
    source: {
      publisher: false
    },
    target: {
      type: 'thesis'
    }
  },
  convert: {
    toTarget(institution, department) {
      const [name, place] = PROP_CONVERTERS.publisher.toTarget(institution);
      return [department ? `${department}, ${name}` : name, place];
    },

    toSource(name, place) {
      return [PROP_CONVERTERS.publisher.toSource(name, place)];
    }

  }
}, {
  source: 'publisher',
  target: ['publisher', 'publisher-place'],
  when: {
    target: {
      type(type) {
        return type !== 'thesis';
      }

    }
  },
  convert: PROP_CONVERTERS.publisher
}, 'section', {
  source: 'status',
  target: 'status',
  when: {
    source: true,
    target: {
      status: ['in-preparation', 'abstract', 'submitted', 'in-press', 'advance-online', 'preprint']
    }
  }
}, {
  source: 'start',
  target: 'page-first',
  when: {
    target: {
      page: false
    }
  }
}, {
  source: ['start', 'end'],
  target: 'page',
  convert: {
    toTarget(start, end) {
      return end ? `${start}-${end}` : start;
    },

    toSource(page) {
      const [start, end] = page.split('-');
      return end ? [start, end] : [start];
    }

  }
}, {
  source: 'pages',
  target: 'number-of-pages'
}, {
  source: 'translators',
  target: 'translator',
  convert: PROP_CONVERTERS.names
}, {
  source: 'type',
  target: 'type',
  convert: {
    toTarget(type) {
      return TYPES_TO_TARGET[type] || 'document';
    },

    toSource(type) {
      if (type === 'book' && this['event-title']) {
        return 'proceedings';
      }

      return TYPES_TO_SOURCE[type] || 'generic';
    }

  }
}, 'volume', {
  source: 'number-volumes',
  target: 'number-of-volumes'
}];
const mainTranslator = new _core.util.Translator(MAIN_PROPS);
const refTranslator = new _core.util.Translator(REF_PROPS);
const CFF_VERSION = '1.2.0';

function parse(input) {
  const main = mainTranslator.convertToTarget(input);

  if (input['cff-version'] <= '1.1.0') {
    main.type = TYPES_TO_TARGET.software;
  }

  main._cff_mainReference = true;
  const output = [main];

  if (input['preferred-citation']) {
    output.push(refTranslator.convertToTarget(input['preferred-citation']));
  }

  if (Array.isArray(input.references)) {
    output.push(...input.references.map(refTranslator.convertToTarget));
  }

  return output;
}

function format(input, options = {}) {
  input = input.slice();
  const {
    main,
    preferred,
    cffVersion = CFF_VERSION,
    message = 'Please cite the following works when using this software.'
  } = options;
  let preferredCitation;
  const preferredIndex = input.findIndex(entry => preferred && entry.id === preferred);

  if (cffVersion >= '1.2.0' && preferredIndex > -1) {
    preferredCitation = refTranslator.convertToSource(...input.splice(preferredIndex, 1));
  }

  let mainIndex = input.findIndex(entry => main ? entry.id === main : entry._cff_mainReference);
  mainIndex = mainIndex > -1 ? mainIndex : 0;
  const mainRef = input[mainIndex] ? mainTranslator.convertToSource(...input.splice(mainIndex, 1)) : {};

  if (mainRef && cffVersion < '1.2.0') {
    delete mainRef.type;
  }

  const cff = _objectSpread({
    'cff-version': cffVersion,
    message
  }, mainRef);

  if (preferredCitation) {
    cff['preferred-citation'] = preferredCitation;
  }

  if (input.length) {
    cff.references = input.map(refTranslator.convertToSource);
  }

  return cff;
}

_core.plugins.add('@cff', {
  input: {
    '@cff/object': {
      parseType: {
        dataType: 'SimpleObject',
        propertyConstraint: {
          props: 'cff-version'
        }
      },
      parse: parse
    }
  },
  output: {
    cff(data, options = {}) {
      const output = format(data, options);

      if (options.type === 'object') {
        return output;
      } else {
        return _core.plugins.output.format('yaml', output);
      }
    }

  }
});
},{"@citation-js/core":"citation-js","@citation-js/date":43,"@citation-js/plugin-yaml":125}],74:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parse = parseDoiApi;
exports.parseAsync = parseDoiApiAsync;
var _core = require("@citation-js/core");
var _json = _interopRequireDefault(require("./json.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const apiOptions = {
  checkContentType: true,
  headers: {
    Accept: 'application/vnd.citationstyles.csl+json'
  }
};
function processApiResponse(response) {
  if (response === '[]') {
    return {};
  }
  return (0, _json.default)(JSON.parse(response));
}
function parseDoiApiAsync(data) {
  const response = [].concat(data).map(url => _core.util.fetchFileAsync(url, apiOptions).then(processApiResponse));
  return Promise.all(response);
}
function parseDoiApi(data) {
  const response = [].concat(data).map(url => _core.util.fetchFile(url, apiOptions)).map(processApiResponse);
  return response;
}
},{"./json.js":77,"@citation-js/core":"citation-js"}],75:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.parse = parseDoi;
function parseDoi(data) {
  const list = Array.isArray(data) ? data : data.trim().split(/(?:\s+)/g);
  return list.map(doi => `https://doi.org/${doi}`);
}
},{}],76:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ref = exports.parsers = exports.formats = void 0;
var _core = require("@citation-js/core");
var id = _interopRequireWildcard(require("./id.js"));
var api = _interopRequireWildcard(require("./api.js"));
var json = _interopRequireWildcard(require("./json.js"));
var type = _interopRequireWildcard(require("./type.js"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const ref = exports.ref = '@doi';
const parsers = exports.parsers = {
  id,
  api,
  json,
  type
};
const formats = exports.formats = {
  '@doi/api': {
    parse: api.parse,
    parseAsync: api.parseAsync,
    parseType: {
      dataType: 'String',
      predicate: /^\s*(https?:\/\/(?:dx\.)?doi\.org\/(10.\d{4,9}\/[-._;()/:A-Z0-9[\]<>]+))\s*$/i,
      extends: '@else/url'
    }
  },
  '@doi/short-url': {
    parse: function (url) {
      return url.replace(/^(\s*)/, '$1https://');
    },
    parseType: {
      dataType: 'String',
      predicate: /^\s*((?:dx\.)?doi\.org\/(10.\d{4,9}\/[-._;()/:A-Z0-9[\]<>]+))\s*$/i
    }
  },
  '@doi/id': {
    parse: id.parse,
    parseType: {
      dataType: 'String',
      predicate: /^\s*(10.\d{4,9}\/[-._;()/:A-Z0-9[\]<>]+)\s*$/i
    }
  },
  '@doi/list+text': {
    parse: id.parse,
    parseType: {
      dataType: 'String',
      tokenList: /^10.\d{4,9}\/[-._;()/:A-Z0-9[\]<>]+$/i
    }
  },
  '@doi/list+object': {
    parse: id.parse,
    parseType: {
      dataType: 'Array',
      elementConstraint: '@doi/id'
    }
  },
  '@doi/type': {
    parse: type.parse
  }
};
_core.plugins.add(ref, {
  input: formats
});
},{"./api.js":74,"./id.js":75,"./json.js":77,"./type.js":78,"@citation-js/core":"citation-js"}],77:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.parse = parseDoiJson;
var _type = _interopRequireDefault(require("./type.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function parseDoiJson(data) {
  const res = {
    type: (0, _type.default)(data.type, data)
  };
  const dateFields = ['submitted', 'issued', 'event-date', 'original-date', 'container', 'accessed'];
  dateFields.forEach(field => {
    const value = data[field];
    if (value && value['date-parts'] && typeof value['date-parts'][0] === 'number') {
      value['date-parts'] = [value['date-parts']];
    }
  });
  if (data.type === 'dissertation' && !data.genre) {
    res.genre = 'Doctoral dissertation';
  }
  if (data.type === 'posted-content' && (data.subtype === 'preprint' || data.member === '31795')) {
    if (Array.isArray(data.institution) && data.institution[0] && data.institution[0].name) {
      res['container-title'] = data.institution[0].name;
    }
  }
  return Object.assign({}, data, res);
}
},{"./type.js":78}],78:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.parse = fetchDoiType;
const doiTypes = {
  'journal-article': 'article-journal',
  'book-chapter': 'chapter',
  'posted-content': 'manuscript',
  'proceedings-article': 'paper-conference',
  dissertation: 'thesis'
};
function fetchDoiType(value, data) {
  if (value === 'posted-content' && data.subtype === 'preprint') {
    return 'article';
  }
  if (value === 'posted-content' && data.subtype === 'other' && data.member === '31795') {
    return 'post-weblog';
  }
  return doiTypes[value] || value;
}
},{}],79:[function(require,module,exports){
"use strict";

var _core = require("@citation-js/core");
var _input = _interopRequireDefault(require("./input"));
var _output = _interopRequireDefault(require("./output"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
_core.plugins.add('@enw', {
  input: _input.default,
  output: _output.default
});
},{"./input":80,"./output":82,"@citation-js/core":"citation-js"}],80:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _mapping = require("./mapping");
function finalizeRecord(fields) {
  if ('0' in fields) {
    fields[0] = fields[0].replace(/(^| )(.)/g, (_, prefix, letter) => prefix + letter.toUpperCase());
  }
  return {
    scheme: 'enw',
    fields
  };
}
function parseFile(file) {
  const lines = file.trim().replace(/^\$]/m, '%]').replace(/^(%[([]) ?/m, '$1 ').replace(/\n(?![%\n])/, ' ').split('\n');
  const records = [];
  let fields;
  for (const line of lines) {
    if (!line.length) {
      continue;
    }
    const field = line.slice(1, 2);
    if (field === '0') {
      if (fields) {
        records.push(finalizeRecord(fields));
      }
      fields = {};
    }
    const value = line.slice(3);
    if (Array.isArray(fields[field])) {
      fields[field].push(value);
    } else if (field in fields) {
      fields[field] = [fields[field], value];
    } else {
      fields[field] = value;
    }
  }
  return records.concat(finalizeRecord(fields));
}
var _default = exports.default = {
  '@enw/file': {
    parse(file) {
      return parseFile(file);
    },
    parseType: {
      dataType: 'String',
      predicate: /^%0/m
    }
  },
  '@enw/record': {
    parse(record) {
      return _mapping.translator.convertToTarget(record.fields);
    },
    parseType: {
      dataType: 'SimpleObject',
      propertyConstraint: {
        props: 'scheme',
        value(scheme) {
          return scheme === 'enw';
        }
      }
    }
  }
};
},{"./mapping":81}],81:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.translator = void 0;
var _core = require("@citation-js/core");
var _date = require("@citation-js/date");
var _name = require("@citation-js/name");
const TYPES = {
  toTarget: {
    'Aggregated Database': 'dataset',
    'Ancient Text': 'classic',
    Artwork: 'graphic',
    'Audiovisual Material': 'motion_picture',
    Bill: 'bill',
    Blog: 'post-weblog',
    Book: 'book',
    'Book Section': 'chapter',
    Case: 'legal_case',
    'Chart or Table': 'figure',
    'Classical Work': 'classic',
    'Computer Program': 'software',
    'Conference Paper': 'paper-conference',
    'Conference Proceedings': 'book',
    Dataset: 'dataset',
    Dictionary: 'entry-dictionary',
    'Edited Book': 'book',
    'Electronic Article': 'article-journal',
    'Electronic Book': 'book',
    'Electronic Chapter': 'chapter',
    Encyclopedia: 'entry-encyclopedia',
    Equation: 'figure',
    Figure: 'figure',
    'Film or Broadcast': 'motion_picture',
    Generic: 'document',
    'Government Document': 'document',
    Grant: 'document',
    Hearing: 'hearing',
    'Journal Article': 'article-journal',
    'Legal Rule or Regulation': 'regulation',
    'Magazine Article': 'article-magazine',
    Manuscript: 'manuscript',
    Map: 'map',
    Music: 'song',
    'Newspaper Article': 'article-newspaper',
    'Online Database': 'dataset',
    'Online Multimedia': 'motion_picture',
    Pamphlet: 'pamphlet',
    Patent: 'patent',
    'Personal Communication': 'personal_communication',
    Report: 'report',
    Serial: 'periodical',
    Standard: 'standard',
    Statute: 'legisliation',
    Thesis: 'thesis',
    'Unpublished Work': 'article',
    'Web Page': 'webpage'
  },
  toSource: {
    article: 'Unpublished Work',
    'article-journal': 'Journal Article',
    'article-magazine': 'Magazine Article',
    'article-newspaper': 'Newspaper Article',
    bill: 'Bill',
    book: 'Book',
    broadcast: 'Film or Broadcast',
    chapter: 'Book Section',
    classic: 'Classical Work',
    dataset: 'Dataset',
    document: 'Generic',
    entry: 'Catalog',
    'entry-dictionary': 'Dictionary',
    'entry-encyclopedia': 'Encyclopedia',
    figure: 'Figure',
    graphic: 'Artwork',
    hearing: 'Hearing',
    legal_case: 'Case',
    legislation: 'Statute',
    manuscript: 'Manuscript',
    map: 'Map',
    motion_picture: 'Film or Broadcast',
    musical_score: 'Music',
    pamphlet: 'Pamphlet',
    'paper-conference': 'Conference Paper',
    patent: 'Patent',
    periodical: 'Serial',
    personal_communication: 'Personal Communication',
    post: 'Blog',
    'post-weblog': 'Blog',
    regulation: 'Legal Rule or Regulation',
    report: 'Report',
    software: 'Computer Program',
    song: 'Music',
    standard: 'Standard',
    thesis: 'Thesis',
    webpage: 'Web Page'
  }
};
const CONVERTERS = {
  TYPE: {
    toTarget(type) {
      return TYPES.toTarget[type] || 'document';
    },
    toSource(type) {
      return TYPES.toSource[type] || 'Generic';
    }
  },
  DATE: {
    toTarget(date) {
      return (0, _date.parse)(date);
    },
    toSource(date) {
      return (0, _date.format)(date);
    }
  },
  DATE_YEAR: {
    toTarget(date, year) {
      return date ? CONVERTERS.DATE.toTarget(date) : CONVERTERS.YEAR.toTarget(year);
    },
    toSource(date) {
      return [CONVERTERS.DATE.toSource(date), CONVERTERS.YEAR.toSource(date)];
    }
  },
  YEAR: {
    toTarget(year) {
      return {
        'date-parts': [[+year]]
      };
    },
    toSource(date) {
      const year = date && date['date-parts'] && date['date-parts'][0] && date['date-parts'][0][0];
      return year && year.toString();
    }
  },
  NAMES: {
    toTarget(names) {
      return [].concat(names).map(_name.parse);
    },
    toSource(names) {
      return names.map(name => (0, _name.format)(name, true));
    }
  },
  ISBN_ISSN: {
    toTarget(number) {
      return number.toString().match(/^\d{4}-\d{3}[0-9xX]$/) ? [undefined, number] : [number, undefined];
    },
    toSource(isbn, issn) {
      return isbn || issn;
    }
  },
  GENRE_DEGREE: {
    toTarget(genre, degree) {
      return degree || genre;
    },
    toSource(genre) {
      return genre.match(/master|phd|doctoral/i) ? [undefined, genre] : [genre, undefined];
    }
  }
};
const MAPPINGS = [{
  source: '!',
  target: 'title-short',
  when: {
    source: {
      0: ['Ancient Text', 'Aggregated Database', 'Artwork', 'Audiovisual Material', 'Bill', 'Blog', 'Book', 'Book Section', 'Case', 'Catalog', 'Classical Work', 'Computer Program', 'Conference Proceedings', 'Dataset', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Chapter', 'Encyclopedia', 'Film or Broadcast', 'Generic', 'Grant', 'Hearing', 'Journal Article', 'Magazine Article', 'Manuscript', 'Map', 'Music', 'Newspaper Article', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Statute', 'Thesis', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'chapter', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'graphic', 'hearing', 'legal_case', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'patent', 'periodical', 'personal_communication', 'post', 'post-weblog', 'report', 'software', 'song', 'thesis', 'webpage']
    }
  }
}, {
  source: 'O',
  target: 'title-short',
  when: {
    source: {
      '!': false,
      0: ['Ancient Text', 'Book', 'Book Section', 'Catalog', 'Dataset', 'Dictionary', 'Encyclopedia', 'Pamphlet', 'Personal Communication', 'Serial', 'Standard', 'Statute', 'Unpublished Work']
    },
    target: {
      type: 'standard'
    }
  }
}, {
  source: '#',
  target: 'medium',
  when: {
    source: {
      0: ['Audiovisual Material', 'Online Multimedia']
    },
    target: false
  }
}, {
  source: '#',
  target: 'number',
  when: {
    source: {
      0: ['Grant']
    },
    target: false
  }
}, {
  source: '#',
  target: 'volume-title',
  when: {
    source: {
      0: ['Electronic Article']
    },
    target: false
  }
}, {
  source: '#',
  target: 'publisher',
  when: {
    source: {
      0: ['Statute']
    },
    target: {
      type: ['legislation']
    }
  }
}, {
  source: '#',
  target: 'references',
  when: {
    source: {
      0: ['Patent']
    },
    target: {
      type: ['patent']
    }
  }
}, {
  source: '9',
  target: 'medium',
  when: {
    source: {
      0: ['Film or Broadcast']
    },
    target: {
      type: ['broadcast', 'motion_picture']
    }
  }
}, {
  source: ['#', 'D'],
  target: 'issued',
  when: {
    source: {
      0: ['Electronic Book']
    },
    target: false
  },
  convert: CONVERTERS.DATE_YEAR
}, {
  source: '$',
  target: 'issue',
  when: {
    source: {
      0: ['Report']
    },
    target: {
      type: ['report']
    }
  }
}, {
  source: '$',
  target: 'status',
  when: {
    source: {
      0: ['Patent']
    },
    target: {
      type: ['patent']
    }
  }
}, {
  source: '$',
  target: 'volume',
  when: {
    source: {
      0: ['Statute']
    },
    target: {
      type: ['legislation']
    }
  }
}, {
  source: '&',
  target: 'available-date',
  when: {
    source: {
      0: ['Electronic Article']
    },
    target: false
  },
  convert: CONVERTERS.DATE
}, {
  source: '&',
  target: 'submitted',
  when: {
    source: {
      0: ['Case']
    },
    target: {
      type: ['legal_case']
    }
  },
  convert: CONVERTERS.DATE
}, {
  source: '&',
  target: 'page',
  when: {
    source: {
      0: ['Book']
    },
    target: {
      type: ['book']
    }
  }
}, {
  source: '&',
  target: 'section',
  when: {
    source: {
      0: ['Generic', 'Government Document', 'Legal Rule or Regulation', 'Music', 'Newspaper Article', 'Standard', 'Statute']
    },
    target: {
      type: ['article-newspaper', 'document', 'legislation', 'musical_score', 'regulation', 'song', 'standard']
    }
  }
}, {
  source: '&',
  target: 'page-first',
  when: {
    source: {
      0: ['Journal Article', 'Magazine Article', 'Manuscript']
    },
    target: {
      type: ['article-journal', 'article-magazine', 'manuscript']
    }
  }
}, {
  source: '&',
  target: 'version',
  when: {
    source: {
      0: ['Dictionary']
    },
    target: {
      type: ['entry-dictionary']
    }
  }
}, {
  source: '(',
  target: 'edition',
  when: {
    source: {
      0: ['Electronic Book'],
      7: false
    },
    target: false
  }
}, {
  source: '*',
  target: 'reviewed-title',
  when: {
    source: {
      0: ['Ancient Text', 'Book Section', 'Dictionary', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Generic', 'Grant', 'Journal Article', 'Magazine Article', 'Newspaper Article', 'Serial']
    },
    target: {
      type: ['article-journal', 'article-magazine', 'article-newspaper', 'chapter', 'document', 'entry-dictionary', 'entry-encyclopedia', 'periodical']
    }
  }
}, {
  source: '0',
  target: 'type',
  convert: CONVERTERS.TYPE
}, {
  source: '1',
  target: 'publisher-place',
  when: {
    source: {
      0: ['Conference Paper', 'Conference Proceedings']
    },
    target: {
      type: ['paper-conference']
    }
  }
}, {
  source: '1',
  target: 'scale',
  when: {
    source: {
      0: ['Map']
    },
    target: {
      type: ['map']
    }
  }
}, {
  source: '2',
  target: 'issue',
  when: {
    source: {
      0: ['Newspaper Article']
    },
    target: {
      type: ['article-newspaper']
    }
  }
}, {
  source: '2',
  target: 'PMCID',
  when: {
    source: {
      0: ['Journal Article']
    },
    target: {
      type: ['article-journal']
    }
  }
}, {
  source: '2',
  target: 'number',
  when: {
    source: {
      0: ['Serial']
    },
    target: {
      type: ['periodical']
    }
  }
}, {
  source: ['8', '2'],
  target: 'issued',
  when: {
    source: {
      0: ['Conference Proceedings']
    },
    target: false
  },
  convert: CONVERTERS.DATE_YEAR
}, {
  source: ['8', 'D'],
  target: 'issued',
  when: {
    source: {
      0: ['Patent']
    },
    target: {
      type: ['patent']
    }
  },
  convert: CONVERTERS.DATE_YEAR
}, {
  source: ['2', 'D'],
  target: 'issued',
  when: {
    source: {
      0: ['Patent'],
      8: false
    },
    target: false
  },
  convert: CONVERTERS.DATE_YEAR
}, {
  source: '3',
  target: 'genre',
  when: {
    source: {
      0: ['Dataset']
    },
    target: {
      type: ['dataset']
    }
  }
}, {
  source: '3',
  target: 'PMCID',
  when: {
    source: {
      0: ['Electronic Article']
    },
    target: false
  }
}, {
  source: '3',
  target: 'container-title',
  when: {
    source: {
      0: ['Conference Proceedings']
    },
    target: false
  }
}, {
  source: '3',
  target: 'dimensions',
  when: {
    source: {
      0: ['Artwork', 'Audiovisual Material', 'Map']
    },
    target: {
      type: ['graphic', 'map']
    }
  }
}, {
  source: 'A',
  target: 'author',
  when: {
    source: {
      0: ['Book', 'Book Section', 'Electronic Article', 'Electronic Book', 'Electronic Chapter'],
      4: false
    },
    target: {
      type: ['book', 'chapter'],
      'reviewed-author': false
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'A',
  target: 'reviewed-author',
  when: {
    source: {
      0: ['Book', 'Book Section', 'Electronic Article', 'Electronic Book', 'Electronic Chapter'],
      4: true
    },
    target: {
      type: ['book', 'chapter']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: '4',
  target: 'author',
  when: {
    source: {
      0: ['Book', 'Book Section', 'Electronic Article', 'Electronic Book', 'Electronic Chapter']
    },
    target: {
      type: ['book', 'chapter'],
      'reviewed-author': true
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: '6',
  target: 'number',
  when: {
    source: {
      0: ['Catalog', 'Dataset', 'Manuscript', 'Personal Communication']
    },
    target: {
      type: ['dataset', 'entry', 'manuscript', 'personal_communication']
    }
  }
}, {
  source: '6',
  target: 'number-of-volumes',
  when: {
    source: {
      0: ['Ancient Text', 'Book', 'Book Section', 'Classical Work', 'Conference Proceedings', 'Dictionary', 'Edited Book', 'Electronic Chapter', 'Encyclopedia', 'Generic', 'Hearing', 'Music', 'Serial']
    },
    target: {
      type: ['book', 'chapter', 'classic', 'document', 'entry-dictionary', 'entry-encyclopedia', 'hearing', 'musical_score', 'periodical', 'song']
    }
  }
}, {
  source: '6',
  target: 'container-title-short',
  when: {
    source: {
      0: ['Case']
    },
    target: {
      type: ['legal_case']
    }
  }
}, {
  source: '6',
  target: 'collection-number',
  when: {
    source: {
      0: ['Report']
    },
    target: {
      type: ['report']
    }
  }
}, {
  source: '6',
  target: 'version',
  when: {
    source: {
      0: ['Electronic Book']
    },
    target: false
  }
}, {
  source: '@',
  target: 'number',
  when: {
    source: {
      0: ['Standard']
    },
    target: {
      type: ['standard']
    }
  }
}, {
  source: '6',
  target: 'number',
  when: {
    source: {
      0: ['Statute']
    },
    target: {
      type: ['legislation']
    }
  }
}, {
  source: 'V',
  target: 'number',
  when: {
    source: {
      0: ['Legal Rule or Regulation']
    },
    target: {
      type: ['regulation']
    }
  }
}, {
  source: ']',
  target: 'number',
  when: {
    source: {
      0: ['Electronic Article']
    },
    target: false
  }
}, {
  source: '7',
  target: 'edition',
  when: {
    source: {
      0: ['Ancient Text', 'Artwork', 'Audiovisual Material', 'Blog', 'Book', 'Book Section', 'Catalog', 'Classical Work', 'Conference Proceedings', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Film or Broadcast', 'Generic', 'Government Document', 'Legal Rule or Regulation', 'Magazine Article', 'Map', 'Music', 'Newspaper Article', 'Pamphlet', 'Report', 'Serial', 'Web Page']
    },
    target: {
      type: ['article-magazine', 'article-newspaper', 'book', 'broadcast', 'chapter', 'classic', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'graphic', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'periodical', 'post', 'post-weblog', 'regulation', 'report', 'song', 'webpage']
    }
  }
}, {
  source: '7',
  target: 'available-date',
  when: {
    source: {
      0: ['Journal Article']
    },
    target: {
      type: ['article-journal']
    }
  },
  convert: CONVERTERS.DATE
}, {
  source: '7',
  target: 'version',
  when: {
    source: {
      0: ['Chart or Table', 'Computer Program', 'Dataset', 'Equation', 'Figure']
    },
    target: {
      type: ['dataset', 'figure', 'software']
    }
  }
}, {
  source: ['7', 'D'],
  target: 'issued',
  when: {
    source: {
      0: ['Aggregated Database', 'Online Database']
    },
    target: false
  },
  convert: CONVERTERS.DATE_YEAR
}, {
  source: '8',
  target: 'accessed',
  when: {
    source: {
      0: ['Aggregated Database', 'Case', 'Electronic Article', 'Electronic Book', 'Online Database', 'Online Multimedia']
    },
    target: {
      type: ['legal_case']
    }
  }
}, {
  source: ['8', 'D'],
  target: 'issued',
  when: {
    source: {
      0: ['Ancient Text', 'Artwork', 'Audiovisual Material', 'Bill', 'Book', 'Catalog', 'Chart or Table', 'Conference Paper', 'Edited Book', 'Electronic Chapter', 'Encyclopedia', 'Equation', 'Figure', 'Film or Broadcast', 'Generic', 'Hearing', 'Journal Article', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Map', 'Music', 'Newspaper Article', 'Pamphlet', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Statute', 'Thesis', 'Unpublished Work']
    },
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'document', 'entry', 'entry-encyclopedia', 'figure', 'graphic', 'hearing', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'paper-conference', 'periodical', 'personal_communication', 'regulation', 'report', 'song', 'standard', 'thesis']
    }
  },
  convert: CONVERTERS.DATE_YEAR
}, {
  source: '9',
  target: 'medium',
  when: {
    source: {
      0: ['Music']
    },
    target: {
      type: ['musical_score', 'song']
    }
  }
}, {
  source: '9',
  target: 'genre',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Artwork', 'Audiovisual Material', 'Blog', 'Book', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Conference Paper', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Equation', 'Figure', 'Generic', 'Grant', 'Journal Article', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Map', 'Newspaper Article', 'Online Database', 'Online Multimedia', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'book', 'classic', 'document', 'entry', 'entry-dictionary', 'figure', 'graphic', 'manuscript', 'map', 'pamphlet', 'paper-conference', 'patent', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'report', 'software', 'standard', 'webpage']
    }
  }
}, {
  source: ['9', 'V'],
  target: 'genre',
  when: {
    source: {
      0: ['Thesis']
    },
    target: {
      type: ['thesis']
    }
  },
  convert: CONVERTERS.GENRE_DEGREE
}, {
  source: '?',
  target: 'performer',
  when: {
    source: {
      0: ['Audiovisual Material', 'Film or Broadcast']
    },
    target: {
      type: ['broadcast', 'motion_picture']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: '?',
  target: 'producer',
  when: {
    source: {
      0: ['Music']
    },
    target: {
      type: ['musical_score', 'song']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: '?',
  target: 'translator',
  when: {
    source: {
      0: ['Ancient Text', 'Book', 'Book Section', 'Catalog', 'Classical Work', 'Dictionary', 'Edited Book', 'Electronic Chapter', 'Encyclopedia', 'Grant', 'Pamphlet']
    },
    target: {
      type: ['book', 'chapter', 'classic', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'pamphlet']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: '@',
  target: 'ISBN',
  when: {
    source: {
      0: ['Ancient Text', 'Audiovisual Material', 'Blog', 'Book', 'Book Section', 'Catalog', 'Computer Program', 'Conference Proceedings', 'Dictionary', 'Edited Book', 'Electronic Book', 'Encyclopedia', 'Hearing', 'Music', 'Pamphlet', 'Serial', 'Web Page']
    },
    target: {
      type: ['book', 'chapter', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'hearing', 'musical_score', 'pamphlet', 'periodical', 'post', 'post-weblog', 'software', 'song', 'webpage']
    }
  }
}, {
  source: '@',
  target: 'ISSN',
  when: {
    source: {
      0: ['Dataset', 'Electronic Article', 'Journal Article', 'Magazine Article', 'Newspaper Article']
    },
    target: {
      type: ['article-journal', 'article-magazine', 'article-newspaper', 'dataset']
    }
  }
}, {
  source: '@',
  target: ['ISBN', 'ISSN'],
  when: {
    source: {
      0: ['Aggregated Database', 'Classical Work', 'Electronic Chapter', 'Generic', 'Government Document', 'Legal Rule or Regulation', 'Map']
    },
    target: {
      type: ['classic', 'document', 'map', 'regulation']
    }
  },
  convert: CONVERTERS.ISBN_ISSN
}, {
  source: '@',
  target: 'number',
  when: {
    source: {
      0: ['Online Database', 'Patent']
    },
    target: {
      type: ['patent']
    }
  }
}, {
  source: '@',
  target: 'number',
  when: {
    source: {
      0: ['Report']
    },
    target: {
      type: ['report']
    }
  }
}, {
  source: 'A',
  target: 'author',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Artwork', 'Audiovisual Material', 'Blog', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Conference Paper', 'Conference Proceedings', 'Dataset', 'Dictionary', 'Encyclopedia', 'Equation', 'Figure', 'Generic', 'Government Document', 'Grant', 'Journal Article', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Map', 'Newspaper Article', 'Online Database', 'Online Multimedia', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Thesis', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'manuscript', 'map', 'pamphlet', 'paper-conference', 'patent', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'report', 'software', 'standard', 'thesis', 'webpage']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'A',
  target: 'composer',
  when: {
    source: {
      0: ['Music']
    },
    target: {
      type: ['musical_score', 'song']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'A',
  target: 'editor',
  when: {
    source: {
      0: ['Edited Book']
    },
    target: false
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'A',
  target: 'director',
  when: {
    source: {
      0: ['Film or Broadcast']
    },
    target: {
      type: ['broadcast', 'motion_picture']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'E',
  target: 'director',
  when: {
    source: {
      0: ['Film or Broadcast'],
      A: false
    },
    target: false
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'B',
  target: 'container-title',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Bill', 'Blog', 'Book Section', 'Case', 'Dictionary', 'Electronic Article', 'Electronic Chapter', 'Encyclopedia', 'Magazine Article', 'Manuscript', 'Music', 'Newspaper Article', 'Online Database', 'Statute']
    },
    target: {
      type: ['article-magazine', 'article-newspaper', 'bill', 'chapter', 'entry-dictionary', 'entry-encyclopedia', 'legal_case', 'legislation', 'manuscript', 'musical_score', 'post', 'post-weblog', 'song']
    }
  }
}, {
  source: 'B',
  target: 'committee',
  when: {
    source: {
      0: ['Hearing']
    },
    target: {
      type: ['hearing']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'B',
  target: 'event-title',
  when: {
    source: {
      0: ['Conference Paper', 'Conference Proceedings']
    },
    target: {
      type: ['paper-conference']
    }
  }
}, {
  source: 'B',
  target: 'collection-title',
  when: {
    source: {
      0: ['Audiovisual Material', 'Book', 'Catalog', 'Classical Work', 'Computer Program', 'Edited Book', 'Film or Broadcast', 'Map', 'Online Multimedia', 'Report', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'book', 'broadcast', 'classic', 'entry', 'map', 'motion_picture', 'report', 'software', 'webpage']
    }
  }
}, {
  source: 'C',
  target: 'event-place',
  when: {
    source: {
      0: ['Conference Paper', 'Conference Proceedings']
    },
    target: {
      type: ['paper-conference']
    }
  }
}, {
  source: 'C',
  target: 'publisher-place',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Artwork', 'Audiovisual Material', 'Blog', 'Book', 'Book Section', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Dataset', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Equation', 'Figure', 'Film or Broadcast', 'Generic', 'Government Document', 'Hearing', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Map', 'Music', 'Newspaper Article', 'Online Database', 'Pamphlet', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Thesis', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'article-magazine', 'article-newspaper', 'book', 'broadcast', 'chapter', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'hearing', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'report', 'software', 'song', 'standard', 'thesis', 'webpage']
    }
  }
}, {
  source: 'D',
  target: 'issued',
  when: {
    source: {
      0: ['Blog', 'Book Section', 'Classical Work', 'Computer Program', 'Dataset', 'Dictionary', 'Electronic Article', 'Government Document', 'Grant', 'Online Multimedia', 'Web Page']
    },
    target: {
      type: ['chapter', 'classic', 'dataset', 'entry-dictionary', 'post', 'post-weblog', 'software', 'webpage']
    }
  },
  convert: CONVERTERS.YEAR
}, {
  source: 'D',
  target: 'event-date',
  when: {
    source: {
      0: ['Conference Proceedings']
    },
    target: false
  },
  convert: CONVERTERS.DATE
}, {
  source: 'E',
  target: 'editor',
  when: {
    source: {
      0: ['Ancient Text', 'Blog', 'Book Section', 'Conference Paper', 'Conference Proceedings', 'Dictionary', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Music', 'Serial']
    },
    target: {
      type: ['chapter', 'entry-dictionary', 'entry-encyclopedia', 'musical_score', 'paper-conference', 'periodical', 'post', 'post-weblog', 'song']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'E',
  target: 'collection-editor',
  when: {
    source: {
      0: ['Audiovisual Material', 'Book', 'Classical Work', 'Computer Program', 'Edited Book', 'Map', 'Online Multimedia', 'Report', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'book', 'classic', 'map', 'report', 'software', 'webpage']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'E',
  target: 'recipient',
  when: {
    source: {
      0: ['Personal Communication']
    },
    target: {
      type: ['personal_communication']
    }
  }
}, {
  source: 'F',
  target: 'citation-key',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Artwork', 'Audiovisual Material', 'Bill', 'Blog', 'Book', 'Book Section', 'Case', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Conference Paper', 'Conference Proceedings', 'Dataset', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Equation', 'Figure', 'Film or Broadcast', 'Generic', 'Government Document', 'Grant', 'Hearing', 'Journal Article', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Map', 'Music', 'Newspaper Article', 'Online Database', 'Online Multimedia', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Statute', 'Thesis', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'chapter', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'hearing', 'legal_case', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'paper-conference', 'patent', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'report', 'software', 'song', 'standard', 'thesis', 'webpage']
    }
  }
}, {
  source: 'G',
  target: 'language',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Artwork', 'Audiovisual Material', 'Bill', 'Blog', 'Book', 'Book Section', 'Case', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Conference Paper', 'Conference Proceedings', 'Dataset', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Equation', 'Figure', 'Film or Broadcast', 'Generic', 'Government Document', 'Grant', 'Hearing', 'Journal Article', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Map', 'Music', 'Newspaper Article', 'Online Database', 'Online Multimedia', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Statute', 'Thesis', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'chapter', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'hearing', 'legal_case', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'paper-conference', 'patent', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'report', 'software', 'song', 'standard', 'thesis', 'webpage']
    }
  }
}, {
  source: 'I',
  target: 'publisher',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Artwork', 'Audiovisual Material', 'Blog', 'Book', 'Book Section', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Conference Paper', 'Conference Proceedings', 'Dataset', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Equation', 'Figure', 'Film or Broadcast', 'Generic', 'Government Document', 'Hearing', 'Legal Rule or Regulation', 'Magazine Article', 'Map', 'Music', 'Newspaper Article', 'Online Database', 'Online Multimedia', 'Pamphlet', 'Personal Communication', 'Serial', 'Standard', 'Thesis', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'article-magazine', 'article-newspaper', 'book', 'broadcast', 'chapter', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'hearing', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'paper-conference', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'software', 'song', 'standard', 'thesis', 'webpage']
    }
  }
}, {
  source: 'Y',
  target: 'publisher',
  when: {
    source: {
      0: ['Report']
    },
    target: {
      type: ['report']
    }
  }
}, {
  source: 'J',
  target: 'container-title',
  when: {
    source: {
      0: ['Journal Article']
    },
    target: {
      type: ['article-journal']
    }
  }
}, {
  source: 'K',
  target: 'keyword',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Artwork', 'Audiovisual Material', 'Bill', 'Blog', 'Book', 'Book Section', 'Case', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Conference Paper', 'Conference Proceedings', 'Dataset', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Equation', 'Figure', 'Film or Broadcast', 'Generic', 'Government Document', 'Grant', 'Hearing', 'Journal Article', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Map', 'Music', 'Newspaper Article', 'Online Database', 'Online Multimedia', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Statute', 'Thesis', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'chapter', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'hearing', 'legal_case', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'paper-conference', 'patent', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'report', 'software', 'song', 'standard', 'thesis', 'webpage']
    }
  }
}, {
  source: 'L',
  target: 'call-number',
  when: {
    source: {
      0: ['Ancient Text', 'Artwork', 'Audiovisual Material', 'Bill', 'Blog', 'Book', 'Book Section', 'Case', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Conference Proceedings', 'Dataset', 'Dictionary', 'Edited Book', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Equation', 'Figure', 'Film or Broadcast', 'Generic', 'Grant', 'Hearing', 'Journal Article', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Map', 'Music', 'Newspaper Article', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Statute', 'Thesis', 'Web Page']
    },
    target: {
      type: ['article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'chapter', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'hearing', 'legal_case', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'patent', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'report', 'software', 'song', 'standard', 'thesis', 'webpage']
    }
  }
}, {
  source: 'N',
  target: 'number',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Audiovisual Material', 'Bill', 'Chart or Table', 'Dictionary', 'Equation', 'Figure', 'Generic', 'Government Document', 'Hearing', 'Thesis', 'Unpublished Work']
    },
    target: {
      type: ['article', 'bill', 'document', 'entry-dictionary', 'figure', 'hearing', 'thesis']
    }
  }
}, {
  source: 'N',
  target: 'issue',
  when: {
    source: {
      0: ['Conference Paper', 'Conference Proceedings', 'Electronic Article', 'Journal Article', 'Magazine Article']
    },
    target: {
      type: ['article-journal', 'article-magazine', 'paper-conference']
    }
  }
}, {
  source: 'N',
  target: 'collection-number',
  when: {
    source: {
      0: ['Book', 'Book Section', 'Catalog', 'Classical Work', 'Edited Book', 'Electronic Chapter', 'Pamphlet', 'Serial']
    },
    target: {
      type: ['book', 'chapter', 'classic', 'entry', 'pamphlet', 'periodical']
    }
  }
}, {
  source: 'N',
  target: 'page-first',
  when: {
    source: {
      0: ['Legal Rule or Regulation', 'Newspaper Article', 'Standard']
    },
    target: {
      type: ['article-newspaper', 'regulation', 'standard']
    }
  }
}, {
  source: 'N',
  target: 'status',
  when: {
    source: {
      0: ['Grant']
    },
    target: false
  }
}, {
  source: 'N',
  target: 'accessed',
  when: {
    source: {
      0: ['Web Page']
    },
    target: {
      type: ['webpage']
    }
  },
  convert: CONVERTERS.DATE
}, {
  source: 'P',
  target: 'page',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Bill', 'Book Section', 'Catalog', 'Conference Paper', 'Conference Proceedings', 'Dictionary', 'Electronic Article', 'Encyclopedia', 'Generic', 'Government Document', 'Grant', 'Hearing', 'Journal Article', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Music', 'Newspaper Article', 'Online Database', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Statute', 'Unpublished Work']
    },
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'bill', 'chapter', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'hearing', 'legislation', 'manuscript', 'musical_score', 'pamphlet', 'paper-conference', 'patent', 'periodical', 'personal_communication', 'regulation', 'report', 'song', 'standard']
    }
  }
}, {
  source: 'P',
  target: 'page-first',
  when: {
    source: {
      0: ['Case']
    },
    target: {
      type: ['legal_case']
    }
  }
}, {
  source: 'P',
  target: 'number-of-pages',
  when: {
    source: {
      0: ['Book', 'Classical Work', 'Edited Book', 'Electronic Book', 'Electronic Chapter', 'Thesis']
    },
    target: {
      type: ['book', 'classic', 'thesis']
    }
  }
}, {
  source: 'P',
  target: 'dimensions',
  when: {
    source: {
      0: ['Film or Broadcast']
    },
    target: {
      type: ['broadcast', 'motion_picture']
    }
  }
}, {
  source: 'Q',
  target: 'title',
  when: {
    target: {
      'original-title': true
    }
  }
}, {
  source: 'T',
  target: 'original-title',
  when: {
    source: {
      Q: true
    }
  }
}, {
  source: 'T',
  target: 'title',
  when: {
    source: {
      Q: false
    },
    target: {
      'original-title': false
    }
  }
}, {
  source: '1',
  target: 'title',
  when: {
    source: {
      0: ['Book Section', 'Dictionary', 'Electronic Chapter', 'Encyclopedia', 'Serial'],
      T: false
    },
    target: false
  }
}, {
  source: '&',
  target: 'title',
  when: {
    source: {
      0: ['Book Section', 'Serial'],
      1: false,
      T: false
    },
    target: false
  }
}, {
  source: 'R',
  target: 'DOI',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Artwork', 'Audiovisual Material', 'Bill', 'Blog', 'Book', 'Book Section', 'Case', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Conference Paper', 'Conference Proceedings', 'Dataset', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Equation', 'Figure', 'Film or Broadcast', 'Generic', 'Government Document', 'Grant', 'Hearing', 'Journal Article', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Map', 'Music', 'Newspaper Article', 'Online Database', 'Online Multimedia', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Statute', 'Thesis', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'chapter', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'hearing', 'legal_case', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'paper-conference', 'patent', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'report', 'software', 'song', 'standard', 'thesis', 'webpage']
    }
  }
}, {
  source: 'S',
  target: 'collection-title',
  when: {
    source: {
      0: ['Book Section', 'Conference Proceedings', 'Dataset', 'Electronic Book', 'Electronic Chapter', 'Government Document', 'Music', 'Serial']
    },
    target: {
      type: ['chapter', 'dataset', 'musical_score', 'periodical', 'song']
    }
  }
}, {
  source: 'U',
  target: 'URL',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Artwork', 'Audiovisual Material', 'Bill', 'Blog', 'Book', 'Book Section', 'Case', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Conference Paper', 'Conference Proceedings', 'Dataset', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Equation', 'Figure', 'Film or Broadcast', 'Generic', 'Government Document', 'Grant', 'Hearing', 'Journal Article', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Map', 'Music', 'Newspaper Article', 'Online Database', 'Online Multimedia', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Statute', 'Thesis', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'chapter', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'hearing', 'legal_case', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'paper-conference', 'patent', 'periodical', 'personal_communication', 'post', 'post-weblog', 'regulation', 'report', 'software', 'song', 'standard', 'thesis', 'webpage']
    }
  }
}, {
  source: 'V',
  target: 'issue',
  when: {
    source: {
      0: ['Statute']
    },
    target: {
      type: ['legislation']
    }
  }
}, {
  source: 'V',
  target: 'volume',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Audiovisual Material', 'Bill', 'Book', 'Book Section', 'Case', 'Catalog', 'Classical Work', 'Conference Paper', 'Conference Proceedings', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Generic', 'Government Document', 'Journal Article', 'Magazine Article', 'Manuscript', 'Music', 'Newspaper Article', 'Online Database', 'Report', 'Serial']
    },
    target: {
      type: ['article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'chapter', 'classic', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'legal_case', 'manuscript', 'musical_score', 'paper-conference', 'periodical', 'report', 'song']
    }
  }
}, {
  source: 'V',
  target: 'edition',
  when: {
    source: {
      0: ['Computer Program']
    },
    target: {
      type: ['software']
    }
  }
}, {
  source: 'V',
  target: 'dimensions',
  when: {
    source: {
      0: ['Chart or Table', 'Equation', 'Figure']
    },
    target: {
      type: ['figure']
    }
  }
}, {
  source: 'V',
  target: 'number',
  when: {
    source: {
      0: ['Pamphlet']
    },
    target: {
      type: ['pamphlet']
    }
  }
}, {
  source: 'V',
  target: 'version',
  when: {
    source: {
      0: ['Patent']
    },
    target: {
      type: ['patent']
    }
  }
}, {
  source: ['[', 'V'],
  target: 'accessed',
  when: {
    source: {
      0: ['Blog']
    },
    target: {
      type: ['post', 'post-weblog']
    }
  },
  convert: CONVERTERS.DATE_YEAR
}, {
  source: 'X',
  target: 'abstract'
}, {
  source: '7',
  target: 'abstract',
  when: {
    source: {
      0: ['Manuscript', 'Personal Communication'],
      X: false
    },
    target: false
  }
}, {
  source: 'P',
  target: 'abstract',
  when: {
    source: {
      0: ['Artwork', 'Blog', 'Chart or Table', 'Computer Program', 'Equation', 'Figure', 'Map', 'Web Page'],
      X: false
    },
    target: false
  }
}, {
  source: 'Y',
  target: 'editor',
  when: {
    source: {
      0: ['Book']
    },
    target: {
      type: ['book']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'Y',
  target: 'collection-editor',
  when: {
    source: {
      0: ['Book Section', 'Conference Proceedings', 'Electronic Book', 'Electronic Chapter', 'Music', 'Serial']
    },
    target: {
      type: ['chapter', 'musical_score', 'periodical', 'song']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'Y',
  target: 'illustrator',
  when: {
    source: {
      0: ['Blog']
    },
    target: {
      type: ['post', 'post-weblog']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'Y',
  target: 'producer',
  when: {
    source: {
      0: ['Film or Broadcast']
    },
    target: {
      type: ['broadcast', 'motion_picture']
    }
  },
  convert: CONVERTERS.NAMES
}, {
  source: 'Z',
  target: 'note',
  when: {
    source: {
      0: ['Aggregated Database', 'Ancient Text', 'Artwork', 'Audiovisual Material', 'Bill', 'Book', 'Book Section', 'Case', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Conference Paper', 'Conference Proceedings', 'Dataset', 'Dictionary', 'Edited Book', 'Electronic Article', 'Electronic Book', 'Electronic Chapter', 'Encyclopedia', 'Equation', 'Figure', 'Film or Broadcast', 'Generic', 'Government Document', 'Grant', 'Hearing', 'Magazine Article', 'Manuscript', 'Map', 'Music', 'Newspaper Article', 'Online Database', 'Online Multimedia', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Statute', 'Thesis', 'Unpublished Work', 'Web Page']
    },
    target: {
      type: ['article', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'chapter', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'hearing', 'legal_case', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'paper-conference', 'patent', 'periodical', 'personal_communication', 'report', 'software', 'song', 'standard', 'thesis', 'webpage']
    }
  }
}, {
  source: '[',
  target: 'accessed',
  when: {
    source: {
      0: ['Ancient Text', 'Artwork', 'Audiovisual Material', 'Bill', 'Book', 'Book Section', 'Catalog', 'Chart or Table', 'Classical Work', 'Computer Program', 'Conference Paper', 'Conference Proceedings', 'Dataset', 'Dictionary', 'Edited Book', 'Electronic Chapter', 'Encyclopedia', 'Equation', 'Figure', 'Film or Broadcast', 'Generic', 'Government Document', 'Grant', 'Hearing', 'Journal Article', 'Legal Rule or Regulation', 'Magazine Article', 'Manuscript', 'Map', 'Music', 'Newspaper Article', 'Pamphlet', 'Patent', 'Personal Communication', 'Report', 'Serial', 'Standard', 'Statute', 'Thesis', 'Unpublished Work']
    },
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper', 'bill', 'book', 'broadcast', 'chapter', 'classic', 'dataset', 'document', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'hearing', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'paper-conference', 'patent', 'periodical', 'personal_communication', 'regulation', 'report', 'software', 'song', 'standard', 'thesis']
    }
  },
  convert: CONVERTERS.DATE
}, {
  source: ']',
  target: 'number',
  when: {
    source: {
      0: ['Journal Article']
    },
    target: {
      type: ['article-journal']
    }
  }
}, {
  source: ']',
  target: 'PMCID',
  when: {
    source: {
      0: ['Electronic Book', 'Electronic Chapter']
    },
    target: false
  }
}];
const translator = exports.translator = new _core.util.Translator(MAPPINGS);
},{"@citation-js/core":"citation-js","@citation-js/date":43,"@citation-js/name":46}],82:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _mapping = require("./mapping");
function formatRecord({
  fields
}, lineEnding) {
  let record = '';
  for (const field in fields) {
    const values = [].concat(fields[field]);
    for (const value of values) {
      record += '%' + field + ' ' + value + lineEnding;
    }
  }
  return record;
}
function translateRecord(record) {
  const fields = _mapping.translator.convertToSource(record);
  for (const field in fields) {
    if (Array.isArray(fields[field]) && fields[field].length === 1) {
      fields[field] = fields[field][0];
    }
  }
  return {
    scheme: 'enw',
    fields
  };
}
var _default = exports.default = {
  enw(csl, options = {}) {
    const {
      format = 'text',
      lineEnding = '\n'
    } = options;
    const records = csl.map(translateRecord);
    if (format === 'object') {
      return records;
    }
    return records.map(record => formatRecord(record, lineEnding)).join(lineEnding);
  }
};
},{"./mapping":81}],83:[function(require,module,exports){
"use strict";

var _core = require("@citation-js/core");

var _date = require("@citation-js/date");

var _name = require("@citation-js/name");

let API_TOKEN = null;
const propMaps = {
  name: 'title-short',
  full_name: 'title',
  description: 'abstract',
  html_url: 'URL',
  pushed_at: 'issued',
  contributors_url: 'author'
};

async function parseValue(prop, value) {
  switch (prop) {
    case 'contributors_url':
      {
        let contributors = await api(value);
        contributors = await Promise.all(contributors.map(({
          url
        }) => api(url)));
        return contributors.map(({
          name,
          login
        }) => name ? (0, _name.parse)(name) : {
          literal: login
        });
      }

    case 'pushed_at':
      return (0, _date.parse)(value);

    default:
      return value;
  }
}

const config = {
  setApiToken(token) {
    API_TOKEN = token;
  }

};

async function json(input) {
  const output = {
    type: 'software'
  };
  const tags = input.tags_url ? await api(input.tags_url) : [];

  for (const prop in propMaps) {
    if (prop in input) {
      output[propMaps[prop]] = await parseValue(prop, input[prop]);
    }
  }

  if (tags) {
    output.version = tags[0].name;
    output.custom = {
      versions: tags.map(tag => ({
        version: tag.name
      }))
    };
  }

  return output;
}

async function api(input) {
  const headers = {
    Accept: 'application/vnd.github.v3+json'
  };

  if (API_TOKEN) {
    headers.Authorization = `token ${API_TOKEN}`;
  }

  const output = await _core.util.fetchFileAsync(input, {
    headers
  });
  return JSON.parse(output);
}

function url(input) {
  const [, user, repo] = input.match(/^https?:\/\/github.com\/([^/]+)\/([^/]+)/);
  return `https://api.github.com/repos/${user}/${repo}`;
}

_core.plugins.add('@github', {
  config: config,
  input: {
    '@github/url': {
      parseType: {
        dataType: 'String',
        predicate: /^https?:\/\/github\.com\/[^/]+\//,
        extends: '@else/url'
      },
      parse: url
    },
    '@github/api': {
      parseType: {
        dataType: 'String',
        predicate: /^https?:\/\/api\.github\.com\/repos\/[^/]+\//,
        extends: '@else/url'
      },
      parseAsync: api
    },
    '@github/object': {
      parseType: {
        dataType: 'SimpleObject',
        propertyConstraint: {
          props: 'url',

          value(url) {
            return /^https?:\/\/api\.github\.com\/repos\/[^/]+\//.test(url);
          }

        }
      },
      parseAsync: json
    }
  }
});
},{"@citation-js/core":"citation-js","@citation-js/date":43,"@citation-js/name":46}],84:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GOOGLE_BOOKS_API_VERSION = void 0;
exports.format = format;
exports.parse = parse;
var _core = require("@citation-js/core");
var name = _interopRequireWildcard(require("@citation-js/name"));
var date = _interopRequireWildcard(require("@citation-js/date"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const GOOGLE_PROPS = [{
  source: 'printType',
  target: 'type',
  convert: {
    toTarget(type) {
      return {
        BOOK: 'book',
        MAGAZINE: 'article-magazine'
      }[type];
    },
    toSource(type) {
      if (type.slice(0, 7) === 'article') {
        return 'MAGAZINE';
      } else {
        return 'BOOK';
      }
    }
  }
}, {
  source: 'authors',
  target: 'author',
  convert: {
    toTarget(authors) {
      return authors.map(name.parse);
    },
    toSource(authors) {
      return authors.map(name.format);
    }
  }
}, {
  source: 'canonicalVolumeLink',
  target: 'URL'
}, {
  source: 'categories',
  target: 'keyword',
  convert: {
    toTarget(array) {
      return array.join(',');
    },
    toSource(list) {
      return list.split(',');
    }
  }
}, {
  source: 'description',
  target: 'abstract'
}, {
  source: 'dimensions',
  target: 'dimensions',
  convert: {
    toTarget({
      height,
      width,
      thickness
    }) {
      return `${height} x ${width} x ${thickness} cm`;
    },
    toSource(list) {}
  }
}, {
  source: 'industryIdentifiers',
  target: ['ISBN', 'ISSN', 'DOI', 'PMID', 'PMCID'],
  convert: {
    toTarget(ids) {
      return ['ISBN_13', 'ISSN'].map(id => (ids.find(({
        type
      }) => type === id) || {}).identifier);
    },
    toSource(isbn, issn, ...other) {
      return [isbn && {
        type: isbn.length === 13 ? 'ISBN_13' : 'ISBN_10',
        identifier: isbn
      }, issn && {
        type: 'ISSN',
        identifier: issn
      }, ...other.map(identifier => ({
        type: 'OTHER',
        identifier
      }))].filter(Boolean);
    }
  }
}, 'language', {
  source: 'pageCount',
  target: 'number-of-pages'
}, 'publisher', 'title', {
  source: 'publishedDate',
  target: 'issued',
  convert: {
    toTarget: date.parse,
    toSource: date.format
  }
}];
const translator = new _core.util.Translator(GOOGLE_PROPS);
function parse(volume) {
  if (volume.volumeInfo.language === 'un') {
    delete volume.volumeInfo.language;
  }
  if (volume.volumeInfo.pageCount === 0) {
    delete volume.volumeInfo.pageCount;
  }
  return translator.convertToTarget(volume.volumeInfo);
}
function format(records) {
  return {
    kind: 'books#volumes',
    totalItems: records.length,
    items: records.map(translator.convertToSource)
  };
}
const GOOGLE_BOOKS_API_VERSION = 'v1';
exports.GOOGLE_BOOKS_API_VERSION = GOOGLE_BOOKS_API_VERSION;
},{"@citation-js/core":"citation-js","@citation-js/date":43,"@citation-js/name":46}],85:[function(require,module,exports){
"use strict";

var _core = require("@citation-js/core");
var _input = require("./input");
_core.plugins.add(_input.ref, {
  input: _input.formats
});
},{"./input":86,"@citation-js/core":"citation-js"}],86:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ref = exports.formats = void 0;
var _core = require("@citation-js/core");
var google = _interopRequireWildcard(require("./google-books.js"));
var ol = _interopRequireWildcard(require("./open-library.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function getUrls(isbn) {
  isbn = isbn.replace(/-/g, '');
  return [[`https://www.googleapis.com/books/v1/volumes?q=isbn:${isbn}`, json => json.totalItems], [`https://openlibrary.org/api/books?bibkeys=ISBN:${isbn}&format=json&jscmd=data`, json => Object.keys(json).length]];
}
function getResponse(isbn) {
  var _iterator = _createForOfIteratorHelper(getUrls(isbn)),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      const _step$value = _slicedToArray(_step.value, 2),
        url = _step$value[0],
        check = _step$value[1];
      const json = JSON.parse(_core.util.fetchFile(url));
      if (check(json)) {
        return json;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  throw new Error(`Cannot find resource for ISBN: ${isbn}`);
}
function getResponseAsync(_x2) {
  return _getResponseAsync.apply(this, arguments);
}
function _getResponseAsync() {
  _getResponseAsync = _asyncToGenerator(function* (isbn) {
    var _iterator2 = _createForOfIteratorHelper(getUrls(isbn)),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        const _step2$value = _slicedToArray(_step2.value, 2),
          url = _step2$value[0],
          check = _step2$value[1];
        const json = JSON.parse(yield _core.util.fetchFileAsync(url));
        if (check(json)) {
          return json;
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    throw new Error(`Cannot find resource for ISBN: ${isbn}`);
  });
  return _getResponseAsync.apply(this, arguments);
}
const ref = '@isbn';
exports.ref = ref;
const formats = {
  '@isbn/isbn-10': {
    parse: getResponse,
    parseAsync: getResponseAsync,
    parseType: {
      dataType: 'String',
      predicate(id) {
        return /^\d{10}$/.test(id.replace(/-/g, ''));
      }
    }
  },
  '@isbn/isbn-13': {
    parse: getResponse,
    parseAsync: getResponseAsync,
    parseType: {
      dataType: 'String',
      predicate(id) {
        return /^(978|979)\d{10}$/.test(id.replace(/-/g, ''));
      }
    }
  },
  '@isbn/isbn-a': {
    parse: doi => doi.slice(3).replace(/\D/g, ''),
    parseType: {
      dataType: 'String',
      predicate: /^10\.(978|979)\.\d{2,8}\/\d{2,7}$/
    },
    outputs: '@isbn/isbn-13'
  },
  '@isbn/number': {
    parse: number => number.toString(),
    parseType: {
      dataType: 'Primitive',
      predicate: number => [10, 13].includes(number.toString().length)
    },
    outputs: '@isbn/isbn-13'
  },
  '@isbn/vnd.google.books.volumes+object': {
    parse(record) {
      return record.items;
    },
    parseType: {
      dataType: 'SimpleObject',
      propertyConstraint: [{
        props: 'kind',
        value: kind => kind === 'books#volumes'
      }, {
        props: ['totalItems', 'items']
      }]
    }
  },
  '@isbn/vnd.google.books.volume+object': {
    parse: google.parse,
    parseType: {
      dataType: 'SimpleObject',
      propertyConstraint: [{
        props: 'kind',
        value: kind => kind === 'books#volume'
      }, {
        props: ['volumeInfo', 'id']
      }]
    },
    outputs: '@csl/object'
  },
  '@isbn/vnd.archive.openlibrary.books+object': {
    parse: ol.parse,
    parseType: {
      dataType: 'SimpleObject',
      predicate(response) {
        return Object.keys(response).every(key => key.slice(0, 5) === 'ISBN:');
      }
    },
    outputs: '@csl/list+object'
  }
};
exports.formats = formats;
},{"./google-books.js":84,"./open-library.js":87,"@citation-js/core":"citation-js"}],87:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.format = format;
exports.parse = parse;
var _core = require("@citation-js/core");
var name = _interopRequireWildcard(require("@citation-js/name"));
var date = _interopRequireWildcard(require("@citation-js/date"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
const CONVERT_ARRAY_OF_OBJECTS = {
  toTarget: ([{
    name
  }]) => name,
  toSource: name => [{
    name
  }]
};
const OL_PROPS = [{
  target: 'type',
  convert: {
    toTarget: () => 'book'
  }
}, {
  source: 'authors',
  target: 'author',
  convert: {
    toTarget(authors) {
      return authors.map(({
        name: author,
        url
      }) => {
        author = name.parse(author);
        author._url = url;
        return author;
      });
    },
    toSource: authors => authors.map(author => ({
      name: name.format(author)
    }))
  }
}, {
  source: 'identifiers',
  target: ['ISBN', 'ISSN', 'DOI', 'PMID', 'PMCID'],
  convert: {
    toTarget: identifiers => identifiers.isbn_13 || identifiers.isbn_10,
    toSource(...identifiers) {
      const ids = [identifiers[0] && `isbn_${identifiers[0].length}`, 'issn', 'doi', 'pmid', 'pmcid'];
      return identifiers.reduce((acc, id, i) => {
        if (id) {
          acc[ids[i]] = id;
        }
        return acc;
      }, {});
    }
  }
}, {
  source: 'number_of_pages',
  target: 'number-of-pages'
}, {
  source: 'publishers',
  target: 'publisher',
  convert: CONVERT_ARRAY_OF_OBJECTS
}, {
  source: 'publish_date',
  target: 'issued',
  convert: {
    toTarget: date.parse,
    toSource: date.format
  }
}, {
  source: 'publish_places',
  target: 'publisher-place',
  convert: CONVERT_ARRAY_OF_OBJECTS
}, {
  source: ['subjects', 'subject_places', 'subject_people', 'subject_times'],
  target: 'keyword',
  convert: {
    toTarget: (...subjects) => [].concat(...subjects).filter(Boolean).map(({
      name
    }) => name).join(),
    toSource: keywords => [keywords.split(',').map(name => ({
      name,
      url: 'https://openlibrary.org/subjects/' + name.toLowerCase().replace(/\W+/g, '_')
    }))]
  }
}, 'title', {
  source: 'url',
  target: 'URL'
}];
const translator = new _core.util.Translator(OL_PROPS);
function parse(response) {
  return Object.keys(response).map(id => {
    return translator.convertToTarget(response[id]);
  });
}
function format(records) {
  const output = {};
  var _iterator = _createForOfIteratorHelper(records),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      const record = _step.value;
      if (!record.ISBN) {
        output[`ISBN:${record.ISBN}`] = translator.convertToSource(record);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return output;
}
},{"@citation-js/core":"citation-js","@citation-js/date":43,"@citation-js/name":46}],88:[function(require,module,exports){
"use strict";

var _core = require("@citation-js/core");

var _date = require("@citation-js/date");

var _name = require("@citation-js/name");

const propMaps = {
  name: 'title',
  description: 'abstract',
  homepage: 'URL',
  author: 'author'
};

async function parseValue(prop, value) {
  switch (prop) {
    case 'author':
      return [(0, _name.parse)(value.name)];

    default:
      return value;
  }
}

async function json(input) {
  const output = {
    type: 'software',
    custom: {
      versions: []
    }
  };

  for (const prop in propMaps) {
    if (prop in input) {
      output[propMaps[prop]] = await parseValue(prop, input[prop]);
    }

    const {
      latest
    } = input['dist-tags'];
    output.version = latest;
    output.issued = (0, _date.parse)(input.time[latest]);
  }

  for (const version in input.versions) {
    output.custom.versions.push({
      version,
      issued: (0, _date.parse)(input.time[version])
    });
  }

  return output;
}

async function api(input) {
  const output = await _core.util.fetchFileAsync(input);
  return JSON.parse(output);
}

function url(input) {
  const [, pkg] = input.match(/((@[^/]+\/)?[^/]+)$/);
  return `https://registry.npmjs.org/${pkg}`;
}

_core.plugins.add('@npm', {
  input: {
    '@npm/url': {
      parseType: {
        dataType: 'String',
        predicate: /^https?:\/\/(www\.)?(npmjs\.com|npmjs\.org|npm\.im)\/(package)?/,
        extends: '@else/url'
      },
      parse: url
    },
    '@npm/api': {
      parseType: {
        dataType: 'String',
        predicate: /^https?:\/\/registry\.npmjs\.org\//,
        extends: '@else/url'
      },
      parseAsync: api
    },
    '@npm/object': {
      parseType: {
        dataType: 'SimpleObject',
        propertyConstraint: {
          props: 'versions',

          value(versions) {
            for (const version in versions) {
              if ('_npmUser' in versions[version] || '_npmVersion' in versions[version]) {
                return true;
              }
            }

            return false;
          }

        }
      },
      parseAsync: json
    }
  }
});
},{"@citation-js/core":"citation-js","@citation-js/date":43,"@citation-js/name":46}],89:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./input":90,"@citation-js/core":"citation-js","dup":85}],90:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ref = exports.formats = void 0;
var _core = require("@citation-js/core");
const ref = '@pubmed';
exports.ref = ref;
const formats = {
  '@pubmed/id': {
    parseAsync(id) {
      id = id.replace('pmid:', '');
      const url = `https://api.ncbi.nlm.nih.gov/lit/ctxp/v1/pubmed/?format=csl&id=${id}`;
      const headers = {};
      return _core.util.fetchFileAsync(url, {
        headers
      });
    },
    parseType: {
      dataType: 'String',
      predicate: /^pmid:\d+$/
    }
  },
  '@pubmed/pmcid': {
    parseAsync(id) {
      id = id.replace('PMC', '');
      const url = `https://api.ncbi.nlm.nih.gov/lit/ctxp/v1/pmc/?format=csl&id=${id}`;
      const headers = {};
      return _core.util.fetchFileAsync(url, {
        headers
      });
    },
    parseType: {
      dataType: 'String',
      predicate: /^PMC\d+$/
    }
  }
};
exports.formats = formats;
},{"@citation-js/core":"citation-js"}],91:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fillCaches = fillCaches;
exports.getOrcid = getOrcid;
var _core = require("@citation-js/core");
var _wikidataSdk = _interopRequireDefault(require("wikidata-sdk"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const QUERY_BUILDERS = {
  issn: {
    value: '?value wdt:P236 ?key',
    key: items => items.map(item => item.ISSN)
  },
  orcid: {
    value: '?value wdt:P496 ?key',
    key: items => items.flatMap(item => (item.author || []).map(getOrcid))
  },
  language: {
    value: '?value wdt:P218 ?key',
    key: items => items.map(item => item.language)
  },
  languageWiki: {
    value: '?value ^wdt:P424/wdt:P218 ?key',
    key: items => items.map(item => item.language)
  }
};
function unique(array) {
  return array.filter((value, index, array) => array.indexOf(value) === index);
}
function buildQuery(type, items) {
  const {
    key,
    value
  } = QUERY_BUILDERS[type];
  const keys = '"' + unique(key(items)).join('" "') + '"';
  return `{ VALUES ?key { ${keys} } . ${value} . BIND("${type}" AS ?cache) }`;
}
function getOrcid(author) {
  const orcid = author._orcid || author.ORCID || author._ORCID || author.orcid;
  return orcid && orcid.replace(/^https?:\/\/orcid\.org\//, '');
}
function fillCaches(csl) {
  const caches = {};
  for (const cache in QUERY_BUILDERS) {
    caches[cache] = {};
  }
  const queries = Object.keys(QUERY_BUILDERS).map(type => buildQuery(type, csl)).join(' UNION ');
  const query = `SELECT ?key ?value ?cache WHERE { ${queries} }`;
  try {
    const url = _wikidataSdk.default.sparqlQuery(query);
    const response = JSON.parse(_core.util.fetchFile(url));
    const results = _wikidataSdk.default.simplify.sparqlResults(response);
    for (const {
      key,
      value,
      cache
    } of results) {
      caches[cache][key] = value;
    }
  } catch (e) {
    _core.logger.error(e);
  }
  return caches;
}
},{"@citation-js/core":"citation-js","wikidata-sdk":191}],92:[function(require,module,exports){
"use strict";

var _core = require("@citation-js/core");
var _output = _interopRequireDefault(require("./output"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const ref = '@quickstatements';
_core.plugins.add(ref, {
  output: _output.default
});
},{"./output":93,"@citation-js/core":"citation-js"}],93:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _date = require("@citation-js/date");
var _name = require("@citation-js/name");
var _cache = require("./cache.js");
const WIKIDATA_PROPS = {
  Lmul: 'title',
  P50: 'author',
  P212: 'ISBN',
  P304: 'page',
  P348: 'version',
  P356: 'DOI',
  P393: 'edition',
  P407: 'language',
  P433: 'issue',
  P478: 'volume',
  P577: 'issued',
  P496: 'ORCID',
  P698: 'PMID',
  P856: 'URL',
  P932: 'PMCID',
  P1104: 'number-of-pages',
  P1433: 'ISSN',
  P1476: 'title',
  P1813: 'title-short',
  P2093: 'author'
};
const CSL_TYPES = {
  article: 'Q191067',
  'article-journal': 'Q13442814',
  'article-magazine': 'Q30070590',
  'article-newspaper': 'Q5707594',
  bill: 'Q686822',
  book: 'Q3331189',
  broadcast: 'Q11578774',
  chapter: 'Q1980247',
  collection: 'Q9388534',
  dataset: 'Q1172284',
  document: 'Q386724',
  entry: 'Q10389811',
  'entry-dictionary': 'Q1580166',
  'entry-encyclopedia': 'Q13433827',
  event: 'Q1656682',
  figure: 'Q30070753',
  graphic: 'Q4502142',
  hearing: 'Q545861',
  interview: 'Q178651',
  legal_case: 'Q2334719',
  legislation: 'Q49371',
  manuscript: 'Q87167',
  map: 'Q4006',
  motion_picture: 'Q11424',
  musical_score: 'Q187947',
  pamphlet: 'Q190399',
  'paper-conference': 'Q23927052',
  patent: 'Q253623',
  performance: 'Q35140',
  periodical: 'Q1002697',
  personal_communication: 'Q628523',
  post: 'Q7216866',
  'post-weblog': 'Q17928402',
  regulation: 'Q428148',
  report: 'Q10870555',
  review: 'Q265158',
  'review-book': 'Q637866',
  software: 'Q7397',
  song: 'Q7366',
  speech: 'Q861911',
  standard: 'Q317623',
  thesis: 'Q1266946',
  treaty: 'Q131569',
  webpage: 'Q36774'
};
function formatDateForWikidata(date) {
  const isoDate = typeof date === 'string' ? date : (0, _date.format)(date);
  switch (isoDate.length) {
    case 4:
      return '+' + isoDate + '-01-01T00:00:00Z/9';
    case 7:
      return '+' + isoDate + '-01T00:00:00Z/10';
    case 10:
      return '+' + isoDate + 'T00:00:00Z/11';
    default:
      return '+' + date;
  }
}
function formatTitle(title) {
  return {
    html: title.replace(/<(?!\/?(i|sub|sup)).+?>/g, '').replace(/\s+/g, ' '),
    text: title.replace(/<.+?>/g, '').replace(/\s+/g, ' ')
  };
}
function serializeValue(property, value, item, caches) {
  switch (property) {
    case 'P304':
      return `"${value.replace('--', '-')}"`;
    case 'P577':
      return formatDateForWikidata(value);
    case 'P50':
      return value.map((author, index) => {
        const authorOrcid = (0, _cache.getOrcid)(author);
        const authorQid = caches.orcid[authorOrcid];
        if (!authorOrcid || !authorQid) {
          return undefined;
        }
        const parts = [authorQid, 'P1545', `"${index + 1}"`];
        const name = (0, _name.format)(author);
        if (name) {
          parts.push('P1932', `"${name}"`);
        }
        return parts;
      }).filter(Boolean);
    case 'P2093':
      return value.map((author, index) => {
        const authorOrcid = (0, _cache.getOrcid)(author);
        const authorQid = caches.orcid[authorOrcid];
        const name = (0, _name.format)(author);
        if (!name || authorOrcid && authorQid) {
          return undefined;
        }
        const parts = [`"${name}"`, 'P1545', `"${index + 1}"`];
        if (authorOrcid) {
          parts.push('P496', `"${authorOrcid}"`);
        }
        return parts;
      }).filter(Boolean);
    case 'P1433':
      return caches.issn[value];
    case 'P356':
      return `"${value.toUpperCase()}"`;
    case 'P212':
      return item.type === 'chapter' ? undefined : `"${value}"`;
    case 'P856':
      return item.type === 'article-journal' || item.type === 'chapter' ? undefined : `"${value}"`;
    case 'P407':
      return caches.language[value];
    case 'P1104':
      return value;
    case 'P1476':
    case 'P1813':
      {
        const title = formatTitle(value);
        const language = caches.languageWiki[item.language] || 'en';
        const command = `${language}:"${title.text}"`;
        return title.text === title.html ? command : [[command, 'P6833', `${language}:"${title.html}"`]];
      }
    case 'Lmul':
      return `"${formatTitle(value).text}"`;
    default:
      return `"${value}"`;
  }
}
function getProvenance(item) {
  const provenance = [];
  if (item.source === 'PubMed') {
    provenance.push(['S248', 'Q180686']);
  } else if (item.source === 'Crossref') {
    provenance.push(['S248', 'Q5188229']);
  }
  if (provenance.length) {
    if (item._graph && item._graph[0] && item._graph[0].type === '@pubmed/pmcid' && item.PMCID) {
      provenance.push(['S932', `"${item.PMCID}"`]);
    }
    if (item.accessed) {
      provenance.push(['S813', formatDateForWikidata(item.accessed)]);
    } else {
      provenance.push(['S813', formatDateForWikidata(new Date().toISOString().substring(0, 10))]);
    }
  }
  return provenance;
}
function addProvenance(command, provenance) {
  if (command[0][0] === 'P') {
    return [...command, ...provenance];
  } else {
    return command;
  }
}
function serializeEntry(entry) {
  const prefix = entry.id || 'LAST';
  const provenance = entry.provenance.slice().flat();
  const commands = entry.commands.map(command => ['', prefix, ...addProvenance(command, provenance)].join('\t'));
  if (!entry.id) {
    commands.unshift('\tCREATE');
  }
  return commands.join('\n') + '\n';
}
var _default = exports.default = {
  quickstatements(csl) {
    const caches = (0, _cache.fillCaches)(csl);
    const entries = [];
    for (const item of csl) {
      const cslType = item.type in CSL_TYPES ? item.type : 'document';
      const entry = {
        id: item.custom && item.custom.QID,
        commands: [['P31', CSL_TYPES[cslType]]],
        provenance: getProvenance(item)
      };
      for (const wikidataProp in WIKIDATA_PROPS) {
        const cslProp = WIKIDATA_PROPS[wikidataProp];
        const cslValue = item[cslProp];
        if (cslValue == null || cslValue === '') {
          continue;
        }
        const wikidataValue = serializeValue(wikidataProp, cslValue, item, caches);
        if (wikidataValue == null) {
          continue;
        }
        entry.commands.push(...[].concat(wikidataValue).map(wikidataValue => [wikidataProp, ...[].concat(wikidataValue)]));
      }
      entries.push(entry);
    }
    return entries.map(serializeEntry).join('\n\n');
  }
};
},{"./cache.js":91,"@citation-js/date":43,"@citation-js/name":46}],94:[function(require,module,exports){
"use strict";

var _core = require("@citation-js/core");

var _input = _interopRequireDefault(require("./input"));

var _output = _interopRequireDefault(require("./output"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_core.plugins.add('@refworks', {
  input: _input.default,
  output: _output.default
});
},{"./input":95,"./output":96,"@citation-js/core":"citation-js"}],95:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _shared = require("./shared.js");

function parseRecord(record) {
  const fields = {};

  for (const line of record.split(/\n/g)) {
    let [field, ...value] = line.split(' ');
    value = value.join(' ');
    field = field.toUpperCase();

    if (Array.isArray(fields[field])) {
      fields[field].push(value);
    } else if (field in fields) {
      fields[field] = [fields[field], value];
    } else {
      fields[field] = value;
    }
  }

  return {
    scheme: 'refworks',
    fields
  };
}

var _default = {
  '@refworks/file': {
    parse(file) {
      return file.trim().replace(/\r\n?/g, '\n').split(/\n\n/).map(parseRecord);
    },

    parseType: {
      dataType: 'String',
      tokenList: {
        token: /^([A-Z][0-9A-Z] |$)/,
        split: /\r\n?|\n/g,
        trim: false
      }
    }
  },
  '@refworks/record': {
    parse(record) {
      return _shared.translator.convertToTarget(record.fields);
    },

    parseType: {
      dataType: 'SimpleObject',
      propertyConstraint: {
        props: 'scheme',

        value(value) {
          return value === 'refworks';
        }

      }
    }
  }
};
exports.default = _default;
},{"./shared.js":97}],96:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _shared = require("./shared.js");

function translateRecord(record) {
  const fields = _shared.translator.convertToSource(record);

  for (const field in fields) {
    if (Array.isArray(fields[field]) && fields[field].length === 1) {
      fields[field] = fields[field][0];
    }
  }

  fields.RT = fields.RT || 'Book, Whole';
  return {
    scheme: 'refworks',
    fields
  };
}

function formatRecord({
  fields
}, lineEnding) {
  let record = 'RT ' + fields.RT + lineEnding;

  for (const field in fields) {
    if (field === 'RT') {
      continue;
    }

    const values = [].concat(fields[field]);

    for (const value of values) {
      record += field + ' ' + value + lineEnding;
    }
  }

  return record;
}

var _default = {
  refworks(csl, options = {}) {
    const {
      format = 'text',
      lineEnding = '\n'
    } = options;
    const records = csl.map(translateRecord);

    if (format === 'object') {
      return records;
    } else {
      return records.map(record => formatRecord(record, lineEnding)).join(lineEnding);
    }
  }

};
exports.default = _default;
},{"./shared.js":97}],97:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.translator = void 0;

var _core = require("@citation-js/core");

const TYPE_MAPPINGS = {
  toTarget: {
    Artwork: 'graphic',
    Bills: 'bill',
    Resolutions: 'bill',
    'Book, Section': 'chapter',
    'Book, Edited': 'book',
    'Book, Whole': 'book',
    Case: 'legal_case',
    'Court Decisions': 'legal_case',
    'Computer Program': 'software',
    'Conference Proceedings': 'paper-conference',
    Dissertation: 'thesis',
    Thesis: 'thesis',
    'Dissertation, Unpublished': 'manuscript',
    'Thesis, Unpublished': 'manuscript',
    Hearing: 'hearing',
    'Journal Article': 'article-journal',
    'Journal, Electronic': 'article-journal',
    Laws: 'legislation',
    Statutes: 'legislation',
    'Magazine Article': 'article-magazine',
    Map: 'map',
    Monograph: 'book',
    'Motion Picture': 'motion_picture',
    'Music Score': 'musical_score',
    'Newspaper Article': 'article-newspaper',
    'Online Discussion Forum': 'post',
    Patent: 'patent',
    'Personal Communication': 'personal_communication',
    Report: 'report',
    'Sound Recording': 'song',
    'Unpublished Material': 'manuscript',
    Video: 'motion_picture',
    DVD: 'motion_picture',
    'Web Page': 'webpage'
  },
  toSource: {
    'article-journal': 'Journal Article',
    'article-magazine': 'Newspaper Article',
    'article-newspaper': 'Newspaper Article',
    bill: 'Bills',
    book: 'Book, Whole',
    chapter: 'Book, Section',
    graphic: 'Artwork',
    hearing: 'Hearing',
    legal_case: 'Case',
    legislation: 'Laws',
    manuscript: 'Unpublished Material',
    map: 'Map',
    motion_picture: 'Motion Picture',
    musical_score: 'Music Score',
    'paper-conference': 'Conference Proceedings',
    patent: 'Patent',
    personal_communication: 'Personal Communication',
    post: 'Online Discussion Forum',
    'post-weblog': 'Online Discussion Forum',
    report: 'Report',
    software: 'Computer Program',
    song: 'Sound Recording',
    thesis: 'Dissertation',
    webpage: 'Web Page'
  }
};
const FORMATTING_MAP = ['b', 'u', 'i', 'sup', 'sub'];
const MONTHS = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];
const CONVERTERS = {
  ISBN_ISSN: {
    toTarget(number) {
      let isbn;
      let issn;

      if (number.length === 9) {
        issn = number;
      } else {
        isbn = number.split(' ')[0];
      }

      return [isbn, issn];
    },

    toSource(isbn, issn) {
      return issn || isbn;
    }

  },
  KEYWORDS: {
    toTarget(keywords) {
      return [].concat(keywords).join();
    },

    toSource(keywords) {
      return keywords.split(',');
    }

  },
  MEDIUM: {
    toTarget(type) {
      return type === 'Print(0)' ? 'print' : 'electronic';
    },

    toSource(type) {
      return type === 'electronic' ? 'Electronic(1)' : type === 'print' ? 'Print(0)' : undefined;
    }

  },
  NAME: {
    toTarget(name) {
      const [family, given, suffix] = name.split(/, ?/);

      if (given === undefined && family.includes(' ')) {
        return {
          literal: family
        };
      }

      const parts = {
        family
      };

      if (given) {
        parts.given = given;
      }

      if (suffix) {
        parts.suffix = suffix;
      }

      return parts;
    },

    toSource(name) {
      if (name.literal) {
        return name.literal;
      }

      const parts = [name.family];

      if (name.given !== undefined) {
        parts.push(name.given);
      }

      if (name.suffix !== undefined) {
        if (parts.length === 1) {
          parts[0] += ',';
        }

        parts.push(name.suffix);
      }

      return parts.join(', ');
    }

  },
  NAMES: {
    toTarget(names) {
      return [].concat(names).map(CONVERTERS.NAME.toTarget);
    },

    toSource(names) {
      return [].concat(names).map(CONVERTERS.NAME.toSource);
    }

  },
  PAGES: {
    toTarget(start, other) {
      return other ? `${start}-${other}` : start;
    },

    toSource(page) {
      return page.split('-');
    }

  },
  PARTIAL_DATE: {
    toTarget(year, fd) {
      if (year === undefined) {
        return {
          raw: fd
        };
      }

      year = parseInt(year, 10);

      if (fd === undefined) {
        return {
          'date-parts': [[year]]
        };
      }

      const parts = [year];
      const monthMatch = fd.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/i);

      if (monthMatch) {
        parts.push(MONTHS.indexOf(monthMatch[0].toLowerCase()) + 1);
        const dayMatch = fd.match(/(^|\D)(3[01]|[12][0-9]|0?[1-9])($|\D)/);

        if (dayMatch) {
          parts.push(parseInt(dayMatch[2], 10));
        }
      } else {
        return {
          raw: fd + ' ' + year
        };
      }

      return {
        'date-parts': [parts]
      };
    },

    toSource(date) {
      if (date['date-parts']) {
        const [year, month, day] = date['date-parts'][0];

        if (!month) {
          return [year.toString(), undefined];
        }

        const monthName = MONTHS[month - 1];
        return [year.toString(), day ? monthName + ' ' + day : monthName];
      } else {
        return [undefined, date.raw];
      }
    }

  },
  RICH_TEXT: {
    toTarget(text) {
      return text.replace(/([01])RW1S34RfeSDcfkexd09rT([0-4])/g, (tag, start, type) => (start === '0' ? '<' : '</') + FORMATTING_MAP[type] + '>');
    },

    toSource(text) {
      return text.replace(/<(\/?)([a-z]+).*?>/g, (tag, start, type) => FORMATTING_MAP.indexOf(type) === -1 ? '' : (start ? '1' : '0') + 'RW1S34RfeSDcfkexd09rT' + FORMATTING_MAP.indexOf(type));
    }

  },
  TYPE: {
    toTarget(type) {
      return TYPE_MAPPINGS.toTarget[type] || 'document';
    },

    toSource(type) {
      return TYPE_MAPPINGS.toSource[type];
    }

  }
};
const PROP_MAPPINGS = [{
  source: 'RT',
  target: 'type',
  convert: CONVERTERS.TYPE
}, {
  source: 'SR',
  target: 'medium',
  convert: CONVERTERS.MEDIUM
}, {
  source: 'ID',
  target: 'id'
}, {
  source: 'A1',
  target: 'author',
  convert: CONVERTERS.NAMES
}, {
  source: 'T1',
  target: 'title',
  convert: CONVERTERS.RICH_TEXT
}, {
  source: 'JF',
  target: 'container-title',
  when: {
    target: {
      type: 'article-journal'
    }
  }
}, {
  source: 'JO',
  target: 'container-title-short',
  when: {
    target: {
      type: 'article-journal'
    }
  }
}, {
  source: ['YR', 'FD'],
  target: 'issued',
  convert: CONVERTERS.PARTIAL_DATE
}, {
  source: 'VO',
  target: 'volume'
}, {
  source: 'IS',
  target: 'issue'
}, {
  source: ['SP', 'OP'],
  target: 'page',
  convert: CONVERTERS.PAGES
}, {
  source: 'K1',
  target: 'keyword',
  convert: CONVERTERS.KEYWORDS
}, {
  source: 'AB',
  target: 'abstract',
  convert: CONVERTERS.RICH_TEXT
}, {
  source: 'NO',
  target: 'note',
  convert: CONVERTERS.RICH_TEXT
}, {
  source: 'A2',
  target: 'editor',
  convert: CONVERTERS.NAMES
}, {
  source: 'T2',
  target: 'container-title',
  when: {
    source: {
      JF: false,
      WT: false
    },
    target: {
      type: 'chapter'
    }
  },
  convert: CONVERTERS.RICH_TEXT
}, {
  source: 'ED',
  target: 'edition'
}, {
  source: 'PB',
  target: 'publisher'
}, {
  source: 'PP',
  target: 'publisher-place'
}, {
  source: 'A3',
  target: 'collection-editor',
  convert: CONVERTERS.NAMES
}, {
  source: 'A4',
  target: 'translator',
  convert: CONVERTERS.NAMES
}, {
  source: 'A5',
  target: 'compiler',
  convert: CONVERTERS.NAMES
}, {
  source: 'SN',
  target: ['ISBN', 'ISSN'],
  convert: CONVERTERS.ISBN_ISSN
}, {
  source: 'LA',
  target: 'language'
}, {
  source: 'OT',
  target: 'original-title',
  convert: CONVERTERS.RICH_TEXT,
  when: {
    target: false
  }
}, {
  source: 'DO',
  target: 'DOI'
}, {
  source: 'CN',
  target: 'call-number'
}, {
  source: 'DS',
  target: 'source',
  when: {
    target: false
  }
}, {
  source: 'IP',
  target: 'citation-key',
  when: {
    target: false
  }
}, {
  source: 'RD',
  target: 'accessed',
  convert: CONVERTERS.DATE
}, {
  source: 'ST',
  target: 'title-short',
  convert: CONVERTERS.RICH_TEXT
}, {
  source: 'UR',
  target: 'URL'
}, {
  source: 'WT',
  target: 'container-title',
  convert: CONVERTERS.RICH_TEXT,
  when: {
    source: {
      JO: false
    },
    target: {
      type: ['post', 'webpage']
    }
  }
}, {
  source: 'WT',
  target: 'editor',
  convert: CONVERTERS.NAMES,
  when: {
    source: {
      A2: false
    },
    target: {
      type: ['post', 'webpage']
    }
  }
}, {
  source: 'WV',
  target: 'version'
}, {
  source: 'WP',
  target: 'available-date',
  convert: CONVERTERS.DATE
}, 'PMID', 'PMCID', {
  source: 'PA',
  target: 'annote',
  convert: CONVERTERS.RICH_TEXT
}];
const translator = new _core.util.Translator(PROP_MAPPINGS);
exports.translator = translator;
},{"@citation-js/core":"citation-js"}],98:[function(require,module,exports){
module.exports={
  "outputSpec": "mixed"
}

},{}],99:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _date = require("@citation-js/date");
var _types = _interopRequireDefault(require("./spec/types.json"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const ISSN_REGEX = /^\d{4}-\d{3}[0-9Xx]$/;
const DOI_REGEX = /10(?:\.[0-9]{4,})?\/[^\s]*[^\s.,]/;
const CONVERTERS = {
  ANY: {
    toTarget(...values) {
      return values.find(Boolean);
    },
    toSource(value) {
      return [value];
    }
  },
  PAGE: {
    keepAll: true,
    toTarget(start, end) {
      return [start, end].filter(Boolean).join('-');
    },
    toSource(pages) {
      return pages.replace(/[-–—]/g, '-');
    }
  },
  ISBN: {
    toTarget(id) {
      return ISSN_REGEX.test(id) ? [id] : [undefined, id];
    },
    toSource(...ids) {
      return ids.find(Boolean);
    }
  },
  DATE: {
    toTarget(date) {
      return date && (0, _date.parse)(date.split('/').slice(0, 3).filter(Boolean).join('/'));
    },
    toSource(date) {
      if (!date['date-parts'] || !date['date-parts'][0]) {
        return undefined;
      }
      const parts = Array(4).fill('');
      date['date-parts'][0].forEach((part, index) => {
        parts[index] = part;
      });
      if (date.season) {
        parts[3] = date.season;
      }
      return parts.join('/');
    }
  },
  YEAR: {
    toTarget(year) {
      return isNaN(+year) ? {
        raw: year
      } : {
        'date-parts': [[+year]]
      };
    },
    toSource(date) {
      var _date$dateParts;
      return (_date$dateParts = date['date-parts']) === null || _date$dateParts === void 0 || (_date$dateParts = _date$dateParts[0]) === null || _date$dateParts === void 0 || (_date$dateParts = _date$dateParts[0]) === null || _date$dateParts === void 0 ? void 0 : _date$dateParts.toString();
    }
  },
  DATE_YEAR: {
    keepAll: true,
    toTarget(...dates) {
      return CONVERTERS.DATE.toTarget(CONVERTERS.ANY.toTarget(...dates));
    },
    toSource(date) {
      return [CONVERTERS.DATE.toSource(date), CONVERTERS.YEAR.toSource(date)];
    }
  },
  NAME: {
    toTarget(names) {
      return names && [].concat(names).map(name => {
        const parts = name.split(/, ?/);
        const [family, given, suffix] = parts;
        switch (parts.length) {
          case 3:
            return {
              family,
              given,
              suffix
            };
          case 2:
            return {
              family,
              given
            };
          case 1:
            if (family.indexOf(' ') === -1) {
              return {
                family
              };
            }
          default:
            return {
              literal: name
            };
        }
      });
    },
    toSource(names) {
      return names.map(({
        family,
        given,
        suffix,
        literal
      }) => {
        const parts = [family, given, suffix].filter(Boolean);
        return parts.length ? parts.join(', ') : literal;
      });
    }
  },
  KEYWORD: {
    toTarget(words) {
      words = [].concat(words);
      return words.join(',');
    },
    toSource(words) {
      return words.split(',');
    }
  },
  ID: {
    toSource(id) {
      return id.toString().slice(0, 20);
    }
  },
  TYPE: {
    toTarget(type) {
      return _types.default.RIS[type];
    },
    toSource(type) {
      return _types.default.CSL[type];
    }
  },
  DOI: {
    toTarget(doi) {
      return doi.match(DOI_REGEX)[0];
    },
    toSource(doi) {
      return doi.match(DOI_REGEX)[0];
    }
  }
};
var _default = exports.default = CONVERTERS;
},{"./spec/types.json":108,"@citation-js/date":43}],100:[function(require,module,exports){
module.exports={
  "author": "NAME",
  "chair": "NAME",
  "collection-editor": "NAME",
  "compiler": "NAME",
  "composer": "NAME",
  "container-author": "NAME",
  "contributor": "NAME",
  "curator": "NAME",
  "director": "NAME",
  "editor": "NAME",
  "editorial-director": "NAME",
  "editor-translator": "NAME",
  "executive-producer": "NAME",
  "guest": "NAME",
  "host": "NAME",
  "illustrator": "NAME",
  "interviewer": "NAME",
  "narrator": "NAME",
  "organizer": "NAME",
  "original-author": "NAME",
  "performer": "NAME",
  "producer": "NAME",
  "recipient": "NAME",
  "reviewed-author": "NAME",
  "script-writer": "NAME",
  "series-creator": "NAME",
  "translator": "NAME",

  "accessed": "DATE",
  "available-date": "DATE",
  "event-date": "DATE",
  "issued": "DATE_YEAR",
  "original-date": "DATE",
  "submitted": "DATE",

  "id": "ID",
  "ISSN,ISBN": "ISBN",
  "keyword": "KEYWORD",
  "page": "PAGE",
  "type": "TYPE",
  "DOI": "DOI"
}

},{}],101:[function(require,module,exports){
"use strict";

var _core = require("@citation-js/core");
var _config = _interopRequireDefault(require("./config.json"));
var _ris = require("./ris.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const oldProps = ['A1', 'AV', 'BT', 'CP', 'ED', 'EP', 'ID', 'J1', 'JA', 'JF', 'JO', 'L2', 'L3', 'N2', 'T1', 'U1', 'U2', 'U3', 'U4', 'U5', 'U6', 'Y1'];
const newProps = ['A4', 'AD', 'AN', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'CA', 'CN', 'DA', 'DB', 'DO', 'DP', 'ET', 'LA', 'LB', 'NV', 'OP', 'PY', 'RI', 'RN', 'SE', 'ST', 'SV', 'TA', 'TT'];
_core.plugins.add('@ris', {
  input: {
    '@ris/file': {
      parse: _ris.parse,
      parseType: {
        dataType: 'String',
        predicate: /^TY {2}- /m
      }
    },
    '@ris/record': {
      parse: _ris.parseMixed,
      parseType: {
        dataType: 'SimpleObject',
        propertyConstraint: {
          props: ['TY']
        }
      }
    },
    '@ris/new+record': {
      parse: _ris.parseNew,
      parseType: {
        extends: '@ris/record',
        propertyConstraint: [{
          props: newProps,
          match: 'some'
        }, {
          props: oldProps,
          match: 'none'
        }]
      }
    },
    '@ris/old+record': {
      parse: _ris.parseOld,
      parseType: {
        extends: '@ris/record',
        propertyConstraint: [{
          props: oldProps,
          match: 'some'
        }, {
          props: newProps,
          match: 'none'
        }]
      }
    }
  },
  config: _config.default,
  output: {
    ris: _ris.format
  }
});
},{"./config.json":98,"./ris.js":102,"@citation-js/core":"citation-js"}],102:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.format = format;
exports.parse = parse;
exports.parseMixed = parseMixed;
exports.parseNew = parseNew;
exports.parseOld = parseOld;
var _core = require("@citation-js/core");
var _config = _interopRequireDefault(require("./config.json"));
var _index = require("./spec/index.js");
var _converters = _interopRequireDefault(require("./converters.js"));
var _dataTypes = _interopRequireDefault(require("./dataTypes.json"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
const LINE_MATCH = /^[A-Z][A-Z0-9] {2}-( |$)/;
const LINE_SPLIT = / {2}-(?: |$)/;
const TRANSLATORS = new Map();
function prepareTranslator(spec) {
  if (!TRANSLATORS.has(spec)) {
    for (const mapping of spec) {
      if (mapping.target === 'issued' && !Array.isArray(mapping.source)) {
        mapping.convert = _converters.default.YEAR;
        continue;
      }
      if (mapping.target in _dataTypes.default) {
        mapping.convert = _converters.default[_dataTypes.default[mapping.target]];
      }
      if (mapping.convert && mapping.convert.keepAll === true) {
        continue;
      }
      if (Array.isArray(mapping.source)) {
        if (mapping.convert) {
          const {
            toSource,
            toTarget
          } = mapping.convert;
          mapping.convert = {
            toTarget(...args) {
              return toTarget(_converters.default.ANY.toTarget(...args));
            },
            toSource(...args) {
              return _converters.default.ANY.toSource(toSource(...args));
            }
          };
        } else {
          mapping.convert = _converters.default.ANY;
        }
      }
    }
    TRANSLATORS.set(spec, new _core.util.Translator(spec));
  }
  return TRANSLATORS.get(spec);
}
function parse(text) {
  const entries = [];
  let lastEntry;
  let lastTag;
  for (let line of text.split(/\r?\n/)) {
    line = line.trim();
    if (!LINE_MATCH.test(line)) {
      if (lastEntry && lastTag) {
        lastEntry[lastTag] += ' ' + line;
      }
      continue;
    }
    const [tag, value] = line.split(LINE_SPLIT);
    switch (tag) {
      case 'ER':
        lastEntry = undefined;
        lastTag = undefined;
        break;
      case 'TY':
        lastEntry = {};
        entries.push(lastEntry);
      default:
        if (Array.isArray(lastEntry[tag])) {
          lastEntry[tag].push(value);
        } else {
          lastEntry[tag] = lastEntry[tag] ? [lastEntry[tag], value] : value;
        }
        lastTag = tag;
    }
  }
  return entries;
}
function parseOld(data) {
  return prepareTranslator(_index.SPECS.old).convertToTarget(data);
}
function parseNew(data) {
  return prepareTranslator(_index.SPECS.new).convertToTarget(data);
}
function parseMixed(data) {
  return prepareTranslator(_index.SPECS.mixed).convertToTarget(data);
}
function format(data, {
  type,
  format = type || 'text',
  spec
} = {}) {
  const outputSpec = spec || _config.default.outputSpec;
  const translate = prepareTranslator(_index.SPECS[outputSpec]).convertToSource;
  const entries = data.map(entry => translate(entry.type ? entry : _objectSpread(_objectSpread({}, entry), {}, {
    type: 'document'
  })));
  if (format === 'object') {
    return entries;
  }
  return entries.map(entry => {
    const tags = [];
    for (const tag in entry) {
      if (tag === 'TY') {
        continue;
      }
      tags.push(...[].concat(entry[tag]).map(value => `${tag}  - ${value.toString().replace(/(.{70})/g, '$1\n')}`));
    }
    tags.unshift(`TY  - ${entry.TY}`);
    tags.push('ER  - ');
    return tags.join('\n');
  }).join('\n');
}
},{"./config.json":98,"./converters.js":99,"./dataTypes.json":100,"./spec/index.js":104,"@citation-js/core":"citation-js"}],103:[function(require,module,exports){
module.exports=[
  {
    "source": [
      "T1",
      "BT"
    ],
    "target": "title",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ],
        "TI": false
      },
      "target": false
    }
  },
  {
    "source": "A1",
    "target": "author",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BLOG",
          "BOOK",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MULTI",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "THES",
          "UNPB",
          "VIDEO"
        ],
        "AU": false
      },
      "target": false
    }
  },
  {
    "source": "Y1",
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "CONF"
        ],
        "C2": false,
        "DA": false
      },
      "target": false
    }
  },
  {
    "source": "Y1",
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "PAT"
        ],
        "C2": false,
        "DA": false,
        "PY": false
      },
      "target": false
    }
  },
  {
    "source": "Y1",
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "EBOOK"
        ],
        "C5": false,
        "PY": false
      },
      "target": false
    }
  },
  {
    "source": "Y1",
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHART",
          "CPAPER",
          "CTLG",
          "DATA",
          "EDBOOK",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MUSIC",
          "PAMP",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ],
        "DA": false,
        "PY": false
      },
      "target": false
    }
  },
  {
    "source": "Y1",
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "STAT"
        ],
        "DA": false,
        "PY": false,
        "Y2": false
      },
      "target": false
    }
  },
  {
    "source": "Y1",
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "AGGR",
          "DBASE"
        ],
        "ET": false,
        "PY": false
      },
      "target": false
    }
  },
  {
    "source": "Y1",
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "CHAP",
          "CLSWK",
          "COMP",
          "DICT",
          "ECHAP",
          "GOVDOC",
          "MULTI",
          "NEWS"
        ],
        "PY": false
      },
      "target": false
    }
  },
  {
    "source": "Y1",
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "EJOUR"
        ],
        "PY": false,
        "SE": false
      },
      "target": false
    }
  },
  {
    "source": [
      "JO",
      "JF",
      "J1"
    ],
    "target": "container-title",
    "when": {
      "source": {
        "TY": [
          "CONF"
        ],
        "C3": false
      },
      "target": false
    }
  },
  {
    "source": [
      "JO",
      "JF",
      "J1"
    ],
    "target": "container-title",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ANCIENT",
          "BILL",
          "BLOG",
          "CHAP",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ENCYC",
          "GEN",
          "INPR",
          "JFULL",
          "JOUR",
          "MGZN",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "SER",
          "STAT",
          "THES",
          "UNBILL"
        ],
        "T2": false
      },
      "target": false
    }
  },
  {
    "source": "JA",
    "target": "container-title-short",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ANCIENT",
          "BOOK",
          "CHAP",
          "CTLG",
          "DATA",
          "DICT",
          "ENCYC",
          "GRANT",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MGZN",
          "PAMP",
          "PCOMM",
          "SER",
          "STAND",
          "STAT",
          "UNPB"
        ],
        "J2": false
      },
      "target": false
    }
  },
  {
    "source": "N2",
    "target": "abstract",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ],
        "AB": false
      },
      "target": false
    }
  },
  {
    "source": [
      "SP",
      "EP"
    ],
    "target": "page",
    "when": {
      "source": {
        "TY": [
          "BOOK"
        ],
        "SE": false
      },
      "target": false
    }
  },
  {
    "source": [
      "SP",
      "EP"
    ],
    "target": "page",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "AGGR",
          "ANCIENT",
          "BILL",
          "CHAP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DBASE",
          "DICT",
          "ECHAP",
          "EJOUR",
          "ENCYC",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MGZN",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "STAND",
          "STAT",
          "UNBILL",
          "UNPB"
        ],
        "EP": true
      },
      "target": false
    }
  },
  {
    "source": "AV",
    "target": "archive_location",
    "when": {
      "target": false
    }
  },
  {
    "source": "LK",
    "target": "URL",
    "when": {
      "source": {
        "TY": [
          "HEAR"
        ],
        "L4": false,
        "UR": false
      },
      "target": false
    }
  },
  {
    "source": "LK",
    "target": "URL",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ],
        "UR": false
      },
      "target": false
    }
  },
  {
    "source": "IS",
    "target": "issue",
    "when": {
      "source": {
        "TY": "MGZN",
        "M1": false
      },
      "target": false
    }
  }
]

},{}],104:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SPECS = void 0;
Object.defineProperty(exports, "TYPES", {
  enumerable: true,
  get: function () {
    return _types.default;
  }
});
var _types = _interopRequireDefault(require("./types.json"));
var _new = _interopRequireDefault(require("./new.json"));
var _old = _interopRequireDefault(require("./old.js"));
var _mixed = _interopRequireDefault(require("./mixed.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const SPECS = exports.SPECS = {
  new: _new.default,
  old: _old.default,
  mixed: _mixed.default
};
},{"./mixed.js":105,"./new.json":106,"./old.js":107,"./types.json":108}],105:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _new = _interopRequireDefault(require("./new.json"));
var _additions = _interopRequireDefault(require("./additions.json"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default = exports.default = _new.default.concat(_additions.default);
},{"./additions.json":103,"./new.json":106}],106:[function(require,module,exports){
module.exports=[
  {
    "source": "A2",
    "target": "editor",
    "when": {
      "source": {
        "TY": [
          "ANCIENT",
          "BLOG",
          "CHAP",
          "CONF",
          "CPAPER",
          "DICT",
          "EBOOK",
          "ECHAP",
          "ENCYC",
          "MUSIC",
          "SER"
        ]
      },
      "target": {
        "type": [
          "chapter",
          "entry-dictionary",
          "entry-encyclopedia",
          "musical_score",
          "paper-conference",
          "periodical",
          "post-weblog"
        ]
      }
    }
  },
  {
    "source": "A2",
    "target": "performer",
    "when": {
      "source": {
        "TY": [
          "ADVS",
          "SLIDE",
          "SOUND",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "song",
          "speech"
        ]
      }
    }
  },
  {
    "source": "A2",
    "target": "collection-editor",
    "when": {
      "source": {
        "TY": [
          "BOOK",
          "CLSWK",
          "COMP",
          "EDBOOK",
          "ELEC",
          "MAP",
          "MULTI",
          "RPRT",
          "UNPB"
        ]
      },
      "target": {
        "type": [
          "book",
          "classic",
          "map",
          "report",
          "review-book",
          "software",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "A2",
    "target": "reporter",
    "when": {
      "source": {
        "TY": [
          "CASE"
        ]
      },
      "target": {
        "type": [
          "legal_case"
        ]
      }
    }
  },
  {
    "source": "A2",
    "target": "producer",
    "when": {
      "source": {
        "TY": [
          "DATA"
        ]
      },
      "target": {
        "type": [
          "dataset"
        ]
      }
    }
  },
  {
    "source": "A2",
    "target": "recipient",
    "when": {
      "source": {
        "TY": [
          "ICOMM",
          "PCOMM"
        ]
      },
      "target": {
        "type": [
          "personal_communication",
          "post"
        ]
      }
    }
  },
  {
    "source": "A3",
    "target": "collection-editor",
    "when": {
      "source": {
        "TY": [
          "ADVS",
          "CHAP",
          "CONF",
          "EBOOK",
          "MUSIC",
          "SER",
          "SLIDE",
          "SOUND",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "chapter",
          "musical_score",
          "paper-conference",
          "periodical",
          "song",
          "speech"
        ]
      }
    }
  },
  {
    "source": "A3",
    "target": "illustrator",
    "when": {
      "source": {
        "TY": [
          "BLOG"
        ]
      },
      "target": {
        "type": [
          "post-weblog"
        ]
      }
    }
  },
  {
    "source": "A3",
    "target": "editor",
    "when": {
      "source": {
        "TY": [
          "BOOK"
        ]
      },
      "target": {
        "type": [
          "book",
          "review-book"
        ]
      }
    }
  },
  {
    "source": "A3",
    "target": "producer",
    "when": {
      "source": {
        "TY": [
          "MPCT"
        ]
      },
      "target": {
        "type": [
          "broadcast",
          "motion_picture"
        ]
      }
    }
  },
  {
    "source": "A4",
    "target": "translator",
    "when": {
      "source": {
        "TY": [
          "ANCIENT",
          "BOOK",
          "CHAP",
          "CLSWK",
          "CTLG",
          "DICT",
          "EDBOOK",
          "ENCYC",
          "GRANT",
          "PAMP"
        ]
      },
      "target": {
        "type": [
          "book",
          "chapter",
          "classic",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "pamphlet",
          "review-book"
        ]
      }
    }
  },
  {
    "source": "A4",
    "target": "performer",
    "when": {
      "source": {
        "TY": [
          "MPCT"
        ]
      },
      "target": {
        "type": [
          "broadcast",
          "motion_picture"
        ]
      }
    }
  },
  {
    "source": "A4",
    "target": "producer",
    "when": {
      "source": {
        "TY": [
          "MUSIC"
        ]
      },
      "target": {
        "type": [
          "musical_score"
        ]
      }
    }
  },
  {
    "source": "AB",
    "target": "abstract",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "AU",
    "target": "author",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BLOG",
          "BOOK",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MULTI",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "THES",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "book",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "interview",
          "legislation",
          "manuscript",
          "map",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "AU",
    "target": "editor",
    "when": {
      "source": {
        "TY": [
          "EDBOOK"
        ]
      },
      "target": false
    }
  },
  {
    "source": "AU",
    "target": "director",
    "when": {
      "source": {
        "TY": [
          "MPCT"
        ]
      },
      "target": {
        "type": [
          "broadcast",
          "motion_picture"
        ]
      }
    }
  },
  {
    "source": "AU",
    "target": "composer",
    "when": {
      "source": {
        "TY": [
          "MUSIC"
        ]
      },
      "target": {
        "type": [
          "musical_score"
        ]
      }
    }
  },
  {
    "source": "AU",
    "target": "reporter",
    "when": {
      "source": {
        "TY": [
          "NEWS"
        ]
      },
      "target": {
        "type": [
          "article-newspaper"
        ]
      }
    }
  },
  {
    "source": "C1",
    "target": "section",
    "when": {
      "source": {
        "TY": [
          "CHAP",
          "ECHAP",
          "SER"
        ]
      },
      "target": {
        "type": [
          "chapter",
          "periodical"
        ]
      }
    }
  },
  {
    "source": "C1",
    "target": "publisher-place",
    "when": {
      "source": {
        "TY": [
          "CONF",
          "CPAPER"
        ]
      },
      "target": {
        "type": [
          "paper-conference"
        ]
      }
    }
  },
  {
    "source": "C1",
    "target": "scale",
    "when": {
      "source": {
        "TY": [
          "MAP"
        ]
      },
      "target": {
        "type": [
          "map"
        ]
      }
    }
  },
  {
    "source": "C2",
    "target": "PMCID",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "INPR",
          "JFULL",
          "JOUR"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "review"
        ]
      }
    }
  },
  {
    "source": "C2",
    "target": "issue",
    "when": {
      "source": {
        "TY": [
          "NEWS"
        ]
      },
      "target": {
        "type": [
          "article-newspaper"
        ]
      }
    }
  },
  {
    "source": "C2",
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "SER"
        ]
      },
      "target": {
        "type": [
          "periodical"
        ]
      }
    }
  },
  {
    "source": "C3",
    "target": "dimensions",
    "when": {
      "source": {
        "TY": [
          "ADVS",
          "MAP",
          "SLIDE",
          "SOUND",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "map",
          "song",
          "speech"
        ]
      }
    }
  },
  {
    "source": "C3",
    "target": "container-title",
    "when": {
      "source": {
        "TY": [
          "CONF"
        ]
      },
      "target": {
        "type": [
          "paper-conference"
        ]
      }
    }
  },
  {
    "source": "C3",
    "target": "PMCID",
    "when": {
      "source": {
        "TY": [
          "EJOUR"
        ]
      },
      "target": false
    }
  },
  {
    "source": "C3",
    "target": "jurisdiction",
    "when": {
      "source": {
        "TY": [
          "PAT"
        ]
      },
      "target": {
        "type": [
          "patent"
        ]
      }
    }
  },
  {
    "source": [
      "C3",
      "M1"
    ],
    "target": "dimensions",
    "when": {
      "source": {
        "TY": [
          "ART"
        ]
      },
      "target": {
        "type": [
          "graphic"
        ]
      }
    }
  },
  {
    "source": "C5",
    "target": "volume-title",
    "when": {
      "source": {
        "TY": [
          "EJOUR"
        ]
      },
      "target": false
    }
  },
  {
    "source": "C5",
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "GRANT"
        ]
      },
      "target": false
    }
  },
  {
    "source": "C5",
    "target": "dimensions",
    "when": {
      "source": {
        "TY": [
          "MULTI"
        ]
      },
      "target": false
    }
  },
  {
    "source": "C5",
    "target": "references",
    "when": {
      "source": {
        "TY": [
          "PAT"
        ]
      },
      "target": {
        "type": [
          "patent"
        ]
      }
    }
  },
  {
    "source": [
      "C5",
      "PY"
    ],
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "EBOOK"
        ]
      },
      "target": false
    }
  },
  {
    "source": "C6",
    "target": "status",
    "when": {
      "source": {
        "TY": [
          "PAT"
        ]
      },
      "target": {
        "type": [
          "patent"
        ]
      }
    }
  },
  {
    "source": "C6",
    "target": "issue",
    "when": {
      "source": {
        "TY": [
          "RPRT"
        ]
      },
      "target": {
        "type": [
          "report"
        ]
      }
    }
  },
  {
    "source": "C6",
    "target": "volume",
    "when": {
      "source": {
        "TY": [
          "STAT"
        ]
      },
      "target": false
    }
  },
  {
    "source": "C7",
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "INPR",
          "JFULL",
          "JOUR"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "review"
        ]
      }
    }
  },
  {
    "source": "C7",
    "target": "PMCID",
    "when": {
      "source": {
        "TY": [
          "EBOOK",
          "ECHAP"
        ]
      },
      "target": false
    }
  },
  {
    "source": [
      "C7",
      "NV"
    ],
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "EJOUR"
        ]
      },
      "target": false
    }
  },
  {
    "source": "CN",
    "target": "call-number",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CTLG",
          "DATA",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "CY",
    "target": "publisher-place",
    "when": {
      "source": {
        "TY": [
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BLOG",
          "BOOK",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "HEAR",
          "ICOMM",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "THES",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article-magazine",
          "article-newspaper",
          "book",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legislation",
          "manuscript",
          "map",
          "musical_score",
          "pamphlet",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "CY",
    "target": "event-place",
    "when": {
      "source": {
        "TY": [
          "CONF",
          "CPAPER"
        ]
      },
      "target": {
        "type": [
          "paper-conference"
        ]
      }
    }
  },
  {
    "source": "DA",
    "target": "accessed",
    "when": {
      "source": {
        "TY": [
          "AGGR",
          "DBASE",
          "EBOOK",
          "EJOUR",
          "MULTI"
        ]
      },
      "target": false
    }
  },
  {
    "source": [
      "DA",
      "C2"
    ],
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "CONF"
        ]
      },
      "target": {
        "type": [
          "paper-conference"
        ]
      }
    }
  },
  {
    "source": [
      "DA",
      "PY",
      "C2"
    ],
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "PAT"
        ]
      },
      "target": {
        "type": [
          "patent"
        ]
      }
    }
  },
  {
    "source": [
      "DA",
      "PY"
    ],
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHART",
          "CPAPER",
          "CTLG",
          "DATA",
          "EDBOOK",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MUSIC",
          "PAMP",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "bill",
          "book",
          "broadcast",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review",
          "review-book",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": [
      "DA",
      "PY",
      "Y2"
    ],
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "STAT"
        ]
      },
      "target": false
    }
  },
  {
    "source": [
      "DA",
      "Y2"
    ],
    "target": "accessed",
    "when": {
      "source": {
        "TY": [
          "ECHAP"
        ]
      },
      "target": false
    }
  },
  {
    "source": "DB",
    "target": "source",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "DO",
    "target": "DOI",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "ET",
    "target": "edition",
    "when": {
      "source": {
        "TY": [
          "ADVS",
          "ANCIENT",
          "ART",
          "BLOG",
          "BOOK",
          "CHAP",
          "CLSWK",
          "CONF",
          "CTLG",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "GEN",
          "GOVDOC",
          "LEGAL",
          "MAP",
          "MGZN",
          "MPCT",
          "MUSIC",
          "NEWS",
          "PAMP",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article-magazine",
          "article-newspaper",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "graphic",
          "interview",
          "legislation",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "performance",
          "periodical",
          "post-weblog",
          "regulation",
          "report",
          "review-book",
          "song",
          "speech",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "ET",
    "target": "version",
    "when": {
      "source": {
        "TY": [
          "CHART",
          "COMP",
          "DATA",
          "EQUA",
          "FIGURE"
        ]
      },
      "target": {
        "type": [
          "dataset",
          "figure",
          "software"
        ]
      }
    }
  },
  {
    "source": "ET",
    "target": "available-date",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "INPR",
          "JFULL",
          "JOUR"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "review"
        ]
      }
    }
  },
  {
    "source": "ET",
    "target": "medium",
    "when": {
      "source": {
        "TY": [
          "MANSCPT"
        ]
      },
      "target": {
        "type": [
          "manuscript"
        ]
      }
    }
  },
  {
    "source": [
      "ET",
      "PY"
    ],
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "AGGR",
          "DBASE"
        ]
      },
      "target": false
    }
  },
  {
    "source": "ID",
    "target": "id"
  },
  {
    "source": "IS",
    "target": "number-of-volumes",
    "when": {
      "source": {
        "TY": [
          "CHAP"
        ]
      },
      "target": {
        "type": [
          "chapter"
        ]
      }
    }
  },
  {
    "source": "IS",
    "target": "issue",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "INPR",
          "JFULL",
          "JOUR"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "review"
        ]
      }
    }
  },
  {
    "source": "J2",
    "target": "container-title-short",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ANCIENT",
          "BOOK",
          "CHAP",
          "CTLG",
          "DATA",
          "DICT",
          "ENCYC",
          "GRANT",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MGZN",
          "PAMP",
          "PCOMM",
          "SER",
          "STAND",
          "STAT",
          "UNPB"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "book",
          "chapter",
          "dataset",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "legislation",
          "manuscript",
          "pamphlet",
          "periodical",
          "personal_communication",
          "post",
          "regulation",
          "review",
          "review-book",
          "standard"
        ]
      }
    }
  },
  {
    "source": "KW",
    "target": "keyword",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "LA",
    "target": "language",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "LB",
    "target": "citation-label",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "M1",
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "ADVS",
          "AGGR",
          "ANCIENT",
          "BILL",
          "CHART",
          "DICT",
          "EQUA",
          "FIGURE",
          "GEN",
          "HEAR",
          "SLIDE",
          "SOUND",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "bill",
          "collection",
          "document",
          "entry-dictionary",
          "event",
          "figure",
          "hearing",
          "interview",
          "performance",
          "song",
          "speech",
          "thesis",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "M1",
    "target": "collection-number",
    "when": {
      "source": {
        "TY": [
          "BOOK",
          "CLSWK",
          "CTLG",
          "EDBOOK",
          "PAMP",
          "SER"
        ]
      },
      "target": {
        "type": [
          "book",
          "classic",
          "entry",
          "pamphlet",
          "periodical",
          "review-book"
        ]
      }
    }
  },
  {
    "source": "M1",
    "target": "issue",
    "when": {
      "source": {
        "TY": [
          "CONF",
          "EJOUR",
          "GOVDOC",
          "MGZN"
        ]
      },
      "target": {
        "type": [
          "article-magazine",
          "paper-conference"
        ]
      }
    }
  },
  {
    "source": "M1",
    "target": "chapter-number",
    "when": {
      "source": {
        "TY": [
          "ECHAP"
        ]
      },
      "target": false
    }
  },
  {
    "source": "M1",
    "target": "status",
    "when": {
      "source": {
        "TY": [
          "GRANT"
        ]
      },
      "target": false
    }
  },
  {
    "source": "M1",
    "target": "page-first",
    "when": {
      "source": {
        "TY": [
          "LEGAL",
          "NEWS",
          "STAND"
        ]
      },
      "target": {
        "type": [
          "article-newspaper",
          "legislation",
          "regulation",
          "standard"
        ]
      }
    }
  },
  {
    "source": [
      "M1",
      "NV"
    ],
    "target": "number",
    "when": {
      "source": {
        "TY": "STAT"
      },
      "target": false
    }
  },
  {
    "source": [
      "NV",
      "M1"
    ],
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "ICOMM",
          "MANSCPT",
          "PCOMM"
        ]
      },
      "target": {
        "type": [
          "manuscript",
          "personal_communication",
          "post"
        ]
      }
    }
  },
  {
    "source": [
      "M1",
      "VL"
    ],
    "target": "accessed",
    "when": {
      "source": {
        "TY": [
          "ELEC"
        ]
      },
      "target": {
        "type": [
          "webpage"
        ]
      }
    }
  },
  {
    "source": "M2",
    "target": "page-first",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "INPR",
          "JFULL",
          "JOUR"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "review"
        ]
      }
    }
  },
  {
    "source": "M2",
    "target": "number-of-pages",
    "when": {
      "source": {
        "TY": [
          "PAMP"
        ]
      },
      "target": {
        "type": [
          "pamphlet"
        ]
      }
    }
  },
  {
    "source": "M3",
    "target": "genre",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BOOK",
          "CHART",
          "CLSWK",
          "COMP",
          "CPAPER",
          "CTLG",
          "DBASE",
          "DICT",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "EQUA",
          "FIGURE",
          "GEN",
          "GRANT",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MULTI",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "THES",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "book",
          "classic",
          "collection",
          "document",
          "entry",
          "entry-dictionary",
          "event",
          "figure",
          "graphic",
          "interview",
          "legislation",
          "manuscript",
          "map",
          "pamphlet",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "M3",
    "target": "medium",
    "when": {
      "source": {
        "TY": [
          "BLOG",
          "EBOOK",
          "ELEC",
          "MPCT",
          "MUSIC"
        ]
      },
      "target": {
        "type": [
          "broadcast",
          "motion_picture",
          "musical_score",
          "post-weblog",
          "webpage"
        ]
      }
    }
  },
  {
    "source": [
      "N1",
      "RN"
    ],
    "target": "note",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PCOMM",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": [
      "N1",
      "RN",
      "RP"
    ],
    "target": "note",
    "when": {
      "source": {
        "TY": [
          "PAT",
          "RPRT"
        ]
      },
      "target": {
        "type": [
          "patent",
          "report"
        ]
      }
    }
  },
  {
    "source": "NV",
    "target": "number-of-volumes",
    "when": {
      "source": {
        "TY": [
          "ANCIENT",
          "BOOK",
          "CLSWK",
          "CONF",
          "DICT",
          "ECHAP",
          "EDBOOK",
          "ENCYC",
          "GEN",
          "HEAR",
          "MUSIC",
          "SER"
        ]
      },
      "target": {
        "type": [
          "book",
          "classic",
          "collection",
          "document",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "hearing",
          "interview",
          "musical_score",
          "paper-conference",
          "performance",
          "periodical",
          "review-book",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "NV",
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "CTLG",
          "DATA"
        ]
      },
      "target": {
        "type": [
          "dataset",
          "entry"
        ]
      }
    }
  },
  {
    "source": "NV",
    "target": "version",
    "when": {
      "source": {
        "TY": [
          "EBOOK"
        ]
      },
      "target": false
    }
  },
  {
    "source": "NV",
    "target": "dimensions",
    "when": {
      "source": {
        "TY": [
          "GRANT"
        ]
      },
      "target": false
    }
  },
  {
    "source": "NV",
    "target": "collection-number",
    "when": {
      "source": {
        "TY": [
          "RPRT"
        ]
      },
      "target": {
        "type": [
          "report"
        ]
      }
    }
  },
  {
    "source": "OP",
    "target": "original-title",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "AGGR",
          "ANCIENT",
          "BOOK",
          "CHAP",
          "CLSWK",
          "CTLG",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "ENCYC",
          "GEN",
          "INPR",
          "JFULL",
          "JOUR",
          "MGZN",
          "MUSIC",
          "PAMP",
          "SER"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "book",
          "chapter",
          "classic",
          "collection",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "interview",
          "musical_score",
          "pamphlet",
          "performance",
          "periodical",
          "review",
          "review-book",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "OP",
    "target": "references",
    "when": {
      "source": {
        "TY": [
          "BILL",
          "CASE",
          "HEAR",
          "LEGAL",
          "STAT",
          "UNBILL"
        ]
      },
      "target": {
        "type": [
          "bill",
          "hearing",
          "legal_case",
          "legislation",
          "regulation"
        ]
      }
    }
  },
  {
    "source": "PB",
    "target": "publisher",
    "when": {
      "source": {
        "TY": [
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BLOG",
          "BOOK",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "LEGAL",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PCOMM",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "THES",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article-magazine",
          "article-newspaper",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legislation",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "PB",
    "target": "authority",
    "when": {
      "source": {
        "TY": [
          "CASE"
        ]
      },
      "target": {
        "type": [
          "legal_case"
        ]
      }
    }
  },
  {
    "source": "PB",
    "target": "archive",
    "when": {
      "source": {
        "TY": [
          "MANSCPT"
        ]
      },
      "target": {
        "type": [
          "manuscript"
        ]
      }
    }
  },
  {
    "source": [
      "PB",
      "A3"
    ],
    "target": "publisher",
    "when": {
      "source": {
        "TY": [
          "RPRT"
        ]
      },
      "target": {
        "type": [
          "report"
        ]
      }
    }
  },
  {
    "source": [
      "PB",
      "C5"
    ],
    "target": "publisher",
    "when": {
      "source": {
        "TY": [
          "STAT"
        ]
      },
      "target": false
    }
  },
  {
    "source": "PY",
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "CHAP",
          "CLSWK",
          "COMP",
          "DICT",
          "ECHAP",
          "GOVDOC",
          "MULTI",
          "NEWS"
        ]
      },
      "target": {
        "type": [
          "article-newspaper",
          "chapter",
          "classic",
          "entry-dictionary",
          "software"
        ]
      }
    }
  },
  {
    "source": "PY",
    "target": "event-date",
    "when": {
      "source": {
        "TY": [
          "CONF"
        ]
      },
      "target": {
        "type": [
          "paper-conference"
        ]
      }
    }
  },
  {
    "source": "RI",
    "target": "reviewed-title",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ANCIENT",
          "CHAP",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EJOUR",
          "ENCYC",
          "GEN",
          "GRANT",
          "INPR",
          "JFULL",
          "JOUR",
          "MGZN",
          "NEWS",
          "SER"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "chapter",
          "collection",
          "document",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "interview",
          "performance",
          "periodical",
          "review",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "RI",
    "target": "locator",
    "when": {
      "source": {
        "TY": [
          "STAT"
        ]
      },
      "target": false
    }
  },
  {
    "source": "SE",
    "target": "section",
    "when": {
      "source": {
        "TY": [
          "BILL",
          "GEN",
          "GOVDOC",
          "MUSIC",
          "NEWS",
          "STAT",
          "UNBILL"
        ]
      },
      "target": {
        "type": [
          "article-newspaper",
          "bill",
          "collection",
          "document",
          "event",
          "interview",
          "musical_score",
          "performance",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "SE",
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "BLOG"
        ]
      },
      "target": {
        "type": [
          "post-weblog"
        ]
      }
    }
  },
  {
    "source": "SE",
    "target": "chapter-number",
    "when": {
      "source": {
        "TY": [
          "CHAP",
          "SER"
        ]
      },
      "target": {
        "type": [
          "chapter",
          "periodical"
        ]
      }
    }
  },
  {
    "source": "SE",
    "target": "page",
    "when": {
      "source": {
        "TY": [
          "BOOK"
        ]
      },
      "target": {
        "type": [
          "book",
          "review-book"
        ]
      }
    }
  },
  {
    "source": "SE",
    "target": "submitted",
    "when": {
      "source": {
        "TY": [
          "CASE"
        ]
      },
      "target": {
        "type": [
          "legal_case"
        ]
      }
    }
  },
  {
    "source": "SE",
    "target": "number-of-pages",
    "when": {
      "source": {
        "TY": [
          "CTLG"
        ]
      },
      "target": {
        "type": [
          "entry"
        ]
      }
    }
  },
  {
    "source": "SE",
    "target": "original-date",
    "when": {
      "source": {
        "TY": [
          "DATA"
        ]
      },
      "target": {
        "type": [
          "dataset"
        ]
      }
    }
  },
  {
    "source": "SE",
    "target": "version",
    "when": {
      "source": {
        "TY": [
          "DICT"
        ]
      },
      "target": {
        "type": [
          "entry-dictionary"
        ]
      }
    }
  },
  {
    "source": "SE",
    "target": "locator",
    "when": {
      "source": {
        "TY": [
          "STAND"
        ]
      },
      "target": {
        "type": [
          "standard"
        ]
      }
    }
  },
  {
    "source": "SE",
    "target": "page-first",
    "when": {
      "source": {
        "TY": [
          "MANSCPT",
          "MGZN"
        ]
      },
      "target": {
        "type": [
          "article-magazine",
          "manuscript"
        ]
      }
    }
  },
  {
    "source": [
      "SE",
      "PY"
    ],
    "target": "issued",
    "when": {
      "source": {
        "TY": [
          "EJOUR"
        ]
      },
      "target": false
    }
  },
  {
    "source": [
      "SE",
      "T2"
    ],
    "target": "locator",
    "when": {
      "source": {
        "TY": [
          "LEGAL"
        ]
      },
      "target": {
        "type": [
          "legislation",
          "regulation"
        ]
      }
    }
  },
  {
    "source": "SN",
    "target": [
      "ISSN",
      "ISBN"
    ],
    "when": {
      "source": {
        "TY": [
          "AGGR",
          "CLSWK",
          "GEN"
        ]
      },
      "target": {
        "type": [
          "classic",
          "collection",
          "document",
          "event",
          "interview",
          "performance",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "SN",
    "target": "ISBN",
    "when": {
      "source": {
        "TY": [
          "ADVS",
          "ANCIENT",
          "BLOG",
          "BOOK",
          "CHAP",
          "COMP",
          "CONF",
          "CTLG",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "ELEC",
          "ENCYC",
          "HEAR",
          "MAP",
          "PAMP",
          "SER",
          "SLIDE",
          "SOUND",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "book",
          "chapter",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "hearing",
          "map",
          "pamphlet",
          "paper-conference",
          "periodical",
          "post-weblog",
          "review-book",
          "software",
          "song",
          "speech",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "SN",
    "target": "ISSN",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "DATA",
          "EJOUR",
          "INPR",
          "JFULL",
          "JOUR",
          "MGZN",
          "MUSIC",
          "NEWS"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "dataset",
          "musical_score",
          "review"
        ]
      }
    }
  },
  {
    "source": "SN",
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "DBASE",
          "GOVDOC"
        ]
      },
      "target": false
    }
  },
  {
    "source": [
      "SN",
      "M1"
    ],
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "RPRT"
        ]
      },
      "target": {
        "type": [
          "report"
        ]
      }
    }
  },
  {
    "source": [
      "SN",
      "SE",
      "M1"
    ],
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "PAT"
        ]
      },
      "target": {
        "type": [
          "patent"
        ]
      }
    }
  },
  {
    "source": [
      "SN",
      "T3"
    ],
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "LEGAL",
          "STAND"
        ]
      },
      "target": {
        "type": [
          "legislation",
          "regulation",
          "standard"
        ]
      }
    }
  },
  {
    "source": "SP",
    "target": "page",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "AGGR",
          "ANCIENT",
          "BILL",
          "CHAP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DBASE",
          "DICT",
          "ECHAP",
          "EJOUR",
          "ENCYC",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MGZN",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "STAND",
          "STAT",
          "UNBILL",
          "UNPB"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "chapter",
          "collection",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "hearing",
          "interview",
          "legislation",
          "manuscript",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "regulation",
          "report",
          "review",
          "standard",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "SP",
    "target": "number-of-pages",
    "when": {
      "source": {
        "TY": [
          "BOOK",
          "CLSWK",
          "EBOOK",
          "EDBOOK",
          "THES"
        ]
      },
      "target": {
        "type": [
          "book",
          "classic",
          "review-book",
          "thesis"
        ]
      }
    }
  },
  {
    "source": "SP",
    "target": "page-first",
    "when": {
      "source": {
        "TY": [
          "CASE"
        ]
      },
      "target": {
        "type": [
          "legal_case"
        ]
      }
    }
  },
  {
    "source": "SP",
    "target": "dimensions",
    "when": {
      "source": {
        "TY": [
          "MPCT"
        ]
      },
      "target": {
        "type": [
          "broadcast",
          "motion_picture"
        ]
      }
    }
  },
  {
    "source": "ST",
    "target": "title-short",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CLSWK",
          "COMP",
          "CONF",
          "CTLG",
          "DATA",
          "DICT",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "GEN",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "SV",
    "target": "collection-number",
    "when": {
      "source": {
        "TY": [
          "CHAP"
        ]
      },
      "target": {
        "type": [
          "chapter"
        ]
      }
    }
  },
  {
    "source": "T2",
    "target": "collection-title",
    "when": {
      "source": {
        "TY": [
          "AGGR",
          "BOOK",
          "CLSWK",
          "COMP",
          "CTLG",
          "DBASE",
          "ELEC",
          "MANSCPT",
          "MAP",
          "MPCT",
          "MULTI",
          "RPRT",
          "UNPB"
        ]
      },
      "target": {
        "type": [
          "book",
          "broadcast",
          "classic",
          "entry",
          "manuscript",
          "map",
          "motion_picture",
          "report",
          "review-book",
          "software",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "T2",
    "target": "container-title",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ANCIENT",
          "BILL",
          "BLOG",
          "CHAP",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ENCYC",
          "GEN",
          "INPR",
          "JFULL",
          "JOUR",
          "MGZN",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "SER",
          "STAT",
          "THES",
          "UNBILL"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "chapter",
          "collection",
          "document",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "interview",
          "musical_score",
          "pamphlet",
          "patent",
          "performance",
          "periodical",
          "post-weblog",
          "review",
          "thesis",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "T2",
    "target": "event",
    "when": {
      "source": {
        "TY": [
          "CONF",
          "CPAPER"
        ]
      },
      "target": {
        "type": [
          "paper-conference"
        ]
      }
    }
  },
  {
    "source": "T2",
    "target": "committee",
    "when": {
      "source": {
        "TY": [
          "HEAR"
        ]
      },
      "target": {
        "type": [
          "hearing"
        ]
      }
    }
  },
  {
    "source": "T2",
    "target": "section",
    "when": {
      "source": {
        "TY": [
          "STAND"
        ]
      },
      "target": {
        "type": [
          "standard"
        ]
      }
    }
  },
  {
    "source": "T3",
    "target": "collection-title",
    "when": {
      "source": {
        "TY": [
          "ADVS",
          "ANCIENT",
          "CHAP",
          "CONF",
          "DATA",
          "EBOOK",
          "ECHAP",
          "EJOUR",
          "GEN",
          "GOVDOC",
          "MUSIC",
          "SER",
          "SLIDE",
          "SOUND",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "chapter",
          "collection",
          "dataset",
          "document",
          "event",
          "interview",
          "musical_score",
          "paper-conference",
          "performance",
          "periodical",
          "song",
          "speech",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "TI",
    "target": "title",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": "TY",
    "target": "type"
  },
  {
    "source": "UR",
    "target": "URL",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "post-weblog",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty",
          "webpage"
        ]
      }
    }
  },
  {
    "source": [
      "UR",
      "L4"
    ],
    "target": "URL",
    "when": {
      "source": {
        "TY": [
          "HEAR"
        ]
      },
      "target": {
        "type": [
          "hearing"
        ]
      }
    }
  },
  {
    "source": "VL",
    "target": "volume",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "BILL",
          "BOOK",
          "CASE",
          "CHAP",
          "CLSWK",
          "CONF",
          "CPAPER",
          "CTLG",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ENCYC",
          "GEN",
          "GOVDOC",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MGZN",
          "MUSIC",
          "NEWS",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "UNBILL",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "chapter",
          "classic",
          "collection",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "musical_score",
          "paper-conference",
          "performance",
          "periodical",
          "regulation",
          "report",
          "review",
          "review-book",
          "song",
          "speech",
          "standard",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "VL",
    "target": "dimensions",
    "when": {
      "source": {
        "TY": [
          "CHART",
          "EQUA",
          "FIGURE"
        ]
      },
      "target": {
        "type": [
          "figure"
        ]
      }
    }
  },
  {
    "source": "VL",
    "target": "edition",
    "when": {
      "source": {
        "TY": [
          "COMP"
        ]
      },
      "target": {
        "type": [
          "software"
        ]
      }
    }
  },
  {
    "source": "VL",
    "target": "number",
    "when": {
      "source": {
        "TY": [
          "PAMP"
        ]
      },
      "target": {
        "type": [
          "pamphlet"
        ]
      }
    }
  },
  {
    "source": "VL",
    "target": "version",
    "when": {
      "source": {
        "TY": [
          "PAT"
        ]
      },
      "target": {
        "type": [
          "patent"
        ]
      }
    }
  },
  {
    "source": [
      "VL",
      "Y2"
    ],
    "target": "accessed",
    "when": {
      "source": {
        "TY": [
          "BLOG"
        ]
      },
      "target": {
        "type": [
          "post-weblog"
        ]
      }
    }
  },
  {
    "source": "Y2",
    "target": "accessed",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "ANCIENT",
          "ART",
          "BILL",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DICT",
          "EDBOOK",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "type": [
          "article",
          "article-journal",
          "article-magazine",
          "article-newspaper",
          "bill",
          "book",
          "broadcast",
          "chapter",
          "classic",
          "collection",
          "dataset",
          "document",
          "entry",
          "entry-dictionary",
          "entry-encyclopedia",
          "event",
          "figure",
          "graphic",
          "hearing",
          "interview",
          "legal_case",
          "legislation",
          "manuscript",
          "map",
          "motion_picture",
          "musical_score",
          "pamphlet",
          "paper-conference",
          "patent",
          "performance",
          "periodical",
          "personal_communication",
          "post",
          "regulation",
          "report",
          "review",
          "review-book",
          "software",
          "song",
          "speech",
          "standard",
          "thesis",
          "treaty"
        ]
      }
    }
  },
  {
    "source": "C4",
    "target": "author",
    "when": {
      "source": {
        "TY": [
          "BOOK",
          "CHAP",
          "EBOOK",
          "ECHAP",
          "EJOUR"
        ]
      },
      "target": {
        "reviewed-author": true,
        "type": [
          "book",
          "chapter",
          "review-book",
          "review"
        ]
      }
    }
  },
  {
    "source": "AU",
    "target": "reviewed-author",
    "when": {
      "source": {
        "C4": true,
        "TY": [
          "BOOK",
          "CHAP",
          "EBOOK",
          "ECHAP",
          "EJOUR"
        ]
      },
      "target": {
        "type": [
          "book",
          "chapter",
          "review-book",
          "review"
        ]
      }
    }
  },
  {
    "source": "TA",
    "target": "author",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "original-author": true,
        "translator": true
      }
    }
  },
  {
    "source": "AU",
    "target": "original-author",
    "when": {
      "source": {
        "TA": true,
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "translator": true
      }
    }
  },
  {
    "source": "TT",
    "target": "title",
    "when": {
      "source": {
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "original-author": true,
        "translator": true
      }
    }
  },
  {
    "source": "TI",
    "target": "original-title",
    "when": {
      "source": {
        "TT": true,
        "TY": [
          "ABST",
          "ADVS",
          "AGGR",
          "ANCIENT",
          "ART",
          "BILL",
          "BLOG",
          "BOOK",
          "CASE",
          "CHAP",
          "CHART",
          "CLSWK",
          "COMP",
          "CONF",
          "CPAPER",
          "CTLG",
          "DATA",
          "DBASE",
          "DICT",
          "EBOOK",
          "ECHAP",
          "EDBOOK",
          "EJOUR",
          "ELEC",
          "ENCYC",
          "EQUA",
          "FIGURE",
          "GEN",
          "GOVDOC",
          "GRANT",
          "HEAR",
          "ICOMM",
          "INPR",
          "JFULL",
          "JOUR",
          "LEGAL",
          "MANSCPT",
          "MAP",
          "MGZN",
          "MPCT",
          "MULTI",
          "MUSIC",
          "NEWS",
          "PAMP",
          "PAT",
          "PCOMM",
          "RPRT",
          "SER",
          "SLIDE",
          "SOUND",
          "STAND",
          "STAT",
          "THES",
          "UNBILL",
          "UNPB",
          "VIDEO"
        ]
      },
      "target": {
        "translator": true
      }
    }
  }
]

},{}],107:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _converters = _interopRequireDefault(require("../converters.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default = exports.default = [{
  source: 'TY',
  target: 'type'
}, {
  source: 'ID',
  target: 'id'
}, {
  source: ['T1', 'TI', 'CT'],
  target: 'title'
}, {
  source: 'BT',
  target: 'title',
  when: {
    source: {
      type: ['BOOK', 'UNPB'],
      T1: false,
      TI: false,
      CT: false
    },
    target: false
  }
}, {
  source: 'T2',
  target: 'container-title',
  when: {
    target: {
      type: ['bill', 'book', 'broadcast', 'chapter', 'dataset', 'entry', 'entry-dictionary', 'entry-encyclopedia', 'figure', 'graphic', 'interview', 'legal_case', 'legislation', 'manuscript', 'map', 'motion_picture', 'musical_score', 'pamphlet', 'paper-conference', 'patent', 'personal_communication', 'post', 'post-weblog', 'report', 'review', 'review-book', 'song', 'speech', 'thesis', 'treaty', 'webpage']
    }
  }
}, {
  source: 'BT',
  target: 'container-title',
  when: {
    source: {
      type: ['ABST', 'ADVS', 'ART', 'BILL', 'CASE', 'CHAP', 'COMP', 'CONF', 'CTLG', 'DATA', 'ELEC', 'GEN', 'HEAR', 'ICOMM', 'INPR', 'JFULL', 'JOUR', 'MAP', 'MGZN', 'MPCT', 'MUSIC', 'NEWS', 'PAMP', 'PAT', 'PCOMM', 'RPRT', 'SER', 'SLIDE', 'SOUND', 'STAT', 'THES', 'UNBILL', 'VIDEO'],
      T2: false
    },
    target: false
  }
}, {
  source: 'T3',
  target: 'collection-title'
}, {
  source: ['A1', 'AU'],
  target: 'author'
}, {
  source: ['A2', 'ED'],
  target: 'editor'
}, {
  source: 'A3',
  target: 'collection-editor'
}, {
  source: ['Y1', 'PY'],
  target: 'issued'
}, {
  source: 'Y2',
  target: 'event-date',
  convert: _converters.default.DATE,
  when: {
    source: {
      type: ['CONF', 'CPAPER']
    },
    target: {
      type: ['paper-conference']
    }
  }
}, {
  source: 'Y2',
  target: 'submitted',
  convert: _converters.default.DATE,
  when: {
    source: {
      type: ['PAT']
    },
    target: {
      type: 'patent'
    }
  }
}, {
  source: ['AB', 'N1'],
  target: 'note'
}, {
  source: 'N2',
  target: 'abstract'
}, {
  source: 'KW',
  target: 'keyword'
}, {
  source: ['JF', 'JO'],
  target: 'container-title',
  convert: _converters.default.ANY,
  when: {
    target: {
      type: ['article', 'article-journal', 'article-magazine', 'article-newspaper']
    }
  }
}, {
  source: ['JA', 'J1', 'J2'],
  target: 'container-title-short'
}, {
  source: 'VL',
  target: 'volume'
}, {
  source: ['IS', 'CP'],
  target: 'issue'
}, {
  source: 'SP',
  target: 'page-first'
}, {
  source: ['SP', 'EP'],
  target: 'page',
  convert: _converters.default.PAGE,
  when: {
    source: {
      SP: true,
      EP: true
    }
  }
}, {
  source: 'CY',
  target: 'publisher-place'
}, {
  source: 'PB',
  target: 'publisher'
}, {
  source: 'SN',
  target: ['ISSN', 'ISBN']
}, {
  source: 'AV',
  target: 'archive_location'
}, {
  source: 'UR',
  target: 'URL'
}];
},{"../converters.js":99}],108:[function(require,module,exports){
module.exports={
  "RIS": {
    "ABST": "article-journal",
    "ADVS": "motion_picture",
    "AGGR": "dataset",
    "ANCIENT": "classic",
    "ART": "graphic",
    "BILL": "bill",
    "BLOG": "post-weblog",
    "BOOK": "book",
    "CASE": "legal_case",
    "CHAP": "chapter",
    "CHART": "figure",
    "CLSWK": "classic",
    "COMP": "software",
    "CONF": "paper-conference",
    "CPAPER": "paper-conference",
    "CTLG": "entry",
    "DATA": "dataset",
    "DBASE": "dataset",
    "DICT": "entry-dictionary",
    "EBOOK": "book",
    "ECHAP": "chapter",
    "EDBOOK": "book",
    "EJOUR": "article-journal",
    "ELEC": "webpage",
    "ENCYC": "entry-encyclopedia",
    "EQUA": "article",
    "FIGURE": "figure",
    "GEN": "document",
    "GOVDOC": "report",
    "GRANT": "article",
    "HEAR": "hearing",
    "ICOMM": "personal_communication",
    "INPR": "article-journal",
    "JFULL": "article-journal",
    "JOUR": "article-journal",
    "LEGAL": "legislation",
    "MANSCPT": "manuscript",
    "MAP": "map",
    "MGZN": "article-magazine",
    "MPCT": "broadcast",
    "MULTI": "motion_picture",
    "MUSIC": "musical_score",
    "NEWS": "article-newspaper",
    "PAMP": "pamphlet",
    "PAT": "patent",
    "PCOMM": "personal_communication",
    "RPRT": "report",
    "SER": "periodical",
    "SLIDE": "motion_picture",
    "SOUND": "motion_picture",
    "STAND": "standard",
    "STAT": "legislation",
    "THES": "thesis",
    "UNBILL": "manuscript",
    "UNPB": "manuscript",
    "VIDEO": "motion_picture",
    "WEB": "webpage"
  },
  "CSL": {
    "article-journal": "JOUR",
    "article-magazine": "MGZN",
    "article-newspaper": "NEWS",
    "article": "JOUR",
    "bill": "BILL",
    "book": "BOOK",
    "broadcast": "MPCT",
    "chapter": "CHAP",
    "classic": "CLSWK",
    "collection": "GEN",
    "dataset": "DATA",
    "document": "GEN",
    "entry": "CTLG",
    "entry-dictionary": "DICT",
    "entry-encyclopedia": "ENCYC",
    "event": "GEN",
    "figure": "FIGURE",
    "graphic": "ART",
    "hearing": "HEAR",
    "interview": "GEN",
    "legal_case": "CASE",
    "legislation": "LEGAL",
    "manuscript": "MANSCPT",
    "map": "MAP",
    "motion_picture": "MPCT",
    "musical_score": "MUSIC",
    "pamphlet": "PAMP",
    "paper-conference": "CONF",
    "patent": "PAT",
    "performance": "GEN",
    "periodical": "SER",
    "personal_communication": "PCOMM",
    "post-weblog": "BLOG",
    "post": "ICOMM",
    "regulation": "LEGAL",
    "report": "RPRT",
    "review-book": "BOOK",
    "review": "JOUR",
    "software": "COMP",
    "song": "SOUND",
    "speech": "SOUND",
    "standard": "STAND",
    "thesis": "THES",
    "treaty": "GEN",
    "webpage": "ELEC"
  }
}

},{}],109:[function(require,module,exports){
"use strict";

require("@citation-js/plugin-cff");

require("@citation-js/plugin-github");

require("@citation-js/plugin-npm");

require("@citation-js/plugin-yaml");

require("@citation-js/plugin-zenodo");
},{"@citation-js/plugin-cff":73,"@citation-js/plugin-github":83,"@citation-js/plugin-npm":88,"@citation-js/plugin-yaml":125,"@citation-js/plugin-zenodo":126}],110:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parse = parse;
exports.parseAsync = parseAsync;
var _core = require("@citation-js/core");
const {
  fetchFile,
  fetchFileAsync
} = _core.util;
function parse(urls) {
  return [].concat(urls).map(fetchFile);
}
function parseAsync(urls) {
  return Promise.all([].concat(urls).map(fetchFileAsync));
}
},{"@citation-js/core":"citation-js"}],111:[function(require,module,exports){
module.exports={
  "langs": ["en", "mul"]
}

},{}],112:[function(require,module,exports){
module.exports={
  "versions": { "values": "all", "props": ["P348:all"] },

  "DistroWatchID": "P3112",
  "FramalibreID": "P4107",
  "RRID": "P9712",
  "SW_MATHID": "P6830",
  "SWHID": { "values": "any", "props": ["P6138", "P348#P6138"] }
}

},{}],113:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.parse = exports.parseEntities = parseEntities;
exports.parseAsync = exports.parseEntitiesAsync = parseEntitiesAsync;
exports.parseEntity = parseEntity;
var _core = require("@citation-js/core");
var response = _interopRequireWildcard(require("./response.js"));
var _prop = require("./prop.js");
var _props = _interopRequireDefault(require("./props.json"));
var _customProps = _interopRequireDefault(require("./customProps.json"));
var _ignoredProps = _interopRequireDefault(require("./ignoredProps.json"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function resolve(parts, {
  claims
}) {
  const [prop, qualifier] = parts[0].split('#');
  if (!claims[prop] || !claims[prop].length) {
    return;
  }
  if (parts.length === 1) {
    if (qualifier) {
      if (claims[prop][0].qualifiers[qualifier]) {
        return claims[prop][0].qualifiers[qualifier].map(value => ({
          value
        }));
      }
      return;
    }
    return claims[prop];
  }
  return resolve(parts.slice(1), claims[prop][0].value);
}
function resolveProp(prop_, entity, unknown) {
  const parts = prop_.split('.');
  unknown.delete(parts[0]);
  return resolve(parts, entity);
}
function prepareValue(statement, entity, unknown) {
  if (typeof statement !== 'object') {
    const value = resolveProp(statement, entity, unknown);
    return value && value[0].value;
  }
  const values = [].concat(...statement.props.map(prop => resolveProp(prop, entity, unknown)).filter(Boolean));
  if (statement.values === 'all') {
    return values[0] && values;
  } else {
    return values[0] && values[0].value;
  }
}
function parseEntity(entity) {
  const data = {
    id: entity.id,
    custom: {
      QID: entity.id
    },
    source: 'Wikidata'
  };
  const unknown = new Set(Object.keys(entity.claims));
  for (const prop in _props.default) {
    const input = prepareValue(_props.default[prop], entity, unknown);
    if (input) {
      const output = (0, _prop.parseProp)(prop, input, entity);
      if (output) {
        data[prop] = output;
      }
    }
  }
  for (const prop in _customProps.default) {
    const input = prepareValue(_customProps.default[prop], entity, unknown);
    if (input) {
      const output = (0, _prop.parseProp)(prop, input, entity);
      if (output) {
        data.custom[prop] = output;
      }
    }
  }
  for (const prop of unknown) {
    if (prop in _ignoredProps.default) {
      continue;
    }
    _core.logger.unmapped('[plugin-wikidata]', 'property', prop);
  }
  if (!data.title) {
    data.title = (0, _prop.getLabel)(entity);
  }
  if (data.type.slice(0, 6) === 'review') {
    delete data.keyword;
  } else {
    delete data['reviewed-title'];
    delete data['reviewed-author'];
  }
  if (data.recipient) {
    data.type = 'personal_communication';
  }
  if (data['event-title']) {
    data.type = 'paper-conference';
  }
  if (typeof data['part-number'] === 'number') {
    delete data['part-title'];
  } else if (typeof data['part-title'] === 'string') {
    delete data['part-number'];
  }
  if (data.type !== 'chapter' && data['chapter-number']) {
    delete data['chapter-number'];
  }
  if (data['original-author'] && !data.author) {
    data.author = data['original-author'];
  }
  return data;
}
async function parseEntitiesAsync({
  entities
}) {
  return (await response.parseAsync(entities)).map(parseEntity);
}
function parseEntities({
  entities
}) {
  return response.parse(entities).map(parseEntity);
}
},{"./customProps.json":112,"./ignoredProps.json":115,"./prop.js":117,"./props.json":118,"./response.js":119,"@citation-js/core":"citation-js"}],114:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.parse = parseWikidata;
var _wikidata = _interopRequireDefault(require("@larsgw/wikibase-sdk/commonjs/wikidata.org"));
var _config = _interopRequireDefault(require("./config.json"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function parseWikidata(data, langs) {
  const ids = Array.isArray(data) ? data : [data];
  for (const id of ids) {
    if (!/^Q[1-9][0-9]*$/.test(id)) {
      throw new Error(`Entity "${id}" not found`);
    }
  }
  const urls = _wikidata.default.getManyEntities({
    ids,
    languages: langs || _config.default.langs
  });
  return Array.isArray(urls) ? urls : [urls];
}

},{"./config.json":111,"@larsgw/wikibase-sdk/commonjs/wikidata.org":128}],115:[function(require,module,exports){
module.exports={
  "P2860": "Cites",
  "P921": "Main subject",
  "P3181": "OpenCitations bibliographic resource ID",
  "P364": "Original language of work"
}

},{}],116:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ref = exports.parsers = exports.formats = void 0;
var _core = require("@citation-js/core");
var id = _interopRequireWildcard(require("./id.js"));
var entity = _interopRequireWildcard(require("./entity.js"));
var prop = _interopRequireWildcard(require("./prop.js"));
var url = _interopRequireWildcard(require("./url.js"));
var api = _interopRequireWildcard(require("./api.js"));
var _config = _interopRequireDefault(require("./config.json"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const ref = exports.ref = '@wikidata';
const parsers = exports.parsers = {
  id,
  entity,
  prop,
  url,
  api
};
const formats = exports.formats = {
  '@wikidata/id': {
    parse: id.parse,
    parseType: {
      dataType: 'String',
      predicate: /^Q\d+$/
    }
  },
  '@wikidata/list+text': {
    parse(data) {
      return data.trim().split(/(?:[\s,]\s*)/g);
    },
    parseType: {
      dataType: 'String',
      predicate: /^\s*((?:Q\d+(?:[\s,]\s*))*Q\d+)\s*$/
    }
  },
  '@wikidata/api': {
    parse: api.parse,
    parseAsync: api.parseAsync,
    parseType: {
      dataType: 'String',
      predicate: /^(https?:\/\/(?:www\.)?wikidata.org\/w\/api\.php(?:\?.*)?)$/,
      extends: '@else/url'
    }
  },
  '@wikidata/array+api': {
    parse: api.parse,
    parseAsync: api.parseAsync,
    parseType: {
      dataType: 'Array',
      elementConstraint: '@wikidata/api'
    }
  },
  '@wikidata/url': {
    parse: url.parse,
    parseType: {
      dataType: 'String',
      predicate: /\/(Q\d+)(?:[#?/]|\s*$)/,
      extends: '@else/url'
    }
  },
  '@wikidata/list+object': {
    parse: id.parse,
    parseType: {
      dataType: 'Array',
      elementConstraint: '@wikidata/id'
    }
  },
  '@wikidata/object': {
    parse: entity.parse,
    parseAsync: entity.parseAsync,
    parseType: {
      dataType: 'SimpleObject',
      propertyConstraint: {
        props: 'entities'
      }
    }
  },
  '@wikidata/array+object': {
    parse(responses) {
      return responses.reduce((combined, {
        success,
        entities
      }) => {
        combined.success &= success;
        Object.assign(combined.entities, entities);
        return combined;
      });
    },
    parseType: {
      dataType: 'Array',
      elementConstraint: '@wikidata/object'
    },
    outputs: '@wikidata/object'
  },
  '@wikidata/prop': {
    parse: prop.parseProp
  },
  '@wikidata/type': {
    parse: prop.parseType
  }
};
_core.plugins.add(ref, {
  input: formats,
  config: _config.default
});
},{"./api.js":110,"./config.json":111,"./entity.js":113,"./id.js":114,"./prop.js":117,"./url.js":121,"@citation-js/core":"citation-js"}],117:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TYPE_PRIORITIES = void 0;
exports.getLabel = getLabel;
exports.default = exports.parse = exports.parseProp = parseProp;
exports.parseType = parseType;
var _core = require("@citation-js/core");
var _name = require("@citation-js/name");
var _date = require("@citation-js/date");
var _config = _interopRequireDefault(require("./config.json"));
var _types = _interopRequireDefault(require("./types.json"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function getNameString({
  value,
  qualifiers
}) {
  if (Array.isArray(qualifiers.P1932) && typeof qualifiers.P1932[0] === 'string') {
    return qualifiers.P1932[0];
  }
  if (typeof value === 'object' && value !== null) {
    return getLabel(value);
  }
  if (typeof value === 'string') {
    return value;
  }
  return null;
}
function parseName(claim) {
  const nameString = getNameString(claim);
  if (nameString === null) {
    return {
      literal: null
    };
  }
  const {
    value,
    qualifiers
  } = claim;
  const isPerson = typeof value !== 'object' || value && value.claims.P31 && value.claims.P31.some(claim => claim.value === 'Q5');
  const name = isPerson ? (0, _name.parse)(nameString) : {
    literal: nameString
  };
  const ordinal = qualifiers.P1545 ? parseInt(qualifiers.P1545[0]) : null;
  if (ordinal !== null) {
    name._ordinal = ordinal;
  }
  return name;
}
function parseNames(values) {
  return values.map(parseName).sort((a, b) => a._ordinal - b._ordinal);
}
function getPlace(value) {
  const country = value.claims.P17[0].value;
  const shortNames = country.claims.P1813.filter(({
    qualifiers: {
      P31
    }
  }) => !P31 || P31[0] !== 'Q28840786');
  return getLabel(value) + ', ' + (shortNames[0] || country.claims.P1448[0]).value;
}
function getTitle(value) {
  return value.claims.P1476 ? value.claims.P1476[0].value : getLabel(value);
}
function parseKeywords(values) {
  return values.map(({
    value
  }) => getLabel(value)).filter(value => typeof value === 'string' && value !== '').join(',');
}
function parseDateRange(dates) {
  return {
    'date-parts': dates.map(date => (0, _date.parse)(date.value)).filter(date => date && date['date-parts']).map(date => date['date-parts'][0])
  };
}
function parseVersion(version) {
  const output = {
    version: version.value
  };
  if (version.qualifiers.P577) {
    output.issued = (0, _date.parse)(version.qualifiers.P577[0]);
  }
  if (version.qualifiers.P356) {
    output.DOI = version.qualifiers.P356[0];
  }
  if (version.qualifiers.P6138) {
    output.SWHID = version.qualifiers.P6138[0];
  }
  return output;
}
const TYPE_PRIORITIES = exports.TYPE_PRIORITIES = {
  'review-book': 10,
  review: 9,
  'entry-dictionary': 5,
  'entry-encyclopedia': 5,
  map: 5,
  dataset: 4,
  legislation: 1,
  'article-magazine': 0,
  bill: 0,
  chapter: 0,
  classic: 0,
  collection: 0,
  entry: 0,
  figure: 0,
  graphic: 0,
  hearing: 0,
  interview: 0,
  legal_case: 0,
  manuscript: 0,
  motion_picture: 0,
  musical_score: 0,
  pamphlet: 0,
  'paper-conference': 0,
  patent: 0,
  personal_communication: 0,
  'post-weblog': 0,
  report: 0,
  song: 0,
  speech: 0,
  standard: 0,
  thesis: 0,
  treaty: 0,
  broadcast: -1,
  'article-newspaper': -1,
  'article-journal': -1,
  periodical: -2,
  regulation: -2,
  post: -5,
  webpage: -6,
  software: -7,
  article: -9,
  book: -10,
  performance: -11,
  event: -12,
  document: -100
};
function parseProp(prop, value, entity) {
  switch (prop) {
    case 'type':
      return parseType(value);
    case 'author':
    case 'chair':
    case 'curator':
    case 'container-author':
    case 'collection-editor':
    case 'composer':
    case 'director':
    case 'editor':
    case 'executive-producer':
    case 'guest':
    case 'host':
    case 'illustrator':
    case 'narrator':
    case 'organizer':
    case 'original-author':
    case 'performer':
    case 'producer':
    case 'recipient':
    case 'reviewed-author':
    case 'script-writer':
    case 'translator':
      return parseNames(value);
    case 'issued':
    case 'original-date':
      return (0, _date.parse)(value);
    case 'event-date':
      return parseDateRange(value);
    case 'keyword':
      return parseKeywords(value);
    case 'container-title':
    case 'collection-title':
    case 'event-title':
    case 'medium':
    case 'publisher':
    case 'original-publisher':
      return getTitle(value);
    case 'event-place':
    case 'jurisdiction':
    case 'original-publisher-place':
    case 'publisher-place':
      return getPlace(value);
    case 'chapter-number':
    case 'collection-number':
      return parseInt(value[0]);
    case 'number-of-volumes':
      return value.length;
    case 'versions':
      return value.map(parseVersion);
    default:
      return value;
  }
}
function parseType(type) {
  const unmapped = Array.isArray(type) ? type : [type];
  const mapped = unmapped.map(type => _types.default[type.value]).filter(Boolean);
  if (!mapped.length) {
    _core.logger.unmapped('[plugin-wikidata]', 'publication type', type);
    return 'document';
  }
  mapped.sort((a, b) => TYPE_PRIORITIES[b] - TYPE_PRIORITIES[a]);
  return mapped[0];
}
function getLabel(entity) {
  if (!entity) {
    return undefined;
  }
  const lang = _config.default.langs.find(lang => entity.labels[lang]);
  return entity.labels[lang];
}
},{"./config.json":111,"./types.json":120,"@citation-js/core":"citation-js","@citation-js/date":43,"@citation-js/name":46}],118:[function(require,module,exports){
module.exports={
  "author": {
    "values": "all",
    "props": ["P50", "P2093", "P170", "P178"]
  },
  "composer": {
    "values": "all",
    "props": ["P86"]
  },
  "chair": {
    "values": "all",
    "props": ["P488"]
  },
  "curator": {
    "values": "all",
    "props": ["P1640"]
  },
  "executive-producer": {
    "values": "all",
    "props": ["P1431"]
  },
  "guest": {
    "values": "all",
    "props": ["P5030"]
  },
  "host": {
    "values": "all",
    "props": ["P371"]
  },
  "narrator": {
    "values": "all",
    "props": ["P2438"]
  },
  "organizer": {
    "values": "all",
    "props": ["P664"]
  },
  "performer": {
    "values": "all",
    "props": ["P175"]
  },
  "producer": {
    "values": "all",
    "props": ["P162"]
  },
  "script-writer": {
    "values": "all",
    "props": ["P58"]
  },

  "chapter-number": {
    "values": "any",
    "props": ["P1433#P1545", "P361#P1545"]
  },

  "collection-editor": {
    "values": "all",
    "props": ["P179.P98"]
  },
  "collection-number": {
    "values": "any",
    "props": ["P179#P1545"]
  },
  "collection-title": "P179",

  "container-author": {
    "values": "all",
    "props": ["P1433.P50", "P1433.P2093", "P361.P50", "P361.P2093"]
  },
  "container-title": { "values": "any", "props": ["P1433", "P361"] },
  "container-title-short": { "values": "any", "props": ["P1433.P1813", "P1433.P1160"] },

  "director": {
    "values": "all",
    "props": ["P57"]
  },
  "DOI": "P356",
  "edition": "P393",
  "editor": {
    "values": "all",
    "props": ["P98"]
  },

  "event-title": "P1433.P4745",
  "event-date": {
    "values": "all",
    "props": ["P1433.P4745.P580", "P1433.P4745.P582"]
  },
  "event-place": "P1433.P4745.P276",

  "illustrator": {
    "values": "all",
    "props": ["P110"]
  },
  "ISBN": {
    "values": "any",
    "props": ["P212", "P957"]
  },
  "ISSN": "P1433.P236",
  "issue": { "values": "any", "props": ["P433", "P1433#P433"] },
  "issued": { "values": "any", "props": ["P577", "P1433#P577", "P348#P577"]},
  "journalAbbreviation": { "values": "any", "props": ["P1433.P1813", "P1433.P1160"] },
  "jurisdiction": "P1001",
  "keyword": {
    "values": "all",
    "props": ["P921"]
  },
  "language": {
    "values": "any",
    "props": ["P407.P218", "P364.P218"]
  },
  "medium": { "values": "any", "props": ["P437", "P186"] },
  "number-of-pages": "P1104",
  "number-of-volumes": {
    "values": "all",
    "props": ["P179.P527"]
  },

  "original-author": {
    "values": "all",
    "props": ["P629.P50", "P629.P2093"]
  },
  "original-date": "P629.P577",
  "original-publisher": "P629.P123",
  "original-publisher-place": {
    "values": "any",
    "props": ["P629.P123.P740", "P629.P123.P159"]
  },
  "original-title": "P629.P1476",

  "page": { "values": "any", "props": ["P304", "P1433#P304"]},
  "part-number": "P792",
  "part-title": "P792",
  "PMID": "P698",
  "PMCID": "P932",

  "publisher": "P123",
  "publisher-place": { "values": "any", "props": ["P123.P740", "P123.P159"]},

  "recipient": {
    "values": "all",
    "props": ["P1817"]
  },

  "reviewed-title": "P921.P1476",
  "reviewed-author": {
    "values": "all",
    "props": ["P921.P50", "P921.P2093"]
  },

  "scale": "P1752",
  "shortTitle": "P1813",
  "title": "P1476",
  "title-short": "P1813",
  "translator": {
    "values": "all",
    "props": ["P655"]
  },
  "type": { "values": "all", "props": ["P31"] },
  "version": "P348",
  "volume": { "values": "any", "props": ["P478", "P1433#P478"] },
  "URL": {
    "values": "any",
    "props": ["P856", "P953", "P2699"]
  }
}

},{}],119:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fillCache = fillCache;
exports.fillCacheAsync = fillCacheAsync;
exports.parse = parse;
exports.parseAsync = parseAsync;
var _wikidata = _interopRequireDefault(require("@larsgw/wikibase-sdk/commonjs/wikidata.org"));
var _api = require("./api.js");
var _id = require("./id.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
const SIMPLIFY_OPTS = {
  keepQualifiers: true,
  timeConverter: 'simple-day'
};
const FETCH_PLACE = {
  P17: null
};
const FETCH_PUBLISHER = {
  P740: FETCH_PLACE,
  P159: FETCH_PLACE
};
const FETCH_ADDITIONAL = {
  P50: null,
  P57: null,
  P58: null,
  P86: null,
  P98: null,
  P110: null,
  P162: null,
  P170: null,
  P175: null,
  P178: null,
  P371: null,
  P488: null,
  P655: null,
  P664: null,
  P1431: null,
  P1640: null,
  P1817: null,
  P2438: null,
  P5030: null,
  P921: {
    P50: null
  },
  P407: null,
  P364: null,
  P123: FETCH_PUBLISHER,
  P629: {
    P50: null,
    P123: FETCH_PUBLISHER
  },
  P437: null,
  P186: null,
  P179: {
    P98: null
  },
  P1433: {
    P4745: {
      P276: FETCH_PLACE
    }
  },
  P361: {
    P50: null
  }
};
function collectAdditionalIds(entity, needed) {
  const additionalIds = [];
  if (!needed) {
    return additionalIds;
  }
  entity._needed = Object.assign(entity._needed || {}, needed);
  for (const prop in entity.claims) {
    if (prop in needed) {
      for (const claim of entity.claims[prop]) {
        if (claim.value) {
          var _claim$value$id;
          additionalIds.push((_claim$value$id = claim.value.id) !== null && _claim$value$id !== void 0 ? _claim$value$id : claim.value);
        }
      }
    }
  }
  return additionalIds;
}
function completeResponse(entities, old) {
  if (!old) {
    const allIds = [];
    for (const id in entities) {
      const ids = collectAdditionalIds(entities[id], FETCH_ADDITIONAL);
      for (const id of ids) {
        if (!allIds.includes(id)) {
          allIds.push(id);
        }
      }
    }
    return allIds;
  }
  const ids = [];
  for (const id of old) {
    const entity = entities[id];
    if (!entity._needed) {
      continue;
    }
    for (const prop in entity.claims) {
      if (prop in entity._needed) {
        for (const claim of entity.claims[prop]) {
          if (claim.value && claim.value.id) {
            continue;
          }
          claim.value = entities[claim.value];
          ids.push(...collectAdditionalIds(claim.value, entity._needed[prop]));
        }
      }
    }
    delete entity._needed;
  }
  return ids;
}
function simplifyEntities(entities) {
  for (const id in entities) {
    if (entities[id].missing === '') {
      throw new Error(`Entity "${id}" not found`);
    }
  }
  const simplified = _wikidata.default.simplify.entities(entities, SIMPLIFY_OPTS);
  for (const id in entities) {
    const claims = entities[id].claims;
    if (claims.P348) {
      simplified[id].claims['P348:all'] = _wikidata.default.simplify.propertyClaims(claims.P348, _objectSpread(_objectSpread({}, SIMPLIFY_OPTS), {}, {
        keepNonTruthy: true,
        keepRank: true
      })).filter(claim => claim.rank !== 'deprecated');
    }
  }
  return simplified;
}
function initLoopState(entities, cache) {
  return {
    needed: completeResponse(cache),
    incomplete: Object.keys(entities)
  };
}
function filterIdsAndGetUrls(needed, cache) {
  const shouldFetch = needed.filter((id, i) => !(id in cache) && needed.indexOf(id) === i);
  return (0, _id.parse)(shouldFetch);
}
function addItemsToCache(response, cache) {
  const {
    entities
  } = JSON.parse(response);
  Object.assign(cache, simplifyEntities(entities));
}
function updateLoopState(state, cache) {
  return {
    needed: completeResponse(cache, state.incomplete),
    incomplete: state.needed
  };
}
function finalizeItems(entities, cache) {
  return Object.keys(entities).map(id => cache[id]);
}
function fillCache(entities) {
  const cache = simplifyEntities(entities);
  let state = initLoopState(entities, cache);
  while (state.needed.length) {
    const urls = filterIdsAndGetUrls(state.needed, cache);
    urls.map(url => addItemsToCache((0, _api.parse)(url), cache));
    state = updateLoopState(state, cache);
  }
  return cache;
}
function parse(entities) {
  const cache = fillCache(entities);
  return finalizeItems(entities, cache);
}
async function fillCacheAsync(entities) {
  const cache = simplifyEntities(entities);
  let state = initLoopState(entities, cache);
  while (state.needed.length) {
    const urls = filterIdsAndGetUrls(state.needed, cache);
    await Promise.all(urls.map(async url => addItemsToCache(await (0, _api.parseAsync)(url), cache)));
    state = updateLoopState(state, cache);
  }
  return cache;
}
async function parseAsync(entities) {
  const cache = await fillCacheAsync(entities);
  return finalizeItems(entities, cache);
}
},{"./api.js":110,"./id.js":114,"@larsgw/wikibase-sdk/commonjs/wikidata.org":128}],120:[function(require,module,exports){
module.exports={"Q2377289":"book","Q2396513":"book","Q2537127":"book","Q2787237":"book","Q2831984":"periodical","Q2919501":"book","Q3257187":"book","Q3257212":"book","Q3423631":"dataset","Q3739522":"book","Q3831846":"book","Q3831847":"book","Q3915339":"book","Q3975991":"book","Q4043103":"book","Q4067007":"book","Q4198233":"book","Q4224691":"book","Q4230425":"book","Q4350742":"book","Q4369478":"book","Q4430192":"book","Q4515179":"book","Q4677625":"book","Q4931288":"book","Q4942984":"book","Q4943243":"book","Q5073531":"book","Q5093328":"book","Q5159310":"book","Q5189957":"book","Q5360398":"book","Q5560014":"book","Q5591880":"book","Q6165948":"book","Q6374241":"book","Q6675210":"book","Q6890037":"book","Q7204530":"book","Q7291983":"book","Q7830544":"book","Q8051587":"book","Q8275050":"book","Q9138748":"book","Q10438505":"book","Q10656197":"book","Q10666342":"book","Q10666349":"book","Q10863072":"book","Q10911540":"book","Q10916116":"book","Q11387634":"book","Q11397976":"book","Q11424383":"book","Q11503981":"book","Q11567160":"book","Q11589491":"book","Q11659402":"book","Q11750596":"book","Q11976342":"book","Q12021072":"book","Q12215439":"book","Q12310958":"book","Q12327390":"book","Q12424981":"book","Q12731131":"book","Q13032001":"book","Q13430107":"book","Q13636757":"book","Q13751595":"book","Q14625770":"book","Q16385949":"book","Q16507688":"book","Q16636670":"book","Q16670817":"book","Q16736578":"book","Q16968990":"book","Q17590416":"book","Q17859673":"book","Q19379268":"book","Q19602268":"book","Q21446882":"book","Q21550981":"book","Q21598767":"book","Q21662746":"book","Q22988237":"book","Q25679217":"book","Q26267321":"book","Q26271743":"book","Q27277147":"book","Q28062188":"book","Q29154430":"book","Q29586870":"book","Q31075282":"book","Q31192474":"book","Q31441034":"book","Q31777584":"book","Q31946409":"book","Q52005090":"book","Q52153485":"book","Q110078641":"book","Q110118645":"book","Q110346117":"book","Q110569815":"book","Q110979523":"book","Q111028843":"book","Q111588306":"book","Q111594734":"book","Q112045634":"book","Q112220796":"book","Q113620531":"book","Q114381139":"book","Q115161669":"book","Q115164838":"book","Q115920545":"book","Q116790239":"book","Q116822536":"book","Q116907594":"book","Q117188610":"book","Q117208234":"book","Q117314865":"book","Q117717830":"book","Q117757257":"book","Q117801573":"book","Q117802773":"book","Q117826024":"book","Q117886442":"book","Q117886475":"book","Q117886527":"book","Q117886554":"book","Q117886578":"book","Q117886621":"book","Q117886630":"book","Q117886648":"book","Q117908863":"book","Q118013550":"book","Q118014238":"book","Q118015086":"book","Q118015701":"book","Q118024701":"book","Q118025065":"book","Q118026312":"book","Q118027132":"book","Q118027787":"book","Q118046319":"book","Q118046669":"book","Q118047132":"book","Q118047530":"book","Q118106928":"book","Q118106993":"book","Q118107006":"book","Q118107030":"book","Q118107045":"book","Q118162549":"book","Q118398063":"book","Q118398971":"book","Q118434148":"book","Q118458872":"book","Q118459392":"book","Q118459455":"book","Q118459641":"book","Q118581649":"book","Q118592380":"book","Q118640121":"book","Q53731850":"book","Q55610842":"book","Q58142059":"book","Q58807269":"book","Q60226001":"book","Q60475414":"book","Q60475468":"book","Q60533444":"book","Q60627667":"book","Q60793696":"book","Q61696018":"book","Q63720062":"book","Q63922229":"book","Q65085460":"book","Q65769536":"book","Q65769568":"book","Q65769781":"book","Q65770793":"book","Q66382988":"book","Q72263827":"book","Q73153914":"book","Q83818856":"book","Q89676823":"book","Q92257259":"book","Q92259224":"book","Q97501585":"book","Q99340932":"book","Q102700083":"dataset","Q104438918":"book","Q105623646":"book","Q106597511":"book","Q106599082":"book","Q106838943":"book","Q107026784":"book","Q107196901":"book","Q108837752":"book","Q187947":"musical_score","Q191067":"article","Q36774":"webpage","Q253623":"patent","Q637866":"review-book","Q428148":"regulation","Q1580166":"entry-dictionary","Q861911":"speech","Q2334719":"legal_case","Q5707594":"article-newspaper","Q1172284":"dataset","Q131569":"treaty","Q10870555":"report","Q13433827":"entry-encyclopedia","Q13442814":"article-journal","Q7216866":"post","Q17928402":"post-weblog","Q9388534":"collection","Q23927052":"paper-conference","Q545861":"hearing","Q317623":"standard","Q11578774":"broadcast","Q686822":"bill","Q1266946":"thesis","Q1980247":"chapter","Q106833":"book","Q128093":"book","Q162827":"book","Q193495":"book","Q203490":"book","Q216665":"book","Q241996":"book","Q254554":"book","Q273610":"book","Q448980":"book","Q489637":"book","Q567488":"book","Q604219":"book","Q605076":"book","Q642946":"book","Q727715":"manuscript","Q756230":"software","Q30070590":"article-magazine","Q890239":"book","Q913554":"book","Q944359":"book","Q1009641":"book","Q1072884":"book","Q1106827":"book","Q1184488":"book","Q1250896":"book","Q1250897":"book","Q1294318":"software","Q1311092":"book","Q1415108":"book","Q1459574":"book","Q1496857":"book","Q1507226":"book","Q1528894":"book","Q1533243":"book","Q1569424":"book","Q1605954":"book","Q1609706":"book","Q1634209":"book","Q1650727":"dataset","Q1711593":"book","Q1760610":"periodical","Q1785330":"book","Q1792377":"book","Q1828184":"book","Q1870591":"manuscript","Q1883939":"book","Q1986787":"book","Q2069066":"book","Q2072218":"book","Q2107273":"book","Q2128336":"book","Q2135225":"book","Q2137648":"book","Q2208044":"book","Q2314679":"book","Q2331348":"book","Q2363145":"book","Q2364229":"book","Q3331189":"book","Q265158":"review","Q7725634":"book","Q1656682":"event","Q30070753":"figure","Q4006":"map","Q11424":"motion_picture","Q178651":"interview","Q3055347":"entry","Q7366":"song","Q87167":"manuscript","Q7397":"software","Q571":"book","Q1002697":"periodical","Q49371":"legislation","Q35140":"performance","Q133792":"map","Q162206":"map","Q216526":"map","Q320228":"map","Q328720":"map","Q352416":"map","Q366511":"map","Q441903":"map","Q573980":"map","Q575857":"map","Q653848":"map","Q715789":"map","Q842617":"map","Q1061420":"map","Q1140423":"map","Q1362775":"map","Q1412406":"map","Q1453402":"map","Q1501880":"map","Q1502030":"map","Q1550537":"map","Q1609964":"map","Q1664468":"map","Q1756436":"map","Q1783108":"map","Q2089517":"map","Q2127425":"map","Q2177089":"map","Q2309464":"map","Q2328087":"map","Q2368091":"map","Q2470969":"map","Q2471702":"map","Q2620815":"map","Q2656361":"map","Q2686231":"map","Q2940478":"map","Q2940522":"map","Q3509676":"map","Q3515498":"map","Q3965372":"map","Q4120609":"map","Q4388138":"map","Q5177325":"map","Q5434353":"map","Q5594885":"map","Q6017843":"map","Q6158810":"map","Q6664848":"map","Q7104865":"map","Q7127170":"map","Q7291975":"map","Q7323492":"map","Q7646471":"map","Q7809952":"map","Q118640234":"book","Q118640319":"book","Q118669403":"book","Q118669511":"book","Q118910266":"book","Q119495518":"book","Q10494298":"map","Q10503791":"map","Q10524645":"map","Q120334588":"book","Q121084782":"book","Q121410729":"book","Q121410830":"book","Q121603363":"book","Q122644068":"book","Q122923527":"book","Q122979920":"book","Q123241820":"book","Q123383353":"book","Q123419118":"book","Q123531402":"book","Q123537163":"book","Q123655426":"book","Q123668570":"book","Q123686155":"book","Q123920085":"book","Q123920353":"book","Q124308725":"book","Q124337939":"book","Q124344213":"book","Q124357259":"book","Q124357820":"book","Q124363998":"book","Q124364008":"book","Q124364437":"book","Q124364475":"book","Q124393873":"book","Q124393940":"book","Q124665679":"book","Q124666095":"book","Q124727171":"book","Q124851960":"book","Q124936299":"book","Q124936323":"book","Q124963380":"book","Q10638780":"map","Q10650543":"map","Q10876401":"map","Q11391965":"map","Q11426259":"map","Q12059912":"map","Q177771":"song","Q178122":"song","Q261434":"song","Q12325909":"map","Q318894":"song","Q319448":"song","Q380233":"song","Q484692":"song","Q493169":"song","Q499042":"song","Q574784":"song","Q600094":"song","Q608862":"song","Q661651":"song","Q744327":"song","Q758422":"song","Q784074":"song","Q844450":"song","Q15877105":"map","Q16874950":"map","Q17047956":"map","Q19819209":"map","Q21935483":"map","Q23887460":"map","Q25305175":"map","Q56753859":"map","Q60981865":"map","Q61868337":"map","Q62071263":"map","Q63872468":"map","Q64006414":"map","Q64138390":"map","Q65962034":"map","Q66495627":"map","Q75085545":"map","Q86436436":"map","Q91985453":"map","Q97372097":"map","Q104885681":"map","Q105872368":"map","Q106318882":"map","Q106585509":"map","Q106963642":"map","Q107629186":"map","Q108121955":"map","Q109359818":"map","Q109360787":"map","Q109362815":"map","Q112076892":"map","Q112221897":"map","Q112261893":"map","Q112863422":"map","Q113221355":"map","Q115922378":"map","Q115937352":"map","Q117756329":"map","Q120830011":"map","Q121563476":"map","Q121564225":"map","Q121568543":"map","Q122193762":"map","Q124436182":"map","Q124609313":"map","Q124610811":"map","Q124611145":"map","Q124623338":"map","Q124623375":"map","Q124632211":"map","Q124632215":"map","Q124634670":"map","Q124635070":"map","Q124635122":"map","Q124635255":"map","Q124636282":"map","Q124639951":"map","Q124644531":"map","Q124648747":"map","Q124708770":"map","Q124708894":"map","Q124708939":"map","Q124708949":"map","Q124711407":"map","Q124719786":"map","Q124739744":"map","Q124745462":"map","Q124747538":"map","Q124747666":"map","Q124748104":"map","Q124748422":"map","Q124838854":"map","Q124839648":"map","Q125125744":"map","Q125125753":"map","Q125166008":"map","Q873000":"song","Q943929":"song","Q944800":"song","Q1009280":"song","Q1033810":"song","Q1033813":"song","Q1069070":"song","Q1148122":"song","Q1228189":"song","Q1229479":"song","Q1236108":"song","Q1288193":"song","Q1510942":"song","Q1779217":"song","Q1779319":"song","Q1899706":"song","Q1942905":"song","Q1947725":"song","Q1963108":"song","Q2038845":"song","Q2058180":"song","Q2058312":"song","Q2108499":"song","Q2138639":"song","Q2165184":"song","Q2212946":"song","Q2281713":"song","Q2334774":"song","Q2358279":"song","Q2440572":"song","Q2544997":"song","Q2596399":"song","Q2891357":"song","Q2894096":"song","Q2956164":"song","Q3246270":"song","Q3345491":"song","Q3482281":"song","Q3562031":"song","Q3656514":"song","Q3843655":"song","Q3924081":"song","Q3975956":"song","Q4770819":"song","Q4797274":"song","Q5031532":"song","Q5037289":"song","Q5151790":"song","Q5529931":"song","Q5681688":"song","Q5747946":"song","Q6781835":"song","Q7257251":"song","Q7314000":"song","Q7561608":"song","Q7579604":"song","Q7824869":"song","Q8053529":"song","Q8261762":"song","Q10669480":"song","Q10677514":"song","Q10718549":"song","Q11214531":"song","Q11341610":"song","Q11410717":"song","Q11496089":"song","Q11502655":"song","Q11588375":"song","Q11637394":"song","Q11660625":"song","Q12257012":"song","Q12300621":"song","Q12520649":"song","Q12819160":"song","Q12976278":"song","Q12985660":"song","Q13212139":"song","Q13829124":"song","Q15810872":"song","Q15907187":"song","Q15974722":"song","Q16084298":"song","Q16891251":"song","Q16912992":"song","Q17102166":"song","Q17118203":"song","Q17118736":"song","Q17150323":"song","Q17637761":"song","Q20107778":"song","Q20579345":"song","Q20619908":"song","Q20737166":"song","Q21653344":"song","Q23808313":"song","Q25022242":"song","Q25452063":"song","Q28666781":"song","Q28704254":"song","Q39086064":"song","Q93661":"dataset","Q104851":"software","Q116112":"software","Q131093":"software","Q137742":"software","Q166142":"software","Q208218":"software","Q210499":"software","Q218616":"software","Q281039":"software","Q282283":"software","Q339628":"software","Q358785":"software","Q386197":"software","Q438556":"software","Q444835":"software","Q528166":"software","Q529029":"software","Q574582":"software","Q581319":"software","Q596391":"software","Q598205":"software","Q604270":"software","Q629399":"software","Q639653":"software","Q676202":"software","Q694007":"software","Q735918":"software","Q767899":"software","Q806106":"software","Q816659":"software","Q830743":"software","Q854840":"software","Q856108":"software","Q861170":"software","Q872058":"software","Q42681239":"song","Q48747276":"song","Q48952271":"song","Q56299718":"song","Q56572789":"song","Q57248574":"song","Q59032066":"song","Q61688673":"song","Q63141557":"song","Q64138195":"song","Q64139002":"song","Q64152470":"song","Q64152591":"song","Q65286306":"song","Q67608251":"song","Q341":"software","Q416":"periodical","Q11287":"software","Q14001":"software","Q19541":"software","Q35127":"software","Q81616558":"song","Q58199":"software","Q91192165":"song","Q93540236":"song","Q94499224":"song","Q97375316":"song","Q99773493":"song","Q102250909":"song","Q104310542":"song","Q104831709":"song","Q107029565":"song","Q108823220":"song","Q109566187":"song","Q109566342":"song","Q109566383":"song","Q109566452":"song","Q110297557":"song","Q110647181":"song","Q111009299":"song","Q111311052":"song","Q111535905":"song","Q114878593":"song","Q115159914":"song","Q115159995":"song","Q115159999":"song","Q115160318":"song","Q116505162":"song","Q116580766":"song","Q117031611":"song","Q117085666":"song","Q117473304":"song","Q122876491":"song","Q123498448":"song","Q123739488":"song","Q124296754":"song","Q124632948":"song","Q124638425":"song","Q124653470":"song","Q124725414":"song","Q124736975":"song","Q124736999":"song","Q124737704":"song","Q124796151":"song","Q876057":"software","Q884270":"software","Q891055":"software","Q893130":"software","Q907342":"software","Q943442":"standard","Q946715":"software","Q956086":"software","Q956238":"software","Q991306":"software","Q999154":"software","Q1000501":"software","Q1003012":"software","Q1004415":"software","Q1023826":"software","Q1035852":"software","Q1035935":"software","Q1092177":"software","Q1096695":"software","Q1124648":"software","Q1143070":"software","Q1156072":"software","Q1156881":"software","Q1172313":"software","Q1172474":"software","Q1178921":"software","Q1224694":"software","Q1254596":"software","Q1275377":"software","Q1318054":"software","Q1335007":"software","Q1345429":"software","Q1369666":"software","Q1371279":"software","Q1384501":"software","Q1386743":"software","Q1403556":"software","Q1419081":"software","Q1427675":"software","Q1475717":"review","Q1480561":"software","Q1531370":"software","Q1594330":"software","Q1641413":"software","Q1668023":"software","Q1674651":"software","Q1739331":"software","Q1757693":"software","Q1760545":"software","Q1995545":"software","Q2023643":"software","Q2053289":"software","Q2072225":"software","Q2102850":"software","Q2132167":"software","Q2134087":"software","Q2135275":"software","Q2164499":"software","Q2259352":"software","Q2404906":"software","Q2418022":"software","Q2429814":"software","Q2463207":"software","Q2532749":"software","Q2594395":"software","Q2916479":"software","Q2996416":"software","Q3125508":"software","Q3257918":"software","Q3257934":"software","Q3539533":"dataset","Q3618796":"software","Q3752489":"software","Q3809412":"software","Q3973863":"software","Q4039665":"software","Q4043509":"software","Q4117406":"software","Q4303335":"software","Q4307913":"software","Q4346576":"software","Q4388320":"software","Q4406907":"software","Q4550939":"software","Q4774400":"software","Q4774436":"software","Q4811587":"software","Q4826753":"software","Q4828920":"software","Q4913911":"software","Q4943247":"software","Q5001888":"software","Q5122414":"software","Q5157529":"software","Q5249204":"software","Q5273981":"software","Q5282021":"dataset","Q5283161":"software","Q5287634":"software","Q5327172":"software","Q5416718":"software","Q5500964":"software","Q5533486":"software","Q5535060":"software","Q5597177":"software","Q5628889":"software","Q5656366":"software","Q5957560":"software","Q6020321":"software","Q6059927":"software","Q6060218":"software","Q6484272":"software","Q6543028":"software","Q6543035":"software","Q6723611":"software","Q6895998":"software","Q7094135":"software","Q7144990":"software","Q7201225":"software","Q7240669":"software","Q7247856":"software","Q7311809":"software","Q7312175":"software","Q7314108":"software","Q7392743":"software","Q7395178":"software","Q7554365":"standard","Q7558983":"software","Q7565031":"software","Q7573049":"software","Q7644530":"software","Q7833919":"software","Q7880671":"software","Q7927896":"software","Q7934950":"software","Q7935096":"software","Q8012311":"software","Q9127910":"software","Q10898121":"software","Q11263084":"software","Q11275354":"software","Q11802245":"software","Q11942877":"software","Q12014419":"software","Q12046424":"software","Q13515741":"software","Q15456942":"software","Q15593630":"software","Q15618637":"software","Q15933979":"software","Q16000093":"software","Q16920237":"software","Q16947796":"software","Q17052715":"software","Q17077007":"software","Q17081023":"software","Q17093781":"software","Q17137706":"software","Q18448564":"software","Q18922759":"software","Q19599442":"software","Q20726407":"webpage","Q21129801":"software","Q21743174":"software","Q23931362":"software","Q24021076":"software","Q24091050":"software","Q24480005":"software","Q24841467":"software","Q25374232":"software","Q25588783":"software","Q26203767":"software","Q27861186":"software","Q28057052":"software","Q28148501":"software","Q28167864":"software","Q28778566":"software","Q28812506":"software","Q28966214":"software","Q29032804":"software","Q29032808":"software","Q29645725":"software","Q30113732":"software","Q30324611":"software","Q30715256":"software","Q30740917":"software","Q50316487":"software","Q50355772":"software","Q50410214":"software","Q51938570":"software","Q56273712":"software","Q56297973":"software","Q56298373":"software","Q56660744":"software","Q56842894":"software","Q60229368":"standard","Q63213147":"software","Q65278673":"software","Q65951263":"software","Q66436511":"software","Q114654291":"software","Q114839775":"software","Q114854984":"software","Q114981191":"software","Q115035207":"software","Q115249952":"software","Q115252886":"software","Q115594347":"software","Q116177338":"software","Q116695762":"software","Q116879624":"software","Q116965187":"software","Q116971439":"software","Q117051290":"software","Q117208410":"software","Q117208411":"software","Q117208414":"software","Q117208415":"software","Q117208412":"software","Q117208413":"software","Q117208416":"software","Q117208426":"software","Q117208427":"software","Q117208428":"software","Q117208432":"software","Q117349473":"software","Q117803351":"software","Q118869418":"software","Q118930230":"software","Q120883091":"software","Q121504207":"software","Q122200371":"software","Q122307299":"software","Q122706480":"software","Q122974338":"software","Q123135887":"software","Q123472464":"software","Q124051048":"software","Q124154095":"software","Q124322466":"software","Q124467775":"software","Q124518539":"software","Q124653107":"software","Q124739592":"software","Q124739892":"software","Q71348743":"software","Q76099914":"software","Q76158006":"software","Q76443836":"software","Q79600797":"software","Q80261011":"software","Q82748357":"software","Q85757110":"software","Q88465956":"software","Q89292899":"software","Q91314720":"software","Q95001953":"software","Q97656063":"software","Q98808364":"software","Q98808384":"software","Q98808893":"software","Q98812836":"software","Q99263266":"software","Q100148106":"software","Q101408242":"software","Q104529428":"software","Q104595152":"software","Q104855363":"software","Q104901669":"software","Q105034815":"software","Q105557478":"software","Q105558035":"software","Q105702078":"software","Q105832388":"software","Q106466562":"software","Q106572402":"software","Q106777209":"software","Q107417836":"software","Q108759345":"software","Q109252818":"software","Q110272868":"software","Q110322910":"software","Q110498923":"software","Q110509708":"software","Q111012522":"software","Q111030190":"software","Q111100275":"software","Q111660063":"software","Q112123596":"software","Q112255924":"software","Q112300475":"software","Q112786431":"software","Q113263084":"software","Q113443995":"software","Q113444013":"software","Q113507526":"software","Q113614232":"software","Q113952442":"software","Q113953810":"software","Q113995799":"software","Q16721823":"motion_picture","Q16909344":"motion_picture","Q17013749":"motion_picture","Q17123180":"motion_picture","Q18011171":"motion_picture","Q18011172":"motion_picture","Q18156020":"motion_picture","Q18205362":"motion_picture","Q20202970":"motion_picture","Q20442589":"motion_picture","Q24887738":"motion_picture","Q24960157":"motion_picture","Q25212003":"motion_picture","Q25393456":"motion_picture","Q26225677":"motion_picture","Q28735856":"motion_picture","Q29017630":"motion_picture","Q29226975":"motion_picture","Q33111614":"motion_picture","Q33373157":"motion_picture","Q48816645":"motion_picture","Q54344007":"motion_picture","Q56240556":"motion_picture","Q178406":"performance","Q204854":"performance","Q279752":"performance","Q823571":"performance","Q902899":"performance","Q1124733":"performance","Q1125630":"performance","Q1200301":"performance","Q1330221":"performance","Q1486440":"performance","Q1751775":"performance","Q1820662":"performance","Q2319401":"performance","Q2416176":"performance","Q2422679":"performance","Q60753838":"motion_picture","Q2784170":"performance","Q2828251":"performance","Q3010369":"performance","Q61283808":"motion_picture","Q3153560":"performance","Q3492850":"performance","Q3635468":"performance","Q4877052":"performance","Q63302132":"motion_picture","Q5100970":"performance","Q64777087":"motion_picture","Q6942562":"performance","Q65194659":"motion_picture","Q7785123":"performance","Q68974025":"motion_picture","Q11572071":"performance","Q12535023":"performance","Q13136212":"performance","Q13454063":"performance","Q15116915":"performance","Q73504838":"motion_picture","Q15522668":"performance","Q18907876":"performance","Q77906388":"motion_picture","Q21156425":"performance","Q22672348":"performance","Q24906831":"performance","Q28492397":"performance","Q30141393":"performance","Q88400940":"motion_picture","Q89928742":"motion_picture","Q99526025":"motion_picture","Q101973724":"motion_picture","Q102706436":"motion_picture","Q103888910":"motion_picture","Q104840802":"motion_picture","Q107210978":"motion_picture","Q107210977":"motion_picture","Q107418888":"motion_picture","Q109108478":"motion_picture","Q109122021":"motion_picture","Q109323491":"motion_picture","Q109733358":"motion_picture","Q109911570":"motion_picture","Q111241092":"motion_picture","Q111590800":"motion_picture","Q111745923":"motion_picture","Q112158242":"motion_picture","Q112318664":"motion_picture","Q112633637":"motion_picture","Q115122793":"motion_picture","Q116443876":"motion_picture","Q116478741":"motion_picture","Q116790751":"motion_picture","Q120243801":"motion_picture","Q121432339":"motion_picture","Q121555337":"motion_picture","Q122150116":"motion_picture","Q122360343":"motion_picture","Q122998965":"motion_picture","Q124838430":"motion_picture","Q130232":"motion_picture","Q157443":"motion_picture","Q166816":"motion_picture","Q185529":"motion_picture","Q185867":"motion_picture","Q188473":"motion_picture","Q202866":"motion_picture","Q219557":"motion_picture","Q226730":"motion_picture","Q229390":"motion_picture","Q304538":"motion_picture","Q319221":"motion_picture","Q332936":"motion_picture","Q336144":"motion_picture","Q369747":"motion_picture","Q370630":"motion_picture","Q430525":"motion_picture","Q455315":"motion_picture","Q455620":"motion_picture","Q459290":"motion_picture","Q505119":"motion_picture","Q506240":"motion_picture","Q517386":"motion_picture","Q599558":"motion_picture","Q628165":"motion_picture","Q645928":"motion_picture","Q652256":"motion_picture","Q663106":"motion_picture","Q677466":"motion_picture","Q790192":"motion_picture","Q842256":"motion_picture","Q848512":"motion_picture","Q882006":"motion_picture","Q917641":"motion_picture","Q959790":"motion_picture","Q1054574":"motion_picture","Q1060398":"motion_picture","Q1067324":"motion_picture","Q1135802":"motion_picture","Q1146335":"motion_picture","Q1200678":"motion_picture","Q1251417":"motion_picture","Q1257444":"motion_picture","Q1268687":"motion_picture","Q1320115":"motion_picture","Q1339864":"motion_picture","Q1361932":"motion_picture","Q1397462":"motion_picture","Q1899749":"motion_picture","Q1933746":"motion_picture","Q1935609":"motion_picture","Q1994410":"motion_picture","Q2125170":"motion_picture","Q2156835":"motion_picture","Q2165644":"motion_picture","Q2301591":"motion_picture","Q2484376":"motion_picture","Q2523020":"motion_picture","Q2561317":"motion_picture","Q2903140":"motion_picture","Q2973181":"motion_picture","Q2973201":"motion_picture","Q2997932":"motion_picture","Q3066315":"motion_picture","Q3072031":"motion_picture","Q3072043":"motion_picture","Q3294961":"motion_picture","Q3327002":"motion_picture","Q3335536":"motion_picture","Q3585697":"motion_picture","Q3648909":"motion_picture","Q3745400":"motion_picture","Q4220915":"motion_picture","Q4484381":"motion_picture","Q5145881":"motion_picture","Q5156753":"motion_picture","Q5193883":"motion_picture","Q6133352":"motion_picture","Q7130449":"motion_picture","Q7257728":"motion_picture","Q7299951":"motion_picture","Q7596755":"motion_picture","Q7601296":"motion_picture","Q7858343":"motion_picture","Q8030668":"motion_picture","Q9259727":"motion_picture","Q10282327":"motion_picture","Q10475300":"motion_picture","Q10527429":"motion_picture","Q10543972":"motion_picture","Q10590726":"motion_picture","Q124839961":"software","Q10805364":"motion_picture","Q125118130":"software","Q12410174":"motion_picture","Q12912091":"motion_picture","Q16034224":"motion_picture","Q24862":"motion_picture","Q24865":"motion_picture","Q24869":"motion_picture","Q11439":"webpage","Q84080639":"performance","Q85860240":"performance","Q99688750":"performance","Q102241450":"performance","Q104872740":"performance","Q106499608":"performance","Q107100830":"performance","Q109044916":"performance","Q114684435":"performance","Q115574418":"performance","Q181589":"legislation","Q197806":"legislation","Q328293":"legislation","Q355509":"legislation","Q476068":"legislation","Q530962":"legislation","Q574759":"legislation","Q621608":"legislation","Q661356":"legislation","Q670052":"legislation","Q694045":"legislation","Q903453":"legislation","Q922203":"legislation","Q928812":"legislation","Q1135306":"legislation","Q1414472":"legislation","Q1637292":"legislation","Q1803798":"legislation","Q1864489":"legislation","Q1930934":"legislation","Q1944228":"legislation","Q1946268":"legislation","Q2002525":"legislation","Q2070258":"legislation","Q2094042":"legislation","Q2125353":"legislation","Q2251446":"legislation","Q2415181":"legislation","Q2416325":"legislation","Q2541543":"legislation","Q2632182":"legislation","Q2799362":"legislation","Q3152878":"legislation","Q3430295":"legislation","Q3494013":"legislation","Q3571226":"legislation","Q4184949":"legislation","Q4349624":"legislation","Q4718567":"legislation","Q4774377":"legislation","Q4792967":"legislation","Q5021113":"legislation","Q5045433":"legislation","Q5122775":"legislation","Q5133519":"legislation","Q5163317":"legislation","Q5313672":"legislation","Q109647055":"webpage","Q5422203":"legislation","Q6453643":"legislation","Q6503489":"legislation","Q6542565":"legislation","Q111136048":"webpage","Q7100795":"legislation","Q111961945":"webpage","Q123364164":"performance","Q113288394":"webpage","Q124880174":"performance","Q114785038":"webpage","Q116288767":"webpage","Q116762009":"webpage","Q119217885":"webpage","Q123160936":"webpage","Q124446257":"webpage","Q1494741":"webpage","Q1503327":"webpage","Q1650567":"webpage","Q1990286":"webpage","Q2139769":"webpage","Q2261569":"webpage","Q2641220":"webpage","Q2712836":"webpage","Q2737701":"webpage","Q5164842":"webpage","Q7631805":"webpage","Q15474042":"webpage","Q19356096":"webpage","Q23691297":"webpage","Q40249767":"performance","Q40249907":"performance","Q40250279":"performance","Q47513101":"book","Q52239285":"performance","Q52314485":"performance","Q55760977":"performance","Q56477241":"performance","Q66371350":"webpage","Q78331840":"motion_picture","Q79355877":"performance","Q105071469":"legislation","Q105077399":"legislation","Q105106133":"legislation","Q106377223":"legislation","Q106377248":"legislation","Q110393809":"legislation","Q110707194":"legislation","Q111194727":"legislation","Q111208084":"legislation","Q111917839":"legislation","Q114151658":"legislation","Q118930227":"legislation","Q119269725":"legislation","Q48498":"manuscript","Q7136765":"legislation","Q7243147":"legislation","Q7307387":"legislation","Q7327674":"legislation","Q7432325":"legislation","Q7841721":"legislation","Q10263225":"legislation","Q10316956":"legislation","Q10701048":"legislation","Q11391992":"legislation","Q11644876":"legislation","Q11854376":"legislation","Q11894113":"legislation","Q11896197":"legislation","Q11900299":"legislation","Q12406497":"legislation","Q12760881":"legislation","Q13515734":"legislation","Q14565721":"legislation","Q14914992":"legislation","Q16661688":"legislation","Q17018036":"legislation","Q18449256":"legislation","Q18657604":"legislation","Q18894753":"legislation","Q18900373":"legislation","Q19889049":"legislation","Q25339629":"legislation","Q27243428":"legislation","Q28024845":"legislation","Q28097703":"legislation","Q28110087":"legislation","Q28807480":"legislation","Q32362553":"legislation","Q35258599":"legislation","Q50319172":"legislation","Q213924":"manuscript","Q274076":"manuscript","Q720106":"manuscript","Q865595":"manuscript","Q962741":"manuscript","Q1067768":"manuscript","Q1266076":"manuscript","Q1320539":"manuscript","Q1517110":"manuscript","Q1641020":"manuscript","Q1671640":"manuscript","Q1743914":"manuscript","Q1784036":"manuscript","Q2049275":"manuscript","Q2194826":"manuscript","Q2209578":"manuscript","Q2217259":"manuscript","Q2353983":"map","Q2427245":"manuscript","Q2531964":"manuscript","Q2801575":"manuscript","Q3960554":"manuscript","Q62179152":"legislation","Q4475654":"manuscript","Q63718677":"legislation","Q64605672":"legislation","Q64605677":"legislation","Q64605843":"legislation","Q64605863":"legislation","Q64607511":"legislation","Q7012086":"manuscript","Q65203908":"legislation","Q65203962":"legislation","Q65204491":"legislation","Q65204493":"legislation","Q65204496":"legislation","Q7261481":"manuscript","Q7262226":"manuscript","Q7802955":"manuscript","Q67121475":"legislation","Q9026959":"manuscript","Q11564158":"manuscript","Q11613006":"manuscript","Q12043767":"manuscript","Q12295065":"manuscript","Q96048686":"legislation","Q97176272":"legislation","Q99771118":"legislation","Q102046748":"legislation","Q143217":"musical_score","Q450873":"patent","Q580922":"article-journal","Q760340":"musical_score","Q759838":"article","Q681875":"patent","Q897381":"musical_score","Q864645":"patent","Q1329869":"musical_score","Q1809676":"article","Q1955137":"musical_score","Q2106255":"article-journal","Q2136117":"article","Q2457903":"musical_score","Q2552822":"musical_score","Q4327689":"musical_score","Q6646525":"article","Q7190079":"musical_score","Q7452061":"dataset","Q7582241":"article","Q7673115":"musical_score","Q15138389":"webpage","Q17633526":"article-newspaper","Q17991520":"musical_score","Q18454631":"article","Q19389637":"entry-encyclopedia","Q21403168":"article","Q26260507":"broadcast","Q106393006":"interview","Q106484263":"interview","Q106813818":"interview","Q108418154":"interview","Q108576949":"interview","Q108679208":"interview","Q108823064":"interview","Q109418359":"interview","Q110621229":"interview","Q42350535":"article","Q113009382":"interview","Q116483263":"interview","Q65943904":"musical_score","Q195414":"interview","Q442919":"interview","Q850171":"interview","Q1384479":"interview","Q1477475":"interview","Q1730672":"interview","Q1755089":"interview","Q1799882":"interview","Q2106925":"interview","Q3055290":"interview","Q3055291":"interview","Q3156406":"interview","Q4202018":"interview","Q4317093":"interview","Q5280330":"interview","Q7256239":"interview","Q7305960":"interview","Q7307128":"interview","Q7625207":"interview","Q77253277":"article-journal","Q8776455":"interview","Q9380502":"interview","Q10474847":"interview","Q12054584":"interview","Q12318532":"interview","Q16947017":"interview","Q104479805":"musical_score","Q104445146":"dataset","Q105541326":"musical_score","Q105659338":"musical_score","Q105659398":"musical_score","Q105659428":"musical_score","Q105659450":"musical_score","Q105659498":"musical_score","Q105659558":"musical_score","Q105659572":"musical_score","Q105660091":"musical_score","Q105660178":"musical_score","Q105671645":"musical_score","Q105672249":"musical_score","Q105686838":"musical_score","Q106645507":"article","Q106648287":"article","Q45933791":"interview","Q116786574":"article","Q117745373":"article","Q115790936":"treaty","Q116708544":"treaty","Q116740041":"treaty","Q116741026":"treaty","Q118932455":"treaty","Q119831208":"treaty","Q104898869":"review","Q913351":"patent","Q1322728":"patent","Q106677599":"review","Q106707189":"review","Q2359937":"patent","Q107610481":"review","Q107610646":"review","Q108492447":"review","Q5264361":"patent","Q5399577":"patent","Q111020843":"review","Q19787436":"patent","Q132364":"standard","Q170417":"standard","Q178562":"standard","Q184759":"standard","Q198614":"standard","Q205299":"standard","Q220868":"standard","Q235557":"standard","Q272683":"standard","Q278321":"standard","Q290378":"standard","Q293813":"standard","Q304433":"standard","Q312100":"standard","Q375479":"standard","Q385853":"standard","Q579565":"standard","Q635130":"standard","Q681263":"standard","Q682415":"standard","Q774901":"standard","Q834575":"standard","Q848031":"standard","Q853547":"standard","Q917023":"standard","Q917824":"standard","Q919510":"standard","Q927865":"standard","Q932938":"standard","Q996023":"standard","Q1091326":"standard","Q1144899":"standard","Q1153670":"standard","Q1193215":"standard","Q1233868":"standard","Q1271511":"standard","Q1334738":"standard","Q1349015":"standard","Q1373822":"standard","Q1377238":"standard","Q1377447":"standard","Q1584581":"standard","Q1734392":"standard","Q1779838":"standard","Q1968605":"standard","Q2141493":"standard","Q2309650":"standard","Q2380440":"standard","Q2505632":"standard","Q2680559":"standard","Q2722351":"standard","Q3343904":"standard","Q3477575":"standard","Q3979666":"standard","Q4811479":"standard","Q5008573":"standard","Q5100562":"standard","Q5117123":"standard","Q5201840":"standard","Q5381360":"standard","Q5570849":"standard","Q6046311":"standard","Q265871":"review","Q1399118":"review","Q35639987":"patent","Q1589335":"review","Q2416230":"review","Q2517773":"review","Q4589696":"review","Q5196473":"review","Q5251247":"review","Q7247798":"review","Q43305660":"patent","Q44555793":"patent","Q20058247":"review","Q56515249":"review","Q31022":"standard","Q43521":"standard","Q61992233":"review","Q27588":"review","Q69699844":"review","Q80698083":"review","Q86460068":"review","Q86540783":"review","Q93404209":"review","Q98967226":"review","Q217901":"treaty","Q252550":"treaty","Q625298":"treaty","Q837144":"treaty","Q864737":"treaty","Q931855":"treaty","Q1242841":"treaty","Q1387974":"treaty","Q1414340":"treaty","Q1498487":"treaty","Q1671773":"treaty","Q1711115":"treaty","Q1758832":"treaty","Q1791610":"treaty","Q1976409":"treaty","Q2113720":"treaty","Q2243479":"treaty","Q2245859":"treaty","Q2252156":"treaty","Q2290707":"treaty","Q2300991":"treaty","Q2325350":"treaty","Q2465017":"treaty","Q2822855":"treaty","Q60795643":"manuscript","Q3824506":"treaty","Q3847997":"treaty","Q4426710":"treaty","Q4461806":"treaty","Q4985043":"treaty","Q5372179":"treaty","Q6908053":"treaty","Q6934728":"treaty","Q6944158":"treaty","Q65769424":"manuscript","Q9557810":"treaty","Q11455760":"treaty","Q11510761":"treaty","Q11637357":"treaty","Q11883886":"treaty","Q11889885":"treaty","Q16835935":"treaty","Q16956642":"treaty","Q17124128":"treaty","Q18471364":"treaty","Q19216327":"treaty","Q19958750":"treaty","Q20755435":"treaty","Q21044709":"treaty","Q26877661":"treaty","Q29526855":"treaty","Q29527278":"treaty","Q29527544":"treaty","Q29883540":"treaty","Q30747863":"treaty","Q30921722":"treaty","Q93643300":"manuscript","Q38653134":"treaty","Q39234269":"treaty","Q97280101":"manuscript","Q98561538":"manuscript","Q104198179":"manuscript","Q104199632":"manuscript","Q104211636":"manuscript","Q104417320":"manuscript","Q106957643":"manuscript","Q107007162":"manuscript","Q107181871":"manuscript","Q107213692":"manuscript","Q107409907":"manuscript","Q50192946":"treaty","Q113961344":"manuscript","Q57205857":"treaty","Q115160288":"manuscript","Q115160920":"manuscript","Q117221271":"manuscript","Q117304498":"manuscript","Q117451897":"manuscript","Q119495979":"manuscript","Q119854933":"manuscript","Q123172729":"manuscript","Q123476808":"manuscript","Q82317825":"treaty","Q85750821":"treaty","Q13430250":"manuscript","Q95692585":"treaty","Q97200740":"treaty","Q16117723":"manuscript","Q17143154":"manuscript","Q21089188":"manuscript","Q22669850":"manuscript","Q104178698":"treaty","Q22948347":"manuscript","Q104700034":"treaty","Q23840892":"manuscript","Q110484215":"treaty","Q30103158":"manuscript","Q114349281":"treaty","Q33308141":"manuscript","Q182899":"regulation","Q281095":"regulation","Q536149":"regulation","Q573538":"regulation","Q732898":"regulation","Q845436":"regulation","Q1344439":"regulation","Q1344781":"regulation","Q1500849":"regulation","Q1538155":"regulation","Q1553864":"regulation","Q1698722":"regulation","Q1752579":"regulation","Q116671597":"standard","Q2113439":"regulation","Q117353791":"standard","Q117360103":"standard","Q117360121":"standard","Q117440209":"standard","Q117757747":"standard","Q118151874":"standard","Q118247534":"standard","Q118248113":"standard","Q118279254":"standard","Q124838920":"standard","Q6108055":"standard","Q6313217":"standard","Q6815743":"standard","Q6865416":"standard","Q6964137":"standard","Q7248507":"standard","Q7598374":"standard","Q7884737":"standard","Q9341450":"standard","Q9392675":"standard","Q10408132":"standard","Q10417394":"standard","Q10423418":"standard","Q10512337":"standard","Q10872187":"standard","Q11320552":"standard","Q11362401":"standard","Q11509377":"standard","Q12623246":"standard","Q13420342":"standard","Q14955693":"standard","Q15613582":"standard","Q15808102":"standard","Q15848903":"standard","Q16937237":"standard","Q22906682":"standard","Q23824424":"standard","Q24574728":"standard","Q25379354":"standard","Q25393707":"standard","Q26119883":"standard","Q26763979":"standard","Q28912964":"standard","Q29473497":"standard","Q39050366":"standard","Q42794186":"standard","Q44409829":"standard","Q3074":"regulation","Q45941145":"standard","Q47119608":"standard","Q47477642":"standard","Q52162337":"standard","Q52162346":"standard","Q55593943":"standard","Q55755785":"standard","Q55871434":"standard","Q56277227":"standard","Q56751006":"standard","Q58101087":"standard","Q58184783":"standard","Q58467951":"standard","Q58468273":"standard","Q65037409":"standard","Q67035425":"standard","Q84957891":"standard","Q85875700":"standard","Q100708753":"standard","Q104213466":"standard","Q104634626":"standard","Q104948405":"standard","Q105047548":"standard","Q105989562":"standard","Q105989599":"standard","Q105990004":"standard","Q105990097":"standard","Q107560916":"standard","Q109560589":"standard","Q109829629":"standard","Q110040336":"standard","Q110421054":"standard","Q110822406":"standard","Q111193247":"standard","Q113536078":"standard","Q113732976":"standard","Q2183290":"regulation","Q2399308":"regulation","Q2703920":"regulation","Q3027601":"regulation","Q3878494":"regulation","Q4590880":"regulation","Q5165640":"regulation","Q5411641":"regulation","Q6055213":"regulation","Q6543077":"regulation","Q6665312":"regulation","Q6842880":"regulation","Q7075804":"regulation","Q7309671":"regulation","Q7309669":"regulation","Q7448168":"regulation","Q7692300":"regulation","Q7832074":"regulation","Q7832073":"regulation","Q7880553":"regulation","Q7959501":"regulation","Q9050660":"regulation","Q9067730":"regulation","Q10530890":"regulation","Q10713442":"regulation","Q11861227":"regulation","Q11895781":"regulation","Q16318980":"regulation","Q1002816":"hearing","Q1167776":"hearing","Q25051677":"regulation","Q862685":"bill","Q876477":"bill","Q1006544":"bill","Q1591172":"bill","Q1989930":"bill","Q2044666":"bill","Q28136600":"regulation","Q4888807":"hearing","Q3878684":"bill","Q5953169":"bill","Q7099379":"hearing","Q7246224":"bill","Q7257705":"bill","Q7885007":"bill","Q10437243":"bill","Q10437244":"bill","Q10501549":"bill","Q10550020":"bill","Q10553236":"bill","Q11706145":"bill","Q16602140":"bill","Q16821677":"bill","Q17156988":"bill","Q18334806":"bill","Q20917883":"bill","Q21655772":"bill","Q24964968":"bill","Q28457660":"bill","Q30587581":"bill","Q55631395":"regulation","Q62966720":"regulation","Q66325840":"regulation","Q70441915":"regulation","Q72389425":"regulation","Q87722315":"regulation","Q87745167":"regulation","Q88221447":"regulation","Q88323877":"regulation","Q88761692":"regulation","Q90659435":"regulation","Q96482266":"regulation","Q97357453":"regulation","Q99773426":"regulation","Q75447980":"bill","Q99902083":"regulation","Q105635736":"regulation","Q105749581":"regulation","Q105845569":"regulation","Q106570004":"regulation","Q106947327":"regulation","Q108696274":"regulation","Q109042905":"regulation","Q85512917":"bill","Q109934417":"legislation","Q110572093":"regulation","Q110590221":"regulation","Q110623683":"regulation","Q123155244":"regulation","Q123486088":"regulation","Q124176042":"regulation","Q124647140":"regulation","Q124676527":"regulation","Q106377135":"bill","Q106377140":"bill","Q106377258":"bill","Q106377257":"bill","Q110454131":"bill","Q184528":"speech","Q203737":"speech","Q261197":"speech","Q272281":"speech","Q358614":"speech","Q554211":"speech","Q604733":"speech","Q609261":"speech","Q787020":"speech","Q805093":"speech","Q891813":"speech","Q948930":"speech","Q960189":"speech","Q1121851":"speech","Q1346967":"speech","Q1389170":"speech","Q1832748":"speech","Q1833700":"speech","Q1840948":"speech","Q1923787":"speech","Q1980740":"speech","Q2127053":"speech","Q2136176":"speech","Q2137739":"speech","Q2395546":"speech","Q2555445":"speech","Q2694964":"speech","Q2895132":"speech","Q3030189":"speech","Q3030216":"speech","Q3040417":"speech","Q4329077":"speech","Q5152362":"speech","Q5264168":"speech","Q6735422":"speech","Q6972133":"speech","Q7628679":"speech","Q7979513":"speech","Q9148992":"speech","Q10536399":"speech","Q10562744":"speech","Q10953735":"speech","Q11261492":"speech","Q11399933":"speech","Q11496736":"speech","Q11499094":"speech","Q11504413":"speech","Q11639251":"speech","Q11798867":"speech","Q11867548":"speech","Q11917341":"speech","Q11981659":"speech","Q12336939":"speech","Q13409844":"speech","Q13499711":"speech","Q13571862":"speech","Q13611058":"speech","Q13632631":"speech","Q15853847":"speech","Q15877576":"speech","Q16690075":"speech","Q16962603":"speech","Q17010067":"speech","Q17051975":"speech","Q18907443":"speech","Q19776345":"speech","Q11032":"periodical","Q30849":"periodical","Q41298":"periodical","Q49850":"periodical","Q49095776":"speech","Q56191193":"speech","Q56192445":"speech","Q60061482":"speech","Q60780612":"speech","Q61051477":"speech","Q61102190":"speech","Q66087610":"speech","Q60797":"speech","Q85860632":"speech","Q88462341":"speech","Q96574230":"speech","Q100115646":"speech","Q100701567":"speech","Q264238":"periodical","Q277759":"periodical","Q549638":"periodical","Q567357":"periodical","Q614289":"periodical","Q737498":"periodical","Q1250900":"periodical","Q104816002":"speech","Q107268129":"speech","Q108070213":"speech","Q108453730":"speech","Q109036000":"speech","Q110629616":"speech","Q115464252":"speech","Q116927479":"speech","Q123999317":"speech","Q186588":"dataset","Q193351":"dataset","Q252683":"dataset","Q367680":"dataset","Q857354":"dataset","Q1469824":"dataset","Q2352616":"dataset","Q2554672":"dataset","Q2891859":"dataset","Q3219655":"dataset","Q3304360":"dataset","Q3519041":"dataset","Q3997298":"dataset","Q5071951":"dataset","Q5227243":"dataset","Q5227330":"dataset","Q5340806":"dataset","Q5380828":"dataset","Q5465452":"dataset","Q6499736":"dataset","Q6973929":"dataset","Q7079603":"dataset","Q7884241":"dataset","Q7943567":"dataset","Q8034984":"dataset","Q55089306":"periodical","Q55630524":"periodical","Q60534272":"periodical","Q60534442":"periodical","Q17305522":"dataset","Q18814183":"dataset","Q67016056":"periodical","Q21264512":"dataset","Q31386861":"dataset","Q31388616":"dataset","Q32945468":"dataset","Q88566195":"periodical","Q43570203":"dataset","Q44106130":"dataset","Q96225078":"periodical","Q50826803":"dataset","Q100282728":"periodical","Q55387750":"dataset","Q104897316":"periodical","Q104897459":"periodical","Q105641905":"periodical","Q60474998":"dataset","Q60775017":"dataset","Q108441504":"periodical","Q108899096":"periodical","Q110066328":"periodical","Q110479257":"periodical","Q112650766":"periodical","Q113642955":"periodical","Q8513":"dataset","Q39825":"dataset","Q49918":"dataset","Q118135385":"periodical","Q121742850":"periodical","Q121742855":"periodical","Q77231205":"dataset","Q77231662":"dataset","Q91137337":"dataset","Q1684600":"periodical","Q1770383":"periodical","Q2065227":"periodical","Q2305295":"periodical","Q2586014":"periodical","Q2903810":"periodical","Q3129162":"periodical","Q3186812":"periodical","Q3374808":"periodical","Q3490128":"periodical","Q96051494":"dataset","Q3981624":"periodical","Q97173834":"dataset","Q5209394":"periodical","Q6307419":"periodical","Q6517555":"periodical","Q7620434":"periodical","Q101113283":"dataset","Q12102552":"periodical","Q104819290":"dataset","Q105036058":"dataset","Q105342529":"dataset","Q106415528":"dataset","Q106603459":"dataset","Q107986363":"map","Q16676025":"periodical","Q110670200":"dataset","Q110686914":"dataset","Q111095542":"dataset","Q112222094":"dataset","Q19944633":"speech","Q20820199":"periodical","Q117357566":"dataset","Q25451361":"periodical","Q119418406":"dataset","Q120123898":"dataset","Q115121540":"thesis","Q118114827":"thesis","Q118371509":"thesis","Q118372320":"thesis","Q118373696":"thesis","Q118373741":"thesis","Q118373889":"thesis","Q118373909":"thesis","Q118373954":"thesis","Q118373990":"thesis","Q118374274":"thesis","Q118374790":"thesis","Q118375348":"thesis","Q118375832":"thesis","Q118376320":"thesis","Q118376705":"thesis","Q118378322":"thesis","Q118378336":"thesis","Q118378352":"thesis","Q120367525":"thesis","Q120642336":"thesis","Q6537711":"entry-dictionary","Q121602271":"thesis","Q122152985":"thesis","Q123200453":"thesis","Q20088085":"entry-dictionary","Q20088089":"entry-dictionary","Q187685":"thesis","Q798134":"thesis","Q1414362":"thesis","Q1884156":"thesis","Q1907875":"thesis","Q79786":"event","Q127933":"event","Q175331":"event","Q185220":"event","Q189760":"event","Q200538":"event","Q207549":"event","Q11897841":"thesis","Q261426":"event","Q273182":"event","Q288514":"event","Q312543":"event","Q318862":"event","Q378427":"event","Q383078":"event","Q476300":"event","Q481638":"event","Q504703":"event","Q517909":"event","Q558566":"event","Q603773":"speech","Q625994":"event","Q629375":"event","Q635377":"event","Q635568":"event","Q645767":"event","Q657449":"event","Q683388":"event","Q694415":"event","Q745325":"event","Q812298":"event","Q841654":"event","Q860700":"event","Q860879":"event","Q885621":"event","Q951537":"event","Q1004317":"event","Q1004895":"event","Q1005954":"event","Q1006250":"event","Q1006694":"event","Q1009898":"event","Q1058443":"event","Q18249952":"thesis","Q30749496":"thesis","Q46629343":"thesis","Q51282441":"thesis","Q56299266":"thesis","Q57262921":"thesis","Q27259":"event","Q31603":"event","Q46855":"event","Q109819438":"entry-dictionary","Q86662248":"thesis","Q97466636":"thesis","Q106276531":"thesis","Q107490693":"thesis","Q123679109":"dataset","Q124305192":"dataset","Q124312506":"dataset","Q124540379":"dataset","Q111475835":"thesis","Q111475860":"thesis","Q111476177":"thesis","Q112863470":"thesis","Q1070669":"event","Q1106728":"event","Q1113939":"event","Q1135376":"event","Q1140043":"event","Q1140660":"event","Q1306940":"event","Q1408378":"event","Q1421331":"event","Q1431232":"performance","Q1445650":"event","Q1450722":"event","Q1457237":"event","Q1539016":"event","Q1567963":"performance","Q1568205":"event","Q1583778":"event","Q1643594":"event","Q1644573":"event","Q1668139":"event","Q1673271":"event","Q1692935":"event","Q1714945":"event","Q1733014":"event","Q1741794":"event","Q1751515":"event","Q1792281":"event","Q1802168":"event","Q1863677":"event","Q1900995":"speech","Q1938861":"event","Q1984492":"event","Q2096163":"event","Q2098105":"event","Q2136042":"event","Q2140455":"event","Q2175990":"event","Q2177993":"event","Q2239246":"event","Q2253556":"event","Q2277475":"event","Q2280405":"event","Q2312082":"event","Q2332228":"event","Q2343198":"event","Q2441722":"event","Q2497948":"event","Q2497972":"event","Q2545934":"event","Q2609546":"event","Q2627975":"event","Q2681701":"event","Q2699757":"performance","Q2702632":"event","Q2761147":"event","Q2855282":"event","Q2855494":"event","Q2985198":"event","Q2999003":"event","Q2999004":"event","Q3029385":"event","Q3149792":"event","Q3191634":"event","Q3194451":"event","Q3304140":"event","Q3428752":"event","Q3533809":"event","Q3734784":"event","Q3765035":"event","Q3834389":"event","Q3850676":"event","Q3918368":"event","Q4060300":"event","Q4801316":"event","Q4829973":"event","Q4941415":"event","Q5448149":"event","Q5469948":"event","Q5485792":"event","Q5953202":"event","Q6056746":"event","Q6163881":"event","Q6392390":"event","Q6549200":"event","Q6739275":"event","Q7130803":"event","Q7179683":"event","Q7203113":"event","Q7205288":"event","Q7246244":"event","Q7269307":"event","Q7502926":"event","Q7912065":"event","Q10501952":"event","Q10546100":"event","Q10650165":"event","Q10712494":"event","Q10772859":"event","Q11297255":"event","Q11612751":"event","Q102854363":"event","Q104411569":"event","Q104418497":"event","Q104777120":"event","Q105061621":"event","Q105182816":"event","Q105946019":"event","Q106691960":"event","Q106763129":"event","Q106892156":"event","Q107291016":"event","Q108308625":"event","Q12048934":"event","Q12508892":"event","Q12769393":"event","Q13156501":"event","Q13156520":"event","Q13418847":"event","Q13728461":"event","Q13973290":"event","Q14645228":"event","Q14828014":"event","Q15051339":"event","Q15275719":"event","Q15633604":"event","Q15726688":"event","Q15820322":"event","Q16022392":"event","Q16510064":"event","Q16571590":"event","Q16743915":"event","Q16912926":"event","Q17021425":"event","Q17158377":"event","Q17166624":"event","Q17193309":"event","Q17414829":"event","Q18915726":"event","Q19711353":"event","Q20182967":"event","Q20649656":"event","Q20823612":"event","Q21358050":"event","Q21550582":"event","Q21893675":"event","Q22667754":"event","Q23058953":"speech","Q23579700":"book","Q24030666":"event","Q24273026":"event","Q24870096":"event","Q24887340":"event","Q26883550":"event","Q27690146":"event","Q27968055":"event","Q28924760":"event","Q29023906":"event","Q29156916":"event","Q30111082":"event","Q32948345":"event","Q33385772":"event","Q41217384":"event","Q43099500":"event","Q43100730":"event","Q47136026":"event","Q47150471":"event","Q50744367":"event","Q52260246":"event","Q55163292":"event","Q55604548":"event","Q56298858":"event","Q58687420":"event","Q60221005":"event","Q63372996":"event","Q63522650":"event","Q63523297":"event","Q64242378":"event","Q64348974":"event","Q64800812":"event","Q65064390":"event","Q65117385":"event","Q65295179":"event","Q65395256":"event","Q65598177":"event","Q66309059":"event","Q67421136":"event","Q67817876":"event","Q68157611":"event","Q76548380":"event","Q84562343":"event","Q85743284":"event","Q85747954":"event","Q86749785":"event","Q89564537":"event","Q96378819":"event","Q96379157":"event","Q96487369":"event","Q96500749":"event","Q97521133":"event","Q146071":"legal_case","Q177253":"legal_case","Q480498":"legal_case","Q697327":"legal_case","Q1124012":"legal_case","Q1265353":"legal_case","Q2144800":"legal_case","Q2823677":"legal_case","Q3771751":"legal_case","Q4116621":"legal_case","Q5467543":"legal_case","Q108886259":"event","Q108900992":"event","Q6942426":"legal_case","Q7307130":"legal_case","Q110573458":"event","Q110701040":"event","Q110799181":"event","Q111657387":"event","Q111823426":"event","Q9283157":"legal_case","Q112064134":"event","Q112230324":"event","Q113129727":"event","Q113136550":"event","Q10706788":"legal_case","Q11519624":"legal_case","Q114342413":"event","Q11659309":"legal_case","Q11827307":"legal_case","Q115641404":"event","Q115755288":"event","Q115801963":"event","Q116150022":"event","Q116292685":"event","Q116449367":"speech","Q117769381":"event","Q118905733":"event","Q119000351":"event","Q16738832":"legal_case","Q120889504":"event","Q18536127":"legal_case","Q121501380":"event","Q122199557":"event","Q122343205":"event","Q19692072":"legal_case","Q19863859":"legal_case","Q19902850":"legal_case","Q19930933":"legal_case","Q122987843":"event","Q123004703":"event","Q124073126":"event","Q124417186":"event","Q124417300":"event","Q124419116":"event","Q124419416":"event","Q124746146":"event","Q125133826":"event","Q26885514":"legal_case","Q234262":"chapter","Q240862":"motion_picture","Q308463":"book","Q680458":"book","Q30637971":"legal_case","Q5555914":"chapter","Q106377152":"entry","Q12825884":"chapter","Q21481766":"chapter","Q26989423":"chapter","Q29154515":"chapter","Q56704157":"legal_case","Q124658587":"entry","Q60833193":"legal_case","Q60845736":"legal_case","Q61221204":"legal_case","Q64796768":"legal_case","Q66458810":"legal_case","Q43148525":"chapter","Q43180447":"chapter","Q1417174":"entry","Q76647964":"legal_case","Q53460949":"chapter","Q10376649":"entry","Q85821037":"legal_case","Q96251253":"legal_case","Q96482904":"legal_case","Q97451302":"legal_case","Q97451648":"legal_case","Q97451722":"legal_case","Q105499756":"legal_case","Q108921040":"legal_case","Q109018958":"legal_case","Q114079647":"legal_case","Q118119509":"legal_case","Q119586705":"legal_case","Q121470056":"legal_case","Q123550907":"legal_case","Q309481":"report","Q2144639":"article-newspaper","Q2495037":"article-newspaper","Q2602337":"article-newspaper","Q3326038":"article-newspaper","Q113006008":"book","Q113016699":"book","Q113275148":"software","Q113559350":"book","Q5001223":"article-newspaper","Q5149212":"article-newspaper","Q115605375":"book","Q116280121":"book","Q116280142":"book","Q117460159":"book","Q3503343":"post","Q4770042":"post","Q122165549":"book","Q122731938":"book","Q123162057":"book","Q123684169":"book","Q124354051":"book","Q124838797":"book","Q124838809":"book","Q17628188":"article-newspaper","Q18339884":"article-newspaper","Q28502153":"article-newspaper","Q778580":"book","Q1224889":"book","Q1249682":"book","Q1341283":"book","Q1670252":"book","Q1783943":"book","Q2030763":"book","Q2338167":"book","Q2564985":"book","Q2568454":"book","Q5281629":"book","Q5394558":"book","Q9250351":"book","Q9250355":"book","Q9250353":"book","Q9379159":"book","Q10379956":"book","Q10898227":"book","Q11696048":"book","Q11696049":"book","Q13137339":"book","Q15994174":"book","Q16937116":"book","Q17578748":"book","Q20826013":"book","Q20850604":"book","Q21112633":"book","Q28531129":"regulation","Q66338351":"article-newspaper","Q39811647":"book","Q59908":"article-newspaper","Q42793760":"book","Q52147067":"webpage","Q55089312":"dataset","Q55155149":"book","Q57933693":"book","Q58482601":"book","Q87849013":"article-newspaper","Q59466300":"book","Q59466853":"book","Q60997816":"software","Q61963396":"book","Q65770270":"book","Q65772139":"book","Q65772760":"book","Q65920672":"book","Q104563003":"article-newspaper","Q104758629":"article-newspaper","Q107407067":"article-newspaper","Q108837133":"article-newspaper","Q83378585":"book","Q92275711":"book","Q124495839":"article-newspaper","Q97193271":"book","Q101113149":"book","Q104804934":"book","Q104804938":"motion_picture","Q106373589":"book","Q106373713":"book","Q106530803":"book","Q107044688":"book","Q107528122":"book","Q107529864":"book","Q107549014":"book","Q108744804":"book","Q108810020":"book","Q7897792":"post","Q15646675":"post","Q17561026":"post","Q83367":"book","Q113013":"book","Q114375":"book","Q124761":"book","Q131084":"book","Q173167":"book","Q182659":"book","Q185598":"book","Q189867":"book","Q234343":"book","Q268416":"book","Q354326":"book","Q384515":"book","Q668439":"book","Q727413":"book","Q757370":"book","Q867335":"book","Q870452":"book","Q920285":"book","Q1035168":"book","Q1056378":"book","Q1061346":"book","Q1072723":"book","Q1093312":"book","Q1097273":"book","Q1132324":"book","Q1164267":"book","Q1194040":"book","Q1279564":"book","Q1310296":"book","Q1412507":"book","Q1425198":"book","Q1440453":"book","Q1472357":"book","Q1497854":"book","Q1517777":"book","Q1585442":"book","Q1617445":"book","Q1663071":"book","Q1771692":"book","Q1790870":"book","Q1852950":"book","Q2012083":"book","Q2219343":"book","Q2376293":"book","Q2477865":"book","Q2686999":"book","Q2916240":"book","Q3025978":"book","Q3222982":"book","Q3250561":"book","Q3328821":"book","Q25345994":"post","Q56119332":"post-weblog","Q57988118":"post","Q63412991":"post","Q66058204":"post","Q84444779":"post","Q84497003":"post","Q482":"book","Q676":"book","Q1004":"book","Q1661":"book","Q1845":"book","Q8261":"book","Q23622":"book","Q39950":"book","Q49084":"book","Q97487580":"post","Q104717411":"post","Q106367310":"post","Q110875209":"post","Q110888775":"post","Q110888858":"post","Q111547222":"post","Q111602731":"post","Q111629695":"post","Q111630696":"post","Q111638057":"post","Q111660285":"post","Q111678745":"post","Q111678755":"post","Q111678758":"post","Q111678771":"post","Q111678776":"post","Q111691879":"post","Q112058486":"post","Q112058774":"post","Q114342439":"post","Q115902462":"post","Q123471990":"post","Q113093":"report","Q223729":"report","Q111042372":"book","Q111219279":"book","Q524352":"report","Q628175":"report","Q111528869":"book","Q111541985":"book","Q113376331":"book","Q113426480":"book","Q113645809":"book","Q114586269":"book","Q114797888":"book","Q115160349":"book","Q115608085":"book","Q116476516":"book","Q116786867":"book","Q117260136":"book","Q117976271":"book","Q117976435":"book","Q118130061":"book","Q119852338":"book","Q123344321":"book","Q123857265":"book","Q124152879":"book","Q124455603":"book","Q124628374":"book","Q124668137":"book","Q124832590":"book","Q3511132":"collection","Q3625315":"collection","Q11723795":"collection","Q3445695":"book","Q3454619":"book","Q3491641":"book","Q3924932":"book","Q4116208":"book","Q4167727":"book","Q4223073":"book","Q4501985":"book","Q4530655":"book","Q4671704":"book","Q5185279":"book","Q5467181":"book","Q5785059":"book","Q5977103":"book","Q6113985":"book","Q7679101":"book","Q7958155":"book","Q9380277":"book","Q10432278":"book","Q10510042":"book","Q10512799":"book","Q10529868":"book","Q10536424":"book","Q10585719":"book","Q10600572":"book","Q11712374":"book","Q12041978":"book","Q12047746":"book","Q12765855":"book","Q12799318":"book","Q12800390":"book","Q13408937":"book","Q16681629":"book","Q16909089":"book","Q17017399":"book","Q17345318":"book","Q17518870":"book","Q18451358":"book","Q18536349":"book","Q19904733":"book","Q20540385":"book","Q20668387":"book","Q25394544":"book","Q30920856":"book","Q38072107":"book","Q59221146":"collection","Q43303440":"book","Q60730271":"collection","Q58900620":"book","Q61128576":"book","Q78814135":"book","Q85985019":"book","Q97161778":"book","Q117190471":"collection","Q117190547":"collection","Q117289168":"collection","Q103820137":"book","Q105685558":"book","Q105688416":"book","Q105709657":"manuscript","Q106974458":"periodical","Q108419088":"book","Q108771474":"book","Q699735":"report","Q830689":"report","Q836925":"report","Q855232":"report","Q1004391":"report","Q1220913":"report","Q1473099":"report","Q1554400":"report","Q1648652":"report","Q1668727":"report","Q1926270":"report","Q2054229":"report","Q2135248":"report","Q2201385":"report","Q2206516":"report","Q2307704":"report","Q2309880":"report","Q2435071":"report","Q2463686":"report","Q2677586":"report","Q2782326":"report","Q3000100":"report","Q3099732":"report","Q3926217":"report","Q4064750":"report","Q4117230":"report","Q4343952":"report","Q4390057":"report","Q4690599":"report","Q4703546":"report","Q4769694":"report","Q4951615":"report","Q5133397":"report","Q5915865":"report","Q6451276":"report","Q6457082":"report","Q7671191":"report","Q7918438":"report","Q9770904":"report","Q10465946":"report","Q10585384":"report","Q11419640":"report","Q11640080":"report","Q11798615":"report","Q207601":"broadcast","Q622812":"broadcast","Q1190246":"speech","Q15629444":"report","Q15781350":"report","Q17090395":"report","Q17121756":"report","Q23954833":"report","Q27027169":"report","Q30012802":"report","Q30314941":"report","Q41274869":"report","Q47123453":"report","Q47126552":"report","Q53953275":"report","Q55433859":"report","Q56013707":"report","Q59387148":"report","Q64548048":"report","Q64852967":"report","Q66104273":"report","Q15416":"broadcast","Q85653251":"report","Q88380217":"report","Q88802020":"report","Q96179541":"report","Q96406457":"report","Q98550843":"report","Q101096466":"report","Q102391350":"report","Q104605006":"report","Q104900597":"report","Q105394996":"report","Q106034900":"report","Q106540977":"report","Q106908570":"report","Q107023179":"report","Q108378344":"report","Q108618539":"report","Q109466918":"report","Q109768337":"report","Q110589838":"report","Q114023764":"report","Q114736739":"report","Q116173318":"report","Q116306645":"report","Q116737635":"report","Q117354076":"report","Q118129512":"report","Q119064757":"report","Q119796181":"report","Q120074045":"report","Q120736037":"report","Q121662174":"report","Q122307333":"report","Q124646344":"report","Q1228945":"report","Q1347686":"article-journal","Q1367344":"paper-conference","Q1504425":"article-journal","Q2774197":"article-journal","Q2903479":"post-weblog","Q120785614":"software","Q120869409":"software","Q7301211":"article-journal","Q7316896":"article-journal","Q7318358":"article-journal","Q10885494":"paper-conference","Q1241826":"broadcast","Q1452460":"broadcast","Q1555508":"broadcast","Q1691143":"broadcast","Q1983062":"broadcast","Q15706459":"article-journal","Q2155186":"broadcast","Q2178268":"broadcast","Q3588923":"broadcast","Q4972099":"broadcast","Q5177022":"broadcast","Q18918145":"article-journal","Q5401282":"broadcast","Q6863157":"broadcast","Q7697080":"broadcast","Q10709386":"broadcast","Q119391":"software","Q11293915":"broadcast","Q616639":"software","Q11325507":"broadcast","Q11334197":"broadcast","Q11351206":"broadcast","Q11378697":"broadcast","Q11464636":"broadcast","Q11483878":"broadcast","Q11491683":"broadcast","Q1015325":"software","Q1037852":"software","Q1144323":"software","Q3772627":"software","Q182357":"book","Q250090":"book","Q252120":"book","Q288909":"book","Q15852671":"broadcast","Q474090":"book","Q543673":"book","Q568286":"book","Q580340":"book","Q596594":"book","Q656042":"book","Q742530":"book","Q18458820":"broadcast","Q9011149":"software","Q24634210":"broadcast","Q20712193":"software","Q20825628":"software","Q20983788":"software","Q27021481":"software","Q30314788":"software","Q56478376":"article-journal","Q58632367":"paper-conference","Q58898396":"article-journal","Q58900805":"article-journal","Q58901470":"article-journal","Q58902427":"article-journal","Q60535861":"article-journal","Q61953751":"broadcast","Q52990223":"software","Q56191572":"software","Q82969330":"article-journal","Q84572095":"post-weblog","Q92998777":"article-journal","Q93003322":"article-journal","Q388":"software","Q31411":"book","Q99770806":"article-journal","Q101116078":"article-journal","Q106253373":"entry-encyclopedia","Q108196115":"article-journal","Q96756422":"broadcast","Q110716513":"article-journal","Q114413783":"article-journal","Q101494737":"broadcast","Q115528532":"article-journal","Q115546988":"article-journal","Q116740071":"report","Q121763407":"article-journal","Q123045924":"article-journal","Q104652127":"software","Q108540395":"software","Q123991525":"broadcast","Q124222084":"speech","Q761529":"book","Q777828":"book","Q858271":"book","Q895311":"book","Q919982":"book","Q968679":"book","Q1069928":"book","Q1091366":"book","Q1113204":"book","Q1118771":"book","Q1125196":"book","Q1161145":"book","Q1168671":"book","Q1265067":"book","Q1292502":"book","Q1344317":"book","Q1384424":"book","Q1384433":"book","Q1428637":"book","Q1491684":"book","Q1499591":"book","Q1505583":"book","Q1510912":"book","Q1601739":"book","Q1613812":"book","Q1683305":"book","Q1784354":"book","Q1808721":"book","Q1871088":"book","Q1980139":"book","Q2058791":"book","Q2158741":"book","Q2293670":"book","Q2578278":"book","Q2621904":"book","Q2671604":"book","Q2735649":"book","Q2891671":"book","Q3062913":"book","Q3099146":"book","Q3149507":"book","Q3236984":"book","Q3315360":"book","Q3401045":"book","Q3401086":"book","Q3401097":"book","Q3401107":"book","Q3401112":"book","Q3426697":"book","Q3440974":"book","Q3556118":"book","Q3642905":"book","Q3684595":"book","Q3718743":"book","Q3906959":"book","Q3906957":"book","Q3906966":"book","Q3906965":"book","Q3943110":"book","Q4024576":"book","Q4112129":"book","Q4481123":"book","Q4484338":"book","Q4750852":"book","Q4907378":"book","Q4984279":"book","Q5039450":"book","Q5098270":"book","Q5145848":"book","Q5179572":"book","Q5493881":"book","Q5643057":"book","Q5653268":"book","Q5692451":"book","Q5774336":"book","Q6003397":"book","Q6043568":"book","Q6054894":"book","Q6081426":"book","Q6081437":"book","Q6081445":"book","Q6102109":"book","Q6154079":"book","Q6168405":"book","Q6496542":"book","Q6888692":"book","Q6897211":"book","Q7084639":"book","Q7099402":"book","Q7143050":"book","Q7168247":"book","Q7207403":"book","Q7267789":"book","Q7316515":"book","Q7413883":"book","Q7435160":"book","Q7565898":"book","Q7697891":"book","Q7709192":"book","Q109570005":"book","Q110880061":"book","Q112225851":"book","Q112228673":"book","Q112569686":"book","Q112633497":"book","Q113650117":"book","Q114082643":"book","Q114805136":"book","Q114805151":"book","Q115160635":"book","Q115161045":"book","Q115161728":"book","Q115754515":"book","Q119522226":"book","Q119522349":"book","Q121663256":"book","Q123272631":"book","Q124094110":"book","Q149537":"book","Q1053765":"book","Q1479970":"book","Q2268050":"book","Q4262998":"book","Q7261479":"book","Q7824966":"book","Q7928675":"book","Q9144651":"book","Q9210656":"book","Q10604652":"book","Q10715161":"book","Q10913337":"book","Q11710898":"book","Q11869215":"book","Q11917349":"book","Q12046027":"book","Q12218857":"book","Q12350833":"book","Q12361583":"book","Q12483706":"manuscript","Q12503055":"book","Q12798580":"book","Q12832246":"book","Q12849794":"book","Q12982033":"book","Q13134398":"book","Q13157313":"book","Q13403571":"book","Q13646664":"book","Q14472342":"book","Q14634492":"book","Q14946913":"book","Q15141535":"book","Q15720097":"book","Q15805624":"book","Q15880899":"book","Q15888308":"book","Q15890340":"book","Q16933953":"book","Q17030485":"book","Q19275887":"book","Q19310814":"book","Q19366069":"book","Q19628984":"book","Q19855762":"book","Q20106666":"book","Q20523717":"book","Q20646003":"book","Q20857448":"book","Q22936789":"book","Q24947942":"book","Q25536258":"book","Q25592333":"book","Q26906566":"book","Q31788392":"book","Q31842229":"book","Q55689884":"book","Q56239988":"book","Q65064557":"book","Q67555086":"book","Q70600066":"book","Q70686944":"book","Q70863928":"book","Q71842123":"book","Q72572910":"book","Q87805180":"book","Q95984504":"book","Q97213031":"book","Q97704215":"book","Q99395170":"book","Q101528367":"book","Q102316242":"book","Q103317810":"book","Q104096289":"book","Q105898065":"book","Q106771414":"book","Q107226151":"book","Q107971457":"book","Q108759375":"book","Q108930504":"book","Q113547767":"book","Q115154781":"book","Q115160651":"book","Q115161718":"book","Q118152140":"book","Q123049077":"book","Q134426":"book","Q181283":"book","Q387284":"book","Q438464":"book","Q562214":"book","Q725377":"periodical","Q754669":"book","Q838795":"book","Q871070":"book","Q881642":"book","Q906229":"book","Q951349":"book","Q1057354":"book","Q1114502":"book","Q1124088":"book","Q1366174":"book","Q1471388":"book","Q1474729":"book","Q1679746":"book","Q1866937":"book","Q2044579":"book","Q2178671":"book","Q2292302":"book","Q2342463":"book","Q2359975":"book","Q2410710":"book","Q2620972":"book","Q2816906":"book","Q2824091":"book","Q2882201":"book","Q2882208":"book","Q2882214":"book","Q2882223":"book","Q2882221":"book","Q2882226":"book","Q2882230":"book","Q2882235":"book","Q2882233":"book","Q3138364":"book","Q3314991":"book","Q3325189":"book","Q3496994":"book","Q3543088":"book","Q3817331":"book","Q4505975":"book","Q4971317":"book","Q5648335":"book","Q5716961":"book","Q5745599":"book","Q5771262":"book","Q5821209":"book","Q5821600":"book","Q5822241":"book","Q5905220":"book","Q5939750":"book","Q5946823":"book","Q5980911":"book","Q5981176":"book","Q6003212":"book","Q6112440":"book","Q6160146":"book","Q6398529":"book","Q6416261":"book","Q6887078":"book","Q7210021":"book","Q7970827":"book","Q9002297":"book","Q9077888":"book","Q9646025":"book","Q10493450":"book","Q10616457":"book","Q11341484":"book","Q11664268":"book","Q11820951":"book","Q11892511":"book","Q11892508":"book","Q12411003":"book","Q14406742":"periodical","Q14466421":"book","Q16113687":"book","Q16601597":"book","Q17630544":"book","Q18384470":"book","Q20100282":"book","Q21081491":"book","Q24897257":"periodical","Q25385730":"book","Q41341160":"book","Q55738783":"book","Q8274":"book","Q448457":"regulation","Q110894356":"book","Q112250724":"book","Q114669726":"book","Q115857105":"book","Q115983078":"book","Q115983163":"book","Q117448728":"book","Q117717167":"book","Q118315829":"periodical","Q120122511":"book","Q10701050":"regulation","Q122160237":"book","Q124542139":"book","Q186602":"book","Q188007":"book","Q192239":"book","Q208505":"book","Q223945":"book","Q286328":"book","Q319226":"book","Q545533":"book","Q591099":"book","Q749674":"book","Q759708":"book","Q843847":"book","Q849692":"book","Q937691":"book","Q1253572":"book","Q1397862":"book","Q1651051":"book","Q1669566":"book","Q1754210":"book","Q2154673":"book","Q2351286":"book","Q2363988":"book","Q3011071":"book","Q3094820":"book","Q3133334":"book","Q3321260":"book","Q3640435":"book","Q3682002":"book","Q3926615":"book","Q3999022":"book","Q4416531":"book","Q33815646":"regulation","Q5023897":"book","Q5043410":"book","Q5110307":"book","Q5433051":"book","Q5855864":"book","Q10379766":"book","Q10650335":"book","Q12818502":"book","Q13134959":"book","Q13136081":"book","Q13566156":"book","Q16516572":"book","Q16517475":"book","Q16517472":"book","Q16519331":"book","Q16519334":"book","Q18452173":"book","Q19311234":"book","Q21209375":"book","Q25616496":"book","Q28134954":"book","Q65201540":"regulation","Q47152505":"book","Q48977725":"book","Q55831886":"book","Q56305481":"book","Q56577736":"book","Q56855534":"book","Q60032729":"book","Q61744282":"book","Q61745175":"book","Q63888811":"book","Q67801963":"periodical","Q74411368":"book","Q74413080":"book","Q75530255":"book","Q76874795":"book","Q80356954":"book","Q80797877":"book","Q83962725":"book","Q87757359":"book","Q90374281":"book","Q96438794":"book","Q98526825":"book","Q98608820":"book","Q101625455":"book","Q105758835":"periodical","Q108884806":"book","Q108904764":"book","Q108905728":"book","Q108905774":"book","Q108905781":"book","Q111591151":"book","Q465821":"book","Q512207":"book","Q583064":"book","Q583976":"book","Q718972":"book","Q740919":"book","Q747381":"book","Q858330":"book","Q884863":"book","Q908667":"book","Q948970":"book","Q1139378":"book","Q1156871":"book","Q1325447":"book","Q1347363":"book","Q1429059":"book","Q1469684":"book","Q1491680":"book","Q1498403":"book","Q1593709":"book","Q1619888":"book","Q1799548":"book","Q2016518":"book","Q2134778":"book","Q2358301":"book","Q2421000":"book","Q2520572":"book","Q2561390":"book","Q2802102":"book","Q2883183":"book","Q3048395":"book","Q3440809":"book","Q3440917":"book","Q3440921":"book","Q3440959":"book","Q3440956":"book","Q3440961":"book","Q3454581":"book","Q3940779":"book","Q3940776":"book","Q4375672":"book","Q4376526":"book","Q5067934":"book","Q5110346":"book","Q5248657":"book","Q5456296":"book","Q5528690":"book","Q6045390":"book","Q6045948":"book","Q6045959":"book","Q6045956":"book","Q6619804":"book","Q6915338":"book","Q6960620":"book","Q7451276":"book","Q7579932":"book","Q7797293":"book","Q9311288":"book","Q10379557":"book","Q10542685":"book","Q10646806":"book","Q10992055":"book","Q11282935":"book","Q11360573":"book","Q11452132":"book","Q11661562":"book","Q11825892":"book","Q11939005":"book","Q12154807":"book","Q12197074":"book","Q12319188":"book","Q17009296":"book","Q17010642":"book","Q18454666":"book","Q20225034":"book","Q20358335":"book","Q20524036":"book","Q20792268":"book","Q21081921":"book","Q21615367":"book","Q24897841":"book","Q26225474":"book","Q26906556":"book","Q26913048":"book","Q26987767":"book","Q27217074":"book","Q31074013":"book","Q51780389":"book","Q55705111":"book","Q55705849":"book","Q56273349":"book","Q62397960":"book","Q73270296":"book","Q98538409":"book","Q104543384":"book","Q104843341":"book","Q106771238":"book","Q108525937":"book","Q112228685":"book","Q116450898":"book","Q118171":"dataset","Q178376":"dataset","Q192588":"dataset","Q333761":"dataset","Q356222":"dataset","Q357393":"dataset","Q593744":"dataset","Q595971":"dataset","Q604177":"dataset","Q638880":"dataset","Q702448":"dataset","Q780524":"dataset","Q871236":"dataset","Q989016":"dataset","Q1065413":"dataset","Q1125301":"dataset","Q1172362":"dataset","Q1235236":"dataset","Q1287505":"dataset","Q1343205":"dataset","Q1373925":"dataset","Q1391125":"dataset","Q1393704":"dataset","Q1394657":"dataset","Q1428914":"dataset","Q1494224":"dataset","Q1502818":"dataset","Q1502855":"dataset","Q1519460":"dataset","Q1572479":"dataset","Q1636786":"dataset","Q1747460":"dataset","Q1787017":"dataset","Q1817517":"dataset","Q1957894":"dataset","Q1969246":"dataset","Q2010640":"dataset","Q2051600":"dataset","Q2067442":"dataset","Q2138567":"dataset","Q2160731":"dataset","Q2274762":"dataset","Q2302053":"dataset","Q2404903":"dataset","Q2532732":"dataset","Q122518344":"book","Q2599456":"dataset","Q2735305":"dataset","Q3071343":"dataset","Q3133368":"dataset","Q3454922":"dataset","Q123528521":"book","Q3556311":"dataset","Q123743920":"book","Q4349497":"dataset","Q124376829":"book","Q124426313":"book","Q124426325":"book","Q4501235":"dataset","Q4505603":"dataset","Q124504883":"book","Q4677551":"dataset","Q124737661":"book","Q124737685":"book","Q124737691":"book","Q124737696":"book","Q124737707":"book","Q124737744":"book","Q124880609":"book","Q124880619":"book","Q4907362":"dataset","Q5062195":"dataset","Q5195097":"dataset","Q5196446":"dataset","Q5322831":"dataset","Q5473309":"dataset","Q5572370":"dataset","Q6044092":"dataset","Q6537693":"dataset","Q7094076":"dataset","Q7246853":"dataset","Q7251472":"dataset","Q7336300":"dataset","Q7455731":"dataset","Q7702836":"dataset","Q9067653":"dataset","Q10358751":"dataset","Q10379825":"dataset","Q10382615":"dataset","Q10388546":"dataset","Q10432973":"dataset","Q10495333":"dataset","Q10658528":"dataset","Q12033103":"dataset","Q12038942":"dataset","Q15097084":"dataset","Q16155335":"dataset","Q17014602":"dataset","Q17143804":"dataset","Q17539639":"dataset","Q18397405":"dataset","Q18452026":"dataset","Q20514253":"dataset","Q22811662":"dataset","Q28324878":"dataset","Q36570165":"dataset","Q50336223":"dataset","Q52819318":"dataset","Q56679069":"dataset","Q59154523":"dataset","Q59154541":"dataset","Q59157237":"dataset","Q59157871":"dataset","Q59162712":"dataset","Q63144794":"dataset","Q63225039":"dataset","Q65245487":"dataset","Q66363204":"dataset","Q76624985":"dataset","Q77422816":"dataset","Q81540907":"dataset","Q89778343":"dataset","Q91500776":"dataset","Q92206266":"dataset","Q142043":"periodical","Q190705":"periodical","Q329669":"periodical","Q442927":"periodical","Q569348":"periodical","Q665319":"periodical","Q738377":"periodical","Q832165":"periodical","Q895089":"periodical","Q1110794":"periodical","Q1153191":"periodical","Q1278984":"periodical","Q1336693":"periodical","Q1416653":"periodical","Q1449648":"periodical","Q1514286":"periodical","Q1868552":"periodical","Q1935225":"periodical","Q2006125":"periodical","Q2016362":"periodical","Q2048876":"periodical","Q2138556":"periodical","Q2328176":"periodical","Q2390658":"periodical","Q2466157":"periodical","Q2497638":"periodical","Q2966795":"periodical","Q3186859":"periodical","Q3186988":"periodical","Q3535851":"periodical","Q3899141":"periodical","Q3920281":"periodical","Q96373704":"dataset","Q4736543":"periodical","Q5104179":"periodical","Q5155035":"periodical","Q5155101":"periodical","Q5276122":"periodical","Q5369583":"periodical","Q5469882":"periodical","Q6158891":"periodical","Q6841189":"periodical","Q99231486":"dataset","Q7019804":"periodical","Q7426758":"periodical","Q7531230":"periodical","Q102090587":"dataset","Q10426563":"periodical","Q10493961":"periodical","Q10593346":"periodical","Q10689419":"periodical","Q11313190":"periodical","Q107301369":"dataset","Q108654442":"dataset","Q108655114":"dataset","Q108655138":"dataset","Q108863793":"dataset","Q110136244":"dataset","Q110270548":"dataset","Q110853983":"dataset","Q112153384":"dataset","Q114727175":"dataset","Q114798281":"dataset","Q116921140":"dataset","Q117769440":"dataset","Q118396004":"dataset","Q118562568":"dataset","Q120442144":"dataset","Q124047792":"dataset","Q124291573":"dataset","Q124500173":"dataset","Q124542039":"dataset","Q124613272":"dataset","Q56296973":"periodical","Q56824093":"periodical","Q61864264":"periodical","Q61864274":"periodical","Q62470341":"periodical","Q87062808":"periodical","Q104148637":"periodical","Q105637045":"periodical","Q106508612":"periodical","Q106634743":"periodical","Q106635283":"periodical","Q106650857":"periodical","Q106650895":"periodical","Q106650967":"periodical","Q106651073":"periodical","Q106651089":"periodical","Q106651150":"periodical","Q106651156":"periodical","Q106651322":"periodical","Q106651333":"periodical","Q106651338":"periodical","Q106651350":"periodical","Q106651372":"periodical","Q106651387":"periodical","Q106651430":"periodical","Q106652786":"periodical","Q106652971":"periodical","Q106652977":"periodical","Q106664582":"periodical","Q106668171":"periodical","Q106668248":"periodical","Q106668332":"periodical","Q106668420":"periodical","Q106668471":"periodical","Q106668535":"periodical","Q106668608":"periodical","Q106668646":"periodical","Q106671524":"periodical","Q106676147":"periodical","Q106676186":"periodical","Q106676275":"periodical","Q106676417":"periodical","Q106677807":"periodical","Q106677862":"periodical","Q106678098":"periodical","Q106678195":"periodical","Q106687540":"periodical","Q106687570":"periodical","Q106687639":"periodical","Q106687644":"periodical","Q106687653":"periodical","Q107170444":"periodical","Q107170468":"periodical","Q107170485":"periodical","Q107170506":"periodical","Q107170655":"periodical","Q107171978":"periodical","Q107171982":"periodical","Q107171980":"periodical","Q107171989":"periodical","Q107178453":"periodical","Q107181454":"periodical","Q107181979":"periodical","Q107182188":"periodical","Q107182194":"periodical","Q107182201":"periodical","Q107182208":"periodical","Q107182322":"periodical","Q107182456":"periodical","Q107183119":"periodical","Q107183122":"periodical","Q107183138":"periodical","Q107183145":"periodical","Q107183151":"periodical","Q107208914":"periodical","Q107208916":"periodical","Q107227701":"periodical","Q107236569":"periodical","Q107236603":"periodical","Q107236849":"periodical","Q107236916":"periodical","Q107237013":"periodical","Q107258494":"periodical","Q107258644":"periodical","Q11389521":"periodical","Q11430180":"periodical","Q11968661":"periodical","Q11976958":"periodical","Q12046361":"periodical","Q12340140":"periodical","Q16853516":"periodical","Q17016787":"periodical","Q19046104":"periodical","Q20821444":"periodical","Q20850562":"periodical","Q20919310":"periodical","Q22981456":"periodical","Q27156322":"periodical","Q31075044":"periodical","Q5296":"webpage","Q116263496":"software","Q116737628":"software","Q182415":"broadcast","Q336181":"broadcast","Q358942":"broadcast","Q431102":"broadcast","Q661436":"broadcast","Q846662":"broadcast","Q854995":"motion_picture","Q874342":"broadcast","Q986699":"broadcast","Q1172910":"motion_picture","Q1261214":"broadcast","Q1407207":"broadcast","Q1407240":"broadcast","Q1407245":"broadcast","Q1457145":"broadcast","Q1472288":"broadcast","Q1619206":"broadcast","Q1785288":"broadcast","Q1857766":"broadcast","Q1948292":"broadcast","Q2231383":"broadcast","Q2605607":"broadcast","Q2872241":"broadcast","Q3464665":"broadcast","Q3744532":"broadcast","Q5270557":"broadcast","Q5398426":"broadcast","Q5428822":"broadcast","Q6041792":"broadcast","Q6057169":"broadcast","Q6626746":"broadcast","Q6645282":"broadcast","Q7649715":"broadcast","Q7696995":"broadcast","Q9082479":"broadcast","Q10594993":"broadcast","Q10676514":"broadcast","Q10689398":"broadcast","Q180712":"software","Q193345":"software","Q278937":"software","Q309396":"software","Q11243865":"broadcast","Q612694":"software","Q635758":"standard","Q638079":"software","Q11350900":"broadcast","Q11378264":"broadcast","Q11504513":"broadcast","Q846726":"software","Q926331":"software","Q1140037":"software","Q1154669":"software","Q1291200":"software","Q1357381":"software","Q1522059":"software","Q1856893":"software","Q2920753":"software","Q3062122":"software","Q4839599":"software","Q4976857":"software","Q5205594":"software","Q6407569":"software","Q10720268":"software","Q13090306":"software","Q13225925":"software","Q13427559":"software","Q15401472":"software","Q16947775":"software","Q18649598":"software","Q19365656":"software","Q24896672":"software","Q25389983":"software","Q28134936":"software","Q30592326":"software","Q107258714":"periodical","Q107258724":"periodical","Q107259317":"periodical","Q109420226":"periodical","Q113486165":"periodical","Q115689759":"periodical","Q56064107":"software","Q117038946":"periodical","Q118587151":"periodical","Q119459647":"periodical","Q121066194":"periodical","Q485":"software","Q14639":"software","Q14644":"software","Q14645":"software","Q99936926":"software","Q105626027":"software","Q106255432":"software","Q108546259":"software","Q112183672":"software","Q256900":"software","Q350882":"software","Q11664270":"broadcast","Q1138815":"software","Q1607417":"software","Q1891170":"software","Q2713778":"software","Q14346334":"broadcast","Q3775098":"software","Q3819460":"software","Q3909888":"software","Q4182287":"software","Q179797":"book","Q5145854":"software","Q15903379":"broadcast","Q378914":"book","Q5227411":"software","Q521983":"book","Q16068806":"broadcast","Q16206641":"broadcast","Q697133":"book","Q859161":"dataset","Q861712":"book","Q897755":"book","Q932934":"book","Q975413":"book","Q1048400":"book","Q16614795":"broadcast","Q1224346":"book","Q1304223":"book","Q16913666":"broadcast","Q1391417":"book","Q1455182":"book","Q1575315":"book","Q1656835":"book","Q17232576":"broadcast","Q1722340":"book","Q1787111":"dataset","Q1820290":"book","Q2134855":"book","Q7000900":"software","Q2191807":"book","Q2210568":"book","Q2361647":"book","Q2376111":"book","Q2394934":"book","Q7441651":"software","Q2648129":"book","Q18640746":"broadcast","Q3808854":"book","Q4428939":"book","Q19973797":"broadcast","Q4492301":"book","Q4750851":"book","Q10123170":"software","Q21044675":"broadcast","Q5805540":"book","Q6486734":"book","Q7187214":"book","Q7191193":"book","Q7400100":"book","Q25090976":"broadcast","Q28404878":"broadcast","Q29555881":"broadcast","Q19603862":"software","Q34682961":"broadcast","Q46706005":"broadcast","Q55695331":"broadcast","Q56304385":"broadcast","Q65128215":"broadcast","Q66382991":"software","Q8096":"book","Q93992677":"broadcast","Q101716172":"broadcast","Q91136116":"software","Q101860688":"broadcast","Q101895799":"broadcast","Q102430681":"broadcast","Q104034099":"broadcast","Q104702600":"broadcast","Q107040579":"broadcast","Q109369274":"broadcast","Q109736732":"broadcast","Q110593090":"broadcast","Q113629797":"broadcast","Q115977852":"broadcast","Q116681326":"broadcast","Q118207612":"broadcast","Q107637706":"software","Q120097488":"broadcast","Q121324285":"broadcast","Q121401577":"broadcast","Q121423535":"broadcast","Q121503489":"broadcast","Q121608489":"broadcast","Q124044781":"broadcast","Q124288308":"broadcast","Q193977":"motion_picture","Q245056":"motion_picture","Q423504":"motion_picture","Q735478":"motion_picture","Q972687":"motion_picture","Q2757149":"motion_picture","Q114345171":"book","Q41557148":"periodical","Q116020742":"book","Q6942568":"motion_picture","Q116385234":"book","Q116771829":"book","Q7751682":"motion_picture","Q7832972":"motion_picture","Q7841716":"motion_picture","Q121010292":"book","Q11900986":"motion_picture","Q47472816":"periodical","Q11997526":"motion_picture","Q121363520":"book","Q48998465":"periodical","Q122939378":"book","Q16538713":"motion_picture","Q17517379":"motion_picture","Q20647642":"motion_picture","Q20667187":"motion_picture","Q1261318":"standard","Q4671278":"standard","Q29168811":"motion_picture","Q31897275":"motion_picture","Q11766949":"book","Q12558347":"book","Q47486001":"motion_picture","Q20524647":"book","Q85970961":"periodical","Q89375907":"periodical","Q69084760":"motion_picture","Q45740849":"book","Q113653763":"periodical","Q116946814":"periodical","Q52162477":"book","Q52162481":"standard","Q52162484":"book","Q83424438":"motion_picture","Q55214821":"book","Q55594385":"book","Q125121478":"periodical","Q125124188":"periodical","Q60535660":"book","Q60535846":"book","Q60550285":"book","Q429707":"periodical","Q498783":"periodical","Q674926":"periodical","Q752295":"periodical","Q842399":"periodical","Q1134687":"periodical","Q1780427":"periodical","Q1826799":"periodical","Q1968599":"periodical","Q105101851":"motion_picture","Q2393445":"periodical","Q2468316":"periodical","Q2617891":"periodical","Q2901024":"periodical","Q2906864":"periodical","Q77046980":"book","Q3542017":"periodical","Q3976078":"periodical","Q4797179":"periodical","Q5340829":"periodical","Q5431486":"periodical","Q5442871":"periodical","Q5690817":"periodical","Q7209566":"periodical","Q7210258":"periodical","Q7239010":"periodical","Q7245773":"periodical","Q7249390":"periodical","Q110397019":"motion_picture","Q112763972":"motion_picture","Q84599584":"book","Q113988651":"motion_picture","Q14759031":"periodical","Q15292273":"periodical","Q121742706":"motion_picture","Q122394714":"motion_picture","Q19786808":"periodical","Q122813146":"motion_picture","Q20829703":"periodical","Q123995800":"motion_picture","Q21130352":"periodical","Q98905977":"software","Q99231526":"book","Q25918088":"periodical","Q28715651":"periodical","Q116859816":"standard","Q117599312":"event","Q117599318":"event","Q118433973":"event","Q122687887":"event","Q162727":"software","Q168210":"software","Q186165":"software","Q189210":"software","Q210980":"software","Q213369":"periodical","Q251527":"software","Q300870":"software","Q327349":"dataset","Q354869":"software","Q477840":"software","Q580148":"software","Q587992":"software","Q770881":"software","Q847906":"periodical","Q1043805":"software","Q1071902":"software","Q1225034":"software","Q1230542":"software","Q1276157":"software","Q1340449":"software","Q1350108":"software","Q1414426":"dataset","Q1671576":"software","Q1931587":"software","Q1938536":"software","Q1988927":"dataset","Q2006488":"software","Q2024406":"software","Q2108936":"software","Q2274480":"software","Q2355065":"software","Q2435717":"software","Q2648547":"software","Q2910253":"dataset","Q2990357":"software","Q2990366":"software","Q3081320":"software","Q3390477":"webpage","Q3391957":"software","Q3428753":"periodical","Q3485465":"software","Q3505741":"software","Q3538400":"software","Q3963243":"software","Q4088258":"software","Q4112099":"software","Q4382945":"software","Q4680777":"software","Q4787276":"software","Q4819969":"software","Q5128435":"software","Q5172507":"software","Q5802810":"standard","Q5691097":"software","Q6078050":"software","Q6466676":"software","Q6987441":"standard","Q6542714":"software","Q6554311":"software","Q6576792":"software","Q6590235":"software","Q7094081":"software","Q7144994":"software","Q7170631":"software","Q7225533":"software","Q7265244":"software","Q7295723":"software","Q7307094":"software","Q7319034":"software","Q500041":"event","Q622521":"event","Q655023":"event","Q953813":"event","Q1130251":"event","Q1229154":"event","Q1359142":"event","Q1718673":"event","Q1750919":"event","Q1813540":"event","Q2371595":"event","Q2537162":"event","Q2819159":"event","Q17157034":"standard","Q7417094":"event","Q12613663":"event","Q29561746":"event","Q59053570":"standard","Q59057709":"standard","Q171":"software","Q111953054":"standard","Q114625990":"software","Q115124505":"software","Q115449506":"software","Q115449527":"software","Q115822041":"software","Q117681324":"software","Q119018971":"software","Q121134938":"software","Q121539619":"software","Q122754119":"periodical","Q7503177":"software","Q7935008":"software","Q9384680":"software","Q10493980":"software","Q10682415":"software","Q10714198":"software","Q11074464":"software","Q11278428":"software","Q11392035":"software","Q11410738":"software","Q11431055":"software","Q11448776":"software","Q11463684":"dataset","Q11605626":"software","Q11900959":"software","Q12050976":"software","Q15633582":"software","Q16001076":"webpage","Q16002093":"software","Q16465919":"software","Q16509734":"software","Q16825545":"software","Q17080944":"software","Q17164395":"software","Q17164466":"software","Q17232649":"software","Q18450215":"software","Q18617039":"software","Q19891839":"software","Q21087288":"software","Q21606686":"software","Q22137024":"software","Q22812944":"software","Q27881073":"software","Q28754053":"software","Q30044873":"report","Q30137770":"software","Q33270324":"software","Q39827535":"software","Q39835986":"software","Q42336871":"software","Q50988419":"software","Q52720701":"software","Q59925870":"software","Q63247979":"software","Q72705885":"software","Q81201196":"software","Q89290172":"webpage","Q90799127":"software","Q96882133":"software","Q101191533":"dataset","Q105543920":"software","Q107316103":"software","Q108599057":"software","Q109924251":"software","Q112335315":"software","Q113308943":"software","Q114043226":"software","Q521414":"dataset","Q986756":"dataset","Q1345528":"dataset","Q1641277":"dataset","Q1787676":"dataset","Q1979529":"dataset","Q2361901":"dataset","Q2532367":"dataset","Q2532379":"dataset","Q3404855":"dataset","Q3405306":"dataset","Q3421859":"dataset","Q3518943":"dataset","Q3664416":"dataset","Q3678170":"dataset","Q4127466":"dataset","Q4350734":"dataset","Q4350735":"dataset","Q4350754":"dataset","Q4391701":"dataset","Q5058966":"dataset","Q5058970":"dataset","Q5058971":"dataset","Q5058968":"dataset","Q5058969":"dataset","Q5058974":"dataset","Q5058975":"dataset","Q5058972":"dataset","Q5058978":"dataset","Q5058977":"dataset","Q5058981":"dataset","Q5058989":"dataset","Q5165136":"dataset","Q5334384":"dataset","Q5478543":"dataset","Q5760464":"dataset","Q5760561":"dataset","Q7015254":"dataset","Q10427675":"dataset","Q10497456":"dataset","Q10871947":"dataset","Q11452069":"dataset","Q12058091":"dataset","Q12409404":"dataset","Q12876973":"dataset","Q15854286":"dataset","Q16056280":"dataset","Q17003001":"dataset","Q17040540":"dataset","Q18029299":"dataset","Q18481148":"dataset","Q19799894":"dataset","Q19894430":"dataset","Q20715856":"dataset","Q24934691":"dataset","Q25380840":"dataset","Q25383554":"dataset","Q26207721":"dataset","Q28730356":"dataset","Q29795177":"dataset","Q37833472":"dataset","Q43078911":"dataset","Q48790556":"dataset","Q56290048":"dataset","Q60518318":"dataset","Q61355526":"dataset","Q64267945":"dataset","Q64853398":"dataset","Q69316638":"dataset","Q77713908":"dataset","Q100312296":"dataset","Q105872226":"dataset","Q51448788":"periodical","Q53629993":"periodical","Q56301341":"periodical","Q56313771":"periodical","Q56753360":"periodical","Q57904379":"periodical","Q58627929":"periodical","Q60970407":"periodical","Q61851987":"periodical","Q65194634":"periodical","Q79209169":"periodical","Q89488985":"periodical","Q92334825":"periodical","Q93716609":"periodical","Q685935":"periodical","Q867242":"periodical","Q1029418":"periodical","Q1170050":"periodical","Q1327300":"periodical","Q1350347":"periodical","Q1404635":"periodical","Q1407909":"periodical","Q1416251":"periodical","Q1572421":"periodical","Q1711354":"periodical","Q1743269":"periodical","Q1784788":"periodical","Q1791899":"periodical","Q1911105":"periodical","Q1958170":"periodical","Q2116411":"periodical","Q2178566":"periodical","Q2265195":"periodical","Q2514037":"periodical","Q2740804":"periodical","Q2784039":"periodical","Q3244962":"periodical","Q3267592":"periodical","Q3736345":"periodical","Q3817205":"periodical","Q4345830":"periodical","Q4468966":"periodical","Q4737473":"periodical","Q4971301":"periodical","Q5049323":"periodical","Q5128439":"periodical","Q5164837":"periodical","Q5433603":"periodical","Q5976452":"periodical","Q6046722":"periodical","Q6107132":"periodical","Q6124786":"periodical","Q6297581":"periodical","Q6545508":"periodical","Q7493984":"periodical","Q8189527":"periodical","Q9019003":"periodical","Q9068487":"periodical","Q9198406":"periodical","Q9397629":"periodical","Q10300473":"periodical","Q10677794":"periodical","Q10685193":"periodical","Q11239137":"periodical","Q11291281":"periodical","Q11300224":"periodical","Q11319615":"periodical","Q11550477":"periodical","Q11780435":"periodical","Q11832342":"periodical","Q11887445":"periodical","Q12298619":"periodical","Q12408563":"periodical","Q12420307":"periodical","Q12834611":"periodical","Q12902861":"periodical","Q13112752":"periodical","Q13605686":"periodical","Q106105993":"dataset","Q106106042":"dataset","Q107285736":"dataset","Q107444042":"dataset","Q107862888":"dataset","Q107969031":"dataset","Q15809213":"periodical","Q16141031":"periodical","Q109357571":"dataset","Q18215934":"periodical","Q18450409":"periodical","Q111219304":"dataset","Q111253599":"dataset","Q111979285":"dataset","Q112113517":"dataset","Q21032630":"periodical","Q25102282":"periodical","Q25351576":"periodical","Q117797418":"dataset","Q124166774":"dataset","Q267628":"article-newspaper","Q871232":"article-newspaper","Q1761112":"article-newspaper","Q111152090":"book","Q738826":"speech","Q1250390":"speech","Q1397746":"speech","Q1813927":"speech","Q1820678":"speech","Q3694604":"article-newspaper","Q3719255":"article-newspaper","Q2623953":"speech","Q2781658":"speech","Q113806994":"book","Q3479856":"speech","Q108269159":"event","Q111204686":"event","Q7454995":"speech","Q121464814":"book","Q116939673":"event","Q124360390":"book","Q386638":"standard","Q1844938":"software","Q3559933":"software","Q4110622":"software","Q193206":"book","Q2532146":"book","Q7933844":"standard","Q8048052":"software","Q3306693":"book","Q3928536":"book","Q4989892":"book","Q5793771":"book","Q6034702":"book","Q11925961":"standard","Q10615359":"book","Q11623786":"periodical","Q12046622":"book","Q5519943":"event","Q12485660":"book","Q13195942":"book","Q15919135":"book","Q16143859":"book","Q16257663":"book","Q20825947":"book","Q21905924":"book","Q22916714":"book","Q31186770":"book","Q98561135":"periodical","Q27812003":"event","Q99424035":"periodical","Q103847161":"periodical","Q104146008":"periodical","Q107373430":"periodical","Q109174082":"periodical","Q109174122":"periodical","Q110280043":"periodical","Q111973269":"periodical","Q112213391":"periodical","Q113772731":"periodical","Q123982350":"manuscript","Q123982405":"manuscript","Q123982420":"manuscript","Q123988309":"manuscript","Q123989026":"manuscript","Q123989053":"manuscript","Q123989103":"manuscript","Q123997231":"manuscript","Q123997244":"manuscript","Q123997268":"manuscript","Q124039114":"manuscript","Q114925712":"periodical","Q116995732":"periodical","Q120068330":"periodical","Q122123463":"periodical","Q122801967":"periodical","Q123161398":"periodical","Q51845238":"event","Q123482279":"periodical","Q124081227":"periodical","Q65647244":"software","Q55604459":"event","Q64152609":"book","Q64152635":"book","Q597695":"manuscript","Q679468":"manuscript","Q683729":"manuscript","Q856314":"manuscript","Q1190781":"manuscript","Q1620808":"manuscript","Q3637297":"manuscript","Q4307822":"manuscript","Q65927107":"event","Q5153657":"periodical","Q5597707":"periodical","Q18558914":"manuscript","Q117599884":"article-newspaper","Q98810104":"book","Q106771575":"book","Q109326945":"book","Q108390245":"event","Q115355764":"book","Q118436389":"book","Q10547853":"speech","Q11555354":"speech","Q17993444":"speech","Q19977647":"speech","Q1146189":"software","Q1637801":"software","Q25616505":"speech","Q654188":"book","Q4943282":"book","Q245850":"event","Q336382":"event","Q12042784":"dataset","Q639432":"event","Q904180":"event","Q967352":"event","Q1070379":"event","Q12734330":"book","Q19868411":"software","Q21041173":"software","Q48911100":"speech","Q21474132":"book","Q29439472":"book","Q24231964":"event","Q65245018":"book","Q63967878":"event","Q86355865":"book","Q124954096":"speech","Q102676349":"software","Q477371":"motion_picture","Q846544":"motion_picture","Q1919632":"motion_picture","Q2916932":"motion_picture","Q112251972":"book","Q3482453":"motion_picture","Q7210294":"motion_picture","Q8192124":"motion_picture","Q18430382":"motion_picture","Q81945":"standard","Q133862":"standard","Q165194":"standard","Q230872":"standard","Q230924":"standard","Q264364":"standard","Q386027":"standard","Q622993":"standard","Q749568":"standard","Q847021":"standard","Q886092":"standard","Q974922":"standard","Q989220":"standard","Q1025017":"standard","Q629876":"software","Q1354819":"standard","Q1382530":"standard","Q1344636":"software","Q1625990":"software","Q2296308":"standard","Q1810858":"software","Q2434518":"standard","Q2525317":"standard","Q2136127":"software","Q2288448":"software","Q3359858":"standard","Q3408087":"standard","Q4825885":"standard","Q5004612":"standard","Q5358377":"software","Q5965755":"standard","Q6045205":"standard","Q5570938":"software","Q1114458":"book","Q2008684":"book","Q3027814":"book","Q3491290":"book","Q4942721":"book","Q4955683":"book","Q5197887":"book","Q10853141":"software","Q6071891":"book","Q11985288":"software","Q1274361":"event","Q1410103":"event","Q13104404":"software","Q1842550":"event","Q2166620":"event","Q2190338":"event","Q2273673":"event","Q2307273":"event","Q2387298":"event","Q2437403":"event","Q2627213":"event","Q2743540":"event","Q2924213":"event","Q3530486":"event","Q5164700":"event","Q5305074":"event","Q7260376":"event","Q7355086":"event","Q7644247":"event","Q16840211":"book","Q22918958":"software","Q12304117":"event","Q12323063":"event","Q14636552":"event","Q16821637":"event","Q21095154":"event","Q25222194":"event","Q63214877":"motion_picture","Q28163437":"event","Q65224847":"motion_picture","Q30306759":"event","Q65966993":"software","Q29522":"standard","Q42283":"standard","Q45211":"software","Q102429885":"motion_picture","Q104536994":"motion_picture","Q104559206":"motion_picture","Q78788577":"software","Q113485322":"motion_picture","Q114729802":"motion_picture","Q116456802":"motion_picture","Q116456830":"motion_picture","Q116514801":"motion_picture","Q117536422":"motion_picture","Q121390245":"motion_picture","Q100510764":"webpage","Q100981742":"event","Q248583":"motion_picture","Q457832":"motion_picture","Q577697":"map","Q622548":"motion_picture","Q624771":"motion_picture","Q1115187":"motion_picture","Q1425895":"map","Q1554584":"legal_case","Q1788980":"motion_picture","Q2331945":"motion_picture","Q2352868":"legal_case","Q2678111":"motion_picture","Q2843083":"motion_picture","Q2905670":"legal_case","Q2991560":"motion_picture","Q3374310":"legal_case","Q3677141":"motion_picture","Q3745430":"motion_picture","Q3778115":"motion_picture","Q4273016":"legal_case","Q4950139":"motion_picture","Q5070847":"motion_picture","Q5151497":"motion_picture","Q5778924":"motion_picture","Q7267891":"musical_score","Q124153669":"standard","Q10631817":"motion_picture","Q11298147":"motion_picture","Q11894225":"motion_picture","Q122261772":"book","Q124610245":"book","Q124612226":"book","Q124705968":"book","Q124714364":"book","Q124786787":"book","Q15804095":"motion_picture","Q15849377":"legal_case","Q17112331":"motion_picture","Q18331260":"motion_picture","Q19952560":"motion_picture","Q21936815":"map","Q21938018":"map","Q21944833":"map","Q75050":"software","Q131212":"software","Q183197":"software","Q185534":"software","Q192726":"software","Q240795":"software","Q453843":"software","Q483130":"software","Q498267":"software","Q620615":"software","Q631525":"software","Q460214":"book","Q30006080":"map","Q1540100":"book","Q7120384":"standard","Q2108819":"book","Q2250805":"book","Q2359829":"book","Q2415383":"book","Q2869471":"book","Q2869478":"book","Q4816871":"book","Q13360597":"standard","Q13551889":"standard","Q15836568":"standard","Q11025270":"book","Q16935517":"standard","Q18761595":"standard","Q19599398":"standard","Q20311482":"standard","Q23891373":"standard","Q52768654":"map","Q26885495":"book","Q60029764":"legislation","Q87663609":"map","Q87669200":"map","Q63969629":"book","Q6368":"software","Q7889":"software","Q13741":"software","Q54277":"software","Q95440291":"motion_picture","Q95952108":"motion_picture","Q98517089":"legal_case","Q105813043":"motion_picture","Q108466999":"motion_picture","Q116680333":"motion_picture","Q118612349":"motion_picture","Q119855423":"musical_score","Q119855435":"musical_score","Q121094324":"motion_picture","Q111336109":"standard","Q107353665":"book","Q107449079":"book","Q107531224":"book","Q635540":"software","Q1674502":"regulation","Q1724745":"regulation","Q116447644":"software","Q116510586":"software","Q116854567":"software","Q117091964":"software","Q3026325":"motion_picture","Q117741340":"software","Q117768533":"software","Q117788624":"software","Q117839947":"software","Q4214118":"regulation","Q118733145":"software","Q120266668":"software","Q123270793":"software","Q111926836":"event","Q124629928":"software","Q121494280":"book","Q383904":"song","Q564848":"song","Q721644":"song","Q5158512":"song","Q6037387":"song","Q122665190":"event","Q124012559":"event","Q124748489":"event","Q2344644":"standard","Q849965":"book","Q1000882":"book","Q1196556":"book","Q1221179":"book","Q1792348":"book","Q2122997":"book","Q21998394":"song","Q10429492":"standard","Q5717007":"book","Q917015":"legislation","Q528892":"event","Q1025005":"event","Q1147337":"event","Q1210697":"event","Q1241851":"event","Q1241933":"event","Q1480879":"event","Q1518054":"event","Q1533355":"event","Q1562095":"event","Q1902629":"event","Q2345910":"event","Q3197479":"event","Q3304691":"event","Q3354917":"event","Q5588655":"event","Q6857262":"event","Q7251589":"event","Q7623054":"event","Q16591969":"book","Q11487759":"event","Q11655105":"event","Q19362971":"book","Q15631336":"event","Q25462541":"book","Q26913402":"book","Q21675917":"event","Q48999297":"song","Q41270":"song","Q47496733":"event","Q48778128":"event","Q63862928":"software","Q65048190":"software","Q58815974":"event","Q60716473":"event","Q72271641":"software","Q99543120":"regulation","Q63993400":"event","Q69405214":"event","Q84177695":"software","Q76279659":"event","Q91231169":"software","Q92205975":"software","Q106103855":"song","Q106103953":"song","Q85739691":"event","Q97644802":"software","Q99460482":"software","Q91280428":"event","Q104804744":"software","Q105044723":"software","Q105100182":"software","Q105682544":"software","Q108684412":"software","Q110439009":"software","Q110907733":"software","Q111915979":"software","Q112842824":"software","Q113470369":"dataset","Q102250949":"event","Q222639":"motion_picture","Q883179":"motion_picture","Q1033891":"motion_picture","Q1740789":"motion_picture","Q1776156":"motion_picture","Q2297927":"motion_picture","Q2421031":"motion_picture","Q111878265":"book","Q112153433":"book","Q112886212":"motion_picture","Q4373044":"motion_picture","Q4797626":"motion_picture","Q4840473":"motion_picture","Q5449011":"motion_picture","Q10505214":"motion_picture","Q16254232":"motion_picture","Q20649407":"motion_picture","Q20656232":"motion_picture","Q20965835":"motion_picture","Q144352":"standard","Q184756":"standard","Q184766":"standard","Q372395":"standard","Q386787":"standard","Q1186870":"standard","Q1416278":"standard","Q2289247":"standard","Q2512796":"standard","Q2610482":"standard","Q2903897":"standard","Q3775042":"standard","Q185597":"book","Q5514108":"standard","Q336468":"book","Q6108264":"standard","Q1125133":"book","Q1788866":"book","Q2151774":"book","Q7489000":"standard","Q3069017":"book","Q3186884":"book","Q5178219":"book","Q5522468":"book","Q337987":"event","Q452237":"event","Q496839":"event","Q615255":"event","Q12623918":"standard","Q12623919":"standard","Q708369":"event","Q26132283":"dataset","Q10921030":"book","Q4437084":"event","Q11606858":"book","Q11885722":"book","Q11900669":"event","Q25616446":"standard","Q51282711":"thesis","Q51282766":"thesis","Q51282798":"thesis","Q51282875":"thesis","Q51282918":"thesis","Q51282969":"thesis","Q51282999":"thesis","Q51283026":"thesis","Q51283053":"thesis","Q51283145":"thesis","Q51283327":"thesis","Q29149990":"standard","Q30592417":"standard","Q47167051":"standard","Q78461348":"motion_picture","Q59155105":"standard","Q97016664":"motion_picture","Q100328456":"thesis","Q100328465":"thesis","Q104537013":"motion_picture","Q104596067":"regulation","Q104851179":"motion_picture","Q40231":"event","Q43109":"event","Q114051112":"motion_picture","Q123857280":"motion_picture","Q105116684":"broadcast","Q106288677":"book","Q104833031":"event","Q651476":"software","Q692199":"software","Q776688":"software","Q778043":"software","Q831677":"software","Q840703":"software","Q860676":"software","Q868410":"software","Q874411":"software","Q897678":"software","Q925622":"software","Q985394":"software","Q1047507":"software","Q1068192":"software","Q1074158":"software","Q1194864":"software","Q1324042":"software","Q1328864":"software","Q1331892":"software","Q1391080":"software","Q1461523":"software","Q1568118":"software","Q1571511":"software","Q1608344":"software","Q1684148":"software","Q1897589":"software","Q1955251":"software","Q2115026":"software","Q2136515":"software","Q2158576":"software","Q2522958":"software","Q2903541":"software","Q2933820":"software","Q2992080":"software","Q3189452":"software","Q3257916":"software","Q3552754":"software","Q3635085":"software","Q3751111":"software","Q4033109":"software","Q4034719":"software","Q4834650":"software","Q5134342":"software","Q5140063":"software","Q5155929":"software","Q5164835":"software","Q5165883":"software","Q5227393":"software","Q5287211":"software","Q5429711":"software","Q5519929":"software","Q5596600":"software","Q6577295":"software","Q7170584":"software","Q7554244":"software","Q7554300":"software","Q7805487":"software","Q7935066":"software","Q7936632":"software","Q7950128":"software","Q9158476":"software","Q9361521":"software","Q10336531":"software","Q10360429":"software","Q11121294":"software","Q11188577":"software","Q11275082":"software","Q11320567":"software","Q15122700":"software","Q15505266":"software","Q15544757":"software","Q15547961":"software","Q15548064":"software","Q15548076":"software","Q15548082":"software","Q15614008":"software","Q15614016":"software","Q15618491":"software","Q16829782":"software","Q16972647":"software","Q17140402":"software","Q18456364":"software","Q21570197":"software","Q21572113":"software","Q21577192":"software","Q22907861":"software","Q24657198":"software","Q25104204":"software","Q28051323":"software","Q28061130":"software","Q28454366":"software","Q30047053":"software","Q30598180":"software","Q38984481":"software","Q48780637":"software","Q55080113":"software","Q55344424":"software","Q60461507":"software","Q60535730":"software","Q115221653":"software","Q105296293":"event","Q105806598":"event","Q111279659":"event","Q122066758":"book","Q2514870":"dataset","Q123360748":"book","Q124300209":"book","Q118777575":"event","Q7097791":"dataset","Q123907479":"event","Q205919":"book","Q620035":"legislation","Q20707560":"dataset","Q3286535":"book","Q150139":"event","Q206883":"event","Q228114":"event","Q255208":"event","Q375011":"event","Q381977":"event","Q429166":"event","Q478515":"event","Q696781":"event","Q699387":"event","Q819634":"event","Q884672":"event","Q899207":"event","Q925645":"event","Q926161":"event","Q992266":"event","Q1000774":"event","Q1046351":"event","Q1113775":"event","Q1141155":"event","Q1190070":"event","Q1214249":"event","Q1290437":"event","Q1433039":"event","Q1439766":"event","Q1472127":"event","Q1617360":"event","Q1679801":"event","Q1715832":"event","Q1724702":"event","Q1759320":"event","Q1770155":"event","Q1954483":"event","Q2065430":"event","Q2149670":"event","Q2387698":"event","Q2458322":"event","Q2679354":"event","Q2709567":"event","Q2717679":"event","Q2754877":"event","Q2773712":"event","Q2994156":"event","Q3010205":"event","Q3069796":"event","Q3323691":"event","Q3335361":"event","Q3399898":"event","Q3919798":"legislation","Q3919961":"legislation","Q3505413":"event","Q3562072":"event","Q4016503":"event","Q4370379":"event","Q4899367":"event","Q5358448":"event","Q5358449":"event","Q6164848":"event","Q6887787":"event","Q7196127":"event","Q7443004":"event","Q7578606":"event","Q7620975":"event","Q7858737":"event","Q9164713":"event","Q10674482":"event","Q11423936":"event","Q11626449":"event","Q20830278":"book","Q22661166":"book","Q22961568":"book","Q18915287":"event","Q20591610":"event","Q21778963":"event","Q25063938":"event","Q62071432":"standard","Q62679267":"book","Q63344699":"event","Q64852948":"event","Q85855009":"event","Q86720786":"event","Q94997350":"book","Q97380578":"event","Q97696406":"event","Q98078994":"event","Q332564":"motion_picture","Q547760":"motion_picture","Q987831":"motion_picture","Q1047299":"motion_picture","Q3249257":"motion_picture","Q106227544":"event","Q4159149":"motion_picture","Q107304995":"event","Q107305006":"event","Q4765076":"motion_picture","Q113071362":"event","Q115119974":"event","Q115771654":"event","Q13377551":"motion_picture","Q116154983":"event","Q117202191":"event","Q118405061":"event","Q16182294":"motion_picture","Q18089587":"motion_picture","Q18648407":"motion_picture","Q20089346":"motion_picture","Q123186044":"event","Q20650540":"motion_picture","Q124000072":"event","Q124820822":"event","Q187051":"standard","Q25110269":"motion_picture","Q1835802":"standard","Q2558201":"standard","Q27959357":"motion_picture","Q28968258":"motion_picture","Q28968511":"motion_picture","Q113197858":"post","Q1040489":"event","Q118581694":"performance","Q118581977":"performance","Q5065383":"event","Q5115066":"event","Q5215299":"event","Q5849664":"event","Q6159649":"event","Q6612823":"event","Q7137430":"event","Q7249115":"event","Q7619792":"event","Q10859648":"event","Q11263162":"event","Q11547760":"event","Q11697720":"event","Q11706236":"event","Q11906196":"event","Q11921906":"event","Q11921912":"event","Q12056720":"event","Q12389156":"event","Q13745686":"event","Q15361145":"event","Q15846847":"event","Q16034435":"event","Q16154065":"event","Q17135873":"event","Q18006428":"event","Q19276041":"event","Q19544614":"event","Q19804729":"event","Q20826105":"event","Q22986126":"event","Q23459413":"event","Q2500107":"performance","Q2568341":"performance","Q2751794":"performance","Q28136564":"event","Q30325245":"event","Q31836501":"event","Q33117691":"event","Q85632254":"motion_picture","Q65769824":"standard","Q54091483":"event","Q56551134":"event","Q40248002":"performance","Q40248880":"performance","Q40249084":"performance","Q40249579":"performance","Q98807719":"motion_picture","Q66128145":"event","Q66317493":"event","Q47000326":"performance","Q47466735":"performance","Q110854783":"motion_picture","Q115864463":"motion_picture","Q115945952":"motion_picture","Q116771444":"motion_picture","Q117355814":"motion_picture","Q118189123":"motion_picture","Q83710044":"event","Q124242658":"motion_picture","Q88545234":"event","Q97770079":"event","Q99833900":"event","Q640492":"map","Q1502766":"motion_picture","Q1501945":"map","Q1875628":"map","Q1974665":"map","Q2669075":"map","Q2915844":"map","Q2940514":"map","Q3677203":"motion_picture","Q3677205":"motion_picture","Q122235656":"software","Q11548991":"report","Q11559530":"report","Q11574068":"report","Q11632361":"report","Q11988943":"report","Q124354347":"book","Q17232848":"report","Q18845742":"report","Q167772":"standard","Q223535":"standard","Q229762":"standard","Q243303":"standard","Q306152":"standard","Q178285":"software","Q430253":"software","Q763151":"software","Q1202273":"software","Q1340793":"software","Q1444631":"software","Q1645952":"software","Q2383135":"software","Q2489117":"software","Q234280":"chapter","Q234300":"chapter","Q3512599":"software","Q158075":"book","Q5005843":"software","Q5530385":"software","Q950683":"book","Q7940270":"software","Q3128903":"book","Q3322346":"book","Q3384380":"book","Q5909575":"book","Q6413244":"book","Q6723673":"book","Q6746509":"book","Q6794707":"book","Q6794743":"book","Q6800582":"book","Q6803493":"book","Q6804403":"book","Q6805339":"book","Q6805774":"book","Q6805831":"book","Q6807281":"book","Q6809785":"book","Q6810132":"book","Q6811408":"book","Q11761930":"software","Q3043499":"event","Q12182134":"book","Q12186067":"book","Q12186236":"book","Q12186237":"book","Q12207307":"book","Q12207310":"book","Q12207315":"book","Q12207312":"book","Q12207316":"book","Q12238706":"book","Q40877606":"report","Q16120791":"book","Q19060922":"book","Q20418717":"book","Q28715505":"book","Q123485401":"manuscript","Q54900434":"book","Q54965913":"book","Q68170326":"book","Q5974932":"manuscript","Q66023226":"event","Q105606055":"motion_picture","Q106728041":"motion_picture","Q106963809":"map","Q110996871":"map","Q111953147":"motion_picture","Q120971989":"report","Q124647481":"map","Q124788472":"map","Q124788550":"map","Q124838591":"map","Q124838771":"map","Q124838944":"map","Q124838974":"map","Q124102375":"report","Q278934":"standard","Q285972":"standard","Q287067":"standard","Q290741":"standard","Q336705":"standard","Q379545":"standard","Q467454":"standard","Q497118":"standard","Q507860":"standard","Q527723":"standard","Q594447":"standard","Q682626":"standard","Q691652":"standard","Q863883":"standard","Q877809":"standard","Q1043076":"standard","Q1056408":"standard","Q1069215":"standard","Q1135858":"standard","Q1224822":"standard","Q1343033":"standard","Q1351368":"standard","Q1363415":"standard","Q1485661":"standard","Q1572121":"standard","Q1727359":"standard","Q1840684":"standard","Q1931564":"standard","Q1955133":"standard","Q2206173":"standard","Q2720536":"standard","Q3077335":"standard","Q3498805":"standard","Q3502441":"standard","Q3930596":"standard","Q4781113":"standard","Q4836790":"standard","Q5008632":"standard","Q5090461":"standard","Q5090500":"standard","Q5156830":"standard","Q5227180":"standard","Q5248648":"standard","Q5426535":"standard","Q6046575":"standard","Q7079133":"standard","Q7203483":"standard","Q7508366":"standard","Q10715094":"standard","Q16361936":"standard","Q16545707":"standard","Q17042621":"standard","Q17074854":"standard","Q17087630":"standard","Q17560478":"standard","Q17636230":"standard","Q18011768":"standard","Q18359031":"standard","Q20155966":"standard","Q26697935":"standard","Q27198004":"standard","Q27823178":"standard","Q27824058":"standard","Q27826463":"standard","Q27915156":"standard","Q27915171":"standard","Q27915174":"standard","Q27915172":"standard","Q27915173":"standard","Q27967078":"standard","Q27978793":"standard","Q28009469":"standard","Q28049484":"standard","Q28049572":"standard","Q28344234":"standard","Q28846068":"standard","Q28846076":"standard","Q28846144":"standard","Q28846213":"standard","Q28858032":"standard","Q29644049":"standard","Q29904526":"standard","Q29905212":"standard","Q29943235":"standard","Q29943476":"standard","Q29944450":"standard","Q34274654":"standard","Q34289060":"standard","Q34735959":"standard","Q34739013":"standard","Q34746188":"standard","Q42573997":"standard","Q42574058":"standard","Q45989477":"standard","Q48570159":"standard","Q53756508":"standard","Q55281818":"standard","Q57696248":"standard","Q58787678":"standard","Q81986407":"standard","Q173800":"regulation","Q115729440":"standard","Q1058762":"regulation","Q466163":"speech","Q1946428":"regulation","Q117460210":"standard","Q2914988":"regulation","Q2339879":"speech","Q2436140":"speech","Q3709942":"speech","Q6805996":"speech","Q122922612":"standard","Q122978052":"standard","Q9158386":"speech","Q47068459":"periodical","Q11785243":"speech","Q4231737":"dataset","Q3536928":"treaty","Q52269333":"periodical","Q53843792":"periodical","Q182933":"standard","Q189376":"standard","Q205198":"standard","Q249743":"standard","Q832130":"standard","Q837330":"standard","Q922381":"standard","Q60534428":"periodical","Q2365430":"standard","Q63108743":"periodical","Q3736059":"standard","Q4043424":"standard","Q17058297":"treaty","Q4808501":"software","Q595801":"book","Q862334":"book","Q30588063":"regulation","Q1623175":"book","Q3045706":"book","Q3326349":"book","Q172754":"event","Q631489":"event","Q863301":"event","Q1061127":"event","Q1264834":"event","Q1393836":"event","Q1792535":"event","Q2333621":"event","Q2788117":"event","Q3062234":"event","Q4992631":"review","Q16987893":"standard","Q5086757":"event","Q11995068":"book","Q5430013":"event","Q30167277":"standard","Q24944126":"book","Q92334823":"periodical","Q56344032":"speech","Q31889360":"book","Q64760522":"speech","Q104841732":"periodical","Q67934054":"speech","Q112094119":"periodical","Q114690799":"periodical","Q116481702":"periodical","Q122123153":"periodical","Q65091969":"book","Q60846411":"event","Q69560230":"book","Q282144":"dataset","Q1019996":"periodical","Q1126043":"periodical","Q1667921":"periodical","Q1700470":"periodical","Q4618":"event","Q57305":"event","Q2900369":"periodical","Q105587404":"speech","Q109315237":"regulation","Q108400705":"speech","Q7033627":"periodical","Q110793160":"regulation","Q10379636":"periodical","Q11502500":"periodical","Q11642601":"periodical","Q13593966":"periodical","Q17710980":"periodical","Q17710986":"periodical","Q18242494":"periodical","Q18384395":"periodical","Q20655472":"periodical","Q100324157":"standard","Q101246540":"book","Q108407196":"standard","Q110651371":"standard","Q123254901":"treaty","Q107458055":"motion_picture","Q261468":"map","Q769184":"report","Q819652":"motion_picture","Q830409":"map","Q1433443":"motion_picture","Q104177486":"event","Q1615638":"motion_picture","Q2096633":"motion_picture","Q3352071":"motion_picture","Q3379447":"map","Q3442060":"motion_picture","Q3556751":"report","Q4774498":"motion_picture","Q6722594":"motion_picture","Q7251156":"report","Q112298281":"event","Q112522301":"performance","Q112566260":"event","Q10654943":"motion_picture","Q15898171":"motion_picture","Q22981906":"motion_picture","Q1679766":"book","Q81812":"event","Q165851":"event","Q172582":"event","Q188914":"event","Q194285":"event","Q282295":"event","Q294238":"event","Q314183":"event","Q474956":"event","Q572811":"event","Q593216":"event","Q611475":"event","Q641415":"event","Q684073":"event","Q691086":"event","Q772801":"event","Q780251":"event","Q794514":"event","Q809006":"event","Q809004":"event","Q833633":"event","Q836554":"event","Q848963":"event","Q896092":"event","Q897214":"event","Q936683":"event","Q1056251":"event","Q1078671":"event","Q1086189":"event","Q1097927":"event","Q1136336":"event","Q1146594":"event","Q1237928":"event","Q1240448":"event","Q1357041":"event","Q1357196":"event","Q1379623":"event","Q1451417":"event","Q1480130":"event","Q1505018":"event","Q1535416":"event","Q1540087":"event","Q1600067":"event","Q1725370":"event","Q1841363":"event","Q1844504":"event","Q1973859":"event","Q2009281":"event","Q2016946":"event","Q2826290":"event","Q4354526":"legislation","Q5905601":"event","Q6522528":"event","Q7623004":"event","Q8961227":"event","Q44841279":"report","Q10432777":"event","Q10467684":"event","Q10544065":"event","Q10727613":"event","Q10939128":"event","Q11658437":"event","Q19715702":"event","Q22030032":"event","Q30739988":"event","Q66914288":"motion_picture","Q49096293":"event","Q54592743":"event","Q54872349":"event","Q63283672":"event","Q65194913":"event","Q104536870":"motion_picture","Q75837457":"book","Q44174":"event","Q100138714":"dataset","Q116255614":"motion_picture","Q118754869":"motion_picture","Q101071258":"event","Q2048495":"event","Q2049287":"event","Q2063896":"event","Q2090893":"event","Q2108417":"event","Q2130873":"event","Q2153465":"event","Q2196626":"event","Q2198648":"event","Q2216207":"event","Q2230776":"event","Q2263180":"event","Q2285862":"event","Q2369274":"event","Q2407607":"event","Q2522668":"event","Q2555799":"event","Q2561033":"event","Q2574880":"event","Q2576795":"event","Q2577390":"event","Q2688969":"event","Q2717349":"event","Q2754635":"event","Q2793926":"event","Q2806409":"event","Q2862325":"event","Q2892444":"event","Q3004693":"event","Q3045385":"event","Q3326403":"event","Q3332225":"event","Q3404487":"event","Q3404943":"event","Q3404950":"event","Q3405076":"event","Q3405805":"event","Q3405829":"event","Q3405934":"event","Q3406039":"event","Q3406037":"event","Q3406043":"event","Q3406041":"event","Q3910557":"event","Q3910631":"event","Q3921152":"event","Q4099217":"event","Q4377073":"event","Q4756548":"event","Q5243548":"event","Q6084526":"event","Q6084941":"event","Q6084946":"event","Q6084961":"event","Q6084968":"event","Q6499703":"event","Q6565342":"event","Q6712059":"event","Q6759681":"event","Q6974707":"event","Q7011765":"event","Q7046412":"event","Q7270981":"event","Q7739692":"event","Q7987535":"event","Q8057845":"event","Q9062227":"event","Q9062246":"event","Q9062280":"event","Q9062301":"event","Q9062304":"event","Q9062375":"event","Q9062378":"event","Q9062380":"event","Q9062385":"event","Q10277408":"event","Q10336568":"event","Q10680224":"event","Q10685950":"event","Q11078174":"event","Q11124699":"event","Q11182893":"event","Q11424380":"event","Q11700281":"event","Q11700344":"event","Q11722414":"event","Q11799045":"event","Q11942605":"event","Q11942643":"event","Q11942653":"event","Q12113171":"event","Q12398121":"event","Q12879352":"event","Q13128878":"event","Q13724713":"event","Q15846573":"event","Q16515422":"event","Q16520161":"event","Q16621541":"event","Q16621554":"event","Q104568744":"event","Q104597667":"event","Q105810971":"event","Q106197109":"event","Q106197608":"event","Q106547379":"event","Q106907673":"event","Q106978266":"event","Q106978537":"event","Q107463000":"event","Q107580405":"event","Q107581694":"event","Q107581778":"event","Q107627866":"event","Q108116423":"event","Q108459688":"event","Q108782497":"event","Q111588511":"event","Q111589016":"event","Q111829178":"event","Q111829354":"event","Q111833200":"event","Q111974160":"event","Q111974184":"event","Q112243734":"event","Q113454501":"event","Q114034766":"event","Q1136047":"song","Q1366983":"song","Q1460239":"song","Q116620926":"event","Q118140691":"event","Q118372139":"event","Q123302711":"event","Q124812940":"event","Q208556":"book","Q1412138":"book","Q2051473":"book","Q3536740":"book","Q7831615":"book","Q16967732":"event","Q17008964":"event","Q17008972":"event","Q17008985":"event","Q17122124":"event","Q19275707":"event","Q19275704":"event","Q19275705":"event","Q19275710":"event","Q19275708":"event","Q20016803":"event","Q20543658":"event","Q21126541":"event","Q21197397":"event","Q22018090":"event","Q22018510":"event","Q23042540":"event","Q23122697":"event","Q23915027":"event","Q25421476":"event","Q26721114":"event","Q27480982":"event","Q27496509":"event","Q28869447":"event","Q29478502":"event","Q29478547":"event","Q29479284":"event","Q30693950":"event","Q31189007":"event","Q31840600":"event","Q35230755":"event","Q37245682":"event","Q43814368":"event","Q47085949":"event","Q52434604":"event","Q54824268":"event","Q55590479":"event","Q55992286":"event","Q57316691":"event","Q57316825":"event","Q57316828":"event","Q58706689":"event","Q58838460":"event","Q59241275":"event","Q59309547":"event","Q60666433":"event","Q61778507":"event","Q65150778":"event","Q71289841":"event","Q78621336":"event","Q81819973":"event","Q84081134":"event","Q84081135":"event","Q85876530":"event","Q93316217":"event","Q93316492":"event","Q96483070":"event","Q97172115":"event","Q97172130":"event","Q98915287":"event","Q312083":"map","Q1108032":"motion_picture","Q2723202":"map","Q11618908":"map","Q11859599":"motion_picture","Q15055012":"motion_picture","Q15823625":"map","Q751424":"software","Q1758389":"software","Q2632041":"software","Q232903":"event","Q319676":"event","Q322348":"event","Q350874":"event","Q389192":"event","Q389823":"event","Q395257":"event","Q462293":"event","Q552964":"event","Q736161":"event","Q751471":"event","Q890051":"event","Q1009305":"event","Q1612881":"legislation","Q1153918":"event","Q1161526":"event","Q1366722":"event","Q1413053":"event","Q1500337":"event","Q1505148":"event","Q1567004":"event","Q1568285":"event","Q1576973":"event","Q1660463":"event","Q1783140":"event","Q1900953":"event","Q2206320":"event","Q2259749":"event","Q2443782":"event","Q9160460":"book","Q2598823":"event","Q2658935":"event","Q2743381":"event","Q3039018":"event","Q3147745":"event","Q3313236":"event","Q3362889":"event","Q3686319":"event","Q10578163":"book","Q4230881":"event","Q109016973":"interview","Q5160964":"legislation","Q5100712":"event","Q5146910":"event","Q5156679":"event","Q17051057":"software","Q7101797":"legislation","Q7315826":"event","Q8348747":"event","Q10674752":"event","Q11507933":"event","Q16089878":"legislation","Q16089882":"legislation","Q15643869":"event","Q15873600":"event","Q15977900":"event","Q16211225":"event","Q16543111":"event","Q16774777":"event","Q17007500":"event","Q19376912":"event","Q20747917":"event","Q21473229":"event","Q23807345":"event","Q32194977":"book","Q27787439":"event","Q28456045":"event","Q48731269":"book","Q44637051":"event","Q51590703":"event","Q51590770":"event","Q51591612":"event","Q53855507":"event","Q55655722":"event","Q58092637":"event","Q65196579":"book","Q60447866":"event","Q60587038":"event","Q60723718":"event","Q20852":"event","Q45767":"event","Q46525":"event","Q85029180":"software","Q81178297":"book","Q100518757":"software","Q106609001":"software","Q107209417":"software","Q110619974":"software","Q216749":"motion_picture","Q653916":"motion_picture","Q115049441":"software","Q1949797":"legal_case","Q104767140":"event","Q3149408":"legal_case","Q3731370":"legal_case","Q106505003":"event","Q4340041":"legal_case","Q4411233":"motion_picture","Q4453959":"motion_picture","Q6431798":"motion_picture","Q109677441":"event","Q109701278":"event","Q112057575":"event","Q112079833":"event","Q114267557":"event","Q114839657":"event","Q112762":"song","Q12408736":"motion_picture","Q541947":"song","Q919516":"song","Q1123037":"song","Q1365534":"song","Q1969410":"song","Q118049166":"event","Q4202963":"song","Q4666464":"song","Q17003182":"legal_case","Q119892091":"event","Q6116724":"song","Q7535807":"song","Q9184793":"song","Q124419509":"event","Q124477526":"event","Q10811025":"song","Q11606856":"song","Q570871":"software","Q912105":"software","Q918090":"software","Q25422198":"legal_case","Q1046926":"software","Q1307466":"software","Q1397896":"software","Q1399850":"software","Q1466095":"software","Q2462003":"software","Q2979024":"software","Q3503189":"software","Q17070464":"song","Q4887690":"software","Q5018891":"software","Q574707":"periodical","Q5519927":"software","Q10743690":"software","Q718717":"legislation","Q442781":"event","Q991086":"event","Q1536560":"event","Q3610465":"legislation","Q16920687":"software","Q6124765":"event","Q11796880":"event","Q29558845":"software","Q55262446":"legal_case","Q48723594":"song","Q48727903":"song","Q29428385":"event","Q63203971":"song","Q79639691":"motion_picture","Q62057790":"software","Q61130948":"broadcast","Q62391930":"event","Q98701476":"motion_picture","Q63253904":"event","Q63278908":"event","Q63553707":"event","Q63790067":"event","Q101071244":"motion_picture","Q65560473":"event","Q171341":"periodical","Q181298":"periodical","Q2214842":"periodical","Q105320378":"legal_case","Q7260412":"periodical","Q7927945":"periodical","Q94278815":"software","Q96252740":"software","Q96252759":"software","Q122143112":"motion_picture","Q122914758":"motion_picture","Q122914801":"motion_picture","Q123262546":"motion_picture","Q124418016":"motion_picture","Q96728872":"event","Q99564787":"event","Q123397869":"song","Q84041":"motion_picture","Q407954":"regulation","Q1194365":"motion_picture","Q1675302":"map","Q1826720":"map","Q2292320":"motion_picture","Q904997":"speech","Q116547884":"dataset","Q1109638":"speech","Q1328386":"speech","Q3461143":"motion_picture","Q2090715":"speech","Q121716053":"software","Q121716276":"software","Q7620972":"map","Q110955674":"speech","Q123002395":"software","Q2625206":"song","Q124650513":"book","Q118459585":"speech","Q846998":"software","Q3367807":"software","Q3774272":"software","Q5976745":"software","Q5433319":"book","Q558939":"speech","Q1133763":"legislation","Q1188799":"legislation","Q926186":"speech","Q1716571":"legislation","Q2111539":"speech","Q3228788":"speech","Q4551312":"legislation","Q5247625":"legislation","Q17042339":"software","Q17042740":"software","Q17048758":"software","Q7180909":"legislation","Q7094094":"speech","Q7305681":"speech","Q7362459":"speech","Q7628683":"speech","Q11498766":"legislation","Q11508806":"speech","Q23680137":"software","Q23058816":"speech","Q26202706":"speech","Q108783313":"periodical","Q110163480":"periodical","Q86832479":"speech","Q66475733":"software","Q66481903":"software","Q95750491":"speech","Q66986906":"speech","Q543":"legislation","Q46388":"legislation","Q2861506":"periodical","Q109733294":"motion_picture","Q75122566":"speech","Q110156968":"speech","Q9311446":"periodical","Q100315040":"song","Q11089011":"periodical","Q12021575":"periodical","Q115491052":"speech","Q119270380":"speech","Q120200890":"speech","Q112043170":"song","Q112043174":"song","Q99937696":"software","Q106531811":"software","Q106532218":"software","Q106532274":"software","Q106654545":"software","Q106654621":"software","Q106654631":"software","Q106654690":"software","Q106654990":"software","Q106655103":"software","Q106658276":"software","Q106658823":"software","Q106666009":"software","Q106666040":"software","Q107049524":"software","Q107049586":"software","Q28870025":"periodical","Q96640732":"speech","Q113346395":"software","Q113346447":"software","Q104153449":"legislation","Q110067968":"legislation","Q113834106":"legislation","Q107706":"treaty","Q322943":"treaty","Q595819":"treaty","Q1003870":"treaty","Q1378084":"treaty","Q1412901":"treaty","Q4537472":"treaty","Q3546572":"broadcast","Q10432839":"treaty","Q11079003":"broadcast","Q122119":"event","Q184937":"event","Q189021":"event","Q304240":"event","Q483279":"event","Q565507":"event","Q640954":"event","Q668984":"event","Q680268":"event","Q847696":"event","Q851758":"event","Q856568":"event","Q896903":"event","Q1009287":"event","Q1077012":"event","Q1129398":"event","Q1154693":"event","Q1154933":"event","Q1204890":"event","Q1204926":"event","Q1205026":"event","Q1235095":"event","Q1415084":"event","Q1575381":"event","Q1683527":"event","Q1728972":"event","Q1781367":"event","Q1869133":"event","Q1912415":"event","Q1947751":"event","Q1958056":"event","Q2020153":"event","Q2102897":"event","Q2288051":"event","Q2360207":"event","Q2449124":"event","Q2508813":"event","Q2558569":"event","Q2742150":"event","Q3070242":"event","Q3148252":"event","Q3150549":"event","Q3187082":"event","Q25360500":"broadcast","Q3686605":"event","Q3747527":"event","Q4382012":"event","Q4994929":"event","Q5157579":"event","Q5332264":"event","Q5381332":"event","Q5433139":"event","Q5535518":"event","Q5905214":"event","Q5951433":"event","Q6555053":"event","Q6598853":"event","Q6730910":"event","Q6909498":"event","Q7688461":"event","Q7888355":"event","Q10692270":"event","Q10853354":"event","Q11888749":"legislation","Q12033571":"event","Q12060019":"event","Q13733193":"event","Q13783717":"event","Q15231127":"event","Q17034787":"event","Q17149596":"event","Q18815535":"legislation","Q18564543":"event","Q20052006":"event","Q22680699":"event","Q23700466":"event","Q24352765":"legislation","Q24406303":"event","Q25457767":"legislation","Q64605569":"legislation","Q67600422":"legislation","Q100266699":"broadcast","Q111188815":"treaty","Q88680860":"legislation","Q112972740":"broadcast","Q94993180":"legislation","Q1048515":"map","Q1667520":"map","Q105592411":"event","Q105703712":"event","Q3072024":"motion_picture","Q105992668":"event","Q3963888":"motion_picture","Q107285205":"event","Q5449041":"motion_picture","Q108654909":"event","Q109127478":"event","Q111799602":"event","Q113288793":"event","Q113459764":"event","Q113461572":"event","Q113517700":"event","Q113707854":"event","Q113880369":"event","Q114659349":"event","Q114716986":"event","Q114839719":"event","Q114839844":"event","Q114859394":"event","Q116259577":"event","Q116267711":"event","Q117463007":"event","Q117723232":"event","Q119204291":"event","Q119249443":"event","Q119517896":"event","Q120434478":"event","Q120613512":"event","Q120647908":"event","Q120679163":"event","Q120967560":"event","Q123416332":"event","Q124358264":"event","Q610425":"software","Q628760":"software","Q628906":"software","Q5455479":"software","Q31836066":"motion_picture","Q176497":"event","Q5503489":"event","Q6804324":"event","Q16002495":"event","Q27150036":"event","Q29129469":"event","Q30545022":"event","Q31157300":"event","Q37807168":"event","Q37937330":"event","Q37940671":"event","Q37942728":"event","Q40692185":"event","Q42308998":"event","Q42406391":"event","Q43325366":"event","Q81635374":"motion_picture","Q47697311":"event","Q52045923":"event","Q52261146":"event","Q54805501":"event","Q54848714":"event","Q54849282":"event","Q54856399":"event","Q54868442":"event","Q55775846":"event","Q56220509":"event","Q56370415":"event","Q60030312":"event","Q60727631":"event","Q61728467":"event","Q61754086":"event","Q61858413":"event","Q61952495":"event","Q63214346":"event","Q65549814":"event","Q66087801":"event","Q66801314":"event","Q68691239":"event","Q71537878":"event","Q75171163":"event","Q76650418":"event","Q113930130":"motion_picture","Q80593337":"event","Q85443050":"event","Q86935657":"event","Q124704004":"map","Q90285444":"event","Q93763662":"event","Q96203973":"event","Q97594670":"event","Q97595211":"event","Q97613857":"event","Q97621215":"event","Q98593889":"event","Q98617807":"event","Q98741945":"event","Q109020948":"book","Q137030":"legal_case","Q451584":"legal_case","Q676027":"legal_case","Q1030329":"motion_picture","Q1056489":"legal_case","Q1288220":"legal_case","Q1813543":"motion_picture","Q1869909":"motion_picture","Q2206565":"legal_case","Q2444392":"legal_case","Q105984528":"legislation","Q2783852":"legal_case","Q108066346":"legislation","Q4984974":"motion_picture","Q5442753":"motion_picture","Q5500839":"legal_case","Q5504094":"legal_case","Q115162206":"book","Q110733760":"event","Q10481251":"legal_case","Q113635859":"event","Q115665045":"event","Q123705913":"legislation","Q123690010":"event","Q124463178":"event","Q22908155":"motion_picture","Q146768":"software","Q216653":"software","Q312466":"software","Q605708":"software","Q650550":"software","Q1153289":"standard","Q782543":"software","Q1033951":"software","Q597685":"legislation","Q358576":"event","Q378575":"event","Q11833112":"software","Q1298239":"legislation","Q1117946":"event","Q1182673":"event","Q12713568":"software","Q1358278":"event","Q1851608":"legislation","Q1413045":"event","Q1568076":"event","Q1572731":"event","Q2139554":"legislation","Q1734134":"event","Q1962255":"event","Q2795484":"legislation","Q2873953":"event","Q3043178":"event","Q4942772":"event","Q5281177":"event","Q5495352":"event","Q17298682":"software","Q6406128":"legislation","Q7099782":"event","Q7227436":"event","Q10394367":"event","Q11378372":"event","Q11608012":"event","Q11609513":"event","Q18206151":"book","Q11663791":"event","Q12163592":"legislation","Q11960275":"event","Q12056872":"event","Q12556473":"legislation","Q48781895":"motion_picture","Q14806537":"event","Q17014215":"event","Q19562604":"event","Q20948892":"event","Q59688552":"motion_picture","Q25432626":"legislation","Q28052871":"event","Q33093659":"event","Q73403617":"motion_picture","Q9135":"software","Q18109":"software","Q51404":"event","Q106841600":"motion_picture","Q75029410":"legislation","Q98400269":"software","Q124704011":"map","Q90568342":"legislation","Q93698766":"legislation","Q93727012":"legislation","Q93788070":"legislation","Q93788815":"legislation","Q93789467":"legislation","Q93868967":"legislation","Q93916684":"legislation","Q94527229":"legislation","Q97307251":"event","Q101073581":"legislation","Q1355509":"map","Q2973217":"motion_picture","Q1550193":"speech","Q3396019":"motion_picture","Q3677197":"motion_picture","Q3677207":"motion_picture","Q3677211":"motion_picture","Q5469880":"report","Q5469893":"report","Q5469912":"report","Q11356864":"motion_picture","Q11626120":"legal_case","Q10714197":"report","Q11895040":"regulation","Q11516272":"report","Q51135530":"periodical","Q17093751":"motion_picture","Q20064845":"legal_case","Q56317484":"periodical","Q19393197":"speech","Q357404":"standard","Q3407263":"thesis","Q65770378":"periodical","Q1417548":"software","Q1700962":"book","Q2933856":"manuscript","Q3257226":"manuscript","Q3836405":"software","Q11492817":"standard","Q843065":"event","Q1126049":"event","Q73364223":"periodical","Q73365221":"periodical","Q73365499":"periodical","Q2479310":"event","Q73897617":"periodical","Q2629979":"event","Q2640370":"event","Q2653314":"event","Q3160852":"event","Q7039630":"event","Q11859675":"event","Q13093494":"event","Q16191874":"event","Q16958989":"event","Q3042307":"performance","Q5209084":"performance","Q28148017":"event","Q5805204":"performance","Q6758928":"performance","Q111324928":"manuscript","Q113016548":"manuscript","Q11611846":"performance","Q11649847":"performance","Q11649873":"performance","Q108202210":"periodical","Q39050608":"event","Q17211407":"performance","Q17229171":"performance","Q116842789":"periodical","Q116855922":"periodical","Q116871548":"periodical","Q116982493":"periodical","Q117355825":"periodical","Q247034":"manuscript","Q2073537":"manuscript","Q2445727":"manuscript","Q100162344":"report","Q102197252":"legal_case","Q9311507":"manuscript","Q627517":"periodical","Q102229379":"report","Q746654":"periodical","Q773668":"periodical","Q104883495":"report","Q105650940":"report","Q106941010":"report","Q6296062":"periodical","Q107963213":"report","Q7113774":"periodical","Q7318362":"periodical","Q111709234":"report","Q19969434":"manuscript","Q11605103":"periodical","Q16024164":"periodical","Q16597009":"periodical","Q120922510":"map","Q120907483":"report","Q121595956":"report","Q121596676":"report","Q121668377":"report","Q122113335":"report","Q123028159":"report","Q113436747":"song","Q113496771":"song","Q113496934":"song","Q25433724":"dataset","Q27963520":"periodical","Q121306892":"song","Q112585758":"thesis","Q643684":"motion_picture","Q426759":"regulation","Q1344642":"map","Q1454154":"regulation","Q116848062":"standard","Q814294":"report","Q2518205":"motion_picture","Q3028680":"motion_picture","Q3490039":"motion_picture","Q2308891":"report","Q2641654":"report","Q2665960":"report","Q107243326":"event","Q4839755":"motion_picture","Q5400070":"motion_picture","Q7097859":"motion_picture","Q110055606":"event","Q110914671":"event","Q111749285":"event","Q112126309":"event","Q112276466":"event","Q113817242":"event","Q11631240":"report","Q12805134":"report","Q117327506":"event","Q4733626":"song","Q17056655":"report","Q18030695":"report","Q123338258":"event","Q124175416":"event","Q124472096":"event","Q918507":"standard","Q2507578":"standard","Q8047675":"standard","Q11232199":"standard","Q11232203":"standard","Q11232214":"standard","Q11703801":"standard","Q274079":"event","Q322832":"event","Q599999":"event","Q689796":"event","Q12744912":"standard","Q12746702":"standard","Q956247":"event","Q1341622":"event","Q1436257":"event","Q1461738":"event","Q1469424":"event","Q1520733":"event","Q1752292":"event","Q1836494":"event","Q1967459":"event","Q2112179":"event","Q2176276":"event","Q2300454":"event","Q2304125":"event","Q16082754":"standard","Q4220917":"event","Q5156336":"event","Q5157412":"event","Q5347841":"event","Q5505236":"event","Q6027235":"event","Q6887795":"event","Q7229766":"event","Q7404314":"event","Q7561653":"event","Q10543461":"event","Q10572618":"event","Q10672702":"event","Q10883561":"event","Q11781529":"event","Q47512784":"report","Q13406554":"event","Q16543246":"event","Q16940891":"event","Q17040469":"event","Q20054762":"event","Q24945394":"event","Q28666752":"event","Q1935048":"interview","Q5048337":"interview","Q7696504":"interview","Q55682466":"standard","Q11423913":"interview","Q11670583":"interview","Q47492618":"event","Q56683522":"event","Q60793682":"event","Q107093144":"regulation","Q71817238":"event","Q109041551":"report","Q109041554":"report","Q86740154":"event","Q123128510":"motion_picture","Q92885393":"event","Q99538912":"event","Q100707160":"event","Q4118620":"report","Q5465504":"patent","Q56309057":"manuscript","Q117193663":"event","Q1497584":"book","Q9366890":"software","Q4690955":"book","Q11333775":"software","Q7502092":"book","Q1462418":"event","Q9197378":"book","Q65494947":"report","Q66686000":"report","Q108624651":"report","Q114393328":"report","Q110736217":"legislation","Q658334":"song","Q869210":"song","Q1162461":"song","Q1195630":"song","Q1206090":"song","Q1785243":"song","Q1939197":"song","Q2138543":"song","Q2278881":"song","Q2894547":"song","Q2956172":"song","Q3334664":"song","Q3542334":"song","Q3656521":"song","Q5187209":"song","Q5639330":"song","Q5640528":"song","Q5716336":"song","Q5934478":"song","Q6430313":"song","Q6480726":"song","Q7059159":"song","Q8261759":"song","Q9031318":"song","Q9034560":"song","Q10743749":"song","Q11989328":"song","Q12010046":"song","Q12135013":"song","Q12159910":"song","Q374911":"standard","Q188558":"software","Q12623540":"song","Q12817895":"song","Q13025595":"song","Q13036970":"song","Q13114060":"song","Q16304401":"song","Q16535861":"song","Q4272073":"software","Q17009228":"song","Q17216722":"song","Q17598653":"song","Q670787":"book","Q110552913":"performance","Q1358138":"book","Q18534490":"song","Q18702741":"song","Q3408790":"book","Q3794450":"book","Q628080":"legislation","Q699907":"legislation","Q731236":"legislation","Q1014906":"legislation","Q1150872":"legislation","Q1923776":"legislation","Q25537138":"song","Q2333573":"legislation","Q25620807":"song","Q25629962":"song","Q25702306":"song","Q3357101":"legislation","Q4233219":"legislation","Q4312688":"legislation","Q5249686":"legislation","Q11689371":"book","Q9067274":"legislation","Q10341358":"legislation","Q12041885":"legislation","Q21002890":"book","Q15639208":"legislation","Q39774781":"song","Q16701934":"legislation","Q40039114":"song","Q17001582":"legislation","Q28518314":"software","Q34311120":"standard","Q38161310":"standard","Q30941805":"legislation","Q60477130":"song","Q63064412":"song","Q64152500":"song","Q65211748":"song","Q65212418":"song","Q50380591":"legislation","Q51881567":"legislation","Q56330488":"legislation","Q84322263":"song","Q19705":"legislation","Q106654149":"song","Q107044696":"song","Q107356948":"song","Q108821603":"song","Q108833878":"song","Q85989640":"legislation","Q98400282":"software","Q100165902":"standard","Q105395504":"software","Q109358035":"book","Q212781":"motion_picture","Q496523":"motion_picture","Q535518":"motion_picture","Q580013":"motion_picture","Q583768":"motion_picture","Q586250":"motion_picture","Q909586":"motion_picture","Q1092361":"motion_picture","Q1377546":"motion_picture","Q1412580":"motion_picture","Q1474387":"motion_picture","Q1941707":"motion_picture","Q2101714":"motion_picture","Q2254193":"motion_picture","Q2273331":"motion_picture","Q2445146":"motion_picture","Q2642760":"motion_picture","Q1427258":"report","Q1541065":"report","Q1809049":"report","Q3677202":"motion_picture","Q4044177":"motion_picture","Q4047254":"motion_picture","Q4075563":"motion_picture","Q4875794":"motion_picture","Q5032666":"motion_picture","Q108302776":"event","Q5578091":"motion_picture","Q108404216":"performance","Q5768328":"motion_picture","Q5872891":"motion_picture","Q5897543":"motion_picture","Q4838433":"report","Q6926334":"motion_picture","Q7116678":"motion_picture","Q7444356":"motion_picture","Q8038643":"legal_case","Q7063014":"report","Q11631566":"legal_case","Q121368788":"book","Q12049743":"motion_picture","Q11552358":"report","Q124043908":"book","Q124336801":"book","Q16984663":"motion_picture","Q16664076":"report","Q19367312":"motion_picture","Q21557777":"report","Q272165":"standard","Q193321":"software","Q24905792":"motion_picture","Q842193":"software","Q25230421":"motion_picture","Q25533274":"motion_picture","Q2026749":"standard","Q4033930":"standard","Q632346":"book","Q5604760":"software","Q776248":"book","Q856054":"book","Q1503147":"book","Q1601744":"book","Q6821796":"software","Q2745914":"book","Q3304749":"book","Q3356371":"book","Q5571907":"book","Q2004748":"legislation","Q2461476":"event","Q11505973":"book","Q7313875":"event","Q17321463":"legislation","Q31841064":"software","Q20857758":"event","Q26234050":"legislation","Q66425231":"motion_picture","Q11694007":"performance","Q22283598":"performance","Q81746082":"motion_picture","Q57320594":"book","Q60829836":"book","Q56293795":"legislation","Q96405489":"motion_picture","Q37484":"book","Q104536771":"motion_picture","Q109733630":"motion_picture","Q116497340":"motion_picture","Q108866112":"song","Q109559272":"song","Q110548351":"song","Q111042466":"song","Q123139579":"motion_picture","Q111186968":"song","Q111938157":"song","Q114047889":"song","Q116733956":"song","Q117306163":"song","Q118367897":"song","Q121073248":"song","Q223770":"motion_picture","Q895583":"motion_picture","Q1114505":"motion_picture","Q1117103":"motion_picture","Q115918550":"software","Q2281511":"motion_picture","Q2698974":"legal_case","Q3076696":"motion_picture","Q113622188":"book","Q113629223":"book","Q113629228":"book","Q113629232":"book","Q113629236":"book","Q113629242":"book","Q5413472":"motion_picture","Q7466102":"motion_picture","Q7542092":"motion_picture","Q121746153":"software","Q7645884":"motion_picture","Q122271004":"software","Q122271127":"software","Q123463757":"software","Q1436228":"song","Q6410349":"song","Q207170":"software","Q911470":"standard","Q1114525":"standard","Q1340688":"standard","Q1372376":"standard","Q955452":"software","Q1758955":"standard","Q1344700":"software","Q2043676":"standard","Q2043680":"standard","Q2276335":"software","Q2920790":"standard","Q2858839":"software","Q3393258":"standard","Q4209334":"standard","Q4781631":"software","Q4856363":"software","Q265461":"book","Q823671":"book","Q840548":"book","Q1503133":"book","Q7021281":"standard","Q7156793":"software","Q3946475":"book","Q6549529":"book","Q1770563":"event","Q15087423":"standard","Q18357595":"software","Q19428116":"standard","Q15706791":"book","Q16148485":"book","Q21015577":"software","Q21031275":"software","Q21705905":"standard","Q26234134":"standard","Q52162262":"motion_picture","Q28324852":"standard","Q28057030":"software","Q29642842":"software","Q56304998":"motion_picture","Q73738851":"report","Q73744145":"report","Q55935585":"standard","Q55937426":"standard","Q58482603":"book","Q58806721":"book","Q65172320":"standard","Q90490140":"report","Q67574925":"standard","Q73213465":"standard","Q97191621":"motion_picture","Q47148":"book","Q106635994":"legal_case","Q108084492":"motion_picture","Q108202392":"motion_picture","Q108212954":"motion_picture","Q108258724":"motion_picture","Q108921056":"motion_picture","Q111278985":"motion_picture","Q111279477":"motion_picture","Q87592808":"standard","Q82813203":"book","Q86687516":"book","Q99602118":"standard","Q99602591":"standard","Q123857208":"motion_picture","Q108599373":"standard","Q108599417":"standard","Q105450799":"book","Q111439107":"standard","Q111439112":"standard","Q111439204":"standard","Q111440435":"standard","Q249697":"speech","Q4130722":"standard","Q4172733":"standard","Q4173959":"standard","Q4173961":"standard","Q19146569":"standard","Q19146573":"standard","Q19146577":"standard","Q19146581":"standard","Q19146586":"standard","Q19146594":"standard","Q19146598":"standard","Q19146602":"standard","Q19146608":"standard","Q19146612":"standard","Q19146626":"standard","Q19146631":"standard","Q19146635":"standard","Q19146639":"standard","Q19146649":"standard","Q19146655":"standard","Q19146662":"standard","Q19146666":"standard","Q19146670":"standard","Q19146676":"standard","Q19146683":"standard","Q19146680":"standard","Q19146687":"standard","Q19146690":"standard","Q19146694":"standard","Q19146705":"standard","Q19146714":"standard","Q19146719":"standard","Q19146724":"standard","Q19146728":"standard","Q19146736":"standard","Q19146750":"standard","Q19146754":"standard","Q19146758":"standard","Q19146763":"standard","Q19146768":"standard","Q19146772":"standard","Q19146776":"standard","Q19146780":"standard","Q19146784":"standard","Q19146789":"standard","Q19146797":"standard","Q19146806":"standard","Q19146811":"standard","Q19146814":"standard","Q19146818":"standard","Q19146822":"standard","Q19146826":"standard","Q19146831":"standard","Q19146834":"standard","Q19146839":"standard","Q19146850":"standard","Q19146854":"standard","Q19146858":"standard","Q19146864":"standard","Q19146875":"standard","Q19146873":"standard","Q19146881":"standard","Q19146885":"standard","Q19146889":"standard","Q19146894":"standard","Q19146898":"standard","Q19146901":"standard","Q19146905":"standard","Q19146909":"standard","Q19146921":"standard","Q19146925":"standard","Q19146930":"standard","Q19146934":"standard","Q19146943":"standard","Q19146940":"standard","Q19146951":"standard","Q19146956":"standard","Q19146960":"standard","Q19146964":"standard","Q19146968":"standard","Q19146983":"standard","Q19146986":"standard","Q19146990":"standard","Q19146995":"standard","Q19146999":"standard","Q19147003":"standard","Q19147007":"standard","Q19147017":"standard","Q19147021":"standard","Q19147025":"standard","Q19147029":"standard","Q19147035":"standard","Q19147042":"standard","Q19147046":"standard","Q19147050":"standard","Q19147058":"standard","Q88306017":"software","Q114901571":"software","Q115707781":"standard","Q2143665":"motion_picture","Q6578279":"paper-conference","Q121507919":"software","Q117289154":"event","Q71550":"software","Q76320":"software","Q186849":"software","Q230966":"software","Q336601":"software","Q513349":"software","Q745602":"software","Q784561":"software","Q859477":"software","Q1162303":"software","Q1315933":"software","Q1645817":"software","Q1892116":"software","Q1978818":"software","Q2021268":"software","Q3958017":"software","Q6006264":"software","Q6686945":"software","Q15077416":"software","Q16676491":"software","Q19147062":"standard","Q19147066":"standard","Q19147070":"standard","Q19147079":"standard","Q19147084":"standard","Q19147088":"standard","Q19147093":"standard","Q19147098":"standard","Q19147102":"standard","Q19147106":"standard","Q19147116":"standard","Q19147130":"standard","Q19147139":"standard","Q19147143":"standard","Q19147146":"standard","Q19147151":"standard","Q19147160":"standard","Q19147171":"standard","Q19147178":"standard","Q19147182":"standard","Q19147187":"standard","Q19147192":"standard","Q19147197":"standard","Q19147202":"standard","Q19147206":"standard","Q19147214":"standard","Q19147219":"standard","Q19147223":"standard","Q19147227":"standard","Q19147231":"standard","Q19147235":"standard","Q19147245":"standard","Q19147251":"standard","Q19147254":"standard","Q19153084":"standard","Q19153088":"standard","Q19153093":"standard","Q19153099":"standard","Q19153108":"standard","Q19153112":"standard","Q19414650":"standard","Q19414779":"standard","Q19414785":"standard","Q19588174":"standard","Q19588175":"standard","Q19588190":"standard","Q19669998":"standard","Q19669999":"standard","Q19670001":"standard","Q19800367":"standard","Q19800374":"standard","Q19857619":"standard","Q19857617":"standard","Q19857620":"standard","Q19857621":"standard","Q19857638":"standard","Q19967179":"standard","Q9805074":"review","Q20204586":"standard","Q20204584":"standard","Q20204585":"standard","Q20204588":"standard","Q26261192":"software","Q34044154":"software","Q41590688":"software","Q55069667":"software","Q56369138":"software","Q11189":"software","Q11288":"software","Q55541":"software","Q106513141":"paper-conference","Q79700418":"legislation","Q123128662":"motion_picture","Q113958159":"software","Q115249821":"software","Q105518754":"event","Q111302423":"event","Q113470296":"event","Q1711400":"broadcast","Q119217996":"event","Q17152639":"dataset","Q830560":"book","Q17113138":"broadcast","Q2726428":"book","Q181817":"event","Q196627":"event","Q216584":"event","Q483226":"event","Q547403":"event","Q599470":"event","Q655743":"event","Q744759":"event","Q838921":"event","Q1133616":"event","Q1154888":"event","Q1195354":"event","Q1197685":"event","Q1238731":"event","Q1401461":"event","Q1980736":"event","Q2559933":"event","Q2583345":"event","Q2916333":"event","Q2983261":"event","Q3104369":"event","Q3187076":"event","Q3322950":"event","Q3394418":"event","Q3776406":"event","Q4158203":"event","Q5242917":"event","Q5281906":"event","Q5368985":"event","Q6508605":"event","Q7295710":"event","Q7295709":"event","Q112046597":"entry","Q9385304":"event","Q10283188":"event","Q10412392":"event","Q10425861":"event","Q10585717":"event","Q10726264":"event","Q12616775":"event","Q12758917":"event","Q12909716":"event","Q12909717":"event","Q12909722":"event","Q12909723":"event","Q12909720":"event","Q12909721":"event","Q12909724":"event","Q13475159":"event","Q14916772":"event","Q15645154":"event","Q16207587":"event","Q18507466":"event","Q20556651":"event","Q20556657":"event","Q20556662":"event","Q20567031":"event","Q20900468":"event","Q27918413":"book","Q125168941":"entry","Q26260261":"event","Q1646902":"entry","Q7180622":"entry","Q36524":"dataset","Q70330593":"dataset","Q61441268":"event","Q62033032":"speech","Q28801354":"entry","Q64015453":"event","Q64214312":"event","Q65073587":"event","Q65921414":"event","Q11269":"event","Q130":"event","Q131":"event","Q132":"event","Q37081":"event","Q47499":"event","Q102430381":"broadcast","Q81859300":"event","Q108857012":"broadcast","Q89128237":"event","Q117041193":"dataset","Q117439062":"dataset","Q117439082":"dataset","Q117833342":"dataset","Q193842":"map","Q336371":"map","Q174450":"regulation","Q459798":"map","Q353128":"regulation","Q380767":"regulation","Q417633":"regulation","Q728502":"map","Q815382":"article-journal","Q831939":"map","Q865144":"map","Q884257":"map","Q889561":"map","Q872685":"regulation","Q1152543":"map","Q1281814":"map","Q1155318":"regulation","Q1403728":"map","Q1345314":"regulation","Q1674401":"map","Q1688818":"map","Q1524235":"regulation","Q1800237":"map","Q1633452":"regulation","Q1875264":"regulation","Q2126801":"map","Q2298569":"map","Q2138258":"regulation","Q2328894":"regulation","Q2940611":"map","Q2940627":"map","Q3039637":"regulation","Q106603810":"event","Q3773715":"regulation","Q3883861":"regulation","Q4903803":"map","Q4919226":"map","Q5133517":"regulation","Q5145837":"regulation","Q5327175":"regulation","Q5687679":"map","Q7249406":"regulation","Q124751856":"software","Q10604395":"map","Q113621075":"event","Q11539885":"map","Q11960416":"map","Q12008992":"map","Q12530005":"map","Q17074865":"map","Q17086104":"map","Q17147147":"map","Q15868265":"report","Q120096123":"event","Q19393521":"map","Q471894":"book","Q586744":"book","Q1569753":"book","Q6546621":"review","Q2593992":"book","Q352581":"event","Q431867":"event","Q489644":"event","Q906066":"event","Q1402497":"event","Q1405217":"event","Q1741806":"event","Q2285545":"event","Q9353932":"book","Q11133386":"book","Q4613441":"event","Q12040484":"book","Q6783971":"event","Q7239040":"event","Q10658508":"event","Q12368324":"event","Q19275772":"book","Q13077211":"event","Q17051602":"event","Q63313331":"map","Q64617471":"song","Q48978811":"book","Q61020892":"book","Q97378230":"map","Q98503814":"map","Q107107578":"map","Q109568261":"map","Q112394427":"map","Q115087259":"map","Q123197025":"map","Q124419463":"map","Q124747372":"map","Q7692606":"regulation","Q7834721":"regulation","Q8964474":"regulation","Q9411698":"regulation","Q502319":"broadcast","Q1187667":"broadcast","Q1358344":"broadcast","Q15118772":"regulation","Q1742009":"broadcast","Q15879765":"regulation","Q2635894":"broadcast","Q3237931":"broadcast","Q16861604":"regulation","Q17018471":"regulation","Q17056348":"regulation","Q17084335":"regulation","Q17162759":"regulation","Q3956369":"broadcast","Q6912943":"broadcast","Q7135554":"broadcast","Q23760545":"regulation","Q11284426":"broadcast","Q25052869":"regulation","Q12049949":"broadcast","Q14623351":"broadcast","Q28134118":"regulation","Q28134689":"regulation","Q30589375":"regulation","Q30693854":"regulation","Q18311760":"broadcast","Q579271":"event","Q788526":"event","Q800193":"event","Q851387":"event","Q1118145":"event","Q1621508":"event","Q2436389":"event","Q2521677":"event","Q3558006":"event","Q4342031":"event","Q4943143":"event","Q6147123":"event","Q6636502":"event","Q31892745":"broadcast","Q99414314":"manuscript","Q104079854":"manuscript","Q104079920":"manuscript","Q104080182":"manuscript","Q104080231":"manuscript","Q104080293":"manuscript","Q104080336":"manuscript","Q104086307":"manuscript","Q104376649":"manuscript","Q105709609":"manuscript","Q105709627":"manuscript","Q105709646":"manuscript","Q105709668":"manuscript","Q105709691":"manuscript","Q105830123":"manuscript","Q67886038":"regulation","Q56240541":"broadcast","Q57608327":"broadcast","Q60967250":"broadcast","Q85824083":"regulation","Q85824276":"regulation","Q93209312":"regulation","Q95254653":"regulation","Q96379788":"regulation","Q4201337":"manuscript","Q92248322":"broadcast","Q112173551":"regulation","Q113207852":"regulation","Q104439055":"broadcast","Q119712454":"regulation","Q106878632":"broadcast","Q120754645":"regulation","Q121141624":"regulation","Q115730787":"broadcast","Q104438919":"book","Q104438917":"book","Q104438920":"book","Q104438925":"book","Q120097351":"broadcast","Q121324038":"broadcast","Q121356781":"broadcast","Q121426550":"broadcast","Q121438570":"broadcast","Q121503447":"broadcast","Q121600066":"broadcast","Q121662778":"broadcast","Q121747822":"broadcast","Q124705735":"broadcast","Q1213219":"map","Q1435544":"map","Q1416588":"regulation","Q116759576":"book","Q116759731":"book","Q117599109":"book","Q120007000":"book","Q56318478":"manuscript","Q120652817":"book","Q121072850":"book","Q121188400":"book","Q83378654":"webpage","Q56028349":"periodical","Q56697520":"periodical","Q124253464":"event","Q124417339":"speech","Q330153":"standard","Q105684597":"performance","Q1866978":"standard","Q4048749":"standard","Q216297":"periodical","Q5145870":"software","Q337055":"dataset","Q6045062":"standard","Q728629":"book","Q825914":"periodical","Q933530":"periodical","Q1027825":"dataset","Q5969903":"software","Q1143604":"book","Q1516252":"dataset","Q1862738":"periodical","Q2936567":"dataset","Q3088767":"periodical","Q3993012":"dataset","Q4804740":"periodical","Q5484460":"periodical","Q5792893":"periodical","Q11292115":"standard","Q1064441":"event","Q1068521":"event","Q1250718":"speech","Q8019724":"dataset","Q1595680":"event","Q1726671":"event","Q3362812":"speech","Q10688394":"dataset","Q15296520":"periodical","Q11263449":"event","Q11263497":"event","Q11410140":"event","Q12041674":"event","Q12042863":"event","Q12046411":"event","Q12412067":"event","Q21009694":"dataset","Q15726071":"event","Q17051500":"event","Q17068807":"event","Q23888763":"book","Q29051497":"software","Q20205194":"event","Q1501912":"performance","Q2290761":"performance","Q2461853":"performance","Q3055151":"performance","Q26849155":"event","Q5309605":"performance","Q28225716":"event","Q183169":"webpage","Q57590076":"software","Q55356330":"event","Q27973":"software","Q882682":"manuscript","Q70589944":"software","Q1763462":"manuscript","Q61671409":"event","Q65509621":"event","Q10931":"event","Q45382":"event","Q81875114":"dataset","Q10889286":"periodical","Q118187992":"report","Q100235853":"dataset","Q97212667":"event","Q105064252":"book","Q361306":"article-newspaper","Q759779":"motion_picture","Q115156595":"software","Q115267544":"software","Q115268088":"software","Q115300150":"software","Q115300193":"software","Q115732527":"standard","Q117194007":"standard","Q3564515":"speech","Q5391567":"speech","Q123046224":"software","Q201456":"dataset","Q220393":"dataset","Q319949":"dataset","Q367035":"dataset","Q565440":"dataset","Q605175":"dataset","Q672598":"dataset","Q718744":"dataset","Q735882":"dataset","Q811443":"dataset","Q819688":"dataset","Q843152":"dataset","Q854459":"dataset","Q856638":"dataset","Q897682":"dataset","Q1006160":"dataset","Q12076696":"motion_picture","Q579955":"song","Q1298958":"treaty","Q2235352":"song","Q2235992":"song","Q745818":"broadcast","Q1257934":"broadcast","Q1259376":"broadcast","Q1464125":"broadcast","Q3555788":"song","Q3246768":"broadcast","Q97293109":"performance","Q4949058":"broadcast","Q5243465":"broadcast","Q6495397":"broadcast","Q10646813":"song","Q10671076":"song","Q11824105":"treaty","Q29574786":"speech","Q2022945":"book","Q31898054":"motion_picture","Q21191270":"broadcast","Q10615354":"software","Q1133236":"event","Q2323817":"event","Q46992920":"speech","Q19364663":"book","Q87527714":"periodical","Q22938710":"book","Q28216744":"software","Q29642950":"standard","Q31837551":"software","Q21013896":"legislation","Q43178228":"broadcast","Q39999225":"software","Q51719975":"broadcast","Q51282626":"thesis","Q51283070":"thesis","Q51283092":"thesis","Q51283110":"thesis","Q51283164":"thesis","Q51283181":"thesis","Q51283199":"thesis","Q51283219":"thesis","Q51283231":"thesis","Q51283362":"thesis","Q61855877":"broadcast","Q118496406":"periodical","Q123170511":"periodical","Q124061099":"periodical","Q65128560":"software","Q2135500":"manuscript","Q73539779":"software","Q480422":"periodical","Q90181054":"broadcast","Q2302208":"periodical","Q6692697":"periodical","Q97052294":"broadcast","Q111147075":"motion_picture","Q110483814":"speech","Q77762853":"event","Q17541977":"periodical","Q106942341":"broadcast","Q98047893":"software","Q110920134":"broadcast","Q124080056":"speech","Q114321689":"broadcast","Q105723400":"software","Q107710019":"software","Q112351170":"software","Q112607797":"software","Q1147639":"dataset","Q1283247":"dataset","Q1328072":"dataset","Q1347359":"dataset","Q1392703":"dataset","Q1396358":"dataset","Q1400059":"dataset","Q1665882":"dataset","Q1754061":"dataset","Q1789446":"dataset","Q1789476":"dataset","Q1807746":"dataset","Q1915979":"dataset","Q1991865":"dataset","Q2038458":"dataset","Q2210505":"dataset","Q2249973":"dataset","Q2376426":"dataset","Q2534157":"dataset","Q2538912":"dataset","Q2597555":"dataset","Q3346024":"dataset","Q3348095":"dataset","Q3404298":"dataset","Q3878797":"dataset","Q3932009":"dataset","Q5123546":"dataset","Q5141544":"dataset","Q5146094":"dataset","Q5465083":"dataset","Q6982656":"dataset","Q7096331":"dataset","Q10413470":"dataset","Q10429354":"dataset","Q10624528":"dataset","Q11439867":"dataset","Q11581608":"dataset","Q11722865":"dataset","Q11884534":"dataset","Q12617436":"dataset","Q15194024":"dataset","Q16832380":"dataset","Q16956681":"dataset","Q5133853":"software","Q19386377":"dataset","Q20771519":"dataset","Q22692845":"dataset","Q29937289":"dataset","Q28924364":"book","Q1800684":"performance","Q2456804":"performance","Q2749069":"performance","Q52666561":"dataset","Q5197782":"performance","Q11266252":"performance","Q11377624":"performance","Q59156121":"dataset","Q59818481":"dataset","Q59977151":"dataset","Q60644424":"dataset","Q60686104":"dataset","Q62404897":"dataset","Q62680221":"dataset","Q62681903":"dataset","Q62686468":"dataset","Q62809234":"dataset","Q63161834":"dataset","Q63539029":"dataset","Q64222248":"dataset","Q64620541":"dataset","Q70326023":"dataset","Q71470157":"dataset","Q79244545":"dataset","Q83708009":"dataset","Q6899707":"map","Q90076236":"dataset","Q91169544":"dataset","Q99515455":"dataset","Q101523329":"dataset","Q104450703":"dataset","Q106206185":"dataset","Q106241443":"dataset","Q109913439":"dataset","Q111974120":"dataset","Q113328625":"dataset","Q113471318":"dataset","Q113585341":"dataset","Q117467729":"dataset","Q117816740":"dataset","Q121734244":"dataset","Q124345012":"dataset","Q125118164":"dataset","Q178146":"regulation","Q206964":"regulation","Q629426":"regulation","Q778223":"regulation","Q115673078":"standard","Q1253702":"regulation","Q104214305":"event","Q1284645":"regulation","Q1455734":"regulation","Q1493863":"regulation","Q1755804":"regulation","Q2042962":"regulation","Q105030293":"event","Q2167720":"regulation","Q2360632":"regulation","Q2488438":"standard","Q2507279":"regulation","Q2614229":"regulation","Q2697450":"regulation","Q2903379":"regulation","Q105883653":"event","Q3039804":"legislation","Q4007208":"regulation","Q4775136":"regulation","Q108045199":"event","Q108172946":"event","Q108215655":"event","Q108808103":"event","Q108808120":"event","Q6502501":"regulation","Q109767751":"event","Q110041043":"event","Q7375071":"regulation","Q110732759":"event","Q110732756":"event","Q110732766":"event","Q110733918":"event","Q110918239":"event","Q112151123":"event","Q112151486":"event","Q112151510":"event","Q112162385":"event","Q112162445":"event","Q112623121":"event","Q114195204":"event","Q114195413":"event","Q11339214":"regulation","Q11396957":"regulation","Q116744737":"event","Q17325114":"legislation","Q121775626":"event","Q123571217":"event","Q123587095":"event","Q124047483":"event","Q124378126":"event","Q124929993":"event","Q10266693":"event","Q10426566":"event","Q10536060":"event","Q10551803":"event","Q10655255":"event","Q10889547":"event","Q11292412":"event","Q11389005":"event","Q11407181":"event","Q11430755":"performance","Q11500844":"event","Q11581030":"event","Q11603432":"event","Q11658210":"event","Q12398174":"event","Q13096308":"event","Q13096534":"event","Q13537604":"event","Q14475832":"event","Q15776401":"event","Q16111110":"event","Q16635429":"event","Q18114433":"event","Q18752057":"event","Q20004056":"event","Q21490601":"event","Q24942069":"event","Q60747428":"standard","Q70359462":"legislation","Q41154026":"event","Q56424918":"event","Q63430831":"event","Q65681220":"event","Q66242135":"event","Q70004722":"event","Q93398711":"event","Q101584228":"event","Q11438483":"regulation","Q11642681":"regulation","Q12045477":"regulation","Q12772319":"regulation","Q13499794":"regulation","Q14735758":"regulation","Q16603799":"regulation","Q18009512":"regulation","Q18199036":"regulation","Q18199037":"regulation","Q18342671":"regulation","Q18552825":"regulation","Q18845817":"regulation","Q20873831":"regulation","Q25834850":"regulation","Q111161":"event","Q127807":"event","Q152263":"event","Q267995":"event","Q319024":"event","Q361830":"event","Q426394":"event","Q495543":"event","Q705069":"event","Q751892":"event","Q756880":"event","Q758824":"event","Q831942":"event","Q841535":"event","Q859645":"event","Q894615":"event","Q1067715":"event","Q1093522":"event","Q1196060":"event","Q1286157":"event","Q1325214":"event","Q1334097":"event","Q1459915":"event","Q1466789":"event","Q1518315":"event","Q1543677":"event","Q1929797":"event","Q1952123":"event","Q2021351":"event","Q2045234":"event","Q2100614":"event","Q2172087":"event","Q2242213":"event","Q2270010":"event","Q2276848":"event","Q2281546":"event","Q2380882":"event","Q2394691":"event","Q2411248":"event","Q2433024":"event","Q2466596":"event","Q2495862":"event","Q2548750":"event","Q2633882":"event","Q2684021":"event","Q2692421":"event","Q2714602":"event","Q2761621":"event","Q2849429":"event","Q2859803":"event","Q2949435":"event","Q3214682":"event","Q3315415":"event","Q3381030":"event","Q3400581":"event","Q3458196":"event","Q3804071":"event","Q3816943":"event","Q4014799":"event","Q4228029":"event","Q4346052":"event","Q4504516":"event","Q4990903":"event","Q5174686":"event","Q5188112":"event","Q5422235":"event","Q5463077":"event","Q5934865":"event","Q7137437":"event","Q7248067":"event","Q7646193":"event","Q63098946":"regulation","Q63524853":"regulation","Q80575578":"regulation","Q102273142":"regulation","Q29710":"event","Q105984617":"regulation","Q106901965":"regulation","Q107376587":"regulation","Q108447565":"regulation","Q109527857":"regulation","Q111029202":"regulation","Q116979678":"regulation","Q124501529":"regulation","Q157394":"motion_picture","Q200092":"motion_picture","Q275934":"motion_picture","Q471839":"motion_picture","Q1342372":"motion_picture","Q1535153":"motion_picture","Q104533918":"event","Q104871402":"event","Q1458153":"report","Q3634883":"motion_picture","Q5769663":"motion_picture","Q109829176":"event","Q7551110":"motion_picture","Q110886414":"event","Q111039992":"event","Q114834437":"event","Q115755283":"event","Q116264261":"event","Q1763023":"song","Q123253156":"book","Q124706173":"book","Q20443008":"motion_picture","Q20656352":"motion_picture","Q123460292":"event","Q101086122":"performance","Q9049284":"song","Q124477943":"event","Q10933254":"song","Q11722315":"song","Q12408875":"song","Q4819859":"software","Q616622":"book","Q877342":"book","Q1146822":"book","Q2640207":"book","Q3026054":"book","Q23461185":"dataset","Q1486618":"event","Q10541153":"periodical","Q5135565":"event","Q5504093":"event","Q7662209":"event","Q20706831":"software","Q10570695":"event","Q10900851":"event","Q11323522":"event","Q11895625":"event","Q11999880":"event","Q12031382":"event","Q12046407":"event","Q12550580":"event","Q13475282":"event","Q13734585":"event","Q21198407":"periodical","Q16302720":"event","Q16304883":"event","Q18087945":"event","Q18207781":"event","Q18482853":"event","Q18655582":"event","Q19300775":"book","Q19978733":"event","Q20625452":"event","Q20826063":"event","Q21087619":"event","Q28518359":"book","Q22956392":"event","Q772257":"performance","Q24669521":"event","Q61032574":"article-newspaper","Q25450912":"event","Q27556165":"event","Q28039691":"event","Q28753859":"event","Q67497694":"report","Q50877551":"event","Q29354307":"performance","Q52253007":"event","Q54877479":"event","Q61949333":"event","Q106152295":"report","Q76835641":"event","Q77454117":"event","Q113992944":"report","Q86667968":"event","Q65271226":"performance","Q116786071":"dataset","Q97145754":"event","Q97478799":"event","Q113245462":"software","Q113553960":"software","Q108136244":"event","Q117369709":"book","Q1973500":"treaty","Q12338005":"song","Q2429834":"software","Q4103363":"software","Q225672":"book","Q263790":"book","Q284465":"book","Q431193":"book","Q634123":"book","Q690851":"book","Q817063":"book","Q833590":"book","Q956165":"book","Q1184819":"book","Q18451317":"song","Q1385360":"dataset","Q1505819":"book","Q1722157":"book","Q1758354":"book","Q1790314":"book","Q1936984":"book","Q2114246":"book","Q2144117":"book","Q2894685":"book","Q2955456":"book","Q3299129":"book","Q3411830":"book","Q3423645":"dataset","Q3527285":"book","Q4059355":"book","Q4198569":"book","Q4203401":"book","Q4726493":"dataset","Q5166475":"book","Q806993":"legislation","Q6966214":"book","Q7260336":"book","Q1483984":"legislation","Q1530782":"legislation","Q1547724":"legislation","Q1671012":"legislation","Q1969688":"legislation","Q2138076":"legislation","Q10656474":"book","Q4726529":"legislation","Q4857264":"legislation","Q4921200":"legislation","Q5149230":"legislation","Q5421946":"legislation","Q5479761":"legislation","Q5531999":"legislation","Q5611123":"legislation","Q6015842":"legislation","Q12765421":"book","Q6967951":"legislation","Q6973906":"legislation","Q6979928":"legislation","Q6980029":"legislation","Q6980034":"legislation","Q6980035":"legislation","Q6980109":"legislation","Q6980112":"legislation","Q13135618":"dataset","Q7248917":"legislation","Q7335464":"legislation","Q7703913":"legislation","Q7835390":"legislation","Q7897001":"legislation","Q7899857":"legislation","Q15276670":"book","Q15627042":"book","Q16709869":"book","Q17991521":"book","Q19941906":"book","Q21027567":"dataset","Q14932089":"legislation","Q21660824":"book","Q21818614":"book","Q15238777":"event","Q16259573":"legislation","Q17055932":"legislation","Q17084199":"legislation","Q27036528":"book","Q22908608":"legislation","Q22909191":"legislation","Q53746253":"broadcast","Q54935824":"collection","Q56303720":"song","Q46087746":"book","Q55580586":"book","Q61725752":"book","Q89875189":"collection","Q77659262":"legislation","Q116968475":"collection","Q107639985":"legislation","Q113987993":"book","Q114023767":"book","Q4951617":"report","Q122924439":"standard","Q118218574":"book","Q119495711":"book","Q119495734":"book","Q119495822":"book","Q461183":"dataset","Q82469":"song","Q216860":"song","Q599510":"song","Q116761108":"event","Q2028627":"song","Q2265295":"song","Q2312959":"song","Q2599792":"song","Q2737175":"song","Q125169093":"book","Q4745427":"song","Q4797276":"song","Q5378417":"song","Q5381350":"treaty","Q5581134":"song","Q8083433":"song","Q183065":"software","Q591919":"software","Q845900":"software","Q1341685":"software","Q4462013":"software","Q105420":"book","Q118015":"book","Q142872":"book","Q173287":"book","Q178902":"book","Q178985":"book","Q193121":"book","Q281111":"book","Q332472":"book","Q338699":"book","Q497976":"book","Q537198":"book","Q570948":"book","Q686027":"book","Q781402":"book","Q834060":"book","Q848577":"book","Q856713":"song","Q878026":"book","Q951215":"book","Q1043605":"book","Q1200554":"book","Q1207269":"book","Q1207406":"book","Q1226395":"book","Q1232283":"book","Q1253084":"book","Q1255669":"book","Q1270422":"book","Q1294238":"book","Q1328435":"book","Q16988763":"broadcast","Q6470767":"software","Q20076760":"song","Q6548306":"book","Q1849028":"legislation","Q2641292":"event","Q16000499":"software","Q5177953":"event","Q6658760":"event","Q12074823":"legislation","Q117824013":"interview","Q16715217":"legislation","Q124439595":"interview","Q57987419":"interview","Q57987455":"interview","Q57987589":"interview","Q68712963":"dataset","Q14663":"software","Q40056":"software","Q47506":"software","Q65274471":"book","Q66018414":"book","Q37707":"book","Q110464558":"regulation","Q100320755":"dataset","Q115801008":"report","Q113600088":"song","Q122460006":"treaty","Q106771533":"book","Q321259":"motion_picture","Q115135904":"software","Q111818121":"book","Q3786423":"motion_picture","Q113621845":"event","Q2259405":"song","Q124555777":"book","Q49335":"manuscript","Q176165":"software","Q469558":"software","Q529909":"software","Q1059251":"software","Q1428723":"software","Q107198899":"broadcast","Q2652378":"software","Q2713600":"software","Q3257930":"software","Q4873124":"software","Q5287636":"software","Q1962297":"book","Q7247240":"software","Q7301504":"software","Q125375":"event","Q138567":"event","Q167407":"event","Q189819":"event","Q209715":"event","Q357983":"event","Q370149":"event","Q596643":"event","Q653079":"event","Q661950":"event","Q681204":"event","Q685639":"event","Q716770":"event","Q811671":"event","Q835941":"event","Q933104":"event","Q1052001":"event","Q1068633":"event","Q1075723":"event","Q1308126":"event","Q1359655":"event","Q1380982":"event","Q1549117":"event","Q1623327":"event","Q1671499":"event","Q1878381":"event","Q1959157":"event","Q2050944":"event","Q2083964":"event","Q2146944":"event","Q2183050":"event","Q2324916":"event","Q38608778":"motion_picture","Q2879429":"event","Q3010392":"event","Q3276932":"event","Q3287501":"event","Q3534263":"event","Q4504495":"event","Q4887449":"event","Q4985916":"event","Q5032270":"event","Q5033350":"event","Q5072702":"event","Q5602431":"event","Q5938084":"performance","Q6359606":"event","Q6359604":"event","Q7265198":"event","Q7380774":"event","Q7447128":"event","Q7512982":"event","Q7519600":"event","Q8184060":"event","Q8344142":"event","Q55164242":"motion_picture","Q104417587":"manuscript","Q11400631":"performance","Q11665098":"performance","Q12058791":"performance","Q22004354":"performance","Q55638220":"event","Q58471241":"event","Q2991833":"manuscript","Q104623069":"motion_picture","Q49836":"event","Q13094371":"manuscript","Q13095680":"manuscript","Q109733304":"motion_picture","Q109733333":"motion_picture","Q19944120":"manuscript","Q85751523":"event","Q124635312":"article-newspaper","Q124736984":"article-newspaper","Q123998596":"speech","Q97940470":"event","Q107528347":"book","Q108046453":"book","Q109564886":"book","Q109643965":"book","Q110964185":"book","Q114141477":"book","Q115852562":"book","Q122459578":"book","Q125167720":"book","Q1364588":"book","Q1503358":"book","Q1640660":"book","Q1780507":"song","Q1782649":"book","Q1862119":"book","Q1870618":"book","Q1970664":"book","Q1996447":"book","Q2165325":"book","Q2286290":"book","Q2307269":"book","Q2315500":"book","Q2450419":"book","Q2455517":"book","Q2492025":"book","Q2606238":"book","Q2634688":"book","Q2639708":"book","Q2660540":"book","Q2663701":"book","Q2790419":"book","Q2828776":"book","Q2921159":"book","Q3032156":"book","Q3164714":"book","Q3177980":"book","Q3566551":"book","Q3576459":"book","Q3607227":"book","Q3783057":"book","Q3858189":"book","Q4293467":"book","Q4404552":"book","Q4730259":"book","Q4800993":"book","Q4960364":"book","Q5177509":"book","Q5273654":"book","Q5383630":"book","Q5808269":"book","Q6037100":"book","Q6051491":"book","Q6071395":"book","Q6126527":"book","Q6506931":"book","Q6711235":"book","Q6728645":"book","Q6888589":"book","Q7253053":"book","Q7269564":"book","Q7269575":"book","Q7561196":"book","Q8565136":"book","Q10296750":"book","Q10332660":"book","Q10418942":"book","Q29167422":"dataset","Q10752663":"book","Q10882175":"book","Q11022340":"book","Q11072974":"book","Q11137584":"book","Q11703766":"book","Q11802763":"book","Q11879078":"book","Q12497663":"book","Q12775327":"book","Q12827928":"book","Q12846914":"book","Q13131024":"book","Q15063503":"book","Q16309546":"book","Q17366837":"book","Q19571385":"book","Q20585651":"book","Q21040901":"book","Q21532381":"book","Q21651866":"book","Q23988414":"book","Q24457184":"book","Q25399066":"book","Q31093658":"book","Q56296830":"book","Q56313459":"book","Q72406516":"book","Q89544921":"book","Q90573495":"book","Q96384423":"book","Q1261319":"map","Q104858074":"event","Q111847301":"book","Q105349727":"event","Q106377149":"legislation","Q106171319":"event","Q109370497":"event","Q121492952":"software","Q121532203":"software","Q122888811":"standard","Q123691970":"software","Q124312121":"standard","Q124107337":"software","Q11551080":"map","Q1321921":"dataset","Q2213077":"dataset","Q116226488":"event","Q116739355":"event","Q1461497":"broadcast","Q118924220":"event","Q123093527":"event","Q123094142":"event","Q123094220":"event","Q124607192":"event","Q124887271":"event","Q178048":"standard","Q186886":"standard","Q219919":"standard","Q462926":"standard","Q849275":"standard","Q865493":"software","Q1130645":"software","Q1745938":"standard","Q2558763":"standard","Q4006940":"standard","Q5655515":"standard","Q773498":"book","Q1051620":"book","Q30680377":"regulation","Q7864116":"software","Q257437":"event","Q345368":"event","Q899485":"legislation","Q693026":"event","Q831663":"event","Q847301":"event","Q2030280":"event","Q2056313":"event","Q2500500":"event","Q4202233":"event","Q5124698":"event","Q5307895":"event","Q5465459":"event","Q6866483":"legislation","Q9067055":"legislation","Q16669008":"book","Q10716111":"event","Q10727595":"event","Q11410186":"event","Q11430552":"event","Q11626055":"event","Q12080720":"event","Q13047632":"event","Q25053629":"dataset","Q18338424":"legislation","Q47170685":"song","Q27922478":"event","Q69866663":"map","Q118442105":"periodical","Q47331146":"event","Q55754272":"legislation","Q12143":"standard","Q65167069":"book","Q62090711":"event","Q70477194":"event","Q81329277":"legislation","Q81329802":"legislation","Q84819549":"event","Q116908523":"dataset","Q108822790":"standard","Q102600679":"event","Q1511109":"entry-dictionary","Q280257":"dataset","Q599108":"dataset","Q703021":"dataset","Q908017":"dataset","Q1022155":"dataset","Q1821397":"dataset","Q1443926":"treaty","Q1646218":"treaty","Q4222379":"dataset","Q4824114":"dataset","Q5188913":"dataset","Q5569988":"dataset","Q6537891":"dataset","Q7524126":"dataset","Q10392259":"dataset","Q10404143":"dataset","Q21167586":"map","Q10621579":"dataset","Q10831886":"dataset","Q11565510":"dataset","Q11631534":"dataset","Q103964477":"performance","Q104853682":"performance","Q104985225":"performance","Q104996128":"performance","Q104998197":"performance","Q105107179":"performance","Q905488":"standard","Q105233699":"performance","Q105237946":"performance","Q105245071":"performance","Q105279242":"performance","Q105279359":"performance","Q105279810":"performance","Q105280408":"performance","Q105339166":"performance","Q105535151":"performance","Q106148843":"performance","Q106148879":"performance","Q106163201":"performance","Q106293524":"performance","Q16567729":"treaty","Q18156576":"dataset","Q23120437":"dataset","Q23208317":"dataset","Q23306635":"dataset","Q23406751":"dataset","Q23465173":"dataset","Q23537932":"dataset","Q23541343":"dataset","Q23541348":"dataset","Q23563948":"dataset","Q23589361":"dataset","Q23596184":"dataset","Q23647820":"dataset","Q23662408":"dataset","Q23666223":"dataset","Q23687324":"dataset","Q23698335":"dataset","Q24120178":"dataset","Q24121290":"dataset","Q24188426":"dataset","Q24188436":"dataset","Q24189020":"dataset","Q24202115":"dataset","Q24202792":"dataset","Q24202917":"dataset","Q24232043":"dataset","Q24238628":"dataset","Q24247613":"dataset","Q384840":"legislation","Q43026977":"map","Q43290228":"article","Q37813767":"dataset","Q18866451":"legislation","Q182832":"performance","Q270827":"performance","Q318973":"performance","Q504514":"performance","Q588666":"performance","Q1049625":"performance","Q1344860":"performance","Q1838272":"performance","Q1955127":"performance","Q2022798":"performance","Q2238277":"performance","Q5312202":"performance","Q6989196":"performance","Q56408521":"dataset","Q10406213":"performance","Q8102":"dataset","Q11122":"treaty","Q87866152":"regulation","Q99231508":"dataset","Q113070524":"dataset","Q116680098":"dataset","Q6010":"performance","Q27939":"performance","Q125019631":"dataset","Q110251539":"legislation","Q110487867":"legislation","Q110598278":"legislation","Q110601245":"legislation","Q7248083":"regulation","Q124971334":"legislation","Q13409498":"dataset","Q106421780":"performance","Q106805967":"performance","Q106991653":"performance","Q107183471":"performance","Q107373802":"performance","Q107514431":"performance","Q4746213":"software","Q109660485":"performance","Q188522":"review","Q115135913":"performance","Q115144028":"performance","Q115160654":"performance","Q115160658":"performance","Q115160930":"performance","Q115160929":"performance","Q115160941":"performance","Q115160946":"performance","Q626700":"review","Q667421":"review","Q1209943":"review","Q1334350":"review","Q1683320":"review","Q188468":"event","Q2011881":"review","Q514706":"event","Q527006":"event","Q1076579":"legislation","Q649128":"event","Q675181":"event","Q116845132":"performance","Q748013":"event","Q3319996":"review","Q3519102":"review","Q4493432":"review","Q3441599":"event","Q7048920":"review","Q7122892":"review","Q7189625":"review","Q7203549":"review","Q6518187":"legislation","Q6804197":"legislation","Q7978067":"review","Q7252753":"legislation","Q124417461":"performance","Q11307446":"event","Q11939976":"event","Q12504875":"legislation","Q17009518":"review","Q18205807":"review","Q20108597":"event","Q25412283":"event","Q26255463":"legislation","Q60793112":"review","Q30612":"review","Q74673301":"legislation","Q114957765":"dataset","Q42190498":"manuscript","Q372012":"regulation","Q110037853":"book","Q1001032":"regulation","Q70470863":"interview","Q1810479":"dataset","Q2055205":"legal_case","Q2412849":"article-journal","Q4844067":"regulation","Q114805066":"book","Q115157564":"book","Q115159663":"book","Q115160680":"book","Q115166180":"book","Q115166250":"book","Q115166275":"book","Q115191877":"book","Q6457531":"motion_picture","Q116796301":"book","Q110887037":"legislation","Q10718812":"legal_case","Q125128043":"software","Q829147":"song","Q1195253":"song","Q14875859":"motion_picture","Q118621041":"event","Q19393843":"legal_case","Q20089094":"motion_picture","Q20135338":"motion_picture","Q20136634":"article-journal","Q10498310":"song","Q10439361":"broadcast","Q11350896":"broadcast","Q906556":"software","Q25405194":"motion_picture","Q576921":"book","Q28472638":"speech","Q28472722":"speech","Q995493":"book","Q18451170":"song","Q1619411":"book","Q2088593":"book","Q6934955":"software","Q2995556":"book","Q3357530":"book","Q4224701":"book","Q10501766":"standard","Q5431484":"book","Q10553237":"bill","Q23636982":"treaty","Q1077350":"legislation","Q1572447":"legislation","Q10632982":"book","Q5357553":"legislation","Q11872745":"book","Q17049334":"software","Q18358220":"standard","Q7456126":"event","Q7777568":"event","Q17053253":"book","Q13147896":"event","Q17068153":"legislation","Q122431409":"interview","Q19556951":"legislation","Q27961403":"book","Q29073569":"book","Q29581299":"interview","Q25313175":"event","Q61019332":"regulation","Q113285123":"dataset","Q52389":"regulation","Q116856828":"manuscript","Q60755292":"treaty","Q95977810":"article-journal","Q95988187":"article-journal","Q95988374":"article-journal","Q96177324":"regulation","Q96781565":"regulation","Q97556069":"motion_picture","Q24723":"book","Q100701573":"speech","Q73501142":"book","Q73501146":"book","Q11396811":"manuscript","Q104881801":"article-journal","Q11455596":"manuscript","Q11553412":"manuscript","Q11610716":"manuscript","Q110665014":"article-journal","Q112110143":"motion_picture","Q108298447":"song","Q111440518":"treaty","Q111444006":"treaty","Q114909458":"song","Q100942530":"book","Q100943156":"book","Q100973182":"book","Q100973183":"book","Q122948248":"song","Q106572959":"book","Q172980":"motion_picture","Q472637":"motion_picture","Q104661338":"event","Q105766453":"event","Q3355734":"motion_picture","Q106368330":"event","Q106411216":"event","Q4317201":"motion_picture","Q107627521":"event","Q3827679":"speech","Q108806256":"event","Q109378600":"event","Q109380932":"event","Q109380951":"event","Q116733966":"book","Q7551315":"motion_picture","Q111904388":"event","Q112964616":"event","Q482981":"song","Q115287494":"event","Q546440":"song","Q3129432":"song","Q3274667":"song","Q3517436":"song","Q118727337":"event","Q4063283":"song","Q6165240":"song","Q122810106":"event","Q123735459":"event","Q123766523":"event","Q124751162":"event","Q10394634":"song","Q13097850":"song","Q13097848":"song","Q13097854":"song","Q13097856":"song","Q28026639":"motion_picture","Q28525375":"regulation","Q16965402":"song","Q7090372":"bill","Q7449064":"software","Q20587253":"song","Q123509":"event","Q124734":"event","Q178561":"event","Q182610":"event","Q208383":"event","Q305418":"event","Q336271":"event","Q630923":"event","Q665478":"event","Q685744":"event","Q779851":"event","Q873222":"event","Q971076":"event","Q1004976":"event","Q1047200":"event","Q25578673":"song","Q2616732":"event","Q2821775":"event","Q3062109":"event","Q3237993":"event","Q3444665":"event","Q4692583":"event","Q5135520":"event","Q11820949":"book","Q5375853":"event","Q5479773":"event","Q7313594":"event","Q7544244":"event","Q11606294":"event","Q13627024":"event","Q15096609":"event","Q15733672":"event","Q17567265":"event","Q18674452":"event","Q19092882":"event","Q26928600":"book","Q20502317":"event","Q23009452":"event","Q25382273":"event","Q25496170":"event","Q28846358":"event","Q29933838":"event","Q36664011":"event","Q40719766":"event","Q20620692":"performance","Q47328472":"event","Q57195384":"event","Q59913255":"event","Q67142991":"book","Q11662768":"manuscript","Q73071329":"event","Q83494660":"event","Q88257238":"event","Q116690343":"song","Q117460314":"collection","Q96196703":"event","Q112757532":"software","Q106640290":"event","Q85475422":"performance","Q109851987":"performance","Q110226979":"performance","Q9137321":"webpage","Q13406463":"webpage","Q15056699":"webpage","Q16222597":"webpage","Q17362920":"webpage","Q18707678":"webpage","Q20160182":"webpage","Q20870830":"webpage","Q21163207":"webpage","Q21167453":"webpage","Q26829682":"webpage","Q30279428":"webpage","Q11332511":"software","Q184940":"performance","Q256869":"performance","Q380051":"performance","Q627933":"performance","Q835466":"event","Q846436":"performance","Q1136999":"performance","Q2062321":"performance","Q2295790":"performance","Q2369189":"event","Q2497657":"performance","Q2557639":"performance","Q3388710":"performance","Q3920446":"performance","Q4257172":"performance","Q5879438":"performance","Q10468658":"performance","Q13164675":"event","Q17143271":"event","Q17990096":"performance","Q18105680":"performance","Q4484823":"performance","Q59779792":"performance","Q61601762":"event","Q94955393":"event","Q94920":"event","Q132241":"event","Q152450":"event","Q182653":"event","Q193145":"event","Q225917":"event","Q285285":"event","Q299359":"event","Q299369":"event","Q299384":"event","Q299491":"event","Q315469":"event","Q431360":"event","Q459528":"event","Q745709":"event","Q773620":"event","Q850336":"event","Q860611":"event","Q891200":"event","Q974505":"event","Q979730":"event","Q1076105":"event","Q1089665":"event","Q1107771":"event","Q1153162":"event","Q1168476":"event","Q1181349":"event","Q1196722":"event","Q1225911":"event","Q1392552":"event","Q1433642":"event","Q1469546":"event","Q1494051":"event","Q1627140":"event","Q1630979":"event","Q1661095":"event","Q1682536":"event","Q1808937":"event","Q1895274":"event","Q1911797":"event","Q1936274":"event","Q2127334":"event","Q2300494":"event","Q2412808":"event","Q2418025":"event","Q2468447":"event","Q2547976":"event","Q2795827":"event","Q2917032":"event","Q2923474":"event","Q2948738":"event","Q2999693":"event","Q3046190":"event","Q3299434":"event","Q3325889":"event","Q3478346":"event","Q3551559":"event","Q3617607":"event","Q3956822":"event","Q4317295":"event","Q4733752":"event","Q4894182":"event","Q4967142":"event","Q5481153":"event","Q5781225":"event","Q5787022":"event","Q5860910":"event","Q5888304":"event","Q6085164":"event","Q6347588":"event","Q6460735":"event","Q6765524":"event","Q6952431":"event","Q7058657":"event","Q7565760":"event","Q7659812":"event","Q8054831":"event","Q9062329":"event","Q10454591":"event","Q10545809":"event","Q10550013":"event","Q10688145":"event","Q11284768":"event","Q11483816":"event","Q11487032":"event","Q11511492":"event","Q11586679":"event","Q50081413":"webpage","Q55510433":"webpage","Q56570230":"webpage","Q65010179":"webpage","Q72044830":"webpage","Q94574287":"webpage","Q34812":"event","Q45774":"event","Q57607":"event","Q107723093":"webpage","Q115088381":"webpage","Q115492598":"webpage","Q103882295":"event","Q104700480":"event","Q105439592":"event","Q106518893":"event","Q106547367":"event","Q106628113":"event","Q107238721":"event","Q107587273":"event","Q108063424":"event","Q108509955":"event","Q109569970":"event","Q110197878":"event","Q110289243":"event","Q110392395":"event","Q12121663":"event","Q12259614":"event","Q12359579":"event","Q12398164":"event","Q12513670":"event","Q12640320":"event","Q12778823":"event","Q13134791":"event","Q13134878":"event","Q13135724":"event","Q13135731":"event","Q13135932":"event","Q13137190":"event","Q13137353":"event","Q13443059":"event","Q13510387":"event","Q13632977":"event","Q13734483":"event","Q14517045":"event","Q14622356":"event","Q14942355":"event","Q15063219":"event","Q15874109":"event","Q15900616":"event","Q16023945":"event","Q16420501":"event","Q17092603":"event","Q18033462":"event","Q18202029":"event","Q18333232":"event","Q18560545":"event","Q18579323":"event","Q18579325":"event","Q18608583":"event","Q19859887":"event","Q20541005":"event","Q20618240":"event","Q21281822":"event","Q21540023":"event","Q22981519":"event","Q23687335":"event","Q23755142":"event","Q24060841":"event","Q24189284":"event","Q26234155":"event","Q27349622":"event","Q27494565":"event","Q27649668":"event","Q27768253":"event","Q27839452":"event","Q27940535":"event","Q27995495":"event","Q28103027":"event","Q30088075":"event","Q51696175":"event","Q54802199":"event","Q54882043":"event","Q54935318":"event","Q55426287":"event","Q56113378":"event","Q57775861":"event","Q59296933":"event","Q59297078":"event","Q60197152":"event","Q61130878":"event","Q61719494":"event","Q61740765":"event","Q62737750":"event","Q64364625":"event","Q65617121":"event","Q66458824":"event","Q70460346":"event","Q70629395":"event","Q72732806":"event","Q73012175":"event","Q77805379":"event","Q87476385":"event","Q87477513":"event","Q87747932":"event","Q88672834":"event","Q97445956":"event","Q98216781":"event","Q99737532":"event","Q99739404":"event","Q1249224":"report","Q3209941":"report","Q4575034":"report","Q109331363":"event","Q110665091":"event","Q110665174":"event","Q110710079":"event","Q110763545":"event","Q110996190":"event","Q111290996":"event","Q112230124":"event","Q112333966":"event","Q113382651":"book","Q113409860":"event","Q113631070":"event","Q113642594":"event","Q113669709":"event","Q113716625":"event","Q113767384":"event","Q113862356":"event","Q113988536":"event","Q114001069":"event","Q114861112":"event","Q114961735":"event","Q11078958":"report","Q115778162":"event","Q115792146":"event","Q3083000":"song","Q118670367":"event","Q119532759":"event","Q120665095":"event","Q122115952":"event","Q122128037":"event","Q122128102":"event","Q122128238":"event","Q122128570":"event","Q122128732":"event","Q122128827":"event","Q122184715":"event","Q122446156":"event","Q123258858":"event","Q123938094":"event","Q124326034":"event","Q124326999":"event","Q124336809":"event","Q124414767":"event","Q124616002":"event","Q124801508":"event","Q124867886":"event","Q1064733":"software","Q1774365":"standard","Q252717":"event","Q271725":"event","Q489219":"event","Q493386":"event","Q778665":"event","Q842203":"event","Q868291":"event","Q908513":"event","Q1140048":"event","Q1376281":"event","Q1574715":"event","Q1789999":"event","Q1817141":"event","Q1840742":"event","Q1910276":"event","Q1999120":"event","Q2031615":"event","Q3063098":"event","Q3305655":"event","Q15593589":"software","Q15618646":"software","Q16539031":"software","Q7720582":"event","Q21043347":"software","Q114600874":"webpage","Q114747484":"webpage","Q114747576":"webpage","Q115473624":"webpage","Q12354782":"event","Q13403102":"event","Q118555179":"webpage","Q14931534":"event","Q17194091":"event","Q124418985":"webpage","Q11382506":"webpage","Q47647413":"event","Q15475226":"webpage","Q15475319":"webpage","Q15633587":"webpage","Q84612307":"report","Q55806536":"event","Q31209114":"webpage","Q25847":"event","Q31645":"event","Q42416093":"webpage","Q110826093":"report","Q58494026":"webpage","Q95115361":"event","Q104537405":"event","Q106635272":"event","Q109646550":"event","Q2080304":"event","Q2122052":"event","Q2150335":"event","Q2296723":"event","Q2447666":"event","Q2468952":"event","Q2488604":"event","Q2558821":"event","Q2623547":"event","Q2634432":"event","Q2683596":"event","Q2837389":"event","Q3496570":"event","Q4288793":"event","Q4336440":"event","Q4353956":"event","Q4380246":"event","Q4380244":"event","Q5157463":"event","Q5245513":"event","Q5603591":"event","Q7079589":"event","Q7685823":"event","Q9344824":"event","Q10491389":"event","Q10677241":"event","Q11300304":"event","Q11360117":"event","Q11412050":"event","Q11435794":"event","Q12362855":"event","Q13034996":"event","Q13138369":"event","Q13779455":"event","Q14547231":"event","Q15140166":"event","Q15140175":"event","Q16023776":"event","Q16033371":"event","Q16680663":"event","Q16680723":"event","Q16997177":"event","Q17219066":"event","Q18536594":"event","Q20020588":"event","Q20647964":"event","Q20723111":"event","Q20749371":"event","Q21246076":"event","Q22774124":"event","Q22938576":"event","Q23893804":"event","Q26279855":"event","Q26279902":"event","Q27031975":"event","Q28800950":"event","Q29413927":"event","Q38066778":"event","Q41205263":"event","Q46190676":"event","Q48811383":"event","Q50393057":"event","Q50846264":"event","Q50846468":"event","Q51931369":"event","Q53945096":"event","Q54967487":"event","Q55074672":"event","Q55097374":"event","Q55118684":"event","Q56274260":"event","Q56276798":"event","Q56850939":"event","Q57540859":"event","Q57542735":"event","Q57550169":"event","Q57550650":"event","Q57609296":"event","Q57609313":"event","Q57733494":"event","Q58212491":"event","Q63254865":"event","Q64250307":"event","Q79120925":"event","Q84491920":"event","Q89033277":"webpage","Q93207256":"event","Q93233984":"event","Q93234631":"event","Q94484766":"event","Q94484833":"event","Q94484893":"event","Q94484982":"event","Q94485157":"event","Q94485173":"event","Q98448954":"event","Q98609858":"event","Q576131":"motion_picture","Q115288295":"software","Q1390819":"motion_picture","Q1718627":"legal_case","Q4249087":"legal_case","Q4382293":"legal_case","Q5188173":"motion_picture","Q109646600":"event","Q109646805":"event","Q110290988":"event","Q7611274":"map","Q110373479":"event","Q112896044":"event","Q11070774":"legal_case","Q10297780":"report","Q114609228":"event","Q115135140":"event","Q122026965":"book","Q116168106":"event","Q116199758":"event","Q118188609":"event","Q118496986":"event","Q118498024":"event","Q16147871":"legal_case","Q2983424":"broadcast","Q18609332":"legal_case","Q121680288":"event","Q122468729":"event","Q20014303":"article-newspaper","Q6495169":"broadcast","Q123760928":"event","Q21044347":"legal_case","Q22101363":"legal_case","Q13016974":"song","Q13025584":"song","Q13025592":"song","Q13025598":"song","Q13025599":"song","Q2359689":"software","Q223638":"book","Q5165404":"bill","Q636946":"book","Q2055725":"book","Q2066703":"book","Q3303074":"book","Q4363806":"book","Q19969268":"broadcast","Q388834":"event","Q7433672":"book","Q3039731":"legislation","Q10432194":"periodical","Q10493645":"book","Q5453039":"event","Q43096126":"motion_picture","Q15915142":"book","Q45182324":"article-journal","Q16505090":"book","Q16517254":"book","Q17277646":"book","Q19895101":"book","Q20669574":"book","Q21211790":"book","Q21212164":"book","Q21212442":"book","Q21212446":"book","Q24273299":"book","Q26225470":"book","Q30277550":"book","Q60848413":"motion_picture","Q62681870":"article-journal","Q67912210":"legal_case","Q39086821":"review","Q15726909":"interview","Q97135699":"legal_case","Q36279":"book","Q102141681":"motion_picture","Q67011165":"legislation","Q104097073":"motion_picture","Q105320349":"motion_picture","Q111750056":"legal_case","Q112765787":"legal_case","Q112765848":"legal_case","Q112765883":"legal_case","Q112813327":"legal_case","Q114079176":"motion_picture","Q116513497":"motion_picture","Q117304574":"legal_case","Q122304601":"entry-encyclopedia","Q124071674":"motion_picture","Q102076434":"book","Q104177180":"book","Q108329152":"book","Q108329788":"book","Q110948671":"software","Q111096611":"book","Q48743931":"manuscript","Q2297189":"report","Q108151198":"event","Q115669236":"book","Q121438627":"standard","Q121438657":"standard","Q113162275":"event","Q114357854":"event","Q121356834":"book","Q503354":"song","Q1011299":"broadcast","Q118776119":"event","Q3276244":"broadcast","Q289038":"standard","Q539558":"standard","Q917805":"standard","Q1074550":"standard","Q1143530":"standard","Q1148887":"standard","Q920890":"software","Q1417378":"standard","Q1419905":"standard","Q1458121":"standard","Q2069335":"standard","Q2293706":"standard","Q2636061":"standard","Q3487109":"standard","Q3560970":"standard","Q4374872":"standard","Q16304469":"song","Q4647007":"standard","Q546729":"book","Q5972793":"standard","Q1047074":"book","Q1491125":"book","Q1513543":"book","Q1575079":"book","Q1813223":"book","Q1890605":"book","Q2233389":"book","Q2326951":"book","Q2500820":"book","Q2804309":"book","Q2980995":"book","Q4053563":"book","Q114081869":"performance","Q5209391":"book","Q11498498":"software","Q1371453":"event","Q24633474":"broadcast","Q18081961":"standard","Q18602566":"standard","Q20820163":"standard","Q23824436":"standard","Q21683863":"book","Q21727724":"book","Q21875313":"book","Q27850015":"standard","Q21662139":"event","Q28859991":"book","Q1363997":"performance","Q1650357":"performance","Q33130523":"book","Q5276130":"performance","Q42723239":"software","Q51139628":"webpage","Q17317604":"performance","Q48028851":"book","Q51930650":"book","Q51953425":"book","Q59259613":"standard","Q56514665":"book","Q63533016":"book","Q64358330":"software","Q189985":"manuscript","Q425382":"manuscript","Q891235":"manuscript","Q1344426":"manuscript","Q5358873":"manuscript","Q7533316":"manuscript","Q105885059":"broadcast","Q106094709":"broadcast","Q106094879":"broadcast","Q106588463":"broadcast","Q106625351":"broadcast","Q106677578":"broadcast","Q96676787":"standard","Q106921023":"broadcast","Q97001446":"software","Q107737653":"broadcast","Q114495991":"broadcast","Q106323251":"webpage","Q104243413":"book","Q113953813":"software","Q93204":"motion_picture","Q914242":"motion_picture","Q2023874":"motion_picture","Q106393876":"event","Q106594095":"event","Q118218718":"software","Q107028274":"event","Q4677832":"motion_picture","Q107474077":"event","Q107659169":"event","Q107659248":"event","Q5338721":"motion_picture","Q108095628":"event","Q109301270":"event","Q110757460":"event","Q111011066":"event","Q111501773":"event","Q113636120":"event","Q265147":"song","Q627181":"song","Q115642632":"event","Q115915866":"event","Q115915867":"event","Q117041793":"event","Q118469969":"event","Q5266727":"treaty","Q120762616":"event","Q7033567":"treaty","Q123466619":"event","Q15909161":"post","Q1023122":"standard","Q26225765":"motion_picture","Q548408":"book","Q6559906":"chapter","Q10850880":"software","Q316572":"legislation","Q253946":"event","Q850716":"legislation","Q936821":"event","Q1153401":"event","Q1604562":"event","Q2135494":"legislation","Q1802109":"event","Q2256530":"event","Q2436227":"event","Q3270247":"legislation","Q3275749":"event","Q3316297":"event","Q5165903":"legislation","Q5690948":"event","Q6517603":"legislation","Q6647678":"legislation","Q29883647":"treaty","Q12799362":"book","Q6880647":"legislation","Q6880644":"legislation","Q6880645":"legislation","Q7256536":"legislation","Q7355045":"legislation","Q7598349":"legislation","Q9367401":"legislation","Q9352238":"event","Q10872094":"legislation","Q11221622":"event","Q13137561":"event","Q16024891":"legislation","Q15696028":"event","Q17054088":"legislation","Q17077441":"legislation","Q18020893":"event","Q42214612":"treaty","Q20009665":"event","Q22098766":"event","Q27968043":"event","Q28928544":"event","Q28928785":"event","Q29642990":"event","Q29643002":"event","Q66503284":"motion_picture","Q56558213":"song","Q40444998":"event","Q47403752":"event","Q55336815":"event","Q59861107":"event","Q99526021":"motion_picture","Q99526024":"motion_picture","Q104880835":"motion_picture","Q75694944":"event","Q114075477":"motion_picture","Q111630723":"post","Q111691554":"post","Q107110354":"software","Q97011843":"event","Q97011844":"event","Q100741823":"event","Q101246533":"event","Q111837255":"book","Q113031155":"book","Q113997910":"dataset","Q8041497":"patent","Q112748789":"event","Q121389176":"book","Q121402544":"book","Q121427686":"book","Q121428398":"book","Q121432200":"book","Q121432301":"book","Q121437373":"book","Q121551336":"book","Q121664731":"book","Q121665191":"book","Q123582180":"book","Q5166243":"treaty","Q5166307":"treaty","Q6784085":"song","Q7148059":"song","Q8187836":"treaty","Q123171266":"event","Q12093963":"song","Q909523":"software","Q1924747":"standard","Q86860":"book","Q136472":"book","Q193606":"book","Q351718":"book","Q367591":"book","Q374466":"book","Q472808":"book","Q738473":"book","Q909887":"book","Q1057172":"book","Q1194480":"book","Q1236219":"book","Q1346592":"dataset","Q1498333":"book","Q1557877":"book","Q19176928":"treaty","Q2215170":"book","Q2250271":"book","Q2387049":"book","Q2681385":"book","Q2872516":"book","Q2915491":"book","Q3022428":"book","Q8026882":"software","Q20874666":"treaty","Q5457615":"book","Q115771611":"performance","Q6647667":"book","Q7005086":"book","Q934744":"event","Q1127267":"event","Q7834250":"book","Q7834532":"book","Q8031151":"book","Q2137778":"event","Q11385322":"book","Q11396303":"book","Q11509155":"book","Q11606855":"book","Q6103541":"event","Q7777570":"event","Q12538685":"event","Q19710757":"book","Q20664331":"book","Q20664530":"book","Q39233713":"treaty","Q50823049":"report","Q17195514":"event","Q30110959":"event","Q33240030":"event","Q11499497":"book","Q11502644":"book","Q60853089":"song","Q51885719":"standard","Q43099869":"event","Q8576":"treaty","Q55713039":"book","Q55771109":"standard","Q61782522":"standard","Q63579660":"book","Q59163902":"event","Q65926499":"book","Q59126":"book","Q2743":"book","Q79407704":"book","Q110263559":"dataset","Q115684324":"dataset","Q97621860":"book","Q104100753":"book","Q104450765":"book","Q110313265":"bill","Q110487819":"bill","Q110488086":"bill","Q107432485":"book","Q602481":"map","Q115628067":"standard","Q1582778":"regulation","Q109699239":"event","Q110103887":"event","Q3140915":"post","Q115219268":"event","Q115222159":"event","Q115222790":"event","Q115224072":"event","Q1543605":"song","Q1989725":"song","Q3897519":"song","Q120171898":"event","Q616245":"standard","Q758837":"standard","Q763131":"standard","Q796005":"standard","Q828287":"standard","Q847949":"standard","Q1431617":"standard","Q1653434":"standard","Q1653437":"standard","Q3146599":"standard","Q3146622":"standard","Q3146627":"standard","Q3146624":"standard","Q3487181":"standard","Q4041015":"standard","Q4386278":"standard","Q5906783":"standard","Q5906785":"standard","Q5906790":"standard","Q5970231":"standard","Q5970233":"standard","Q5970239":"standard","Q5970237":"standard","Q5970246":"standard","Q5970244":"standard","Q5970248":"standard","Q5970256":"standard","Q5970268":"standard","Q5970274":"standard","Q5970299":"standard","Q856058":"book","Q21848887":"song","Q11223934":"standard","Q11223933":"standard","Q220505":"event","Q24840943":"song","Q2633280":"event","Q17322391":"standard","Q12047175":"book","Q17679554":"standard","Q22678605":"standard","Q16941296":"event","Q30590703":"standard","Q30715976":"standard","Q31073483":"standard","Q62706465":"post-weblog","Q28501089":"event","Q63247669":"song","Q55755869":"standard","Q55936932":"standard","Q116235719":"periodical","Q55936923":"standard","Q55937502":"standard","Q14658":"standard","Q59094171":"review","Q13167":"software","Q65773873":"book","Q66370783":"book","Q64272108":"event","Q102054386":"post-weblog","Q111653018":"post-weblog","Q101011985":"dataset","Q113648718":"paper-conference","Q106474029":"dataset","Q107175238":"dataset","Q108673968":"collection","Q114065938":"post","Q124381564":"report","Q96604496":"software","Q116783116":"collection","Q116843704":"collection","Q117038777":"collection","Q101238296":"book","Q101552184":"software","Q120490312":"collection","Q104828091":"standard","Q104948406":"book","Q124101804":"dataset","Q105760475":"software","Q108028700":"software","Q108028709":"software","Q108308863":"software","Q266680":"map","Q253749":"regulation","Q847919":"regulation","Q907246":"regulation","Q1241342":"map","Q106747100":"review","Q2865639":"legal_case","Q114798432":"book","Q7611327":"regulation","Q10423546":"regulation","Q113627085":"event","Q113627108":"event","Q113627141":"event","Q11395628":"regulation","Q1519864":"song","Q1484397":"broadcast","Q4056436":"song","Q4400497":"song","Q18001677":"map","Q11590393":"song","Q11817196":"song","Q16927904":"motion_picture","Q174989":"software","Q12983425":"song","Q12983463":"song","Q4202064":"dataset","Q83790":"book","Q65071384":"periodical","Q30314010":"regulation","Q1728555":"book","Q7565159":"software","Q2901352":"book","Q2972936":"book","Q5093326":"book","Q23072435":"song","Q8034663":"book","Q25407651":"song","Q30682836":"post","Q15528609":"standard","Q27981708":"song","Q27981857":"song","Q28666961":"song","Q49100771":"regulation","Q49100769":"regulation","Q20861496":"book","Q29364197":"software","Q29405157":"dataset","Q70471362":"article-journal","Q64727712":"post","Q48739515":"standard","Q48782415":"book","Q72180513":"post","Q50965914":"book","Q55442722":"book","Q55442818":"book","Q61866692":"software","Q87073833":"regulation","Q88222337":"regulation","Q88319982":"regulation","Q88704770":"regulation","Q88706840":"regulation","Q61913587":"book","Q91901000":"article-journal","Q91985448":"map","Q59466328":"event","Q86735980":"song","Q76100141":"software","Q76100355":"software","Q67212770":"legislation","Q105764129":"regulation","Q99230875":"song","Q99230884":"song","Q105967840":"motion_picture","Q101515433":"song","Q108296569":"post","Q108354410":"post","Q108354415":"post","Q108970344":"post","Q116744398":"motion_picture","Q15836186":"broadcast","Q111590483":"post","Q111590519":"post","Q111772463":"post","Q86082198":"review","Q113197806":"post","Q92257756":"book","Q92259219":"book","Q92275689":"book","Q92275705":"book","Q116970259":"post","Q102314626":"software","Q122658117":"post","Q107355827":"software","Q96106854":"event","Q114460725":"software","Q328798":"regulation","Q919526":"regulation","Q1353935":"map","Q1269627":"regulation","Q116311961":"software","Q2519203":"regulation","Q2823674":"legal_case","Q106377252":"legislation","Q107745630":"event","Q107745632":"event","Q5546654":"legislation","Q109544656":"event","Q111823430":"event","Q114350932":"event","Q11641606":"map","Q11555036":"regulation","Q502658":"song","Q762917":"song","Q118824480":"event","Q5985066":"song","Q7179597":"song","Q22682013":"report","Q188506":"software","Q202871":"software","Q1200186":"software","Q16682190":"song","Q5001960":"standard","Q155171":"book","Q624669":"book","Q2150516":"book","Q3402495":"periodical","Q3752011":"book","Q5091196":"book","Q10585835":"software","Q7299950":"book","Q1960124":"event","Q106633152":"interview","Q106697982":"interview","Q106747061":"interview","Q108577034":"interview","Q15841472":"standard","Q7887959":"legislation","Q113288395":"webpage","Q11268409":"event","Q18744387":"book","Q28135300":"software","Q17020734":"event","Q18574943":"event","Q25203386":"book","Q26160672":"book","Q20892160":"event","Q54621475":"post","Q7207537":"performance","Q69863064":"map","Q64140571":"song","Q72862526":"song","Q56612794":"book","Q86726484":"legal_case","Q60809954":"book","Q67175826":"book","Q97016221":"map","Q74551327":"book","Q105635725":"regulation","Q105635730":"regulation","Q107523873":"regulation","Q107524042":"regulation","Q71989553":"event","Q107268222":"speech","Q109934449":"legislation","Q110593123":"motion_picture","Q110996876":"map","Q111708950":"map","Q84252804":"book","Q84253146":"book","Q85215989":"book","Q108744576":"post","Q116777134":"motion_picture","Q111709174":"post","Q120197854":"legal_case","Q112222219":"dataset","Q121757804":"speech","Q87479384":"event","Q114348770":"treaty","Q115159998":"song","Q115159997":"song","Q115160316":"song","Q112123591":"software","Q112621540":"bill","Q113733022":"standard","Q113953807":"software","Q113976362":"software","Q115252929":"software","Q115517227":"software","Q1632297":"regulation","Q116457352":"software","Q116695763":"software","Q116695767":"software","Q116961403":"software","Q117208418":"software","Q117208419":"software","Q117208417":"software","Q117208422":"software","Q117208420":"software","Q117208421":"software","Q117208425":"software","Q117246174":"software","Q117349475":"software","Q4505959":"map","Q119348443":"software","Q115160504":"book","Q115160547":"book","Q115160548":"book","Q115160549":"book","Q115160554":"book","Q4674287":"speech","Q121889130":"software","Q124024701":"software","Q124045602":"software","Q124053676":"software","Q124053765":"software","Q124739963":"software","Q1039265":"dataset","Q814924":"treaty","Q1073515":"song","Q116292789":"event","Q123668680":"book","Q2298624":"song","Q123684185":"book","Q2956147":"song","Q118499461":"event","Q4993817":"song","Q122343202":"event","Q19355445":"report","Q856567":"standard","Q758870":"software","Q25447291":"map","Q1373429":"software","Q1755420":"software","Q2264109":"software","Q16194930":"song","Q4914883":"book","Q5474871":"book","Q106044661":"webpage","Q2640883":"performance","Q5193395":"legislation","Q17021694":"standard","Q41346237":"map","Q17097955":"software","Q17146002":"book","Q27598291":"software","Q30309281":"software","Q123987923":"manuscript","Q123988116":"manuscript","Q123988507":"manuscript","Q123989168":"manuscript","Q123989202":"manuscript","Q123996944":"manuscript","Q61906203":"software","Q58483083":"book","Q25379":"book","Q109622609":"motion_picture","Q109629396":"motion_picture","Q7075089":"periodical","Q10567924":"periodical","Q116740091":"report","Q119586659":"legal_case","Q121568341":"map","Q121746037":"map","Q99231497":"standard","Q123398707":"legal_case","Q123698335":"regulation","Q124419226":"map","Q124609774":"map","Q124610908":"map","Q124632248":"map","Q124632258":"map","Q124632520":"map","Q124675353":"regulation","Q125121444":"map","Q124646346":"report","Q115160315":"song","Q115164452":"song","Q124313023":"dataset","Q124313030":"dataset","Q124313031":"dataset","Q124842888":"dataset","Q113940039":"software","Q3268937":"map","Q124839964":"software","Q117806135":"event","Q18394384":"map","Q124654547":"event","Q205722":"standard","Q214519":"standard","Q638153":"software","Q1530518":"standard","Q2036509":"software","Q3568027":"software","Q8026759":"standard","Q86483":"event","Q153308":"event","Q204372":"event","Q231833":"event","Q751982":"event","Q898830":"event","Q1150253":"event","Q1241858":"event","Q1523556":"event","Q1737226":"event","Q2032224":"event","Q2033651":"event","Q2376952":"event","Q2466190":"event","Q2546404":"event","Q2547181":"event","Q2547212":"event","Q2547256":"event","Q2609861":"event","Q2818097":"event","Q3381319":"event","Q3680691":"event","Q4047994":"event","Q4048027":"event","Q4395890":"event","Q16000445":"software","Q4920810":"event","Q5253380":"event","Q7307595":"event","Q10002682":"event","Q10689647":"event","Q15140182":"event","Q15992351":"event","Q15992355":"event","Q15992407":"event","Q15992410":"event","Q15992408":"event","Q16025335":"event","Q16025333":"event","Q16025336":"event","Q16025347":"event","Q16025353":"event","Q16025356":"event","Q16025370":"event","Q16025382":"event","Q16025380":"event","Q16025381":"event","Q16025386":"event","Q16025388":"event","Q16025400":"event","Q16025406":"event","Q16025410":"event","Q16025409":"event","Q16524890":"event","Q17620735":"event","Q22930958":"event","Q22930956":"event","Q22930969":"event","Q22930997":"event","Q22931015":"event","Q23642670":"event","Q24961230":"event","Q25377603":"event","Q51119344":"event","Q51119350":"event","Q51119363":"event","Q51119367":"event","Q51119369":"event","Q51119383":"event","Q51119381":"event","Q51119398":"event","Q51119402":"event","Q51119404":"event","Q51119427":"event","Q51119425":"event","Q51119429":"event","Q51120563":"event","Q51120567":"event","Q51120565":"event","Q55530927":"event","Q55530936":"event","Q55530949":"event","Q60981963":"event","Q27283":"event","Q40317":"event","Q42236":"event","Q98163019":"software","Q110404686":"standard","Q115288389":"software","Q116264144":"software","Q118127724":"software","Q119845798":"software","Q121027163":"software","Q124476830":"software","Q124626590":"software","Q136277":"software","Q170378":"software","Q305873":"software","Q893210":"software","Q947369":"software","Q950981":"software","Q1322715":"software","Q2174007":"software","Q2531940":"software","Q3251801":"software","Q3600969":"software","Q3848426":"software","Q4441598":"software","Q5991258":"software","Q6163847":"software","Q7715973":"software","Q8026703":"software","Q9427662":"software","Q189835":"legislation","Q189837":"legislation","Q189844":"legislation","Q189845":"legislation","Q223590":"legislation","Q449150":"legislation","Q492610":"legislation","Q603299":"legislation","Q604188":"legislation","Q691424":"legislation","Q862207":"legislation","Q915060":"legislation","Q1148232":"legislation","Q1185409":"legislation","Q1353859":"legislation","Q2028541":"legislation","Q2041542":"legislation","Q2104464":"legislation","Q2385874":"legislation","Q2416319":"legislation","Q2944268":"legislation","Q2944277":"legislation","Q3605072":"legislation","Q3664422":"legislation","Q4114390":"legislation","Q4115775":"legislation","Q4357923":"legislation","Q4358368":"legislation","Q4503886":"legislation","Q4503884":"legislation","Q4503885":"legislation","Q4503889":"legislation","Q4503897":"legislation","Q4504958":"legislation","Q4817455":"legislation","Q4925942":"legislation","Q4942971":"legislation","Q5058912":"legislation","Q5058913":"legislation","Q5058918":"legislation","Q5058919":"legislation","Q5058916":"legislation","Q5058926":"legislation","Q5058924":"legislation","Q5058925":"legislation","Q5058930":"legislation","Q5058935":"legislation","Q5058933":"legislation","Q5058939":"legislation","Q5058937":"legislation","Q16308123":"software","Q5421766":"legislation","Q5706946":"legislation","Q5952153":"legislation","Q7210265":"legislation","Q18601928":"software","Q19715216":"software","Q10598112":"legislation","Q13424629":"legislation","Q16956312":"legislation","Q33120876":"software","Q33120921":"software","Q47495990":"software","Q58494329":"software","Q381":"software","Q16691":"software","Q48267":"software","Q22696":"legislation","Q22759":"legislation","Q22765":"legislation","Q96631869":"software","Q105518398":"software","Q106253790":"software","Q106880300":"software","Q106124032":"book","Q107177810":"book","Q111394772":"event","Q115472779":"legislation","Q115491156":"legislation","Q115940565":"event","Q97169418":"performance","Q121141716":"legislation","Q101552821":"performance","Q124305588":"event","Q124478019":"event","Q266990":"software","Q845620":"software","Q900604":"software","Q3337271":"software","Q7708379":"software","Q115171191":"performance","Q205097":"event","Q253137":"book","Q1548170":"book","Q1813574":"event","Q1879352":"event","Q1954953":"book","Q2110027":"event","Q2147804":"event","Q2265649":"event","Q13733263":"software","Q2425012":"event","Q2922227":"event","Q2939692":"event","Q2939693":"event","Q3684598":"book","Q15477174":"software","Q5044110":"event","Q5044124":"event","Q5158398":"book","Q5752804":"event","Q5752855":"event","Q5752941":"event","Q5752946":"event","Q6027927":"book","Q18156733":"software","Q18348827":"software","Q10273189":"event","Q10417025":"event","Q10830180":"book","Q13509947":"event","Q15961911":"event","Q17144862":"legislation","Q17988485":"legislation","Q122766472":"webpage","Q21008098":"event","Q21011266":"event","Q21035151":"event","Q21035155":"event","Q21035156":"event","Q21035166":"event","Q21035176":"event","Q21971834":"event","Q141459":"performance","Q23048056":"legislation","Q384181":"performance","Q438503":"performance","Q601235":"performance","Q877693":"performance","Q965635":"performance","Q1166726":"performance","Q24963336":"legislation","Q2352315":"performance","Q25687998":"event","Q27897473":"legislation","Q27958767":"legislation","Q28197261":"legislation","Q28220756":"legislation","Q27962955":"event","Q5799402":"performance","Q29050586":"event","Q29466507":"event","Q30587601":"legislation","Q30935481":"book","Q31842628":"legislation","Q9334632":"performance","Q31884180":"book","Q12302979":"performance","Q9732903":"webpage","Q11002482":"webpage","Q12096573":"webpage","Q16059585":"webpage","Q16059613":"webpage","Q16059624":"webpage","Q19208935":"webpage","Q55606820":"legislation","Q21450877":"webpage","Q55622691":"book","Q55841026":"book","Q59056824":"legislation","Q62782177":"legislation","Q63974574":"event","Q70791907":"legislation","Q116634":"software","Q208850":"software","Q209163":"software","Q270948":"software","Q368542":"software","Q467880":"software","Q472055":"software","Q584105":"software","Q744038":"software","Q839777":"software","Q848991":"software","Q858523":"software","Q868217":"software","Q958821":"software","Q1041225":"software","Q1050023":"software","Q1121542":"software","Q1192658":"software","Q1223895":"software","Q1224999":"software","Q1327648":"software","Q1395577":"software","Q1425505":"software","Q1493064":"software","Q1506693":"software","Q1610017":"software","Q1635956":"software","Q1758804":"software","Q1823737":"software","Q2762504":"software","Q23916":"software","Q27291":"software","Q54767":"software","Q114694593":"software","Q116175427":"software","Q116236667":"software","Q116278114":"software","Q116680021":"software","Q116703284":"software","Q116741534":"software","Q117216668":"software","Q120373196":"software","Q122681242":"software","Q122766396":"software","Q123012190":"software","Q124365475":"software","Q124650082":"software","Q429083":"dataset","Q906648":"dataset","Q1478823":"dataset","Q1584044":"dataset","Q2537421":"dataset","Q3163116":"dataset","Q2910554":"software","Q3257925":"software","Q3266431":"software","Q3288281":"software","Q3495514":"software","Q3739535":"software","Q4197725":"software","Q4393107":"software","Q4449864":"software","Q4485157":"software","Q4704404":"software","Q5048771":"software","Q5193152":"software","Q5647425":"software","Q839018":"book","Q6561427":"software","Q6895044":"software","Q6955546":"software","Q7832342":"software","Q7888616":"software","Q8023562":"software","Q4067625":"book","Q9086092":"software","Q10682795":"software","Q10714182":"software","Q11084095":"software","Q11297254":"software","Q11446445":"software","Q14411698":"software","Q15222921":"software","Q15613992":"software","Q16070115":"software","Q17049225":"software","Q17992502":"software","Q22974170":"software","Q25397095":"software","Q25416247":"software","Q26692802":"software","Q28004621":"software","Q29471320":"software","Q25508849":"book","Q48835388":"software","Q50572288":"software","Q43747":"dataset","Q55588631":"software","Q60617706":"software","Q60617825":"software","Q60617909":"software","Q60617933":"software","Q60617940":"software","Q60777418":"software","Q61475894":"software","Q61642128":"software","Q61838206":"software","Q64170203":"software","Q64641660":"software","Q64692685":"software","Q65073088":"software","Q65963104":"software","Q66085372":"software","Q73548809":"software","Q78444225":"software","Q85341917":"software","Q85422949":"software","Q85637992":"software","Q85851440":"software","Q87741364":"software","Q89691527":"software","Q104438884":"software","Q106542313":"software","Q107486718":"software","Q109115381":"software","Q110817849":"software","Q111223304":"software","Q112901178":"software","Q113574332":"software","Q113939522":"software","Q114968900":"software","Q114830535":"periodical","Q115264630":"book","Q116505896":"periodical","Q116672084":"book","Q3239011":"dataset","Q124745686":"book","Q5275636":"dataset","Q7658822":"dataset","Q9372631":"dataset","Q10528046":"dataset","Q174666":"software","Q213666":"software","Q226264":"software","Q282080":"software","Q290196":"software","Q588145":"software","Q600659":"software","Q720353":"software","Q1053058":"software","Q1077480":"software","Q1139923":"software","Q1198514":"software","Q16325412":"dataset","Q3030796":"software","Q3496028":"software","Q3496042":"software","Q4162386":"software","Q231302":"book","Q237338":"book","Q242492":"book","Q382236":"book","Q438533":"book","Q470137":"book","Q478804":"book","Q503106":"book","Q668711":"book","Q865484":"book","Q5874974":"software","Q1499199":"book","Q7005105":"software","Q7075017":"software","Q7643164":"software","Q3285662":"book","Q5366097":"book","Q10423474":"software","Q11221953":"software","Q25579682":"dataset","Q751967":"event","Q12307966":"software","Q874579":"event","Q875948":"event","Q2279967":"event","Q2415843":"event","Q9282761":"book","Q3119121":"event","Q3827292":"event","Q10670466":"book","Q11078173":"book","Q11080558":"book","Q11304780":"book","Q11448867":"book","Q16632299":"software","Q5255897":"event","Q5555532":"event","Q5959004":"event","Q7995869":"event","Q10433153":"event","Q11515007":"event","Q21198342":"periodical","Q21202185":"periodical","Q21997246":"motion_picture","Q28933703":"software","Q28933701":"software","Q28933706":"software","Q28933708":"software","Q28933712":"software","Q28933719":"software","Q36128335":"book","Q66823362":"software","Q1406":"software","Q14656":"software","Q43627":"software","Q3699":"event","Q29502":"event","Q85299672":"software","Q76160314":"event","Q108615611":"dataset","Q104536775":"book","Q104536849":"book","Q104536877":"book","Q104536908":"book","Q104536976":"book","Q104536999":"book","Q104537024":"book","Q106231889":"book","Q107408274":"book","Q107413638":"book","Q116908836":"standard","Q106963495":"event","Q123505812":"software","Q120868398":"event","Q205020":"software","Q278610":"software","Q378536":"software","Q893147":"software","Q931140":"software","Q1192309":"software","Q1239207":"software","Q1545398":"software","Q2597557":"software","Q3093294":"software","Q3480046":"software","Q4127125":"standard","Q3900494":"software","Q4119202":"software","Q5007725":"software","Q284991":"book","Q356055":"book","Q405584":"book","Q5323032":"software","Q643873":"book","Q760110":"book","Q854836":"book","Q972769":"book","Q1050848":"book","Q6008645":"software","Q1194583":"book","Q1310759":"book","Q1349065":"book","Q1582333":"book","Q1656714":"book","Q1761274":"book","Q1897671":"book","Q1999791":"book","Q2079843":"book","Q2105776":"book","Q2207959":"book","Q2406762":"book","Q7300019":"software","Q7393022":"software","Q2783906":"book","Q3092278":"book","Q7950616":"software","Q3389567":"book","Q3566051":"book","Q3715150":"book","Q4202036":"book","Q9079670":"software","Q5290180":"book","Q5315866":"book","Q5774663":"book","Q5954513":"book","Q6126478":"book","Q6139969":"book","Q6592456":"book","Q7261254":"book","Q7697093":"broadcast","Q2357104":"event","Q3956596":"legislation","Q17272482":"standard","Q17272692":"standard","Q17280916":"standard","Q13020317":"book","Q6933938":"legislation","Q13049802":"book","Q18287040":"software","Q16324744":"book","Q21283449":"software","Q16854678":"book","Q16858909":"book","Q18450502":"book","Q24992061":"book","Q20012720":"legislation","Q26257569":"book","Q26805199":"book","Q29047452":"book","Q30899623":"book","Q30912678":"book","Q27070652":"legislation","Q42342966":"software","Q39892385":"book","Q44102201":"book","Q47284976":"book","Q47485959":"book","Q62414839":"software","Q57965289":"book","Q63563749":"software","Q60982751":"book","Q70191115":"software","Q68430666":"book","Q72408184":"book","Q106920999":"software","Q108064715":"software","Q113495144":"software","Q109673193":"book","Q110024700":"book","Q110275977":"book","Q110324066":"book","Q111972389":"book","Q112325254":"book","Q107302128":"review","Q107302258":"review","Q113148443":"book","Q108305133":"review","Q116479006":"book","Q121423554":"book","Q121432240":"book","Q121599639":"book","Q122960575":"book","Q123332346":"book","Q109584422":"performance","Q112632331":"performance","Q113129724":"performance","Q1436668":"review","Q2245461":"review","Q116866321":"performance","Q3813242":"review","Q5154588":"review","Q5160138":"review","Q5452194":"review","Q5937746":"review","Q120868521":"performance","Q120965394":"performance","Q6934595":"review","Q6956315":"review","Q7907956":"review","Q8068723":"review","Q16242548":"review","Q17637777":"review","Q20011486":"review","Q22909167":"review","Q179465":"performance","Q248255":"performance","Q691771":"performance","Q820922":"performance","Q1067089":"performance","Q1497328":"performance","Q1498088":"performance","Q1500983":"performance","Q1553339":"performance","Q1803735":"performance","Q2299159":"performance","Q2373914":"performance","Q2447826":"performance","Q2706051":"performance","Q2956237":"performance","Q3077527":"performance","Q3144067":"performance","Q3240930":"performance","Q3495144":"performance","Q3655696":"performance","Q4239839":"performance","Q4408537":"performance","Q4494430":"performance","Q5396690":"performance","Q5552415":"performance","Q5663801":"performance","Q6010643":"performance","Q9154428":"performance","Q10441865":"performance","Q10536367":"performance","Q10571749":"performance","Q10719098":"performance","Q12367419":"performance","Q13429861":"performance","Q15990884":"song","Q18822510":"performance","Q42824440":"review","Q42824827":"review","Q42825046":"review","Q19973796":"performance","Q48996431":"review","Q25616123":"performance","Q70447452":"review","Q78089383":"review","Q78093526":"review","Q87544043":"book","Q66098673":"performance","Q41923":"performance","Q96003705":"review","Q101509260":"book","Q102430127":"book","Q102711921":"book","Q103319035":"book","Q98446308":"review","Q104097002":"book","Q99672520":"review","Q104704034":"book","Q100699183":"review","Q106771428":"book","Q107547472":"book","Q79054127":"performance","Q105762635":"event","Q106689897":"event","Q111181669":"review","Q110738072":"event","Q113787101":"review","Q117084640":"event","Q208628":"book","Q1436115":"book","Q1872234":"book","Q2252176":"book","Q5792832":"book","Q5792840":"book","Q166788":"event","Q181789":"event","Q307439":"event","Q419441":"event","Q452172":"event","Q7187715":"book","Q7672908":"book","Q1347838":"event","Q1944136":"event","Q2072215":"event","Q2207867":"event","Q2265647":"event","Q2453094":"event","Q9207029":"book","Q2801174":"event","Q3534698":"event","Q4071451":"event","Q4326869":"event","Q4326886":"event","Q11362827":"book","Q4832957":"event","Q12404438":"dataset","Q6021105":"event","Q7426562":"event","Q7561276":"event","Q14333796":"book","Q16313789":"book","Q16626925":"book","Q17011965":"book","Q17118115":"book","Q11387009":"event","Q14565621":"event","Q19893409":"event","Q28407836":"book","Q24255328":"event","Q47462314":"event","Q65067294":"book","Q4184":"book","Q34274":"book","Q2150":"event","Q92915890":"book","Q97015052":"book","Q105609506":"book","Q108304511":"book","Q113465339":"book","Q113537346":"book","Q116811300":"book","Q117321888":"book","Q119682930":"book","Q119682997":"book","Q191072":"dataset","Q121911119":"book","Q122747179":"book","Q2976602":"dataset","Q124051636":"book","Q119191":"software","Q164274":"software","Q166514":"software","Q183427":"software","Q184148":"software","Q184609":"software","Q184748":"software","Q191865":"software","Q271680":"software","Q283770":"software","Q308980":"software","Q467707":"software","Q537993":"software","Q625518":"software","Q633182":"software","Q679931":"software","Q778586":"software","Q836795":"software","Q849945":"software","Q865817":"software","Q908242":"software","Q942695":"software","Q959462":"software","Q1047886":"software","Q1065980":"software","Q1070421":"software","Q1074173":"software","Q1122588":"software","Q1138405":"software","Q1152477":"software","Q1156049":"software","Q1186978":"software","Q1220872":"software","Q1248874":"software","Q1575458":"software","Q1663795":"software","Q1949698":"software","Q1964195":"software","Q2102665":"software","Q2114277":"software","Q2187686":"software","Q2257348":"software","Q2293691":"software","Q2297769":"software","Q2537171":"software","Q2578744":"software","Q2641372":"software","Q2706314":"software","Q2717852":"software","Q2786534":"software","Q2831043":"software","Q4154431":"software","Q4292129":"software","Q4810567":"software","Q5071882":"software","Q5157583":"software","Q446523":"book","Q651019":"book","Q1193421":"book","Q1277508":"book","Q1521512":"book","Q1601740":"book","Q6486632":"software","Q6553536":"software","Q1956258":"book","Q1957413":"book","Q2583965":"book","Q3589331":"book","Q4243465":"book","Q4263008":"book","Q6391136":"book","Q11588264":"book","Q11612940":"book","Q11820946":"book","Q12776666":"book","Q18339531":"book","Q19602791":"book","Q14942952":"event","Q16498238":"event","Q25831177":"book","Q28682619":"book","Q28686106":"book","Q60557971":"dataset","Q85914309":"book","Q98596704":"book","Q119509990":"dataset","Q114822419":"software","Q121224883":"software","Q125052673":"software","Q6665305":"software","Q6914653":"software","Q7302709":"software","Q7504648":"software","Q7544035":"software","Q10500530":"software","Q11238306":"software","Q139060":"event","Q250496":"event","Q257262":"event","Q269616":"event","Q277924":"event","Q279283":"event","Q327765":"event","Q11774664":"software","Q373956":"event","Q377889":"event","Q386750":"event","Q481394":"event","Q489532":"event","Q509581":"event","Q526530":"event","Q573613":"event","Q645225":"event","Q669262":"event","Q765896":"event","Q832043":"event","Q832107":"event","Q858439":"event","Q877353":"event","Q917269":"event","Q931687":"event","Q1116750":"event","Q1142770":"event","Q1156016":"event","Q1196663":"event","Q1196727":"event","Q1252747":"event","Q1292614":"event","Q1333366":"event","Q1376777":"event","Q1428148":"event","Q1769698":"event","Q1810164":"event","Q1914150":"event","Q1953538":"event","Q2055296":"event","Q2062518":"event","Q13563219":"software","Q2273734":"event","Q2276065":"event","Q2300361":"event","Q2306021":"event","Q2412015":"event","Q2415599":"event","Q2439355":"event","Q2533468":"event","Q2540467":"event","Q2644795":"event","Q2991470":"event","Q3026458":"event","Q3068523":"event","Q3077811":"event","Q3117951":"event","Q3123403":"event","Q3398563":"event","Q3467519":"event","Q3563181":"event","Q3586689":"event","Q3586695":"event","Q3586858":"event","Q3586859":"event","Q3586870":"event","Q3650619":"event","Q3735285":"event","Q15975283":"software","Q18392997":"software","Q20826962":"software","Q21013268":"software","Q21055608":"software","Q25313447":"software","Q28031555":"software","Q30077597":"software","Q30581237":"software","Q37307899":"software","Q47525747":"software","Q49094377":"software","Q55106975":"software","Q31672":"event","Q48968":"event","Q91447167":"software","Q100508790":"software","Q104764409":"software","Q105103015":"software","Q105526153":"software","Q107829364":"software","Q107829622":"software","Q107394355":"event","Q4115021":"event","Q4128634":"event","Q4198340":"event","Q4364848":"event","Q4895082":"event","Q5354600":"event","Q5354619":"event","Q5354625":"event","Q5354656":"event","Q5354662":"event","Q5354663":"event","Q5354660":"event","Q5354672":"event","Q5354692":"event","Q5354731":"event","Q5354734":"event","Q5354743":"event","Q5354744":"event","Q5354750":"event","Q5354752":"event","Q5354797":"event","Q5354802":"event","Q5354828":"event","Q5354829":"event","Q5354847":"event","Q5354859":"event","Q5354887":"event","Q5354884":"event","Q5354902":"event","Q5354906":"event","Q5452198":"event","Q5456339":"event","Q5827614":"event","Q6129823":"event","Q6508670":"event","Q6800733":"event","Q6936337":"event","Q6980735":"event","Q7442979":"event","Q7596928":"event","Q8424783":"event","Q8774620":"event","Q10312794":"event","Q10430113":"event","Q10553987":"event","Q10609771":"event","Q10956631":"event","Q11354055":"event","Q11394707":"event","Q11394958":"event","Q11696540":"event","Q11775075":"event","Q12195172":"event","Q12237967":"event","Q13012970":"event","Q13099488":"event","Q13256577":"event","Q14006248":"event","Q14362442":"event","Q14428901":"event","Q15261477":"event","Q15857735":"event","Q15885655":"event","Q15966540":"event","Q16482341":"event","Q16957500":"event","Q16983162":"event","Q17099732":"event","Q18657746":"event","Q18915465":"event","Q21087349":"event","Q24097670":"event","Q24910722":"event","Q27242623":"event","Q28122293":"event","Q28152015":"event","Q28363647":"event","Q28404720":"event","Q28404971":"event","Q28453929":"event","Q29102902":"event","Q31891035":"event","Q31891043":"event","Q31891050":"event","Q35647389":"event","Q38080355":"event","Q47239206":"event","Q55315853":"event","Q60740104":"event","Q61051482":"event","Q61964017":"event","Q62019864":"event","Q65210722":"event","Q73283366":"event","Q74212708":"event","Q76853179":"event","Q85811908":"event","Q97185204":"event","Q101421918":"event","Q107739684":"event","Q108031909":"event","Q108146844":"event","Q108606572":"event","Q108606576":"event","Q109023157":"event","Q109682730":"event","Q109860356":"event","Q109936365":"event","Q110192585":"event","Q112072816":"event","Q112611340":"event","Q112897639":"event","Q114775014":"event","Q115256249":"event","Q115264643":"event","Q117177815":"event","Q117369921":"event","Q123591356":"event","Q123591378":"event","Q123661158":"event","Q124154791":"event","Q124340246":"event","Q2553286":"standard","Q431226":"event","Q573790":"event","Q660064":"event","Q705043":"event","Q1163060":"event","Q1219394":"event","Q1279357":"event","Q1458216":"event","Q2047421":"event","Q2112892":"event","Q2260870":"event","Q2412191":"event","Q2416571":"event","Q2515494":"event","Q2531579":"event","Q2684556":"event","Q3449092":"event","Q3454916":"event","Q3454917":"event","Q3518511":"event","Q3931571":"event","Q3931603":"event","Q4127618":"event","Q4388339":"event","Q4393807":"event","Q4393809":"event","Q5021202":"event","Q7307167":"event","Q7307171":"event","Q7307169":"event","Q7307172":"event","Q7658986":"event","Q7968735":"event","Q9305214":"event","Q12292328":"event","Q15923787":"event","Q16061631":"event","Q19387509":"event","Q20199086":"event","Q20720731":"event","Q25044704":"event","Q33103999":"event","Q48995961":"software","Q59164118":"standard","Q48806007":"event","Q54086790":"event","Q56304426":"event","Q59824867":"event","Q60189435":"event","Q60364778":"event","Q60832313":"event","Q60832352":"event","Q60835687":"event","Q60835756":"event","Q60835763":"event","Q60835775":"event","Q60835779":"event","Q60835781":"event","Q60835788":"event","Q60835874":"event","Q60835880":"event","Q60835964":"event","Q60836037":"event","Q60836058":"event","Q60836063":"event","Q60836061":"event","Q60836068":"event","Q60836069":"event","Q60836079":"event","Q60836077":"event","Q60836546":"event","Q60841354":"event","Q65128545":"event","Q65154340":"event","Q65156136":"event","Q65156193":"event","Q106199835":"event","Q106204678":"event","Q106491674":"event","Q107183265":"event","Q110588664":"event","Q110624386":"event","Q112151151":"event","Q112162307":"event","Q113241148":"event","Q118288565":"event","Q118288577":"event","Q121818765":"event","Q123587857":"event","Q123987295":"event","Q81304":"software","Q110546":"software","Q180760":"software","Q400185":"software","Q893209":"software","Q1076785":"software","Q1325106":"software","Q1416699":"software","Q2990416":"software","Q3081213":"software","Q3529432":"software","Q3614994":"software","Q6015444":"software","Q6934486":"software","Q7316652":"software","Q9356612":"software","Q399999":"legislation","Q190334":"event","Q230421":"event","Q338562":"event","Q564478":"event","Q770985":"event","Q829768":"event","Q836738":"event","Q1069363":"event","Q1255251":"event","Q1316116":"event","Q1319165":"event","Q1969682":"legislation","Q1898928":"event","Q2294927":"event","Q2812388":"event","Q4460509":"event","Q4752855":"event","Q4843072":"event","Q4879893":"event","Q5124643":"event","Q5146194":"event","Q5530386":"event","Q7068355":"event","Q7260359":"event","Q7832310":"event","Q7917993":"event","Q7995719":"event","Q8964625":"event","Q8964629":"event","Q10290435":"event","Q10290447":"event","Q11368736":"event","Q11571371":"event","Q11795794":"event","Q12750093":"event","Q14916756":"event","Q17013377":"event","Q18215243":"event","Q31302964":"software","Q22812496":"event","Q37589322":"event","Q56249071":"software","Q55808145":"event","Q56300805":"legislation","Q56298560":"event","Q63442071":"event","Q63489784":"event","Q65267555":"event","Q105334529":"event","Q107125903":"event","Q107125924":"event","Q107177091":"event","Q107723697":"event","Q108353258":"event","Q108409053":"event","Q109837838":"event","Q110664546":"event","Q112136915":"event","Q112136936":"event","Q112153801":"event","Q112187177":"event","Q112194698":"event","Q112194738":"event","Q112194781":"event","Q112194834":"event","Q112194857":"event","Q112225720":"event","Q112232770":"event","Q112242996":"event","Q112243482":"event","Q112243591":"event","Q112256466":"event","Q112259194":"event","Q112270164":"event","Q112325840":"event","Q112326150":"event","Q112583697":"event","Q112627809":"event","Q112631320":"event","Q112631356":"event","Q112631423":"event","Q112632308":"event","Q3289718":"event","Q4127414":"event","Q4134784":"event","Q4154060":"event","Q4816014":"event","Q4892460":"event","Q4922330":"event","Q4968978":"event","Q5035518":"event","Q5035639":"event","Q5121403":"event","Q5327560":"event","Q5629055":"event","Q6457810":"event","Q6630631":"event","Q6672304":"event","Q6728070":"event","Q6815393":"event","Q6840806":"event","Q6904305":"event","Q7242731":"event","Q7242733":"event","Q7242773":"event","Q7242784":"event","Q7242791":"event","Q7306874":"event","Q7413706":"event","Q7578657":"event","Q7589672":"event","Q7633517":"event","Q7902389":"event","Q9161632":"event","Q12046766":"event","Q13102744":"event","Q13407349":"event","Q16467590":"event","Q16841169":"event","Q16850489":"event","Q16979257":"event","Q17017230":"event","Q17023293":"event","Q17056240":"event","Q17512396":"event","Q19365525":"event","Q20709277":"event","Q21004052":"event","Q24190332":"event","Q25104624":"event","Q28449529":"event","Q29561166":"event","Q30675417":"event","Q30905514":"event","Q42377496":"event","Q43984342":"event","Q55075493":"event","Q57465086":"event","Q58982890":"event","Q62839381":"event","Q64605573":"event","Q64876314":"event","Q65264941":"event","Q65335503":"event","Q74541288":"event","Q85794472":"event","Q85816294":"event","Q85846981":"event","Q1660368":"regulation","Q3039667":"regulation","Q3405526":"regulation","Q3536685":"regulation","Q3577418":"regulation","Q4820592":"regulation","Q6000409":"regulation","Q112632357":"event","Q112632405":"event","Q112764139":"event","Q112764404":"event","Q112764429":"event","Q112764500":"event","Q112765002":"event","Q112765241":"event","Q112765276":"event","Q112765294":"event","Q112765396":"event","Q112765510":"event","Q112769804":"event","Q112769926":"event","Q112770031":"event","Q112770159":"event","Q112770381":"event","Q112770553":"event","Q112770660":"event","Q112770813":"event","Q112772062":"event","Q112772186":"event","Q112772824":"event","Q112773448":"event","Q112773830":"event","Q112775299":"event","Q112775420":"event","Q112775496":"event","Q112799316":"event","Q112861597":"event","Q112861641":"event","Q112861743":"event","Q112861870":"event","Q112862544":"event","Q112862633":"event","Q112862661":"event","Q112862961":"event","Q112863948":"event","Q112864190":"event","Q112864207":"event","Q112864229":"event","Q113003770":"event","Q113003801":"event","Q113003829":"event","Q113003974":"event","Q113004099":"event","Q113004127":"event","Q113004153":"event","Q113004173":"event","Q113004263":"event","Q113004293":"event","Q114853527":"event","Q12088124":"regulation","Q115410302":"event","Q116769403":"event","Q118364321":"event","Q119225007":"event","Q119225037":"event","Q119225055":"event","Q121121131":"event","Q123518913":"event","Q124852579":"event","Q754584":"software","Q29932790":"regulation","Q7439078":"software","Q9353667":"software","Q446643":"event","Q998672":"event","Q1129867":"event","Q1156329":"event","Q1520423":"event","Q1532267":"event","Q1738761":"event","Q1747723":"event","Q1875610":"event","Q2083629":"event","Q2188449":"event","Q2443567":"event","Q2556222":"event","Q2558300":"event","Q2613738":"event","Q3428525":"event","Q3958582":"event","Q4670142":"event","Q16167709":"software","Q4931516":"event","Q5446981":"event","Q10593476":"event","Q12347562":"event","Q50335907":"regulation","Q55637909":"software","Q98103963":"regulation","Q113829318":"software","Q106632483":"event","Q113976579":"book","Q115144025":"book","Q115160643":"book","Q115160641":"book","Q115700523":"book","Q115962348":"book","Q115299220":"event","Q124949186":"book","Q119204407":"event","Q647229":"standard","Q1345102":"standard","Q2161334":"standard","Q4866353":"software","Q623703":"book","Q655192":"book","Q1047433":"book","Q1081564":"book","Q1581176":"book","Q1746029":"book","Q2005755":"periodical","Q2025786":"book","Q2065131":"book","Q2250844":"book","Q2250960":"book","Q7851772":"standard","Q2552040":"book","Q3434123":"book","Q3434454":"book","Q3536411":"book","Q3740879":"book","Q3917426":"book","Q3997226":"book","Q3997225":"book","Q4010242":"book","Q9358874":"standard","Q4034405":"book","Q4259672":"book","Q4566090":"book","Q4903138":"book","Q4903139":"book","Q4903142":"book","Q4903143":"book","Q4903140":"book","Q4903141":"book","Q4903147":"book","Q4903144":"book","Q4903150":"book","Q4903148":"book","Q4903149":"book","Q4903155":"book","Q4903152":"book","Q4903156":"book","Q4903162":"book","Q4903161":"book","Q5276199":"book","Q7246954":"book","Q1388554":"event","Q9378888":"book","Q10874566":"book","Q11191558":"book","Q11638380":"book","Q16000421":"book","Q15874031":"event","Q16832430":"event","Q28864053":"standard","Q18629280":"event","Q19900542":"event","Q29646284":"event","Q31086454":"event","Q58902997":"book","Q59565144":"event","Q61961946":"event","Q84756370":"event","Q101107078":"book","Q104852926":"book","Q106201964":"book","Q459435":"motion_picture","Q596138":"motion_picture","Q1092621":"motion_picture","Q1234018":"motion_picture","Q1271310":"motion_picture","Q1323308":"motion_picture","Q1352102":"motion_picture","Q1371394":"motion_picture","Q1464369":"motion_picture","Q1480924":"motion_picture","Q1760864":"motion_picture","Q111317987":"book","Q2084909":"motion_picture","Q2096046":"motion_picture","Q2670855":"motion_picture","Q3566966":"motion_picture","Q7301269":"motion_picture","Q9259710":"motion_picture","Q124261101":"book","Q20732395":"motion_picture","Q31884194":"motion_picture","Q4903166":"book","Q4903167":"book","Q4903164":"book","Q4903165":"book","Q4903170":"book","Q4903168":"book","Q4903174":"book","Q4903175":"book","Q4903173":"book","Q4903178":"book","Q4903176":"book","Q4903177":"book","Q4903183":"book","Q4903181":"book","Q4903186":"book","Q4903187":"book","Q4903184":"book","Q4903185":"book","Q4903190":"book","Q4903191":"book","Q4903188":"book","Q4903198":"book","Q4903199":"book","Q4903202":"book","Q4903200":"book","Q4903201":"book","Q4903207":"book","Q4903210":"book","Q4903209":"book","Q4903215":"book","Q4903213":"book","Q4903216":"book","Q4903222":"book","Q4903221":"book","Q4903226":"book","Q4903225":"book","Q4903231":"book","Q4903229":"book","Q4903234":"book","Q4903232":"book","Q4903233":"book","Q4903239":"book","Q4903237":"book","Q4903242":"book","Q4903243":"book","Q4903240":"book","Q4903241":"book","Q4903246":"book","Q4903245":"book","Q4903289":"book","Q82809":"event","Q121393":"event","Q130881":"event","Q131028":"event","Q132994":"event","Q180115":"event","Q182242":"event","Q201196":"event","Q6821974":"book","Q7251597":"book","Q1517900":"event","Q1742054":"event","Q12038416":"book","Q16841483":"book","Q17005487":"book","Q17009357":"book","Q21995289":"dataset","Q25473994":"book","Q62582641":"book","Q63443310":"book","Q63652138":"book","Q64026048":"book","Q106117184":"motion_picture","Q116512806":"motion_picture","Q116777250":"motion_picture","Q116795611":"motion_picture","Q124391280":"motion_picture","Q106650169":"book","Q107671265":"event","Q109287325":"event","Q116233974":"book","Q117213508":"book","Q112159158":"event","Q114363090":"event","Q120965761":"book","Q644681":"treaty","Q124526328":"book","Q118510240":"event","Q184900":"software","Q189722":"software","Q522972":"software","Q861114":"book","Q1978454":"book","Q7889336":"software","Q154012":"event","Q154502":"event","Q254279":"event","Q444456":"event","Q461917":"event","Q511866":"event","Q673514":"event","Q782864":"event","Q804560":"event","Q911924":"event","Q945835":"event","Q986161":"event","Q1116333":"event","Q1126362":"event","Q1152364":"event","Q1155622":"event","Q1253480":"event","Q1264256":"event","Q1323212":"event","Q1347969":"event","Q1367629":"event","Q1406271":"event","Q1418486":"event","Q1435951":"event","Q1511361":"event","Q1558425":"event","Q1615460":"event","Q1628334":"event","Q1741789":"event","Q1753200":"event","Q1762010":"event","Q2208855":"event","Q2254427":"event","Q2273342":"event","Q2355716":"event","Q2736114":"event","Q3319892":"event","Q3508866":"event","Q3512010":"event","Q3572511":"event","Q3733471":"event","Q4115422":"event","Q17167101":"software","Q5783621":"event","Q6984280":"event","Q8191556":"event","Q16324495":"book","Q16523894":"book","Q10437082":"event","Q10551516":"event","Q10679874":"event","Q10931495":"event","Q12551662":"event","Q19357149":"book","Q13402947":"event","Q13538715":"event","Q15112333":"event","Q22703982":"book","Q18120972":"event","Q18466271":"event","Q26271823":"book","Q29188408":"book","Q30971943":"book","Q25906438":"event","Q53566454":"book","Q47657138":"event","Q66439496":"book","Q80592893":"software","Q51645":"event","Q55814":"event","Q101254332":"event","Q109324699":"book","Q106077542":"event","Q113147399":"book","Q108167473":"event","Q115816545":"book","Q111718195":"event","Q111718669":"event","Q112304514":"event","Q112521087":"event","Q112718564":"event","Q112795891":"event","Q113376280":"event","Q121429792":"book","Q114839613":"event","Q115223421":"event","Q115535972":"event","Q116052629":"event","Q116795617":"event","Q117210437":"event","Q117814836":"event","Q117814923":"event","Q124047847":"event","Q124519394":"event","Q146923":"software","Q193564":"software","Q2995599":"book","Q1788780":"event","Q1916298":"event","Q2180970":"event","Q2181014":"event","Q2258086":"event","Q2304773":"event","Q2387523":"event","Q2530662":"event","Q2655298":"event","Q2919327":"event","Q3070846":"event","Q3092946":"event","Q3269994":"event","Q3819721":"event","Q4191987":"event","Q4457169":"event","Q11122993":"book","Q4667966":"event","Q4801521":"event","Q4838683":"event","Q4851250":"event","Q4931260":"event","Q4986276":"event","Q5151487":"event","Q5192915":"event","Q5193357":"event","Q5215641":"event","Q5408063":"event","Q5445835":"event","Q5446360":"event","Q5500225":"event","Q6065125":"event","Q6071389":"event","Q7131232":"event","Q7259146":"event","Q7281155":"performance","Q7380771":"event","Q7423400":"event","Q7433676":"event","Q7852059":"event","Q9259200":"event","Q10508921":"event","Q10674751":"performance","Q11232701":"event","Q11864382":"event","Q12034941":"event","Q12371153":"event","Q14215493":"event","Q15526277":"event","Q15974353":"event","Q16361655":"event","Q16883908":"event","Q18355162":"event","Q20203428":"event","Q20650615":"event","Q20791519":"event","Q21002573":"event","Q21044497":"event","Q23925671":"event","Q24896646":"event","Q26714979":"event","Q29053679":"event","Q32187822":"event","Q52233158":"standard","Q48757176":"event","Q48968718":"event","Q50730773":"event","Q53866594":"event","Q62027749":"event","Q65195259":"event","Q76415672":"event","Q77131799":"event","Q86157788":"event","Q96877897":"event","Q98417129":"event","Q111144728":"book","Q1957385":"motion_picture","Q105580505":"event","Q5855976":"motion_picture","Q109924177":"event","Q110408266":"event","Q110408267":"event","Q110408268":"event","Q110408269":"event","Q115515652":"event","Q123734789":"book","Q119495959":"event","Q127879":"standard","Q557770":"standard","Q927521":"standard","Q538556":"software","Q1110221":"standard","Q1366152":"software","Q1551207":"software","Q4780786":"software","Q5563000":"software","Q31086090":"motion_picture","Q7170392":"software","Q2518231":"book","Q3561987":"book","Q3855510":"book","Q1035220":"event","Q1264973":"event","Q3423767":"event","Q3586483":"event","Q3587309":"event","Q3722112":"event","Q3743942":"event","Q5048701":"event","Q5827511":"event","Q5894489":"event","Q6664348":"event","Q7061379":"event","Q10271409":"event","Q10271630":"event","Q10271631":"event","Q17148351":"book","Q10845458":"event","Q11525676":"event","Q11890047":"event","Q11918760":"event","Q11918790":"event","Q11918792":"event","Q11922114":"event","Q12131668":"event","Q12131669":"event","Q12322522":"event","Q12387676":"event","Q12406392":"event","Q13102763":"event","Q21281445":"book","Q15154951":"event","Q15264058":"event","Q15280243":"event","Q16964284":"event","Q17071919":"event","Q17075010":"event","Q17496410":"event","Q25304621":"book","Q25495138":"book","Q19883750":"event","Q20106847":"event","Q20546236":"event","Q24228675":"event","Q24911873":"event","Q63860397":"motion_picture","Q29934288":"event","Q41707512":"event","Q47012533":"event","Q47981644":"event","Q51172766":"event","Q56023992":"event","Q56024035":"event","Q56024038":"event","Q56024037":"event","Q56583453":"event","Q56676100":"event","Q60009059":"event","Q67002968":"book","Q61989916":"event","Q64778850":"event","Q64918845":"event","Q65205015":"event","Q65209646":"event","Q104536896":"motion_picture","Q75951701":"event","Q76621956":"event","Q82665211":"event","Q85547059":"event","Q85547214":"event","Q124745294":"motion_picture","Q96747290":"event","Q97190544":"event","Q107434480":"book","Q107434597":"book","Q491158":"motion_picture","Q114755914":"software","Q114756109":"software","Q1278107":"motion_picture","Q1504407":"motion_picture","Q116690832":"standard","Q117039993":"software","Q118708709":"software","Q4674071":"motion_picture","Q4836991":"motion_picture","Q108172239":"event","Q108579428":"event","Q5905668":"motion_picture","Q109315275":"event","Q6804274":"motion_picture","Q123872960":"standard","Q12594828":"motion_picture","Q18376306":"regulation","Q80689":"software","Q82231":"software","Q83571":"software","Q339678":"software","Q425567":"software","Q579047":"software","Q1172354":"standard","Q1172367":"standard","Q1323676":"standard","Q966451":"software","Q984179":"software","Q1045719":"software","Q1050734":"software","Q1072314":"software","Q1103464":"software","Q1142282":"software","Q2739642":"standard","Q3251008":"software","Q3519361":"software","Q3836406":"software","Q4392311":"standard","Q4672467":"standard","Q318247":"book","Q5254115":"software","Q5457555":"software","Q7095934":"standard","Q7302818":"software","Q7606661":"software","Q7662753":"software","Q2940408":"book","Q975290":"event","Q1429577":"event","Q13157341":"software","Q1905393":"event","Q1975436":"event","Q3363493":"event","Q16671949":"standard","Q19358669":"standard","Q22937314":"standard","Q11410715":"event","Q27894992":"standard","Q28231474":"standard","Q28379876":"standard","Q16848063":"event","Q28380029":"standard","Q28451968":"software","Q28464970":"software","Q28600423":"software","Q28600424":"software","Q29904506":"software","Q56345535":"motion_picture","Q34736746":"software","Q96758034":"periodical","Q110589054":"periodical","Q78528852":"motion_picture","Q123909951":"periodical","Q59616856":"book","Q65951343":"software","Q58756":"software","Q752001":"periodical","Q882434":"periodical","Q80002220":"software","Q87358148":"webpage","Q88686174":"webpage","Q10522557":"periodical","Q116680383":"motion_picture","Q116771781":"motion_picture","Q16589997":"periodical","Q88469696":"event","Q105548196":"standard","Q107300839":"standard","Q110256698":"software","Q111292310":"standard","Q112345591":"software","Q113448455":"software","Q114603616":"standard","Q114023802":"book","Q123557964":"standard","Q113163799":"event","Q113303442":"event","Q635985":"dataset","Q1271915":"dataset","Q124423958":"book","Q677818":"standard","Q203081":"software","Q241411":"software","Q742323":"standard","Q758851":"standard","Q340002":"software","Q911682":"standard","Q598063":"software","Q646029":"software","Q647710":"software","Q721332":"software","Q799930":"software","Q1320152":"standard","Q837942":"software","Q901705":"software","Q911654":"software","Q1428261":"standard","Q1048338":"software","Q1718036":"standard","Q1307492":"software","Q1322529":"software","Q1454900":"software","Q2023100":"standard","Q1572823":"software","Q1635613":"software","Q2235486":"standard","Q2377054":"standard","Q2928673":"standard","Q3133994":"software","Q3410013":"software","Q4038774":"standard","Q3932296":"software","Q4524036":"standard","Q4822779":"software","Q5514543":"standard","Q19309479":"dataset","Q6031185":"software","Q6664300":"standard","Q1430953":"book","Q7168699":"standard","Q7269014":"standard","Q7005136":"software","Q7797281":"standard","Q7827452":"standard","Q7918427":"standard","Q7805429":"software","Q9295717":"software","Q25221891":"dataset","Q12352853":"standard","Q12356320":"standard","Q7195011":"book","Q743488":"event","Q814290":"event","Q997267":"event","Q1261499":"event","Q12847068":"software","Q1897017":"event","Q5392931":"event","Q19842847":"software","Q21078287":"standard","Q21078294":"standard","Q9182943":"event","Q9266805":"event","Q11396575":"event","Q22907102":"software","Q11552344":"event","Q25099437":"software","Q15047343":"event","Q15991159":"event","Q28456370":"standard","Q35687049":"software","Q26913948":"event","Q59565983":"dataset","Q53679891":"software","Q48767773":"event","Q64693901":"standard","Q56296559":"event","Q68232326":"standard","Q68246256":"standard","Q68246374":"standard","Q68246797":"standard","Q68246894":"standard","Q68248543":"standard","Q68248690":"standard","Q68248916":"standard","Q10267":"software","Q108809848":"dataset","Q116767694":"dataset","Q116972118":"dataset","Q117311578":"dataset","Q117649202":"dataset","Q112841639":"software","Q84052586":"performance","Q109611288":"performance","Q109875869":"performance","Q97307828":"performance","Q97501753":"performance","Q124326031":"performance","Q262238":"standard","Q271868":"standard","Q272629":"standard","Q1097284":"standard","Q1368899":"software","Q3879961":"standard","Q4653329":"standard","Q5322571":"standard","Q7210023":"standard","Q6822248":"software","Q8024464":"standard","Q11311509":"software","Q339152":"performance","Q359414":"performance","Q362925":"performance","Q528542":"performance","Q725169":"event","Q1446621":"performance","Q1631023":"performance","Q1778149":"performance","Q1850936":"performance","Q2095399":"performance","Q2296786":"performance","Q2329639":"performance","Q2427056":"performance","Q2466454":"performance","Q2574013":"performance","Q2882324":"performance","Q3001425":"performance","Q3001431":"performance","Q3345493":"performance","Q3502977":"performance","Q3532270":"performance","Q6149124":"performance","Q6149939":"performance","Q7315424":"performance","Q7354800":"performance","Q11637096":"performance","Q11703975":"performance","Q12031733":"performance","Q13751606":"performance","Q16616368":"performance","Q19287847":"event","Q41734983":"standard","Q19844197":"performance","Q52314849":"performance","Q60214939":"performance","Q98099116":"software","Q89822180":"performance","Q90573599":"performance","Q97960925":"performance","Q140676":"software","Q669935":"standard","Q231143":"software","Q1020019":"software","Q1195197":"software","Q1224870":"dataset","Q1503337":"software","Q1557261":"software","Q1954845":"software","Q2001867":"dataset","Q5615468":"dataset","Q6542704":"software","Q442770":"review","Q782466":"review","Q879969":"review","Q907375":"review","Q917415":"review","Q1066228":"review","Q1305405":"review","Q1399743":"review","Q1550400":"review","Q1675637":"review","Q1744617":"review","Q1749668":"review","Q1810071":"review","Q1982529":"review","Q2024680":"review","Q2109237":"review","Q13223892":"software","Q3532236":"review","Q4308623":"review","Q14251017":"software","Q4456475":"review","Q4986414":"review","Q5073782":"review","Q5135723":"review","Q5227098":"review","Q5227414":"review","Q5266714":"review","Q5421362":"review","Q5597182":"review","Q6752328":"review","Q6823025":"review","Q6887052":"review","Q7012116":"review","Q7125125":"review","Q7303026":"review","Q7336207":"review","Q7554226":"review","Q7978626":"review","Q18029311":"software","Q19601935":"software","Q12565537":"review","Q24081315":"software","Q16690155":"review","Q16697708":"review","Q17143088":"review","Q17146789":"review","Q28017710":"software","Q31899463":"software","Q22073956":"review","Q25111322":"review","Q25303607":"review","Q25303630":"review","Q30594664":"review","Q32024778":"performance","Q32028215":"performance","Q49098816":"standard","Q43060":"software","Q104081948":"standard","Q110272188":"dataset","Q110279334":"software","Q110279335":"software","Q111353659":"software","Q116907938":"software","Q114355231":"event","Q114355348":"event","Q114355484":"event","Q114355520":"event","Q114355544":"event","Q114355555":"event","Q114357477":"event","Q114357487":"event","Q114357535":"event","Q327618":"software","Q572129":"software","Q575771":"software","Q725485":"software","Q821080":"software","Q938892":"software","Q1502803":"software","Q2273119":"software","Q3638583":"standard","Q3754919":"software","Q76574":"event","Q154168":"event","Q255032":"event","Q430910":"event","Q477738":"event","Q519926":"event","Q549884":"event","Q663714":"event","Q822445":"event","Q829697":"event","Q830431":"event","Q879295":"event","Q956444":"event","Q1053885":"event","Q1056237":"event","Q1056240":"event","Q1056265":"event","Q1060201":"event","Q1076136":"event","Q1124813":"event","Q1131696":"event","Q1149850":"event","Q1183642":"event","Q1343260":"event","Q1345079":"event","Q1362588":"event","Q1413317":"event","Q1416453":"event","Q1470722":"event","Q1528023":"event","Q1601291":"event","Q1628520":"event","Q1639582":"event","Q1671839":"event","Q1780934":"event","Q1964920":"event","Q1978681":"event","Q2051572":"event","Q2346047":"event","Q2373582":"event","Q2637365":"event","Q2734140":"event","Q3080277":"event","Q3080497":"event","Q3414212":"event","Q15221050":"software","Q4058271":"event","Q4248969":"event","Q4345075":"event","Q4425267":"event","Q4523228":"event","Q4927790":"event","Q5389036":"event","Q5509124":"event","Q5933735":"event","Q5933738":"event","Q5933741":"event","Q5933763":"event","Q5933760":"event","Q5933766":"event","Q5933770":"event","Q18746518":"software","Q10960478":"event","Q23679990":"software","Q17010079":"event","Q18380180":"event","Q21163264":"event","Q23058942":"event","Q23058943":"event","Q23058940":"event","Q23058941":"event","Q23058945":"event","Q23058964":"event","Q51953936":"review","Q51954732":"review","Q54862604":"review","Q55069811":"review","Q45594":"event","Q75790147":"event","Q90790055":"software","Q1428934":"map","Q104863115":"event","Q2258523":"map","Q4342538":"map","Q108581862":"event","Q108581959":"event","Q109329862":"event","Q110026828":"event","Q110550023":"event","Q111398698":"event","Q112151136":"event","Q112151143":"event","Q113222303":"event","Q113364250":"event","Q115304879":"event","Q116025143":"event","Q116751945":"event","Q116908447":"event","Q118803431":"event","Q17052557":"map","Q121857709":"event","Q124792026":"event","Q25512715":"map","Q2415400":"software","Q178519":"book","Q6012283":"software","Q1425557":"book","Q1589214":"book","Q1993117":"book","Q2374151":"book","Q3199412":"book","Q3440984":"book","Q3940784":"book","Q5328438":"book","Q216507":"event","Q6902851":"book","Q7239955":"book","Q7308027":"book","Q852569":"event","Q2617054":"event","Q3312908":"event","Q5895486":"event","Q6042053":"event","Q6730926":"event","Q13368640":"book","Q6795915":"event","Q7100794":"event","Q7334818":"event","Q7391585":"event","Q7458818":"event","Q7878555":"event","Q8011595":"event","Q15295591":"book","Q9077486":"event","Q16656361":"book","Q16920576":"book","Q11078912":"event","Q11241352":"event","Q11487084":"event","Q11588671":"event","Q11641628":"event","Q11795110":"event","Q12201160":"event","Q12270117":"event","Q12410426":"event","Q19715429":"book","Q13923753":"event","Q14042845":"event","Q20667180":"book","Q14774083":"event","Q15076965":"event","Q15467069":"event","Q15880408":"event","Q15881641":"event","Q16718157":"event","Q17151825":"event","Q30588439":"software","Q26913057":"book","Q20826951":"event","Q21875119":"event","Q25644549":"event","Q29573122":"event","Q29573808":"event","Q31842074":"event","Q31885618":"event","Q38156045":"event","Q56062141":"software","Q47428478":"event","Q55256269":"event","Q55257247":"event","Q58185862":"event","Q63959351":"event","Q65211787":"event","Q65213496":"event","Q92083516":"event","Q102260654":"book","Q97380458":"event","Q98915680":"event","Q107356803":"book","Q116953130":"book","Q288608":"broadcast","Q338632":"broadcast","Q3421644":"broadcast","Q5465514":"broadcast","Q5812300":"broadcast","Q7135559":"broadcast","Q3434387":"software","Q3487336":"software","Q3496143":"software","Q3504297":"software","Q3504702":"software","Q3504854":"software","Q3571452":"software","Q3904937":"software","Q4052822":"software","Q4298840":"software","Q4713382":"software","Q4774495":"software","Q4839596":"software","Q4923654":"software","Q4939411":"software","Q4997161":"software","Q5014646":"software","Q174864":"book","Q5221809":"software","Q5267627":"software","Q5297093":"software","Q5437580":"software","Q5578038":"software","Q830634":"book","Q5710220":"software","Q1355393":"book","Q1497442":"book","Q6349088":"software","Q6355192":"software","Q1549585":"book","Q1551978":"book","Q6509902":"software","Q1741846":"book","Q1813873":"book","Q1970381":"book","Q1993385":"book","Q6849475":"software","Q6861969":"software","Q6982414":"software","Q7005124":"software","Q7289782":"software","Q2457695":"book","Q7398010":"software","Q7413163":"software","Q7530055":"software","Q7581717":"software","Q7622212":"software","Q7830347":"software","Q7898262":"software","Q7942447":"software","Q7946179":"software","Q7946177":"software","Q7969410":"software","Q8042478":"software","Q3833332":"book","Q3853151":"book","Q9304228":"software","Q5556711":"book","Q21232614":"broadcast","Q5987973":"book","Q5987987":"book","Q5987989":"book","Q5987995":"book","Q5987992":"book","Q176140":"event","Q1017639":"event","Q23199326":"broadcast","Q1264775":"event","Q9339163":"book","Q10444893":"book","Q10552226":"book","Q10705232":"book","Q11757815":"book","Q11757816":"book","Q11816927":"book","Q17125946":"software","Q17141457":"software","Q12827908":"book","Q14831027":"book","Q16572301":"book","Q22907913":"software","Q19385747":"book","Q31839056":"book","Q65028757":"broadcast","Q63860309":"book","Q3066678":"periodical","Q7433680":"periodical","Q86924676":"event","Q98398434":"software","Q109265150":"broadcast","Q111812458":"broadcast","Q25379509":"periodical","Q27897977":"periodical","Q798555":"motion_picture","Q853630":"motion_picture","Q1147986":"motion_picture","Q1723850":"motion_picture","Q2006167":"motion_picture","Q2600159":"motion_picture","Q3338945":"motion_picture","Q4925568":"motion_picture","Q5005883":"motion_picture","Q5551875":"motion_picture","Q5905136":"motion_picture","Q5905225":"motion_picture","Q7256286":"motion_picture","Q10663882":"motion_picture","Q10674355":"motion_picture","Q10699949":"motion_picture","Q818391":"dataset","Q972090":"dataset","Q1192634":"dataset","Q1353555":"dataset","Q16247268":"motion_picture","Q16249176":"motion_picture","Q6967152":"dataset","Q20871935":"motion_picture","Q21001900":"motion_picture","Q23044991":"motion_picture","Q209592":"standard","Q621196":"software","Q1071233":"software","Q1154770":"software","Q1196126":"software","Q2287075":"software","Q3644175":"standard","Q3724887":"software","Q4662794":"standard","Q4795957":"standard","Q6133556":"software","Q7121149":"standard","Q9374948":"software","Q24579448":"dataset","Q11894104":"standard","Q644077":"event","Q2673302":"event","Q15730690":"software","Q4326871":"event","Q16888402":"standard","Q43911809":"motion_picture","Q20181008":"standard","Q21044668":"standard","Q28169064":"software","Q30945932":"software","Q55960075":"motion_picture","Q60791959":"motion_picture","Q63208582":"motion_picture","Q63352034":"map","Q64009834":"map","Q64100970":"motion_picture","Q66344600":"map","Q63524048":"dataset","Q52229854":"software","Q87000729":"motion_picture","Q93376240":"motion_picture","Q98406740":"motion_picture","Q102133820":"motion_picture","Q102222054":"motion_picture","Q102260466":"motion_picture","Q104902646":"motion_picture","Q108387267":"motion_picture","Q109626272":"motion_picture","Q109628205":"motion_picture","Q109628222":"motion_picture","Q109653402":"motion_picture","Q109653422":"motion_picture","Q110269801":"motion_picture","Q110269805":"motion_picture","Q111207730":"map","Q112913148":"motion_picture","Q114413232":"motion_picture","Q116375520":"motion_picture","Q116378096":"motion_picture","Q116495722":"motion_picture","Q110370447":"dataset","Q110370525":"dataset","Q122873250":"motion_picture","Q123291714":"motion_picture","Q124622948":"map","Q115092120":"dataset","Q113070568":"standard","Q142554":"motion_picture","Q114444599":"software","Q1468908":"motion_picture","Q115789306":"software","Q105091183":"event","Q105742802":"event","Q4179869":"motion_picture","Q106946693":"event","Q106949524":"event","Q4870196":"motion_picture","Q5500893":"motion_picture","Q8066387":"motion_picture","Q110874846":"event","Q123554774":"software","Q10712522":"motion_picture","Q934552":"dataset","Q11863136":"motion_picture","Q165051":"song","Q849137":"song","Q2277682":"dataset","Q1451799":"song","Q1773817":"song","Q4930138":"dataset","Q121886956":"event","Q10692269":"dataset","Q374132":"software","Q381983":"software","Q906942":"standard","Q621467":"software","Q1121901":"software","Q1393965":"software","Q2092884":"software","Q2559016":"software","Q3220391":"software","Q3494258":"periodical","Q4872742":"software","Q5319037":"software","Q1167918":"book","Q1543634":"book","Q1940294":"book","Q1983504":"book","Q7699386":"standard","Q7978994":"periodical","Q8024359":"software","Q10716017":"software","Q10840017":"software","Q11201257":"software","Q11905382":"standard","Q318140":"event","Q464122":"event","Q12072005":"software","Q703565":"event","Q834550":"event","Q13218951":"standard","Q1443064":"event","Q1794431":"event","Q1938523":"event","Q1964212":"event","Q2615857":"event","Q2891405":"event","Q3812488":"event","Q4233956":"event","Q5172238":"event","Q5172243":"event","Q11825891":"book","Q5287670":"event","Q6038651":"event","Q18207539":"software","Q6961518":"event","Q18980245":"standard","Q18511644":"software","Q7094028":"software","Q11856211":"event","Q20664817":"book","Q21759196":"book","Q28401290":"software","Q18246596":"event","Q55622687":"motion_picture","Q48549789":"song","Q26197794":"event","Q26936080":"event","Q28224582":"event","Q39087739":"event","Q64006483":"song","Q64137975":"song","Q64138939":"song","Q64139024":"song","Q64140669":"song","Q64152543":"song","Q64152559":"song","Q64152582":"song","Q48847692":"event","Q48965516":"event","Q62018250":"event","Q110453587":"song","Q108463381":"software","Q109041634":"book","Q914229":"article-newspaper","Q262533":"speech","Q591055":"speech","Q2138574":"regulation","Q1851305":"speech","Q2174013":"speech","Q106957967":"event","Q119263886":"standard","Q119263888":"standard","Q3588034":"speech","Q5465451":"article-newspaper","Q109594423":"event","Q119104167":"book","Q10550001":"article-newspaper","Q114196733":"event","Q115858865":"event","Q1151259":"song","Q123141526":"book","Q123141575":"book","Q123141599":"book","Q4793302":"song","Q7023411":"song","Q122211919":"event","Q123124759":"event","Q123278123":"event","Q123980018":"event","Q13164291":"song","Q3943940":"standard","Q459123":"book","Q783459":"book","Q830588":"book","Q1029945":"book","Q1031245":"book","Q1312571":"book","Q1434296":"book","Q2070862":"book","Q3257388":"book","Q3304753":"book","Q4763437":"book","Q1113829":"event","Q2446003":"event","Q3889367":"event","Q4689559":"event","Q4689563":"event","Q4892425":"event","Q5099677":"event","Q5168470":"event","Q5710125":"event","Q5856656":"event","Q5894534":"event","Q6010352":"event","Q6082069":"event","Q6120749":"event","Q6124460":"event","Q6367753":"event","Q6473368":"event","Q6815954":"event","Q7119078":"event","Q7171374":"event","Q7826356":"event","Q9610154":"event","Q9696241":"event","Q10335626":"event","Q11537266":"event","Q11821535":"event","Q12127717":"event","Q13090411":"event","Q19894488":"book","Q16060402":"event","Q16838050":"event","Q16952930":"event","Q18208274":"event","Q18343749":"event","Q19384809":"event","Q20102416":"event","Q20708561":"event","Q22032108":"event","Q28419214":"event","Q28455188":"event","Q28456437":"event","Q30970844":"event","Q56552233":"book","Q50825276":"event","Q60762157":"event","Q60970062":"event","Q65054598":"event","Q65211209":"event","Q65250318":"event","Q124484878":"motion_picture","Q105854818":"standard","Q94238640":"event","Q98078079":"event","Q1065444":"motion_picture","Q104519300":"event","Q2914518":"map","Q121765991":"software","Q97383183":"performance","Q21816906":"article-newspaper","Q375580":"software","Q565428":"software","Q747948":"software","Q753486":"software","Q870898":"software","Q877886":"software","Q1051758":"software","Q1077784":"software","Q1165574":"software","Q1208150":"software","Q1281199":"software","Q1464880":"software","Q2845269":"software","Q2990323":"software","Q3006107":"software","Q3248226":"software","Q3720681":"software","Q4044407":"software","Q4839801":"software","Q5134353":"software","Q5227383":"software","Q5282306":"software","Q5282304":"software","Q5282305":"software","Q5282310":"software","Q5448402":"software","Q5790483":"software","Q960672":"book","Q5969185":"software","Q1754581":"book","Q1963020":"book","Q6815760":"software","Q7001229":"software","Q7246032":"software","Q7309457":"software","Q2609890":"book","Q7663741":"software","Q7702738":"software","Q7705778":"software","Q7935198":"software","Q3441003":"book","Q3940778":"book","Q5449121":"book","Q11312455":"software","Q6983518":"book","Q1431891":"event","Q13224353":"software","Q1900755":"event","Q2049337":"broadcast","Q15478230":"software","Q15544676":"software","Q15548044":"software","Q4903135":"event","Q11558987":"book","Q5164285":"event","Q5601809":"event","Q5756268":"event","Q7094118":"software","Q78888340":"dataset","Q10499647":"event","Q22665869":"software","Q25303924":"software","Q28964688":"software","Q1889001":"performance","Q2446979":"performance","Q4176760":"performance","Q28225069":"event","Q28229966":"event","Q10349334":"performance","Q74596960":"article-newspaper","Q113341385":"dataset","Q54366":"software","Q70385248":"software","Q60508070":"event","Q73899440":"software","Q44563":"book","Q108970988":"article-newspaper","Q112692334":"article-newspaper","Q91348108":"software","Q81460944":"webpage","Q94208558":"software","Q104574429":"software","Q108394321":"software","Q113723152":"software","Q113724486":"software","Q428159":"motion_picture","Q264775":"regulation","Q1664069":"regulation","Q2350092":"regulation","Q2597630":"motion_picture","Q3714574":"motion_picture","Q5421561":"regulation","Q108457699":"event","Q10536265":"regulation","Q1476656":"dataset","Q16824564":"motion_picture","Q3446221":"broadcast","Q18201787":"regulation","Q19968154":"regulation","Q124516650":"event","Q9633356":"broadcast","Q86920":"standard","Q184473":"standard","Q279979":"standard","Q772992":"standard","Q11492055":"broadcast","Q1886335":"standard","Q1917391":"software","Q2247481":"software","Q3045807":"standard","Q3045818":"standard","Q29639359":"regulation","Q7121072":"standard","Q25054829":"dataset","Q74852":"event","Q162691":"event","Q183384":"event","Q281682":"event","Q550452":"event","Q12059961":"software","Q7259584":"motion_picture","Q693033":"event","Q1006252":"event","Q1006534":"event","Q1009309":"event","Q1015058":"event","Q1017621":"event","Q7708276":"book","Q1209520":"event","Q1266453":"event","Q1308110":"event","Q1402000":"event","Q1437482":"event","Q2131698":"event","Q2273330":"event","Q2514622":"event","Q2920389":"event","Q3276328":"event","Q3307816":"event","Q3446130":"event","Q5157473":"event","Q12075815":"book","Q5550345":"event","Q17484151":"standard","Q5764313":"event","Q5894800":"event","Q6484291":"event","Q7311364":"event","Q7433480":"event","Q10281773":"event","Q10403935":"event","Q10403945":"event","Q12274430":"event","Q12713932":"event","Q25103897":"standard","Q26853769":"standard","Q28206733":"standard","Q18649141":"event","Q24905495":"event","Q28398102":"event","Q30687934":"event","Q54328426":"broadcast","Q60776281":"broadcast","Q61723737":"software","Q51224536":"event","Q56298192":"event","Q56303301":"event","Q33057":"standard","Q42332":"standard","Q27731":"software","Q60075825":"event","Q97170784":"map","Q70345832":"book","Q587":"event","Q104844527":"regulation","Q106944204":"regulation","Q107910355":"regulation","Q109038294":"regulation","Q110469028":"regulation","Q111317919":"regulation","Q112635489":"regulation","Q105971777":"broadcast","Q124711426":"map","Q1103298":"regulation","Q1341051":"motion_picture","Q1876289":"regulation","Q2514015":"legal_case","Q111945331":"book","Q3059309":"motion_picture","Q4313396":"regulation","Q108572645":"event","Q7939813":"regulation","Q10545248":"regulation","Q811525":"dataset","Q1291275":"dataset","Q2301073":"dataset","Q13102199":"regulation","Q664529":"broadcast","Q16041022":"regulation","Q19916405":"regulation","Q124478099":"event","Q1140550":"standard","Q3509361":"software","Q4866001":"standard","Q5535082":"dataset","Q1431020":"book","Q2259701":"book","Q9350464":"software","Q5263804":"book","Q6839276":"book","Q256611":"event","Q329547":"event","Q330094":"event","Q395234":"event","Q698718":"event","Q1150737":"event","Q1518216":"event","Q1519234":"event","Q1571145":"event","Q1638401":"event","Q1694159":"event","Q1939218":"event","Q3044959":"legislation","Q2751586":"event","Q2880384":"event","Q2880395":"event","Q2992205":"event","Q4780960":"event","Q4863772":"event","Q5046763":"event","Q5152891":"event","Q5249494":"event","Q5326943":"event","Q6006149":"event","Q6518229":"event","Q6792070":"event","Q13431159":"book","Q6917734":"event","Q7261293":"event","Q7314811":"event","Q15806966":"book","Q17033517":"book","Q10548388":"event","Q10728760":"event","Q47009776":"motion_picture","Q15852215":"event","Q15911176":"event","Q15911188":"event","Q15913221":"event","Q15913970":"event","Q15914386":"event","Q19906929":"event","Q20057842":"event","Q26248668":"event","Q64705787":"motion_picture","Q31887323":"event","Q31887347":"event","Q31887391":"event","Q37055":"regulation","Q107236680":"periodical","Q107259292":"periodical","Q48896962":"event","Q56272651":"event","Q86661322":"dataset","Q38801":"book","Q65194691":"event","Q103925569":"motion_picture","Q104765957":"motion_picture","Q31847":"event","Q108001496":"regulation","Q109046280":"regulation","Q109733685":"motion_picture","Q109733760":"motion_picture","Q116212252":"motion_picture","Q116778237":"motion_picture","Q100737424":"standard","Q102260188":"book","Q96739634":"event","Q97695005":"event","Q97695011":"event","Q97695021":"event","Q97695043":"event","Q116275715":"software","Q105412510":"event","Q123784580":"software","Q123850479":"software","Q124465567":"software","Q124465832":"software","Q124608634":"software","Q124650961":"software","Q331810":"song","Q523896":"song","Q820119":"song","Q896981":"song","Q1134562":"song","Q1137588":"song","Q2047694":"song","Q2997685":"song","Q4528554":"song","Q5124548":"song","Q5747942":"song","Q6039799":"song","Q6109162":"song","Q5163109":"broadcast","Q7487815":"song","Q7975176":"song","Q7248875":"broadcast","Q10926108":"song","Q11345830":"song","Q11519400":"song","Q11667939":"song","Q11674305":"song","Q11741414":"song","Q12104691":"song","Q12113375":"song","Q317671":"software","Q12777807":"song","Q1129064":"software","Q15631798":"song","Q16937368":"song","Q1003292":"book","Q18406550":"song","Q17058481":"broadcast","Q20589414":"song","Q20621902":"song","Q9350471":"software","Q811531":"event","Q827135":"event","Q2254537":"event","Q2292353":"event","Q2315901":"event","Q2647651":"event","Q10882176":"book","Q28135297":"song","Q17078319":"software","Q29425426":"song","Q14505357":"event","Q28856262":"book","Q724321":"performance","Q810540":"performance","Q2048167":"performance","Q5156381":"performance","Q14867674":"performance","Q21998361":"performance","Q23691":"song","Q59157831":"dataset","Q55807048":"event","Q44854":"event","Q86730311":"book","Q111600206":"song","Q116483777":"song","Q120403950":"song","Q111735921":"software","Q125056553":"song","Q104704378":"event","Q121775261":"software","Q324254":"dataset","Q550089":"dataset","Q850950":"dataset","Q1982918":"dataset","Q2941628":"dataset","Q193228":"standard","Q492788":"standard","Q570951":"standard","Q913556":"standard","Q965758":"standard","Q1149757":"standard","Q1531561":"standard","Q2082387":"standard","Q2082398":"standard","Q2471001":"standard","Q2100811":"software","Q2598552":"standard","Q3267095":"standard","Q17098751":"dataset","Q430382":"book","Q5970295":"standard","Q843096":"book","Q1124113":"book","Q1250905":"book","Q2309816":"book","Q2712867":"book","Q9006368":"standard","Q4736179":"book","Q5548476":"book","Q11236760":"software","Q6550961":"book","Q6949895":"book","Q12765697":"software","Q28208970":"dataset","Q3587379":"event","Q11356847":"book","Q11606415":"book","Q5424533":"event","Q12783918":"book","Q6363219":"event","Q13125666":"book","Q13126435":"book","Q33002955":"dataset","Q14941935":"book","Q16523070":"book","Q17500685":"book","Q18629653":"book","Q13146986":"legislation","Q13626312":"event","Q24890026":"book","Q25110990":"event","Q25111849":"event","Q200944":"manuscript","Q587240":"manuscript","Q727870":"manuscript","Q1106158":"manuscript","Q1473669":"manuscript","Q2981680":"manuscript","Q2981686":"manuscript","Q2981685":"manuscript","Q74262765":"periodical","Q108832896":"map","Q106013762":"song","Q106013767":"song","Q110231205":"song","Q104416770":"software","Q109314493":"book","Q965136":"map","Q116851189":"software","Q2788747":"map","Q109933097":"review","Q109042014":"event","Q116551501":"book","Q121743529":"software","Q122538751":"dataset","Q1067173":"dataset","Q1413174":"dataset","Q118140112":"review","Q2346564":"broadcast","Q4936468":"broadcast","Q20183934":"motion_picture","Q11540912":"dataset","Q300036":"standard","Q758853":"standard","Q959675":"standard","Q3415066":"standard","Q5155687":"software","Q5157587":"software","Q66465827":"periodical","Q2874230":"book","Q7829327":"software","Q253005":"review","Q285311":"review","Q649912":"review","Q1884449":"review","Q796919":"event","Q880550":"event","Q946865":"event","Q1462531":"event","Q1530126":"event","Q1685500":"event","Q1800765":"event","Q3445262":"review","Q2016831":"event","Q2132936":"event","Q2321131":"event","Q2981565":"legislation","Q3378155":"event","Q3453305":"event","Q5381371":"review","Q4020880":"performance","Q15614021":"software","Q17461444":"software","Q13495699":"legislation","Q10713161":"event","Q11959840":"event","Q11985118":"performance","Q12152558":"event","Q24887470":"software","Q13473502":"event","Q25104632":"software","Q25421947":"software","Q27966959":"standard","Q28134845":"software","Q17052147":"event","Q18235714":"event","Q23531302":"event","Q28793984":"event","Q68502884":"map","Q33100742":"event","Q33100743":"event","Q33100746":"event","Q33100744":"event","Q33100745":"event","Q33100750":"event","Q33100748":"event","Q107337277":"periodical","Q55101335":"software","Q60678830":"software","Q66003840":"event","Q856566":"periodical","Q1368848":"periodical","Q96418780":"dataset","Q4857987":"periodical","Q84368158":"software","Q7572780":"periodical","Q88885188":"software","Q97357571":"software","Q99898668":"software","Q124423304":"map","Q88652774":"event","Q88787473":"event","Q21834496":"periodical","Q115555599":"dataset","Q115555635":"dataset","Q106471136":"software","Q108273448":"software","Q113709736":"software","Q113953819":"software","Q109358931":"book","Q102840250":"event","Q1702772":"map","Q2035351":"map","Q2204393":"map","Q2325507":"map","Q2426254":"map","Q108178885":"event","Q115216305":"book","Q111588288":"event","Q123965044":"standard","Q10438653":"map","Q121437401":"book","Q512410":"song","Q854775":"song","Q12985461":"song","Q1060750":"software","Q2252405":"software","Q3632939":"software","Q5628978":"standard","Q756926":"book","Q65581442":"periodical","Q6719091":"software","Q2380704":"book","Q3243552":"periodical","Q3347874":"book","Q5302213":"book","Q6045978":"book","Q846330":"event","Q1273585":"event","Q73376505":"periodical","Q2443004":"event","Q2943071":"event","Q10915592":"book","Q11793314":"book","Q10544131":"event","Q10910823":"event","Q22906785":"standard","Q18461548":"book","Q30252134":"book","Q42722531":"standard","Q106162750":"periodical","Q106661426":"periodical","Q108440863":"periodical","Q110229041":"periodical","Q123374659":"periodical","Q124435065":"periodical","Q60995300":"book","Q60849856":"event","Q5633421":"periodical","Q5953270":"periodical","Q6659258":"periodical","Q113146018":"map","Q12016800":"periodical","Q15206730":"periodical","Q18680105":"periodical","Q100165244":"standard","Q100165439":"standard","Q100165480":"standard","Q100165626":"standard","Q100165780":"standard","Q100166033":"standard","Q96405248":"book","Q100740737":"periodical","Q107569025":"standard","Q104213567":"periodical","Q104530887":"book","Q106771443":"periodical","Q787397":"map","Q106223176":"event","Q106351734":"event","Q6822263":"article-journal","Q110295041":"broadcast","Q117168346":"book","Q117474355":"book","Q303064":"broadcast","Q3347279":"song","Q3655722":"song","Q15715669":"map","Q3683985":"song","Q2123557":"broadcast","Q17007303":"article-journal","Q3982914":"broadcast","Q5227671":"broadcast","Q124539661":"event","Q213057":"software","Q365069":"software","Q951059":"standard","Q645154":"software","Q24035270":"report","Q1188200":"software","Q1190017":"software","Q1235226":"software","Q1261854":"software","Q1326063":"software","Q1386484":"software","Q2132880":"software","Q3530050":"software","Q448728":"book","Q5353026":"software","Q5988403":"software","Q1188882":"book","Q1572966":"book","Q18385907":"broadcast","Q2880274":"book","Q21190411":"broadcast","Q10590816":"software","Q10659464":"software","Q79229":"event","Q841817":"event","Q842208":"event","Q846240":"event","Q1033959":"event","Q1072130":"event","Q1384277":"event","Q1675174":"event","Q14954905":"standard","Q3376762":"event","Q4410904":"event","Q4578317":"event","Q4632203":"event","Q4632204":"event","Q4634325":"event","Q4639903":"event","Q8142081":"event","Q14943256":"book","Q15098113":"book","Q15649725":"book","Q17009185":"book","Q17354893":"book","Q13403346":"event","Q20977863":"event","Q31197476":"book","Q39049594":"software","Q66605818":"map","Q70470634":"article-journal","Q55648996":"book","Q60964597":"software","Q12546":"event","Q77463483":"book","Q96678733":"broadcast","Q99524531":"broadcast","Q102189017":"song","Q109350090":"song","Q122781235":"regulation","Q110402216":"dataset","Q1423499":"map","Q2046883":"map","Q3799185":"motion_picture","Q7249835":"motion_picture","Q7905668":"motion_picture","Q124711597":"software","Q190635":"dataset","Q526334":"dataset","Q11669289":"map","Q1553298":"dataset","Q12777093":"map","Q124651911":"song","Q8143719":"dataset","Q10687531":"dataset","Q11581610":"dataset","Q223653":"software","Q860737":"software","Q1777301":"standard","Q19309746":"dataset","Q19312063":"dataset","Q844993":"song","Q1033831":"song","Q1087459":"song","Q1147354":"song","Q1191609":"book","Q1191618":"book","Q1246452":"song","Q1293057":"song","Q1337498":"song","Q1523875":"song","Q1564657":"song","Q1823870":"book","Q2127044":"song","Q2379556":"song","Q2478421":"song","Q3196335":"book","Q4127418":"song","Q4138449":"song","Q4179926":"song","Q4700148":"book","Q10860882":"standard","Q5956747":"song","Q5956766":"song","Q25036778":"dataset","Q7247338":"song","Q7302395":"song","Q4606535":"event","Q11412438":"book","Q7994034":"event","Q15077373":"song","Q21592115":"software","Q11424132":"event","Q11642595":"event","Q15116717":"event","Q28126922":"software","Q16694404":"event","Q56683168":"map","Q30324607":"song","Q38252996":"software","Q42525933":"song","Q61314299":"dataset","Q62681279":"dataset","Q63254493":"dataset","Q65118638":"dataset","Q61456428":"software","Q63035828":"software","Q64139617":"software","Q66503439":"software","Q92055857":"map","Q56378186":"event","Q63243766":"song","Q36669":"standard","Q64140460":"song","Q66341057":"song","Q61051565":"event","Q97495872":"dataset","Q86442388":"software","Q87906572":"software","Q95737275":"software","Q101525913":"song","Q107636679":"software","Q107636937":"software","Q107636953":"software","Q107494231":"song","Q367664":"regulation","Q114929183":"software","Q638422":"regulation","Q899388":"regulation","Q1538700":"regulation","Q116897998":"software","Q116908669":"software","Q116939012":"software","Q3016901":"regulation","Q6822246":"regulation","Q7033546":"regulation","Q110598376":"legislation","Q7999883":"article-newspaper","Q6934459":"speech","Q111286586":"event","Q463244":"dataset","Q221934":"song","Q117466398":"event","Q15631043":"speech","Q229371":"software","Q337820":"software","Q762157":"software","Q860760":"software","Q893012":"software","Q1155404":"software","Q2351962":"software","Q65197870":"periodical","Q524880":"book","Q5583816":"software","Q6694724":"software","Q4459737":"book","Q6487585":"book","Q186982":"event","Q6901667":"book","Q376596":"event","Q784360":"event","Q794589":"event","Q1068013":"event","Q13039854":"standard","Q1310322":"event","Q1331385":"event","Q1381907":"event","Q1532699":"event","Q1582987":"event","Q13101356":"software","Q1847746":"event","Q2142146":"event","Q2694643":"event","Q2787772":"event","Q2946405":"event","Q3275080":"event","Q3334022":"event","Q3335018":"event","Q3521411":"event","Q3540303":"event","Q15008073":"software","Q3922366":"event","Q15590034":"software","Q15623421":"software","Q11266200":"book","Q11281294":"book","Q11376026":"book","Q11410949":"book","Q5044625":"event","Q5118083":"event","Q5199360":"event","Q6000326":"event","Q8422162":"event","Q10269946":"event","Q10570370":"event","Q11433354":"event","Q11942845":"event","Q12603850":"event","Q48780629":"regulation","Q14404796":"event","Q26726974":"software","Q17014283":"event","Q29642901":"standard","Q18378849":"event","Q30716274":"software","Q47904718":"software","Q43792381":"event","Q61943417":"event","Q65089944":"event","Q65295320":"event","Q124610885":"map","Q100744571":"software","Q107636960":"software","Q108012985":"software","Q109417722":"software","Q111369260":"software","Q113871081":"software","Q113884067":"software","Q169672":"motion_picture","Q622310":"motion_picture","Q111972375":"book","Q3072042":"motion_picture","Q3745429":"motion_picture","Q5104880":"motion_picture","Q111449198":"event","Q121370188":"book","Q116200339":"event","Q56250671":"periodical","Q124099142":"event","Q604227":"software","Q976308":"software","Q3315268":"software","Q3696233":"software","Q4043482":"software","Q4052544":"software","Q1759242":"book","Q7628422":"software","Q3066620":"book","Q8436198":"standard","Q10314140":"software","Q10391618":"software","Q10850854":"software","Q11243559":"software","Q11373908":"software","Q11498522":"software","Q11565508":"software","Q500415":"event","Q7221392":"book","Q117353741":"performance","Q2086428":"event","Q2618461":"event","Q2910464":"event","Q3287294":"event","Q14905958":"software","Q3525798":"event","Q3586928":"event","Q3586936":"event","Q3586944":"event","Q3586951":"event","Q3586948":"event","Q3586952":"event","Q15079042":"software","Q4128686":"event","Q4542969":"event","Q5255876":"event","Q7232803":"event","Q7603687":"event","Q7603688":"event","Q7603689":"event","Q21125433":"software","Q10271642":"event","Q11433649":"event","Q11774581":"event","Q16481410":"event","Q17600598":"event","Q22669627":"event","Q22696329":"event","Q22696407":"event","Q389993":"performance","Q624595":"performance","Q24041602":"event","Q1664535":"performance","Q24179252":"event","Q24180038":"event","Q24183631":"event","Q24183876":"event","Q24292618":"event","Q24713572":"event","Q24714393":"event","Q24715318":"event","Q24715377":"event","Q24719004":"event","Q25343640":"event","Q25476949":"event","Q25530424":"event","Q25531065":"event","Q3149508":"performance","Q6168370":"performance","Q50419724":"standard","Q63951851":"software","Q59342621":"book","Q55727728":"event","Q104176285":"motion_picture","Q111306560":"motion_picture","Q113671041":"motion_picture","Q79695687":"event","Q106405444":"broadcast","Q106707362":"broadcast","Q106720947":"broadcast","Q106720951":"broadcast","Q106720953":"broadcast","Q106720957":"broadcast","Q106720962":"broadcast","Q106720960":"broadcast","Q106779416":"broadcast","Q106779606":"broadcast","Q106779676":"broadcast","Q103987316":"standard","Q140182":"regulation","Q949149":"regulation","Q1774427":"regulation","Q3395051":"regulation","Q106508963":"event","Q108101453":"event","Q5391807":"regulation","Q5475516":"regulation","Q1035228":"dataset","Q11853556":"regulation","Q11858900":"regulation","Q11866314":"regulation","Q11882011":"regulation","Q11884774":"regulation","Q11898741":"regulation","Q11900925":"regulation","Q118109757":"event","Q4089698":"song","Q4217030":"song","Q19576327":"regulation","Q20380234":"regulation","Q483318":"software","Q726761":"software","Q1963488":"software","Q2141611":"software","Q4885200":"software","Q5073739":"software","Q1327461":"book","Q30589340":"regulation","Q6963607":"software","Q2449692":"book","Q7784254":"software","Q8039031":"software","Q3518969":"book","Q9251401":"software","Q5441632":"book","Q11287765":"software","Q12072023":"software","Q722029":"event","Q7321644":"book","Q749501":"event","Q12313595":"software","Q1224988":"event","Q7890265":"book","Q1894011":"event","Q11239353":"book","Q11289819":"book","Q12585938":"book","Q12900222":"book","Q11497635":"event","Q26929719":"book","Q31087013":"book","Q29535030":"event","Q67414381":"motion_picture","Q69938020":"regulation","Q62687452":"dataset","Q42374984":"event","Q66089259":"software","Q94":"software","Q48493":"software","Q64601":"software","Q71176790":"software","Q85920708":"dataset","Q87993016":"software","Q116778904":"motion_picture","Q96400880":"software","Q111733012":"dataset","Q110614376":"song","Q124844622":"regulation","Q124844623":"regulation","Q124844624":"regulation","Q106538545":"software","Q105084871":"book","Q113953815":"software","Q184973":"speech","Q105300221":"legislation","Q2991565":"motion_picture","Q106145581":"event","Q106691645":"event","Q107394349":"event","Q112147558":"event","Q113627831":"legislation","Q193605":"song","Q118744374":"legislation","Q118832658":"legislation","Q4584145":"song","Q120358902":"legislation","Q121078469":"event","Q6702828":"song","Q124391361":"legislation","Q124608522":"legislation","Q900570":"standard","Q469510":"legislation","Q1006074":"legislation","Q1006082":"legislation","Q1256685":"legislation","Q1307415":"legislation","Q2364787":"legislation","Q3176490":"legislation","Q3241075":"legislation","Q3241095":"legislation","Q3241096":"legislation","Q3258695":"legislation","Q3455841":"legislation","Q4676706":"legislation","Q4677783":"legislation","Q4781740":"legislation","Q4769661":"event","Q6560515":"legislation","Q7345933":"legislation","Q7575531":"legislation","Q7575537":"legislation","Q7575552":"legislation","Q7575553":"legislation","Q7575566":"legislation","Q7575567":"legislation","Q7575569":"legislation","Q10682995":"legislation","Q10289910":"event","Q10857741":"legislation","Q10401114":"event","Q15983930":"legislation","Q15985269":"legislation","Q15985279":"legislation","Q15985276":"legislation","Q15985282":"legislation","Q16117291":"legislation","Q16242991":"legislation","Q16712433":"legislation","Q16892120":"legislation","Q16987235":"legislation","Q18009431":"legislation","Q18009506":"legislation","Q18009569":"legislation","Q18009587":"legislation","Q18009650":"legislation","Q18336255":"legislation","Q18673040":"legislation","Q20898399":"legislation","Q22995925":"legislation","Q22995958":"legislation","Q23000117":"legislation","Q23000122":"legislation","Q25041427":"legislation","Q25534427":"event","Q25541728":"event","Q25547854":"event","Q26218967":"event","Q26252880":"event","Q26260402":"event","Q28115446":"legislation","Q28333430":"event","Q28963415":"event","Q33283984":"legislation","Q41708957":"event","Q45753703":"legislation","Q124310230":"periodical","Q55650344":"legislation","Q56188162":"event","Q56188227":"event","Q56731284":"legislation","Q56867760":"event","Q1741521":"periodical","Q13510398":"periodical","Q91262953":"legislation","Q91267389":"legislation","Q91586285":"legislation","Q93945101":"legislation","Q96619653":"legislation","Q97480682":"legislation","Q100271152":"legislation","Q100324105":"legislation","Q109018776":"book","Q109517916":"book","Q544025":"regulation","Q104595587":"event","Q105517027":"event","Q108044854":"event","Q108209958":"event","Q116164501":"book","Q110707176":"event","Q113288427":"event","Q115369238":"event","Q115525307":"event","Q122202325":"book","Q116726291":"event","Q3656492":"song","Q11497177":"song","Q185149":"standard","Q12105422":"song","Q300080":"standard","Q506883":"software","Q13216934":"song","Q1449266":"software","Q61856389":"periodical","Q2563748":"software","Q4229799":"software","Q1813013":"book","Q7094057":"software","Q5310485":"book","Q270706":"event","Q277436":"event","Q336416":"event","Q446354":"event","Q488051":"event","Q548126":"event","Q618439":"event","Q649352":"event","Q802614":"event","Q838447":"event","Q7939457":"book","Q1346367":"event","Q1401527":"event","Q1401550":"event","Q1401559":"event","Q1597273":"event","Q2097974":"event","Q2438476":"event","Q2667252":"event","Q3092938":"event","Q10288146":"book","Q10326821":"book","Q3896887":"event","Q3918004":"event","Q4158109":"event","Q4390543":"event","Q4493539":"event","Q4579115":"event","Q4996825":"event","Q5188683":"event","Q5440532":"event","Q6430768":"event","Q7141166":"event","Q7257831":"event","Q7257839":"event","Q7458280":"event","Q7942192":"event","Q7979074":"event","Q16735857":"book","Q11582668":"event","Q11588597":"event","Q12757709":"event","Q14515312":"event","Q14523556":"event","Q14914657":"event","Q16540254":"event","Q16968855":"event","Q18415560":"event","Q29043729":"book","Q25036818":"event","Q27332385":"event","Q54019365":"book","Q58898754":"book","Q58900768":"book","Q65807474":"software","Q59858687":"event","Q2904122":"manuscript","Q60979289":"event","Q61473833":"event","Q63642380":"event","Q11446810":"manuscript","Q57598":"event","Q95987576":"standard","Q111192422":"song","Q115678838":"dataset","Q95509700":"event","Q99701164":"event","Q124336711":"song","Q198721":"regulation","Q1314756":"regulation","Q1519097":"regulation","Q1519101":"regulation","Q104847451":"event","Q2407439":"regulation","Q3579157":"regulation","Q5504090":"regulation","Q108490788":"event","Q8037702":"regulation","Q10478252":"regulation","Q113540500":"event","Q113777831":"event","Q11459602":"regulation","Q11581032":"regulation","Q17173058":"regulation","Q17224447":"regulation","Q121263701":"event","Q19165510":"regulation","Q19165593":"regulation","Q122828950":"event","Q23001715":"regulation","Q2646388":"book","Q7843207":"software","Q5378679":"book","Q5644122":"book","Q6081383":"book","Q265424":"legislation","Q282317":"legislation","Q454967":"legislation","Q6806890":"book","Q843713":"legislation","Q458867":"event","Q877838":"event","Q903900":"event","Q981258":"event","Q7977019":"book","Q1674822":"event","Q2354449":"event","Q3042975":"legislation","Q3355475":"legislation","Q4110538":"event","Q5030450":"event","Q12218853":"book","Q6774303":"event","Q6974940":"event","Q7054569":"event","Q7207426":"event","Q7207424":"event","Q7207425":"event","Q7207430":"event","Q7207428":"event","Q7207429":"event","Q7271518":"event","Q7271517":"event","Q7566622":"event","Q10871996":"legislation","Q17210597":"book","Q11486004":"event","Q13125741":"event","Q48743652":"regulation","Q15694288":"event","Q22949068":"book","Q24023913":"book","Q18204596":"event","Q20602851":"event","Q24915559":"event","Q61002900":"regulation","Q30694283":"legislation","Q67421629":"regulation","Q53463":"regulation","Q48995725":"book","Q54965898":"book","Q67992224":"book","Q70224924":"book","Q70228467":"book","Q65051801":"event","Q65076860":"event","Q67824596":"event","Q107524369":"regulation","Q110496930":"regulation","Q110496933":"regulation","Q85988047":"book","Q115754897":"regulation","Q104775758":"broadcast","Q106772852":"broadcast","Q85787994":"event","Q85793779":"event","Q109363801":"broadcast","Q123337111":"regulation","Q95998597":"legislation","Q99237777":"event","Q123126551":"broadcast","Q102252422":"event","Q1575082":"regulation","Q2137852":"motion_picture","Q105984592":"legislation","Q3072049":"motion_picture","Q5258881":"motion_picture","Q109659723":"legislation","Q111086944":"event","Q122665943":"software","Q2799345":"dataset","Q6361539":"song","Q7892363":"broadcast","Q136218":"standard","Q194831":"standard","Q270131":"standard","Q592312":"standard","Q784695":"standard","Q1245659":"software","Q3491832":"dataset","Q4298914":"standard","Q3929429":"software","Q4880037":"software","Q5357228":"software","Q19307174":"dataset","Q6055545":"software","Q1616547":"dataset","Q7316614":"software","Q7574179":"software","Q202298":"event","Q291768":"event","Q577698":"event","Q842375":"event","Q1374808":"event","Q1798887":"event","Q2331350":"event","Q2606657":"event","Q16910955":"standard","Q5595257":"event","Q18206444":"software","Q10567340":"event","Q10874739":"event","Q10915676":"event","Q20540663":"book","Q27824016":"standard","Q23073925":"event","Q60393504":"broadcast","Q47405126":"event","Q52495799":"event","Q52495817":"event","Q52495833":"event","Q52495848":"event","Q52495868":"event","Q52495889":"event","Q52495911":"event","Q52495931":"event","Q52495954":"event","Q52495976":"event","Q52496004":"event","Q52496024":"event","Q52496048":"event","Q52496070":"event","Q52496093":"event","Q52496122":"event","Q52496144":"event","Q52496166":"event","Q52496187":"event","Q52496205":"event","Q52496225":"event","Q52496248":"event","Q52496270":"event","Q52496292":"event","Q52496308":"event","Q52496323":"event","Q52496343":"event","Q52496363":"event","Q52496390":"event","Q52496410":"event","Q52496435":"event","Q52496456":"event","Q52496474":"event","Q52496497":"event","Q52496519":"event","Q52496540":"event","Q52496564":"event","Q52496587":"event","Q52496610":"event","Q124799354":"dataset","Q60485339":"event","Q61748019":"event","Q65770283":"event","Q67170008":"event","Q27013":"event","Q84324516":"software","Q87409986":"software","Q108871626":"broadcast","Q119080592":"broadcast","Q120097312":"broadcast","Q109996742":"software","Q115214659":"software","Q104223305":"event","Q2563573":"regulation","Q1519850":"report","Q111507776":"event","Q118151445":"book","Q10718808":"report","Q1865123":"dataset","Q1916557":"dataset","Q2560532":"dataset","Q2881060":"dataset","Q116702253":"event","Q116742487":"event","Q4117139":"dataset","Q117827279":"event","Q4765098":"dataset","Q119173994":"event","Q7600527":"dataset","Q5167153":"broadcast","Q10481249":"dataset","Q124663876":"event","Q131508":"software","Q167035":"software","Q330268":"software","Q1224406":"standard","Q974828":"software","Q1414510":"software","Q4011359":"software","Q18334492":"dataset","Q5156780":"software","Q375480":"book","Q5903254":"software","Q1213555":"book","Q1227364":"software","Q1347298":"book","Q1464287":"book","Q1591238":"book","Q7598213":"standard","Q19845560":"broadcast","Q69662460":"periodical","Q4903126":"book","Q4941730":"book","Q21664088":"broadcast","Q6806507":"book","Q359436":"event","Q657438":"event","Q7523718":"book","Q7630614":"book","Q2142196":"event","Q28146196":"dataset","Q28455553":"dataset","Q29043181":"dataset","Q10527146":"book","Q4344807":"event","Q4903787":"event","Q12311624":"book","Q18343316":"software","Q33270056":"dataset","Q11513787":"event","Q16069920":"event","Q16682549":"event","Q25038259":"book","Q25378280":"book","Q29032653":"event","Q55341040":"dataset","Q59157155":"dataset","Q56408643":"book","Q60550487":"book","Q84863712":"dataset","Q86470233":"dataset","Q87328118":"dataset","Q70328030":"book","Q70335128":"book","Q90404711":"dataset","Q90404756":"dataset","Q14930":"event","Q78794084":"book","Q78795953":"book","Q5100946":"periodical","Q102393957":"dataset","Q114201660":"regulation","Q105195034":"dataset","Q95988573":"software","Q85798319":"event","Q112155851":"dataset","Q112247074":"dataset","Q110616917":"broadcast","Q115739609":"dataset","Q98388833":"event","Q120732784":"broadcast","Q124366638":"dataset","Q121438606":"broadcast","Q325668":"regulation","Q1898445":"map","Q108146364":"event","Q108784175":"event","Q120805201":"standard","Q110550201":"event","Q110886488":"event","Q110938479":"event","Q110987275":"event","Q110994302":"event","Q110994327":"event","Q110994647":"event","Q110994669":"event","Q111089634":"event","Q123615427":"software","Q3873190":"dataset","Q124608593":"book","Q11935070":"broadcast","Q1924634":"standard","Q2141903":"standard","Q2256933":"software","Q207686":"book","Q587327":"book","Q1341659":"book","Q1480871":"book","Q1588992":"book","Q1640986":"book","Q1643411":"book","Q2790785":"book","Q4419263":"book","Q4426598":"book","Q5277221":"book","Q10658696":"standard","Q6031596":"book","Q6705667":"dataset","Q244753":"event","Q725909":"event","Q1547505":"event","Q1549691":"event","Q2301786":"event","Q2661314":"event","Q4356072":"event","Q11452214":"book","Q11498787":"book","Q11573112":"book","Q12080149":"book","Q5647565":"event","Q20110245":"book","Q20988805":"book","Q27996264":"standard","Q28049403":"standard","Q16565592":"event","Q27042445":"book","Q27042463":"book","Q27042475":"book","Q28792435":"book","Q66072202":"regulation","Q41436524":"book","Q1506107":"entry","Q63483382":"broadcast","Q47491518":"event","Q66362671":"dataset","Q66364343":"dataset","Q66368876":"dataset","Q104406848":"dataset","Q104406877":"dataset","Q102380136":"broadcast","Q106647671":"song","Q106603795":"broadcast","Q98713463":"standard","Q98843338":"standard","Q105599390":"standard","Q105599400":"standard","Q122085747":"dataset","Q122085851":"dataset","Q98095275":"event","Q98381855":"event","Q98381912":"event","Q111755701":"standard","Q101580057":"event","Q101580062":"event","Q1009239":"regulation","Q1150182":"regulation","Q1969266":"regulation","Q110883155":"event","Q112844317":"event","Q112893109":"event","Q112915372":"event","Q116729870":"event","Q123166106":"legislation","Q124982561":"event","Q846292":"standard","Q932442":"standard","Q61143605":"periodical","Q3458976":"software","Q5454233":"software","Q737148":"book","Q746831":"book","Q778492":"book","Q856663":"book","Q985039":"book","Q997702":"book","Q1052496":"book","Q1321402":"book","Q1499601":"dataset","Q1506883":"book","Q7892471":"standard","Q3033681":"song","Q3109904":"book","Q3276281":"book","Q4096822":"book","Q4646933":"book","Q5988980":"book","Q186240":"legislation","Q11198093":"software","Q11224960":"software","Q1936882":"review","Q7313471":"book","Q1307047":"legislation","Q930744":"event","Q1231564":"event","Q8066481":"book","Q3533504":"review","Q2229500":"event","Q4202178":"event","Q16240886":"standard","Q11353378":"book","Q11371981":"book","Q11377649":"book","Q11547089":"book","Q5453341":"event","Q18395582":"software","Q18844946":"software","Q17049321":"book","Q17217725":"book","Q13548138":"legislation","Q13103474":"event","Q86585984":"periodical","Q15847890":"event","Q17156929":"event","Q17624895":"event","Q19365777":"event","Q27042477":"book","Q27042480":"book","Q27042484":"book","Q27042489":"book","Q27042505":"book","Q27042517":"book","Q27042524":"book","Q104526260":"periodical","Q104537001":"periodical","Q88307738":"regulation","Q1738371":"periodical","Q78904686":"book","Q11256364":"periodical","Q15695196":"periodical","Q93616224":"book","Q96482969":"event","Q1662452":"motion_picture","Q117456349":"standard","Q117456477":"standard","Q117456796":"standard","Q117457063":"standard","Q117457148":"standard","Q3391317":"map","Q5374928":"map","Q114835133":"dataset","Q6432005":"motion_picture","Q6729489":"motion_picture","Q121559298":"software","Q7444692":"map","Q110372993":"event","Q8036547":"map","Q1383152":"dataset","Q1567727":"dataset","Q12357500":"map","Q116952898":"event","Q3890208":"dataset","Q17121221":"map","Q124536473":"event","Q23759369":"regulation","Q771510":"standard","Q305918":"software","Q646683":"software","Q1153924":"software","Q2597575":"standard","Q2333087":"software","Q4088259":"software","Q5160310":"software","Q21050458":"dataset","Q21050912":"dataset","Q7939524":"software","Q182683":"event","Q389581":"event","Q611195":"event","Q617378":"event","Q662829":"event","Q856365":"event","Q1052229":"event","Q1070962":"event","Q1830720":"event","Q2981450":"legislation","Q2594068":"event","Q2650249":"event","Q2879007":"event","Q3123196":"event","Q3510937":"event","Q3513877":"event","Q3552770":"event","Q3569782":"event","Q4076961":"event","Q5204292":"event","Q16801521":"software","Q31841013":"dataset","Q18616720":"standard","Q25411809":"software","Q16000419":"event","Q27959794":"standard","Q27959899":"standard","Q16321184":"event","Q29650342":"standard","Q19908364":"legislation","Q21994318":"event","Q22087418":"event","Q22583090":"event","Q52506277":"dataset","Q56298002":"dataset","Q59157227":"dataset","Q106651444":"periodical","Q107181559":"periodical","Q107236883":"periodical","Q65964019":"dataset","Q49000120":"event","Q85811481":"legal_case","Q55604238":"event","Q72199233":"standard","Q577487":"periodical","Q1824338":"periodical","Q96630878":"dataset","Q78321781":"event","Q78493655":"event","Q79257255":"event","Q15253354":"periodical","Q108066527":"dataset","Q84569570":"event","Q113533521":"dataset","Q22575725":"periodical","Q111670248":"software","Q4175709":"event","Q4456967":"event","Q4686496":"event","Q4692204":"event","Q4708969":"event","Q4727824":"event","Q4765082":"event","Q4780260":"event","Q4785212":"event","Q4787328":"event","Q4790906":"event","Q4792537":"event","Q4824472":"event","Q4826093":"event","Q4837688":"event","Q4852748":"event","Q4873895":"event","Q4947296":"event","Q4948389":"event","Q4982316":"event","Q5008697":"event","Q5013416":"event","Q5014594":"event","Q5034150":"event","Q5036248":"event","Q5087832":"event","Q5095554":"event","Q5138070":"event","Q5151802":"event","Q5157891":"event","Q5157894":"event","Q5157899":"event","Q5157902":"event","Q5157900":"event","Q5157901":"event","Q5157905":"event","Q5157911":"event","Q5157914":"event","Q5157912":"event","Q5159520":"event","Q5160222":"event","Q5165375":"event","Q5166126":"event","Q5166797":"event","Q5170487":"event","Q5190775":"event","Q5209616":"event","Q5211295":"event","Q5250066":"event","Q5255323":"event","Q5266038":"event","Q5277252":"event","Q5281494":"event","Q5283926":"event","Q5305076":"event","Q5328323":"event","Q5329928":"event","Q5347112":"event","Q5424415":"event","Q5430495":"event","Q5433535":"event","Q5434248":"event","Q5442947":"event","Q5511895":"event","Q5519075":"event","Q5527037":"event","Q5528777":"event","Q5529780":"event","Q5532683":"event","Q5640688":"event","Q5958068":"event","Q5986585":"event","Q6008722":"event","Q6276334":"event","Q6506118":"event","Q6527812":"event","Q6544572":"event","Q6554944":"event","Q6670410":"event","Q6703618":"event","Q6716948":"event","Q6743164":"event","Q6757771":"event","Q6773082":"event","Q6773081":"event","Q6805421":"event","Q6808040":"event","Q6839383":"event","Q6840778":"event","Q6840891":"event","Q6843456":"event","Q6865209":"event","Q6897370":"event","Q6902646":"event","Q6918116":"event","Q6948909":"event","Q7015537":"event","Q7053866":"event","Q7060163":"event","Q7061444":"event","Q111171546":"event","Q111184234":"event","Q111328625":"event","Q111439709":"event","Q111439723":"event","Q111439762":"event","Q111439782":"event","Q111439846":"event","Q111440226":"event","Q111440426":"event","Q111440747":"event","Q111440769":"event","Q111440792":"event","Q111442198":"event","Q111442224":"event","Q111442284":"event","Q111442303":"event","Q111442314":"event","Q111442348":"event","Q111442412":"event","Q111682272":"event","Q111684737":"event","Q111722393":"event","Q111736824":"event","Q111737139":"event","Q7064385":"event","Q7077014":"event","Q7105291":"event","Q7122554":"event","Q7162748":"event","Q7164699":"event","Q7182996":"event","Q7186818":"event","Q7199258":"event","Q7209118":"event","Q7209223":"event","Q7263612":"event","Q7279902":"event","Q7296383":"event","Q7300437":"event","Q7301343":"event","Q7310859":"event","Q7389889":"event","Q7389947":"event","Q7433375":"event","Q7562715":"event","Q7578762":"event","Q7605451":"event","Q7607205":"event","Q7641902":"event","Q7653412":"event","Q7670141":"event","Q7707679":"event","Q7723696":"event","Q7843045":"event","Q7856635":"event","Q7857911":"event","Q7881914":"event","Q7884759":"event","Q7906631":"event","Q8023892":"event","Q8024867":"event","Q8027085":"event","Q8031746":"event","Q8035830":"event","Q8069136":"event","Q12302690":"event","Q13515546":"event","Q13518430":"event","Q14686742":"event","Q15274619":"event","Q16898196":"event","Q16960864":"event","Q16982847":"event","Q16989031":"event","Q16991678":"event","Q16993114":"event","Q16996002":"event","Q16996486":"event","Q17081230":"event","Q17108233":"event","Q17119244":"event","Q17148787":"event","Q17153085":"event","Q18148290":"event","Q18151872":"event","Q18160724":"event","Q19059464":"event","Q19899721":"event","Q20313154":"event","Q21015701":"event","Q21015803":"event","Q22907706":"event","Q24910363":"event","Q30589254":"event","Q55610059":"event","Q56291777":"event","Q61396974":"event","Q66439394":"event","Q97185727":"event","Q111974124":"event","Q112040106":"event","Q112040117":"event","Q112040121":"event","Q112040174":"event","Q112080263":"event","Q112080326":"event","Q112207981":"event","Q112610208":"event","Q112610259":"event","Q112610311":"event","Q112610344":"event","Q112610611":"event","Q112610633":"event","Q112611080":"event","Q112611107":"event","Q112612933":"event","Q112612996":"event","Q112613033":"event","Q112613057":"event","Q112615440":"event","Q112615470":"event","Q112615487":"event","Q112615511":"event","Q112615676":"event","Q112615789":"event","Q112616037":"event","Q112617138":"event","Q112617765":"event","Q112617847":"event","Q112617981":"event","Q112619812":"event","Q112621590":"event","Q112623631":"event","Q112623641":"event","Q112624232":"event","Q112624890":"event","Q112624917":"event","Q112625354":"event","Q112625441":"event","Q112631873":"event","Q112631955":"event","Q112632021":"event","Q112659899":"event","Q112659908":"event","Q112660044":"event","Q112660071":"event","Q112660082":"event","Q112660157":"event","Q112660178":"event","Q112660236":"event","Q116766836":"event","Q117717339":"event","Q908793":"event","Q1124227":"event","Q1801358":"event","Q1829369":"event","Q1949268":"event","Q1955280":"event","Q2083465":"event","Q2219726":"event","Q2510454":"event","Q2648125":"event","Q2737005":"event","Q2786642":"event","Q2827293":"event","Q2990952":"event","Q2992129":"event","Q2992152":"event","Q2992182":"event","Q2992200":"event","Q2992207":"event","Q3114239":"event","Q3118018":"event","Q4714147":"event","Q5781213":"event","Q6745401":"event","Q6981253":"event","Q7191247":"event","Q7686644":"event","Q8024924":"event","Q11681664":"event","Q11915199":"event","Q11915196":"event","Q16546149":"event","Q16551078":"event","Q17306806":"event","Q18610962":"event","Q18812494":"event","Q20018876":"event","Q20097137":"event","Q20104856":"event","Q20105343":"event","Q20107885":"event","Q20982552":"event","Q21006590":"event","Q26846554":"event","Q1226505":"periodical","Q1303200":"periodical","Q1853433":"periodical","Q104479499":"event","Q104722025":"event","Q104762205":"event","Q104766850":"event","Q107011713":"event","Q109450272":"event","Q111470930":"event","Q111584826":"event","Q111584978":"event","Q112183293":"event","Q10280356":"motion_picture","Q118950827":"event","Q4499034":"song","Q120536231":"event","Q7574095":"dataset","Q122617724":"event","Q10556713":"dataset","Q123953626":"event","Q1001405":"book","Q1326821":"book","Q66854024":"periodical","Q2189757":"book","Q431790":"review","Q565657":"event","Q742584":"event","Q805775":"event","Q1164275":"event","Q1477856":"event","Q1574438":"event","Q2220043":"event","Q2668769":"event","Q4992592":"event","Q5159947":"event","Q5412886":"event","Q5425721":"event","Q5583820":"event","Q7265381":"review","Q18340254":"software","Q7378254":"event","Q10340636":"event","Q10340641":"event","Q17367286":"book","Q17370328":"book","Q10846717":"event","Q11944179":"event","Q12028919":"event","Q12055493":"event","Q13746416":"event","Q14528267":"event","Q16838078":"event","Q16838082":"event","Q16848281":"event","Q17081602":"event","Q17084298":"event","Q17118636":"event","Q17147668":"event","Q17163260":"event","Q20888918":"event","Q21170330":"event","Q22119581":"event","Q24534551":"event","Q25112329":"event","Q25325299":"event","Q27074172":"event","Q30527924":"event","Q36458072":"event","Q48928609":"book","Q45107397":"event","Q50996590":"event","Q54856428":"event","Q55582398":"event","Q55611373":"event","Q55669384":"event","Q56278022":"event","Q59783540":"event","Q67200374":"book","Q61658758":"event","Q65963008":"event","Q1059863":"periodical","Q2308189":"periodical","Q79400253":"event","Q80623762":"event","Q117863659":"legal_case","Q88869722":"event","Q21886169":"periodical","Q91476283":"event","Q92634207":"event","Q117209626":"song","Q117209634":"song","Q97009790":"event","Q100799210":"event","Q100921020":"event","Q108571667":"book","Q102378764":"event","Q115037903":"standard","Q2145099":"motion_picture","Q2116256":"regulation","Q2123368":"regulation","Q2940455":"map","Q2731728":"regulation","Q105966326":"event","Q107596121":"performance","Q5769572":"motion_picture","Q110226966":"legislation","Q110623113":"legislation","Q110164464":"event","Q112897579":"event","Q113465678":"event","Q11116488":"motion_picture","Q114129330":"event","Q115302283":"event","Q115484855":"event","Q115789003":"event","Q3348148":"dataset","Q118084453":"event","Q17146139":"map","Q11304409":"song","Q4168796":"software","Q894351":"book","Q160225":"event","Q183482":"event","Q692913":"event","Q884125":"event","Q900816":"event","Q1434513":"legislation","Q1009293":"event","Q1009300":"event","Q1413715":"event","Q1471955":"event","Q2064133":"event","Q2178284":"event","Q2217238":"event","Q2340873":"event","Q2574384":"event","Q2601792":"event","Q2739382":"performance","Q2993180":"event","Q3150530":"event","Q3627146":"event","Q3699282":"event","Q4200500":"event","Q4231782":"event","Q5032602":"legislation","Q4973551":"event","Q12270042":"book","Q5783186":"event","Q5783189":"event","Q12899761":"book","Q6888313":"legislation","Q6773189":"event","Q8026379":"event","Q10428921":"legislation","Q11430090":"event","Q11555016":"event","Q12064367":"event","Q15908445":"event","Q16911184":"event","Q18351884":"event","Q18642623":"event","Q20012567":"event","Q28404863":"legislation","Q29527615":"event","Q91106056":"motion_picture","Q166489":"manuscript","Q59633182":"event","Q61983225":"event","Q65259729":"event","Q66208038":"event","Q3414785":"periodical","Q11335135":"periodical","Q87648606":"event","Q87743864":"event","Q87743931":"event","Q91852848":"legislation","Q101584341":"event","Q1134057":"regulation","Q105832563":"event","Q106215748":"event","Q113155741":"book","Q115378877":"book","Q121429222":"book","Q121432338":"book","Q121432343":"book","Q115243772":"event","Q115251140":"event","Q116196250":"event","Q116296666":"event","Q162402":"broadcast","Q244351":"broadcast","Q2155304":"broadcast","Q2333839":"broadcast","Q2645569":"broadcast","Q2687765":"broadcast","Q3071014":"broadcast","Q3443665":"broadcast","Q120111403":"event","Q4506063":"broadcast","Q240831":"software","Q734413":"software","Q735234":"book","Q1360742":"book","Q1412196":"book","Q1542815":"book","Q7392071":"software","Q10417670":"software","Q34848596":"motion_picture","Q6045975":"book","Q1006442":"event","Q1141458":"event","Q1628553":"event","Q1638500":"event","Q1989519":"event","Q2200779":"event","Q2358985":"event","Q2993090":"event","Q3001563":"event","Q3157041":"event","Q4070685":"event","Q15548100":"software","Q4843065":"event","Q17042507":"standard","Q17042510":"standard","Q5454025":"event","Q13128271":"book","Q13128274":"book","Q13128275":"book","Q13128278":"book","Q13128279":"book","Q13128276":"book","Q13128277":"book","Q13128281":"book","Q81529267":"periodical","Q11238523":"event","Q12778311":"event","Q13136233":"event","Q20594633":"book","Q20601974":"book","Q28094186":"software","Q17455048":"event","Q18650988":"event","Q25554162":"book","Q47214765":"broadcast","Q27044174":"event","Q28521056":"event","Q110378716":"periodical","Q42305379":"event","Q60345396":"software","Q122003888":"periodical","Q58542":"software","Q59108305":"event","Q60614585":"event","Q63100559":"event","Q63100584":"event","Q63100595":"event","Q63100601":"event","Q63100611":"event","Q109653474":"motion_picture","Q74516302":"event","Q122915715":"regulation","Q350514":"map","Q357674":"map","Q2708301":"regulation","Q3391101":"map","Q106380474":"event","Q108072825":"event","Q5969904":"motion_picture","Q7299948":"motion_picture","Q114779611":"event","Q114780877":"event","Q12046416":"map","Q115903283":"event","Q116196476":"event","Q123198334":"book","Q123198348":"book","Q118877498":"event","Q120647671":"event","Q21936939":"map","Q506059":"software","Q1053358":"standard","Q597523":"software","Q4165150":"software","Q746727":"book","Q839475":"book","Q1782964":"book","Q2882217":"book","Q6736813":"book","Q760113":"legislation","Q746474":"event","Q747696":"event","Q753896":"event","Q818714":"event","Q1338798":"legislation","Q884370":"event","Q956699":"event","Q2374581":"performance","Q2444065":"event","Q2707928":"event","Q2997934":"performance","Q2997943":"performance","Q3024254":"performance","Q9640316":"book","Q3059026":"performance","Q3367750":"performance","Q3899741":"event","Q4907414":"event","Q5057655":"event","Q5097823":"event","Q12347305":"book","Q12347316":"book","Q12347324":"book","Q12347403":"book","Q6356595":"event","Q7106348":"event","Q7604692":"legislation","Q7604693":"legislation","Q7828686":"event","Q16143346":"book","Q16546417":"book","Q16657177":"book","Q16832389":"book","Q11895791":"legislation","Q18358971":"book","Q21401869":"book","Q15804130":"event","Q16553259":"performance","Q19713361":"event","Q56304507":"regulation","Q25313319":"event","Q25449765":"event","Q26221084":"event","Q64152667":"broadcast","Q48800459":"legislation","Q56315594":"performance","Q58863414":"event","Q19809":"event","Q107569113":"map","Q120205248":"motion_picture","Q106559863":"broadcast","Q107404540":"broadcast","Q109042540":"broadcast","Q106811032":"software","Q106814268":"software","Q106814325":"software","Q106977724":"software","Q121370725":"broadcast","Q121388202":"broadcast","Q121393283":"broadcast","Q121426229":"broadcast","Q121503595":"broadcast","Q100532772":"legislation","Q101073445":"legislation","Q109045853":"book","Q1324620":"motion_picture","Q117230205":"standard","Q2967308":"motion_picture","Q106766084":"event","Q118225316":"webpage","Q5114239":"motion_picture","Q112968547":"event","Q369074":"dataset","Q373853":"dataset","Q2886579":"dataset","Q3423637":"dataset","Q5148657":"dataset","Q11258489":"song","Q1186723":"software","Q12150892":"broadcast","Q5176967":"software","Q366176":"book","Q471194":"book","Q814973":"book","Q5772565":"software","Q1230235":"book","Q1393917":"book","Q1426213":"book","Q1544219":"book","Q1885775":"book","Q3026037":"book","Q3308260":"book","Q3440942":"book","Q3656509":"book","Q3868755":"book","Q4903301":"book","Q5883078":"book","Q185943":"event","Q370553":"event","Q7207463":"book","Q25894883":"dataset","Q1384510":"event","Q1747884":"event","Q2463684":"event","Q2603340":"event","Q24886171":"broadcast","Q3712792":"legislation","Q25447901":"broadcast","Q3320346":"event","Q3394366":"event","Q4185688":"event","Q4337538":"event","Q4337540":"event","Q11606289":"book","Q11868106":"book","Q5357120":"event","Q12411687":"book","Q12719146":"book","Q78898322":"periodical","Q15918533":"book","Q16578771":"book","Q23442338":"software","Q23442766":"software","Q17049650":"event","Q17277546":"event","Q42708360":"dataset","Q42708704":"dataset","Q42709029":"dataset","Q42709232":"dataset","Q42709370":"dataset","Q42709877":"dataset","Q42709958":"dataset","Q29097253":"webpage","Q30930635":"book","Q55680343":"software","Q55686778":"software","Q87714739":"motion_picture","Q56683247":"review","Q56400596":"event","Q56403010":"event","Q97570383":"motion_picture","Q62609443":"event","Q699":"book","Q35856":"event","Q107389921":"regulation","Q108202384":"motion_picture","Q6541830":"periodical","Q100269041":"broadcast","Q11330880":"periodical","Q104978998":"dataset","Q116196310":"motion_picture","Q80429247":"event","Q117011365":"motion_picture","Q117011379":"motion_picture","Q106159499":"broadcast","Q107640824":"broadcast","Q115520005":"dataset","Q116673117":"dataset","Q117397082":"broadcast","Q96195146":"event","Q124039484":"dataset","Q117359736":"dataset","Q2920411":"report","Q336059":"broadcast","Q118140030":"event","Q118140655":"event","Q118141146":"event","Q118141447":"event","Q118141569":"event","Q118141637":"event","Q118141669":"event","Q118141823":"event","Q118142093":"event","Q118142142":"event","Q118142193":"event","Q118142229":"event","Q118142271":"event","Q118142303":"event","Q118142321":"event","Q118142356":"event","Q118142454":"event","Q118142544":"event","Q118142910":"event","Q118142929":"event","Q118142963":"event","Q118143058":"event","Q118143088":"event","Q118143102":"event","Q4078107":"song","Q5434357":"broadcast","Q7988576":"broadcast","Q114106":"software","Q615985":"software","Q718969":"software","Q860748":"software","Q1418000":"software","Q3307487":"software","Q3325092":"software","Q538812":"book","Q5420063":"software","Q910109":"book","Q1416320":"book","Q7263670":"standard","Q7144983":"software","Q31888058":"motion_picture","Q7692326":"software","Q7695873":"software","Q5575435":"book","Q10722474":"software","Q10871684":"software","Q11244263":"software","Q110145":"event","Q163569":"event","Q174389":"event","Q848599":"event","Q861314":"event","Q2221327":"event","Q11631973":"book","Q16856825":"dataset","Q13131052":"book","Q13131053":"book","Q30971904":"song","Q12188186":"event","Q16235120":"event","Q16931264":"event","Q28455843":"software","Q30902188":"book","Q30738156":"event","Q45115695":"software","Q65173475":"song","Q13254":"book","Q35760":"book","Q76564381":"software","Q7281":"event","Q19020":"event","Q19409":"event","Q24616":"event","Q31579":"event","Q37049":"event","Q40024":"event","Q40237":"event","Q49025":"event","Q113686924":"motion_picture","Q101720774":"broadcast","Q101761842":"broadcast","Q101863750":"broadcast","Q116784146":"motion_picture","Q116784175":"motion_picture","Q104223533":"broadcast","Q110593091":"broadcast","Q110593089":"broadcast","Q116161011":"broadcast","Q97177085":"event","Q98144562":"event","Q121388434":"broadcast","Q108852932":"book","Q182728":"event","Q194258":"event","Q212828":"event","Q223740":"event","Q268200":"event","Q279820":"event","Q286069":"event","Q290568":"event","Q306143":"event","Q311836":"event","Q317057":"event","Q341302":"event","Q369606":"event","Q382780":"event","Q384139":"event","Q431668":"event","Q453745":"event","Q483826":"event","Q496411":"event","Q496730":"event","Q497324":"event","Q501058":"event","Q538661":"event","Q566905":"event","Q580231":"event","Q594504":"event","Q595697":"event","Q655089":"event","Q685037":"event","Q693797":"event","Q708135":"event","Q708731":"event","Q732997":"event","Q785070":"event","Q795848":"event","Q844232":"event","Q845877":"event","Q873842":"event","Q889842":"event","Q891480":"event","Q910360":"event","Q915280":"event","Q919525":"event","Q979103":"event","Q1011547":"event","Q1011572":"event","Q1061172":"event","Q1075347":"event","Q1111310":"event","Q1186171":"event","Q1205048":"event","Q1205107":"event","Q1242148":"event","Q1258149":"event","Q1293276":"event","Q1321674":"event","Q1340271":"event","Q1350697":"event","Q1359606":"event","Q1381877":"event","Q1439650":"event","Q1444982":"event","Q1453733":"event","Q1502249":"event","Q1508179":"event","Q1538791":"event","Q1546403":"event","Q1604012":"event","Q1636955":"event","Q1662330":"event","Q1713744":"event","Q1762822":"event","Q1794567":"event","Q2004138":"event","Q2004286":"event","Q2111259":"event","Q2223318":"event","Q2503453":"event","Q2639596":"event","Q2652698":"event","Q2742209":"event","Q2819590":"event","Q2972198":"event","Q3000849":"event","Q3063242":"event","Q3077281":"event","Q3117505":"event","Q3394495":"event","Q3406648":"event","Q3411002":"event","Q3459735":"event","Q3492224":"event","Q3497114":"event","Q3524248":"event","Q3557042":"event","Q3595200":"event","Q3610287":"event","Q3664509":"event","Q4092704":"event","Q4887617":"event","Q4986375":"event","Q5029994":"event","Q5116459":"event","Q5338360":"event","Q5528416":"event","Q5579711":"event","Q5584324":"event","Q5781223":"event","Q6105667":"event","Q6372905":"event","Q6585353":"event","Q6911313":"event","Q7016062":"event","Q7032808":"event","Q7562850":"event","Q7567536":"event","Q7585305":"event","Q7681353":"event","Q7685420":"event","Q7743963":"event","Q7813994":"event","Q8964906":"event","Q9062425":"event","Q9350411":"event","Q10355006":"event","Q10873938":"event","Q10905949":"event","Q11024975":"event","Q11506265":"event","Q11700336":"event","Q11860564":"event","Q12004746":"event","Q12682760":"event","Q13057942":"event","Q13601550":"event","Q14094507":"event","Q15728786":"event","Q15728919":"event","Q16168215":"event","Q16184868":"event","Q16286298":"event","Q16334490":"event","Q16519317":"event","Q16621657":"event","Q16621678":"event","Q16825873":"event","Q16827140":"event","Q16941354":"event","Q17004976":"event","Q17629159":"event","Q17855191":"event","Q18015677":"event","Q18206005":"event","Q18344366":"event","Q18345192":"event","Q18350834":"event","Q18640780":"event","Q18681625":"event","Q18712434":"event","Q18772252":"event","Q19360743":"event","Q19850992":"event","Q20744362":"event","Q21484313":"event","Q21509286":"event","Q21509433":"event","Q21521989":"event","Q21522006":"event","Q21705016":"event","Q21774045":"event","Q21844795":"event","Q21866930":"event","Q21866939":"event","Q21866936":"event","Q21898124":"event","Q22074863":"event","Q22175212":"event","Q23688051":"event","Q24256194":"event","Q24885747":"event","Q25341611":"event","Q25630923":"event","Q25713816":"event","Q26340132":"event","Q28044812":"event","Q28053864":"event","Q28054019":"event","Q28054047":"event","Q28056433":"event","Q28147399":"event","Q28343115":"event","Q28343261":"event","Q28382046":"event","Q28382054":"event","Q28444913":"event","Q28468130":"event","Q28792027":"event","Q28820074":"event","Q29980402":"event","Q30106378":"event","Q172067":"motion_picture","Q104854197":"event","Q106352030":"event","Q84306075":"performance","Q106920872":"event","Q106921005":"event","Q106937985":"event","Q106938089":"event","Q106948920":"event","Q106949044":"event","Q107009012":"event","Q107507525":"event","Q108719793":"performance","Q108776412":"event","Q109012141":"event","Q110426704":"event","Q110537409":"event","Q110738365":"event","Q123531864":"standard","Q112199760":"event","Q112199812":"event","Q112209044":"event","Q112209134":"event","Q113556150":"event","Q113556155":"event","Q125097577":"software","Q836225":"dataset","Q115714464":"event","Q115913863":"event","Q115913861":"event","Q115915873":"event","Q117012057":"event","Q117747930":"event","Q118905214":"performance","Q121858230":"event","Q124366584":"event","Q124399395":"event","Q124463212":"event","Q124595252":"event","Q124637770":"event","Q2024419":"software","Q17110220":"dataset","Q3814081":"dataset","Q10536299":"software","Q1310686":"performance","Q4438157":"performance","Q5445656":"performance","Q5985273":"performance","Q30688741":"software","Q30588247":"event","Q30751050":"event","Q33540215":"event","Q39372459":"event","Q62024169":"standard","Q62024173":"standard","Q51885519":"event","Q55612365":"event","Q56276961":"event","Q56741171":"event","Q59645135":"event","Q60122889":"event","Q61744628":"event","Q64396778":"event","Q65213936":"event","Q65780861":"event","Q65782856":"event","Q69574974":"event","Q74066919":"event","Q78220196":"event","Q81427797":"event","Q81427806":"event","Q81427813":"event","Q81427817":"event","Q81427821":"event","Q81427827":"event","Q81427831":"event","Q81428011":"event","Q81565646":"event","Q85584573":"event","Q85760823":"event","Q86664707":"event","Q123348093":"legal_case","Q87827974":"event","Q87841959":"event","Q96206874":"event","Q96619694":"event","Q97016080":"event","Q97355587":"event","Q97355606":"event","Q98090825":"event","Q100158614":"event","Q82446":"map","Q244081":"speech","Q112075105":"book","Q2132119":"speech","Q2724397":"speech","Q2901790":"speech","Q3335263":"report","Q107545690":"event","Q116455816":"book","Q111302296":"performance","Q111890974":"event","Q124476915":"software","Q11812518":"map","Q115905500":"event","Q115915900":"event","Q3527765":"song","Q6594074":"dataset","Q120862456":"event","Q121083643":"event","Q5243464":"broadcast","Q121886925":"event","Q123992048":"event","Q124477509":"event","Q430140":"standard","Q279650":"software","Q1059963":"standard","Q1109589":"standard","Q4420997":"software","Q591016":"book","Q7142872":"standard","Q7878662":"standard","Q2749428":"book","Q2928770":"book","Q3056541":"book","Q3409594":"book","Q141108":"event","Q604109":"event","Q1338948":"event","Q1339121":"event","Q1659242":"event","Q5120692":"event","Q7397922":"event","Q22909598":"software","Q11895140":"event","Q12411675":"event","Q27959500":"standard","Q27959524":"standard","Q16168861":"event","Q16191899":"event","Q19311591":"event","Q19841298":"event","Q21000524":"event","Q23878304":"event","Q23978180":"event","Q24569309":"event","Q25302965":"event","Q27308875":"event","Q27308988":"event","Q28057489":"event","Q28710942":"event","Q28854537":"event","Q28913516":"event","Q30245758":"event","Q74719901":"report","Q40659951":"event","Q43150790":"event","Q55979379":"standard","Q45308090":"event","Q47455701":"event","Q47505518":"event","Q47533055":"event","Q47533067":"event","Q51019263":"event","Q63646250":"software","Q56751411":"event","Q60302161":"event","Q96200400":"speech","Q63585458":"event","Q97371579":"standard","Q121562743":"map","Q124364225":"map","Q124617923":"map","Q124749325":"map","Q124788480":"map","Q90400101":"event","Q91001695":"event","Q93211279":"event","Q93817540":"event","Q95612266":"event","Q97339959":"event","Q109340006":"standard","Q100769007":"event","Q100796287":"event","Q101244755":"event","Q125122051":"broadcast","Q472298":"legal_case","Q3120825":"dataset","Q178840":"broadcast","Q343782":"broadcast","Q482612":"broadcast","Q526877":"broadcast","Q662197":"broadcast","Q1366112":"broadcast","Q1566423":"broadcast","Q1676730":"broadcast","Q1802588":"broadcast","Q3377903":"broadcast","Q3951815":"broadcast","Q4783297":"broadcast","Q5455086":"broadcast","Q7050677":"broadcast","Q7185299":"broadcast","Q7603925":"broadcast","Q7724161":"broadcast","Q9335576":"broadcast","Q9335577":"broadcast","Q10994046":"song","Q10995782":"song","Q10997436":"song","Q11275415":"song","Q11651126":"song","Q230360":"standard","Q13095109":"song","Q13095730":"song","Q13096243":"song","Q11492855":"broadcast","Q13199814":"song","Q12242979":"broadcast","Q1221272":"book","Q16889492":"broadcast","Q19772367":"broadcast","Q20092645":"broadcast","Q20267837":"broadcast","Q21188110":"broadcast","Q21191019":"broadcast","Q21191068":"broadcast","Q21233490":"broadcast","Q80973":"event","Q177115":"event","Q245009":"event","Q333203":"event","Q365857":"event","Q489295":"event","Q558298":"event","Q568285":"event","Q586615":"event","Q643633":"event","Q1835902":"event","Q25092487":"broadcast","Q26644852":"broadcast","Q27105351":"broadcast","Q12218859":"book","Q27868077":"broadcast","Q6312521":"event","Q7572570":"event","Q19862852":"software","Q11914783":"event","Q56279868":"legal_case","Q55082620":"broadcast","Q56064758":"broadcast","Q56320653":"broadcast","Q56878968":"broadcast","Q62573441":"broadcast","Q64224679":"broadcast","Q123553174":"manuscript","Q123553176":"manuscript","Q67175872":"broadcast","Q35769":"broadcast","Q73505270":"broadcast","Q74161894":"broadcast","Q85133165":"broadcast","Q11071212":"manuscript","Q98526245":"broadcast","Q100707163":"broadcast","Q11435607":"periodical","Q11650541":"periodical","Q102245189":"broadcast","Q116394292":"motion_picture","Q104438889":"broadcast","Q108674843":"broadcast","Q108872880":"broadcast","Q109981780":"broadcast","Q110940888":"broadcast","Q111241100":"broadcast","Q112254601":"broadcast","Q113480583":"broadcast","Q116546876":"broadcast","Q117280527":"broadcast","Q117467246":"broadcast","Q118752966":"broadcast","Q118753710":"broadcast","Q122182536":"broadcast","Q1160788":"regulation","Q105480600":"event","Q105753264":"event","Q107695269":"event","Q110324480":"event","Q110792926":"event","Q111097895":"event","Q114457322":"event","Q116446152":"event","Q116927490":"event","Q124799807":"event","Q4039528":"software","Q7094098":"software","Q7840358":"software","Q657221":"event","Q980035":"event","Q1549039":"legislation","Q1113192":"event","Q1131897":"event","Q1139315":"event","Q1195832":"event","Q1407190":"event","Q1520293":"event","Q1605306":"event","Q1790659":"event","Q1841993":"event","Q1897524":"event","Q2295197":"event","Q2794178":"event","Q3042344":"event","Q3420088":"event","Q3436327":"event","Q4180394":"legislation","Q4192299":"event","Q4202016":"event","Q4205456":"event","Q4272221":"event","Q4741441":"event","Q5146004":"event","Q16927924":"software","Q5764649":"event","Q5803827":"event","Q6404879":"event","Q6962185":"event","Q7127953":"event","Q7204354":"event","Q7439701":"event","Q21087159":"software","Q10264610":"event","Q10436990":"event","Q10500736":"event","Q10501529":"event","Q10670607":"event","Q10715009":"event","Q11352926":"event","Q11387026":"event","Q11481730":"event","Q11955723":"event","Q11966595":"event","Q12011440":"event","Q12495292":"event","Q12516006":"event","Q12896105":"event","Q13093120":"event","Q13093505":"event","Q13097938":"event","Q14437429":"event","Q15974948":"legislation","Q16395189":"event","Q17070134":"event","Q17175691":"event","Q19703493":"event","Q19738539":"event","Q19978226":"event","Q20427131":"event","Q20988817":"event","Q24895127":"event","Q25421222":"legislation","Q25443927":"legislation","Q25443934":"legislation","Q25445388":"legislation","Q25466760":"event","Q27796293":"event","Q43702513":"event","Q55636469":"legislation","Q55606888":"event","Q55655323":"event","Q56232060":"event","Q58867915":"event","Q60823329":"event","Q63203764":"event","Q72192529":"event","Q6706470":"periodical","Q96748570":"event","Q96754171":"event","Q97230633":"event","Q98279051":"event","Q113754663":"book","Q115857011":"book","Q116213606":"book","Q117100867":"review","Q117230974":"review","Q1799894":"broadcast","Q99536154":"performance","Q11517223":"broadcast","Q586911":"book","Q6158458":"software","Q132612":"event","Q288495":"event","Q478844":"event","Q524196":"event","Q686500":"event","Q1076567":"event","Q1309022":"event","Q2428577":"event","Q3787044":"event","Q5523805":"event","Q6866481":"legislation","Q6514389":"event","Q15935644":"book","Q16255517":"book","Q21685563":"software","Q13424265":"review","Q12362352":"event","Q24039793":"software","Q26225493":"book","Q1607159":"performance","Q25037923":"event","Q12051030":"performance","Q106651343":"periodical","Q106651395":"periodical","Q106664402":"periodical","Q63082925":"standard","Q63198389":"software","Q123739240":"periodical","Q123739266":"periodical","Q55884772":"legislation","Q4689686":"periodical","Q87410646":"software","Q16927568":"periodical","Q25040622":"periodical","Q106044733":"software","Q27719224":"periodical","Q111182430":"software","Q114050598":"software","Q731194":"motion_picture","Q107212338":"event","Q108172332":"event","Q108673994":"event","Q116711373":"book","Q110458569":"event","Q119020792":"book","Q124089746":"dataset","Q212805":"dataset","Q515701":"dataset","Q1334294":"dataset","Q2499178":"dataset","Q3077240":"dataset","Q3327521":"dataset","Q6031177":"dataset","Q1047380":"software","Q16739336":"dataset","Q33130924":"motion_picture","Q1392117":"review","Q223681":"event","Q244156":"event","Q419529":"event","Q780562":"event","Q1760704":"event","Q26932627":"dataset","Q1812889":"event","Q2124210":"event","Q2935206":"event","Q3936123":"event","Q10691631":"book","Q5162734":"event","Q5281650":"event","Q5357202":"event","Q5367041":"event","Q13140991":"book","Q6664483":"event","Q7100855":"event","Q7157511":"event","Q7302277":"event","Q7313593":"event","Q17630580":"book","Q16621799":"event","Q17276616":"event","Q18405553":"event","Q18609099":"event","Q685123":"performance","Q59825643":"dataset","Q40092973":"event","Q41463713":"event","Q67131048":"dataset","Q56377573":"review","Q55109212":"event","Q54837":"dataset","Q8452":"event","Q105003122":"dataset","Q107553922":"dataset","Q111429877":"dataset","Q111634851":"dataset","Q111985815":"song","Q99496317":"event","Q107171265":"event","Q107410905":"event","Q112127159":"event","Q114586341":"review","Q586287":"dataset","Q625114":"dataset","Q115487591":"event","Q115487606":"event","Q116158326":"event","Q899203":"broadcast","Q117837285":"event","Q4839628":"dataset","Q5964411":"song","Q5778915":"broadcast","Q122949335":"event","Q124053227":"event","Q10672625":"song","Q467321":"standard","Q80998":"software","Q841163":"standard","Q875215":"standard","Q1063273":"standard","Q1116159":"standard","Q752708":"software","Q1660299":"standard","Q25932006":"regulation","Q3796889":"standard","Q17118720":"song","Q1755587":"book","Q7627402":"standard","Q2995465":"book","Q9332286":"standard","Q20652466":"broadcast","Q210112":"review","Q5288334":"book","Q5896938":"book","Q280004":"event","Q1119215":"event","Q1370156":"event","Q1417098":"event","Q8185012":"book","Q2310376":"event","Q9378549":"book","Q2943319":"event","Q3400492":"event","Q3517772":"event","Q3517779":"event","Q4829850":"event","Q11582340":"book","Q5477940":"event","Q8035152":"event","Q10264152":"event","Q10324896":"event","Q17351559":"review","Q17096546":"event","Q18482663":"event","Q20728678":"event","Q27477672":"book","Q25226986":"review","Q27020041":"event","Q28870211":"event","Q28870290":"event","Q28870398":"event","Q28870399":"event","Q28870409":"event","Q30672748":"review","Q29346471":"event","Q101244560":"periodical","Q30325164":"event","Q40008090":"event","Q46205284":"event","Q46999879":"event","Q47467768":"event","Q56134005":"book","Q56231107":"event","Q56231148":"event","Q59613404":"event","Q89977773":"dataset","Q1250909":"periodical","Q24384":"event","Q70990126":"event","Q6351976":"periodical","Q73712380":"event","Q9311486":"periodical","Q110436441":"broadcast","Q97160212":"book","Q108810446":"software","Q106303569":"book","Q123198315":"broadcast","Q111885592":"book","Q115857063":"book","Q123566639":"book","Q121294996":"performance","Q11430222":"broadcast","Q845636":"software","Q11659665":"broadcast","Q1487455":"software","Q3908507":"software","Q192782":"book","Q193934":"book","Q193955":"book","Q5157524":"software","Q336073":"book","Q5416720":"software","Q759769":"book","Q794357":"book","Q855753":"book","Q990683":"book","Q6865637":"software","Q31040220":"regulation","Q7156897":"software","Q7353436":"software","Q11292145":"standard","Q79407":"event","Q123524":"event","Q259977":"event","Q333016":"event","Q391339":"event","Q391983":"event","Q455674":"event","Q478372":"event","Q7246538":"book","Q746798":"event","Q860005":"event","Q866427":"event","Q964507":"event","Q1032381":"event","Q1062856":"event","Q1151125":"event","Q1278513":"event","Q1472650":"event","Q1750982":"event","Q1898263":"event","Q1918135":"event","Q2101532":"event","Q2190103":"event","Q2267217":"event","Q2573466":"event","Q2647680":"event","Q2696609":"event","Q3009014":"event","Q3074244":"event","Q3078662":"event","Q3107490":"event","Q3404834":"event","Q3470130":"event","Q3737480":"event","Q4045950":"event","Q4050586":"event","Q4769684":"event","Q11372298":"book","Q11410724":"book","Q11411421":"book","Q11428310":"book","Q11513646":"book","Q11519255":"book","Q11673118":"book","Q11917905":"book","Q12132683":"book","Q7113940":"event","Q16929794":"book","Q11287525":"event","Q11504892":"event","Q11514338":"event","Q11580748":"event","Q85865851":"periodical","Q21616374":"book","Q21931667":"book","Q26928598":"book","Q27020789":"book","Q27022970":"book","Q15184295":"webpage","Q123523525":"periodical","Q61715571":"book","Q65270814":"event","Q1315":"event","Q26139":"event","Q31489":"event","Q81510265":"software","Q83807365":"software","Q84326403":"dataset","Q100158612":"software","Q106040099":"software","Q97186750":"event","Q109337002":"software","Q110643339":"software","Q106592862":"event","Q106594041":"event","Q108151420":"event","Q108164916":"event","Q108188863":"event","Q108196311":"event","Q108884831":"event","Q113813216":"event","Q11410671":"legal_case","Q1142087":"dataset","Q114608872":"event","Q115308922":"event","Q2125392":"dataset","Q11498393":"speech","Q115663457":"event","Q11606878":"speech","Q11660318":"report","Q124306724":"book","Q122942003":"event","Q123575323":"event","Q123799205":"event","Q124622087":"event","Q10524630":"song","Q10551707":"song","Q10556386":"song","Q967853":"software","Q109601652":"book","Q798415":"book","Q18378451":"broadcast","Q20053488":"treaty","Q7308029":"book","Q1729670":"event","Q1822326":"event","Q1930145":"event","Q1995157":"event","Q2634158":"event","Q15967034":"software","Q4769686":"event","Q4769687":"event","Q4826999":"event","Q4836792":"event","Q5045293":"event","Q5278260":"event","Q5295187":"event","Q5337997":"event","Q5643104":"event","Q5874489":"event","Q6124476":"event","Q6606006":"event","Q6606005":"event","Q6645579":"event","Q7857606":"event","Q7892194":"event","Q7971665":"event","Q7977811":"event","Q7994532":"event","Q10411525":"event","Q10680973":"event","Q11385469":"event","Q11433650":"event","Q11445444":"event","Q11446405":"event","Q11516624":"event","Q11565101":"event","Q11597819":"event","Q11605375":"event","Q11612512":"event","Q12750036":"event","Q13533951":"event","Q22130753":"book","Q17050763":"event","Q17145579":"event","Q18127275":"event","Q18694077":"event","Q19851407":"event","Q20041008":"event","Q30941539":"event","Q32845660":"event","Q43516519":"event","Q115570020":"periodical","Q47076664":"event","Q76806512":"treaty","Q53490595":"event","Q54913642":"event","Q59779546":"event","Q61014588":"event","Q63980799":"event","Q90483854":"dataset","Q93431056":"broadcast","Q11517605":"periodical","Q84027730":"event","Q85883975":"event","Q96798209":"legislation","Q122317256":"broadcast","Q123014445":"broadcast","Q1371849":"dataset","Q104805122":"legislation","Q2687743":"webpage","Q6553952":"webpage","Q7241360":"webpage","Q10636113":"webpage","Q11062089":"webpage","Q15623926":"webpage","Q15713835":"webpage","Q15851373":"webpage","Q5431448":"song","Q17438413":"dataset","Q18091489":"webpage","Q18340550":"webpage","Q18475682":"webpage","Q19692233":"webpage","Q21167233":"webpage","Q10594989":"song","Q10654964":"song","Q10670937":"song","Q10951437":"song","Q12001523":"song","Q632343":"standard","Q2044498":"standard","Q26884324":"webpage","Q17048822":"song","Q17048829":"song","Q610406":"book","Q30032916":"webpage","Q20577753":"song","Q33532284":"webpage","Q1167252":"event","Q1573906":"event","Q2305716":"legislation","Q16879633":"manuscript","Q16879696":"manuscript","Q10925940":"event","Q12350722":"event","Q13135508":"event","Q25382039":"book","Q59156113":"webpage","Q59738577":"webpage","Q61034350":"dataset","Q25999229":"event","Q61914117":"dataset","Q60982020":"report","Q63032896":"webpage","Q63385337":"dataset","Q65181814":"webpage","Q66050442":"webpage","Q66711852":"webpage","Q67182947":"webpage","Q67325957":"webpage","Q111914189":"periodical","Q113714799":"periodical","Q80096233":"webpage","Q80787826":"webpage","Q80789820":"webpage","Q83787417":"webpage","Q85195830":"webpage","Q49546289":"event","Q59710393":"event","Q98608879":"dataset","Q98645843":"webpage","Q99228802":"webpage","Q99441948":"webpage","Q100251488":"webpage","Q100707223":"webpage","Q12561":"event","Q26706":"event","Q106803564":"webpage","Q108107367":"webpage","Q108914572":"webpage","Q110095011":"webpage","Q7506281":"periodical","Q110821256":"webpage","Q111046447":"webpage","Q76394137":"legislation","Q76826681":"event","Q11446466":"periodical","Q115612714":"webpage","Q115668764":"webpage","Q83876877":"event","Q83876882":"event","Q83876886":"event","Q83876890":"event","Q83876888":"event","Q83876913":"event","Q83876953":"event","Q98807065":"book","Q99430861":"manuscript","Q99471867":"manuscript","Q99471961":"manuscript","Q99472047":"manuscript","Q99472115":"manuscript","Q126701":"event","Q167170":"event","Q169956":"event","Q175275":"event","Q217308":"event","Q283085":"event","Q304311":"event","Q325674":"event","Q340186":"event","Q376222":"event","Q383936":"event","Q428960":"event","Q429399":"event","Q440534":"event","Q459975":"event","Q500834":"event","Q548095":"event","Q559507":"event","Q586633":"event","Q593501":"event","Q606672":"event","Q609685":"event","Q615994":"event","Q635366":"event","Q641060":"event","Q641083":"event","Q658986":"event","Q673368":"event","Q695012":"event","Q696031":"event","Q776773":"event","Q821580":"event","Q844685":"event","Q912171":"event","Q927363":"event","Q938096":"event","Q952053":"event","Q992060":"event","Q1005849":"event","Q1006461":"event","Q1038558":"event","Q1054417":"event","Q1092604":"event","Q1095053":"event","Q1137275":"event","Q1144648":"event","Q1165405":"event","Q1170410":"event","Q1257258":"event","Q1298292":"event","Q1302645":"event","Q1349088":"event","Q1363275":"event","Q1375512":"event","Q1384134":"event","Q1411556":"event","Q1415139":"event","Q1415387":"event","Q1439959":"event","Q1470460":"event","Q1476232":"event","Q1478437":"event","Q1502193":"event","Q1517334":"event","Q1537962":"event","Q1542723":"event","Q1542755":"event","Q1542872":"event","Q1548538":"event","Q1571193":"event","Q1619812":"event","Q1677094":"event","Q1813328":"event","Q1824378":"event","Q1866538":"event","Q1879388":"event","Q1890914":"event","Q1895928":"event","Q1936368":"event","Q1950504":"event","Q1967413":"event","Q2000491":"event","Q2006622":"event","Q2008904":"event","Q2035243":"event","Q2045861":"event","Q2056451":"event","Q2062651":"event","Q2100967":"event","Q2190296":"event","Q2190746":"event","Q2209331":"event","Q2210277":"event","Q2240868":"event","Q2250320":"event","Q2250962":"event","Q2270306":"event","Q2280986":"event","Q115983246":"webpage","Q123581810":"webpage","Q2286694":"event","Q2293105":"event","Q2300449":"event","Q2312427":"event","Q2327575":"event","Q2347925":"event","Q2353497":"event","Q2404842":"event","Q2404861":"event","Q2408469":"event","Q2410002":"event","Q2452319":"event","Q2459434":"event","Q2461450":"event","Q2474467":"event","Q2493694":"event","Q2507865":"event","Q2536619":"event","Q2541750":"event","Q2574170":"event","Q2608069":"event","Q2616886":"event","Q2618686":"event","Q2626253":"event","Q2632641":"event","Q2664186":"event","Q2688597":"event","Q2693408":"event","Q2698184":"event","Q2735683":"event","Q2755211":"event","Q2796048":"event","Q2836962":"event","Q2910684":"event","Q2948826":"event","Q2954930":"event","Q2955182":"event","Q2955393":"event","Q2955743":"event","Q2990963":"event","Q2999425":"event","Q2999793":"event","Q3001412":"event","Q3008684":"event","Q3072863":"event","Q3113896":"event","Q3141859":"event","Q3173989":"event","Q3246109":"event","Q3300730":"event","Q3329708":"event","Q3329729":"event","Q3354007":"event","Q3405564":"event","Q3414487":"event","Q3444554":"event","Q3467389":"event","Q3485623":"event","Q3485630":"event","Q3485629":"event","Q3485635":"event","Q3485632":"event","Q3485633":"event","Q3485638":"event","Q3485636":"event","Q3485642":"event","Q3485643":"event","Q3485640":"event","Q3534194":"event","Q3534195":"event","Q3534198":"event","Q3534196":"event","Q3535487":"event","Q3543765":"event","Q3595175":"event","Q3653353":"event","Q3654211":"event","Q3654298":"event","Q3696168":"event","Q3854433":"event","Q4167714":"event","Q4243717":"event","Q4243782":"event","Q4272782":"event","Q4510080":"event","Q4639035":"event","Q4674589":"event","Q4713212":"event","Q4794263":"event","Q4852696":"event","Q4867756":"event","Q4873000":"event","Q4894842":"event","Q4942597":"event","Q4948028":"event","Q4951251":"event","Q5029340":"event","Q5136168":"event","Q5209301":"event","Q5261453":"event","Q5300140":"event","Q5311005":"event","Q5324645":"event","Q5412849":"event","Q5455087":"event","Q5470293":"event","Q5569597":"event","Q5787643":"event","Q5803879":"event","Q6313377":"event","Q6315526":"event","Q6322015":"event","Q6383498":"event","Q6547925":"event","Q6747099":"event","Q6804309":"event","Q7033612":"event","Q7240344":"event","Q7605743":"event","Q7906416":"event","Q8035852":"event","Q8355038":"event","Q10260884":"event","Q10577782":"event","Q10666337":"event","Q11235352":"event","Q11267643":"event","Q11370195":"event","Q11471159":"event","Q11488716":"event","Q11598585":"event","Q11777151":"event","Q11783626":"event","Q11972165":"event","Q12038182":"event","Q12166442":"event","Q12307297":"event","Q12868195":"event","Q13136925":"event","Q13219666":"event","Q13357858":"event","Q13732546":"event","Q15055391":"event","Q15588699":"event","Q15782487":"event","Q16455611":"event","Q16648230":"event","Q16680659":"event","Q16680753":"event","Q16975526":"event","Q17024704":"event","Q17143991":"event","Q17299750":"event","Q17623620":"event","Q18161922":"event","Q18343977":"event","Q18406136":"event","Q18419832":"event","Q18536800":"event","Q18632975":"event","Q18814828":"event","Q19393726":"event","Q20019127":"event","Q20160732":"event","Q20797921":"event","Q21013809":"event","Q21163347":"event","Q21163366":"event","Q21935543":"event","Q22029360":"event","Q22807283":"event","Q24840633":"event","Q26861438":"event","Q27437120":"event","Q28033877":"event","Q28106029":"event","Q29121355":"event","Q30006753":"event","Q30232507":"event","Q31884152":"event","Q37803643":"event","Q38216979":"event","Q41691580":"event","Q43767888":"event","Q45897039":"event","Q47009563":"event","Q47196777":"event","Q47450331":"event","Q47459169":"event","Q48759219":"event","Q48977160":"event","Q51031626":"event","Q51104681":"event","Q55246259":"event","Q55261073":"event","Q55393057":"event","Q55654379":"event","Q56199072":"event","Q56321344":"event","Q56683030":"event","Q104224089":"event","Q104224112":"event","Q105855428":"event","Q106253544":"event","Q106603744":"event","Q106762533":"event","Q107140138":"event","Q110087118":"event","Q110128009":"event","Q111655728":"event","Q113716066":"event","Q115483852":"event","Q115863228":"event","Q116810808":"event","Q118953051":"event","Q119241588":"event","Q119778717":"event","Q119949458":"event","Q121436297":"event","Q121471041":"event","Q121484366":"event","Q121484394":"event","Q121543689":"event","Q121548413":"event","Q121548435":"event","Q121556053":"event","Q121558680":"event","Q121591471":"event","Q121591810":"event","Q121592271":"event","Q121624003":"event","Q121631219":"event","Q121631839":"event","Q121745432":"event","Q121811226":"event","Q121811273":"event","Q121834424":"event","Q122169911":"event","Q122781442":"event","Q123498765":"event","Q123550314":"event","Q123594200":"event","Q123681358":"event","Q123856948":"event","Q124253760":"event","Q124323914":"event","Q124340605":"event","Q124836196":"event","Q66086":"event","Q7443679":"event","Q10496240":"event","Q55862681":"dataset","Q56683160":"event","Q56827091":"event","Q56829666":"event","Q56835059":"event","Q57494273":"event","Q59134440":"event","Q60147807":"event","Q60515518":"event","Q60860371":"event","Q60926489":"event","Q61054255":"event","Q61314656":"event","Q61983760":"event","Q62970974":"event","Q63349452":"event","Q64626740":"event","Q65238836":"event","Q66239912":"event","Q71860259":"event","Q76998317":"event","Q85422612":"event","Q88173204":"event","Q92602118":"event","Q96679888":"event","Q98183947":"event","Q98686973":"event","Q99346550":"event","Q99352691":"event","Q99383433":"event","Q99430142":"event","Q99430249":"event","Q99430281":"event","Q99430529":"event","Q99430785":"event","Q99430803":"event","Q99431617":"event","Q99432107":"event","Q99441928":"event","Q99441941":"event","Q99441965":"event","Q99441984":"event","Q99442286":"event","Q99443664":"event","Q99444029":"event","Q99472025":"event","Q102276098":"event","Q102292481":"event","Q206008":"standard","Q207819":"standard","Q721667":"standard","Q795966":"standard","Q852641":"standard","Q1322065":"standard","Q2164287":"standard","Q111745047":"periodical","Q3182386":"standard","Q3273017":"standard","Q106603698":"event","Q5974436":"standard","Q111076423":"event","Q111369405":"event","Q112122497":"event","Q11224332":"standard","Q1003021":"dataset","Q3511312":"broadcast","Q7531819":"dataset","Q21708636":"standard","Q10685952":"broadcast","Q29178266":"standard","Q707372":"periodical","Q857836":"periodical","Q3297186":"periodical","Q3906975":"book","Q9364012":"standard","Q6082779":"book","Q179304":"event","Q198972":"event","Q428303":"event","Q7093850":"periodical","Q586821":"event","Q819961":"event","Q851302":"event","Q1344963":"event","Q2992900":"event","Q15967335":"software","Q12899593":"book","Q13118900":"book","Q8018402":"event","Q10551470":"event","Q10869080":"event","Q10869199":"event","Q10875631":"event","Q10926241":"event","Q11489354":"event","Q11589683":"event","Q25416347":"standard","Q21190961":"periodical","Q21191134":"periodical","Q51686074":"standard","Q16149104":"event","Q16541389":"event","Q16688308":"event","Q28168011":"software","Q17163851":"event","Q17990877":"event","Q24833906":"event","Q24887203":"event","Q25381816":"event","Q33113349":"event","Q25670":"standard","Q50599084":"event","Q52158514":"event","Q52681713":"event","Q52771586":"event","Q98073985":"webpage","Q65230396":"event","Q96472992":"event","Q105362186":"event","Q106450751":"event","Q107598520":"event","Q108741439":"event","Q117799914":"dataset","Q113046319":"event","Q113945821":"event","Q936270":"dataset","Q114450818":"event","Q114610155":"event","Q1417307":"dataset","Q1497255":"dataset","Q2072412":"dataset","Q115767775":"event","Q115773530":"event","Q6322322":"dataset","Q121094681":"event","Q11971341":"dataset","Q12642532":"dataset","Q14324227":"dataset","Q15914395":"dataset","Q16501309":"dataset","Q19413851":"dataset","Q277222":"event","Q277768":"event","Q506294":"event","Q626066":"event","Q742793":"event","Q847462":"event","Q852395":"event","Q890845":"event","Q1070156":"event","Q1105365":"event","Q1306889":"event","Q1473981":"event","Q2176422":"event","Q2672785":"event","Q27958099":"dataset","Q2913791":"event","Q3251043":"event","Q24826340":"periodical","Q21094819":"event","Q21095053":"event","Q21115902":"event","Q21128169":"event","Q24929187":"event","Q28531312":"event","Q28976135":"event","Q29001044":"event","Q29471082":"event","Q55060635":"dataset","Q33088985":"event","Q42555207":"event","Q43792361":"event","Q45380910":"event","Q45767416":"event","Q46582859":"event","Q46952859":"event","Q47015876":"event","Q47517941":"event","Q47986635":"event","Q51295770":"event","Q51657839":"event","Q51831744":"event","Q57085779":"event","Q57867143":"event","Q85102127":"dataset","Q61659880":"event","Q64504529":"event","Q65561661":"event","Q90878157":"dataset","Q90878165":"dataset","Q96106098":"dataset","Q72284369":"event","Q104587594":"dataset","Q105921971":"dataset","Q106133829":"dataset","Q106257158":"dataset","Q111913517":"dataset","Q113136488":"dataset","Q113644125":"dataset","Q116056897":"dataset","Q105834419":"software","Q96314922":"event","Q98103264":"event","Q100251218":"event","Q114461696":"software","Q122929170":"standard","Q81414":"standard","Q126998":"standard","Q184230":"standard","Q203087":"standard","Q210337":"software","Q909736":"standard","Q957589":"standard","Q1128629":"standard","Q1131705":"standard","Q653475":"software","Q751850":"software","Q1254335":"standard","Q1422324":"standard","Q1050567":"software","Q1648707":"standard","Q1654055":"standard","Q2044242":"standard","Q1639024":"software","Q2622793":"standard","Q2467310":"software","Q3295108":"standard","Q3359815":"standard","Q3408090":"standard","Q3408089":"standard","Q4112081":"standard","Q3653635":"software","Q4913907":"standard","Q4497736":"software","Q5012982":"standard","Q5013874":"standard","Q5403364":"standard","Q739672":"book","Q5738835":"software","Q6485088":"software","Q7485604":"software","Q10852089":"software","Q11387554":"software","Q129372":"event","Q163243":"event","Q188952":"event","Q254832":"event","Q464458":"event","Q514400":"event","Q7634691":"book","Q1275557":"event","Q3595351":"event","Q3978087":"event","Q15548075":"software","Q15562063":"software","Q15614005":"software","Q5103581":"event","Q5121078":"event","Q5439557":"event","Q17138243":"software","Q7191343":"event","Q7193242":"event","Q7193247":"event","Q7309795":"event","Q7440363":"event","Q7603676":"event","Q7676111":"event","Q21286559":"software","Q24091098":"standard","Q24966456":"software","Q15900647":"event","Q28050159":"software","Q33120867":"software","Q21886655":"event","Q25112226":"event","Q25685889":"event","Q30589009":"event","Q4167410":"webpage","Q47459256":"event","Q64769132":"software","Q65498626":"standard","Q65498858":"standard","Q65498884":"standard","Q65498996":"standard","Q66088840":"software","Q8777":"standard","Q8795":"standard","Q263":"software","Q367":"software","Q369":"software","Q62505":"software","Q65048633":"event","Q79411422":"software","Q10283":"event","Q81311730":"software","Q37152856":"webpage","Q77603958":"event","Q81881796":"event","Q96473852":"standard","Q104985816":"standard","Q106513246":"software","Q621715":"regulation","Q1005383":"regulation","Q1550219":"motion_picture","Q1497809":"regulation","Q2475782":"regulation","Q5016431":"regulation","Q7130304":"regulation","Q8027877":"legal_case","Q7894671":"regulation","Q7894668":"regulation","Q112158358":"event","Q124563219":"software","Q115164062":"event","Q2594143":"dataset","Q3918025":"song","Q4130112":"song","Q4329943":"song","Q4367044":"song","Q16830702":"regulation","Q123466540":"event","Q12090126":"song","Q12090507":"song","Q12115862":"song","Q12140332":"song","Q12149338":"song","Q12154183":"song","Q12168212":"song","Q182495":"software","Q1033517":"standard","Q569915":"software","Q1384925":"standard","Q994121":"software","Q2311093":"standard","Q26205359":"webpage","Q2207210":"software","Q28455659":"regulation","Q16635474":"song","Q20245523":"dataset","Q1072326":"event","Q1798001":"legislation","Q1477846":"event","Q3107744":"event","Q29573701":"dataset","Q28704212":"song","Q10895016":"legislation","Q22907900":"standard","Q11443578":"event","Q28933155":"software","Q20819742":"event","Q57312861":"webpage","Q80353":"performance","Q278329":"broadcast","Q597009":"performance","Q865096":"performance","Q868250":"performance","Q1044551":"performance","Q1348595":"performance","Q2497131":"performance","Q3564871":"performance","Q4737503":"performance","Q52087504":"song","Q65240138":"regulation","Q7248116":"performance","Q7843547":"performance","Q9655765":"performance","Q56358499":"song","Q62688041":"dataset","Q17218112":"performance","Q65683490":"dataset","Q65706668":"dataset","Q65707458":"dataset","Q65708368":"dataset","Q65708454":"dataset","Q65710914":"dataset","Q65711850":"dataset","Q65718274":"dataset","Q72398691":"software","Q102221522":"regulation","Q104853357":"legal_case","Q104867611":"legal_case","Q97574586":"dataset","Q84863652":"software","Q109615627":"webpage","Q86009876":"event","Q122754124":"webpage","Q112885877":"dataset","Q114586517":"dataset","Q36103":"performance","Q92333011":"event","Q25324216":"periodical","Q106592283":"standard","Q106592291":"standard","Q106592289":"standard","Q123915682":"dataset","Q124158240":"dataset","Q99521375":"event","Q111519484":"standard","Q111038019":"software","Q330284":"webpage","Q849666":"motion_picture","Q1499572":"webpage","Q104829457":"event","Q105492335":"event","Q105492332":"event","Q3393867":"webpage","Q106232233":"event","Q106616204":"event","Q106909852":"event","Q5974118":"webpage","Q109326562":"event","Q7523714":"webpage","Q11888968":"webpage","Q15883028":"webpage","Q16023911":"webpage","Q18089617":"motion_picture","Q19787525":"regulation","Q21286738":"webpage","Q124260829":"event","Q125080376":"event","Q184740":"book","Q1221280":"book","Q2383890":"book","Q3109302":"book","Q3257804":"book","Q4504462":"book","Q5793767":"book","Q5834682":"book","Q193141":"event","Q213070":"event","Q422695":"event","Q7081172":"book","Q7102502":"book","Q531635":"event","Q623109":"event","Q637848":"event","Q726492":"event","Q767127":"event","Q891243":"event","Q1376770":"event","Q1563081":"event","Q1628661":"event","Q1861270":"event","Q2290593":"event","Q2806793":"event","Q2814440":"event","Q2817758":"event","Q3003021":"event","Q3074026":"event","Q3892502":"event","Q3892574":"event","Q4778419":"event","Q11512680":"book","Q5159677":"event","Q17560541":"standard","Q6304162":"event","Q6809912":"event","Q6842710":"event","Q42811590":"webpage","Q7157512":"event","Q7295180":"event","Q10692570":"event","Q11938851":"event","Q20737410":"book","Q21007842":"book","Q21008249":"book","Q15259995":"event","Q16675435":"event","Q16764895":"event","Q18033451":"event","Q18560568":"event","Q19384767":"event","Q56298568":"webpage","Q20827727":"event","Q21003389":"event","Q23662496":"event","Q23869445":"event","Q26183114":"event","Q27768171":"event","Q39076481":"event","Q44198061":"event","Q55007268":"event","Q56291178":"event","Q65137675":"book","Q94677014":"regulation","Q66363341":"book","Q61629906":"event","Q65242227":"event","Q65242224":"event","Q5389":"event","Q70106932":"event","Q117209498":"motion_picture","Q123995798":"motion_picture","Q106782362":"book","Q101067831":"event","Q220898":"motion_picture","Q112119626":"event","Q112895357":"event","Q113141092":"event","Q113586058":"event","Q502685":"dataset","Q1114135":"dataset","Q2792831":"dataset","Q3456824":"dataset","Q4291954":"dataset","Q117848135":"event","Q118949755":"event","Q7309365":"dataset","Q120768949":"event","Q9067655":"dataset","Q19359000":"report","Q123856943":"event","Q10649598":"dataset","Q10657704":"dataset","Q11442223":"dataset","Q11452068":"dataset","Q11985287":"dataset","Q12314395":"dataset","Q11000115":"song","Q11212348":"song","Q11213538":"song","Q576465":"standard","Q60550374":"periodical","Q13095033":"song","Q13098544":"song","Q864680":"software","Q14760101":"dataset","Q2492841":"software","Q16516429":"dataset","Q18646709":"dataset","Q18694602":"dataset","Q19381281":"dataset","Q1225344":"book","Q1370860":"book","Q66623743":"periodical","Q7200622":"standard","Q2059703":"book","Q20820095":"dataset","Q3058428":"book","Q3347086":"book","Q479208":"event","Q7399161":"book","Q1057959":"event","Q2593801":"event","Q4066775":"event","Q30938210":"dataset","Q6509517":"event","Q19868416":"software","Q9307439":"event","Q20665028":"book","Q48893562":"dataset","Q96632462":"periodical","Q55633141":"dataset","Q106027598":"periodical","Q61000461":"dataset","Q110913625":"periodical","Q66486528":"dataset","Q2188827":"manuscript","Q85827478":"dataset","Q5647631":"manuscript","Q71723427":"book","Q92311493":"dataset","Q206270":"periodical","Q321745":"periodical","Q548044":"periodical","Q1099524":"periodical","Q56707":"event","Q107243694":"article-journal","Q111464443":"motion_picture","Q104951794":"dataset","Q105483835":"dataset","Q105483881":"dataset","Q105840066":"dataset","Q106892082":"dataset","Q117717390":"motion_picture","Q107610634":"dataset","Q111703312":"dataset","Q112224333":"dataset","Q112684601":"dataset","Q124642584":"article-journal","Q115312989":"dataset","Q117029109":"dataset","Q117713023":"dataset","Q117788442":"dataset","Q119480393":"dataset","Q123161925":"dataset","Q123161967":"dataset","Q125125677":"broadcast","Q115218971":"software","Q112148984":"book","Q2438528":"report","Q2910075":"report","Q120942996":"software","Q3423635":"dataset","Q2290276":"broadcast","Q5287435":"broadcast","Q7923105":"broadcast","Q13359539":"broadcast","Q1159457":"book","Q3440922":"book","Q21191265":"broadcast","Q779934":"event","Q798985":"event","Q953136":"event","Q1338800":"event","Q1367591":"event","Q2203703":"event","Q2300997":"event","Q2308238":"event","Q2755354":"event","Q2954322":"event","Q2997731":"event","Q3264518":"event","Q4969278":"event","Q5270745":"event","Q5282202":"event","Q5299874":"event","Q5438764":"event","Q6469427":"event","Q7234755":"event","Q7243772":"event","Q7244376":"event","Q7244610":"event","Q7244625":"event","Q7244800":"event","Q7270477":"event","Q7311750":"event","Q7516042":"event","Q7615667":"event","Q7936339":"event","Q8039744":"event","Q12323689":"event","Q14360312":"event","Q14856232":"event","Q15091377":"event","Q17051146":"event","Q25381170":"book","Q24050099":"event","Q62015757":"motion_picture","Q27683265":"event","Q50062923":"broadcast","Q50914552":"broadcast","Q61220733":"broadcast","Q113646122":"periodical","Q29197":"broadcast","Q72607030":"broadcast","Q79766755":"broadcast","Q79768983":"broadcast","Q79769107":"broadcast","Q79769844":"broadcast","Q79770458":"broadcast","Q79770638":"broadcast","Q79848748":"broadcast","Q79848760":"broadcast","Q64058005":"event","Q99079902":"broadcast","Q99296898":"broadcast","Q104438898":"broadcast","Q106082402":"broadcast","Q110372546":"broadcast","Q100235041":"standard","Q100235128":"standard","Q116048824":"broadcast","Q98806339":"event","Q98806373":"event","Q98806417":"event","Q98806455":"event","Q98806479":"event","Q98806494":"event","Q98806492":"event","Q123186929":"broadcast","Q124343615":"broadcast","Q124662614":"broadcast","Q104637634":"event","Q131510":"song","Q244955":"song","Q582093":"song","Q604748":"song","Q849305":"song","Q867914":"song","Q965834":"song","Q1120530":"song","Q1207590":"song","Q13138720":"regulation","Q1320248":"song","Q2574657":"song","Q2707688":"song","Q2747852":"song","Q2956242":"song","Q2997110":"song","Q4371786":"song","Q4444254":"song","Q5058545":"song","Q5725591":"song","Q5771033":"song","Q6089610":"song","Q6105825":"song","Q6132291":"song","Q6160688":"song","Q7663254":"song","Q7675233":"song","Q122615911":"event","Q7935998":"song","Q60536252":"dataset","Q339991":"book","Q17629250":"song","Q18324847":"song","Q21653515":"song","Q21654728":"song","Q23072366":"song","Q25386691":"song","Q25396338":"song","Q25400286":"song","Q1782935":"event","Q2278588":"event","Q3836471":"event","Q28039559":"song","Q28163991":"song","Q11314585":"book","Q5101561":"event","Q18748056":"book","Q19509393":"book","Q20411926":"book","Q39046042":"song","Q17024724":"event","Q24282796":"book","Q24457192":"book","Q24457232":"book","Q18042485":"event","Q26204053":"book","Q20464720":"event","Q22247843":"event","Q23011722":"speech","Q23058950":"speech","Q23058951":"speech","Q23058954":"speech","Q23058955":"speech","Q23058952":"speech","Q23058959":"speech","Q23210478":"event","Q23719064":"event","Q23755128":"event","Q60792489":"song","Q41766361":"event","Q50843134":"event","Q60566516":"book","Q79891737":"song","Q300":"book","Q63225426":"event","Q2291158":"periodical","Q100321326":"song","Q116680132":"motion_picture","Q106810831":"song","Q108297178":"song","Q108297215":"song","Q109018310":"song","Q104217129":"book","Q98758865":"event","Q121840885":"broadcast","Q124718855":"song","Q115214349":"software","Q104525773":"event","Q104891242":"event","Q106834892":"event","Q108141120":"event","Q108167569":"event","Q108611979":"event","Q108934264":"event","Q109502461":"event","Q109619439":"event","Q110226279":"event","Q110226282":"event","Q110226297":"event","Q110226307":"event","Q110288240":"event","Q110813292":"event","Q110814366":"event","Q110814403":"event","Q110815346":"event","Q110815347":"event","Q110815345":"event","Q110815348":"event","Q110857470":"event","Q110858542":"event","Q110858547":"event","Q110858544":"event","Q110858545":"event","Q110858549":"event","Q110858552":"event","Q111552269":"event","Q111552433":"event","Q111621266":"event","Q111995276":"event","Q114650671":"event","Q115270134":"event","Q115755667":"event","Q115915872":"event","Q116052630":"event","Q116052631":"event","Q116052632":"event","Q124312595":"event","Q1727373":"software","Q7434450":"software","Q201224":"event","Q458206":"event","Q1278356":"event","Q3070337":"event","Q4732183":"event","Q5031373":"event","Q5264306":"event","Q5573020":"event","Q6034714":"event","Q6212347":"event","Q7249392":"event","Q7844979":"event","Q9031850":"event","Q10354901":"event","Q11506025":"event","Q28207296":"standard","Q20108719":"event","Q20429197":"event","Q41582469":"event","Q48879222":"event","Q48879225":"event","Q48879275":"event","Q48879277":"event","Q48879303":"event","Q48879306":"event","Q48879307":"event","Q48879327":"event","Q48879329":"event","Q52387412":"event","Q52387417":"event","Q55545766":"event","Q61350640":"event","Q61409194":"event","Q61409316":"event","Q61459908":"event","Q61862142":"event","Q65159055":"event","Q65159057":"event","Q79539844":"event","Q83507038":"event","Q123128560":"motion_picture","Q97178504":"event","Q97276907":"event","Q109971736":"standard","Q109971762":"standard","Q111496643":"standard","Q223625":"regulation","Q2135443":"regulation","Q3454252":"motion_picture","Q107494071":"event","Q6725585":"regulation","Q116371004":"book","Q7251380":"regulation","Q117038845":"book","Q110858554":"event","Q110858561":"event","Q110858566":"event","Q110858564":"event","Q110858571":"event","Q110858574":"event","Q110858572":"event","Q110858573":"event","Q110858576":"event","Q110858598":"event","Q110858613":"event","Q110997026":"event","Q110997027":"event","Q110997030":"event","Q110997031":"event","Q110997028":"event","Q110997029":"event","Q110997033":"event","Q110997080":"event","Q120328176":"book","Q114190411":"event","Q562667":"treaty","Q118412010":"review","Q117427452":"event","Q17175676":"motion_picture","Q17037999":"regulation","Q120761294":"event","Q123003752":"event","Q124727547":"event","Q10745789":"broadcast","Q777955":"standard","Q1074131":"standard","Q26196748":"motion_picture","Q185363":"book","Q217192":"book","Q935780":"book","Q19707758":"dataset","Q1623122":"book","Q2966833":"book","Q7978623":"software","Q73633":"event","Q114699":"event","Q663296":"event","Q1938123":"event","Q106900079":"webpage","Q7497950":"event","Q7497952":"event","Q37731261":"song","Q15138918":"event","Q29943361":"standard","Q29943364":"standard","Q20821966":"event","Q42336980":"software","Q42337018":"software","Q35231018":"event","Q35231086":"event","Q60215679":"broadcast","Q60215966":"broadcast","Q41071806":"event","Q51052348":"event","Q88324033":"regulation","Q88324058":"regulation","Q89681240":"regulation","Q91104866":"regulation","Q57980469":"event","Q59009655":"event","Q18882":"book","Q67946764":"event","Q31909":"event","Q97449690":"song","Q110374026":"regulation","Q113127789":"regulation","Q124741950":"map","Q124745573":"map","Q99640601":"event","Q99654627":"event","Q99654739":"event","Q99654809":"event","Q99655046":"event","Q99655076":"event","Q99655647":"event","Q99655654":"event","Q99655660":"event","Q99655665":"event","Q99655670":"event","Q99655674":"event","Q99655684":"event","Q99735927":"event","Q150147":"event","Q178340":"event","Q186196":"event","Q188158":"event","Q189994":"event","Q230186":"event","Q272090":"event","Q311466":"event","Q391394":"event","Q483463":"event","Q513856":"event","Q624968":"event","Q641572":"event","Q671111":"event","Q673097":"event","Q674435":"event","Q818463":"event","Q843360":"event","Q845262":"event","Q849939":"event","Q877484":"event","Q917575":"event","Q1057000":"event","Q1060449":"event","Q1075259":"event","Q1087613":"event","Q1117077":"event","Q1128609":"event","Q1134131":"event","Q1140610":"event","Q1150550":"event","Q1155411":"event","Q1191392":"event","Q1196475":"event","Q1207799":"event","Q1269315":"event","Q1328412":"event","Q1360658":"event","Q1366374":"event","Q1377066":"event","Q1418201":"event","Q1628831":"event","Q1655096":"event","Q1741857":"event","Q1779835":"event","Q1859105":"event","Q2231681":"event","Q2495164":"event","Q2665176":"event","Q2900586":"event","Q3178313":"event","Q3178414":"event","Q3496987":"event","Q3735842":"event","Q4288127":"event","Q4534009":"event","Q4583737":"event","Q4690165":"event","Q4806779":"event","Q5008726":"event","Q5013660":"event","Q5153819":"event","Q5320207":"event","Q5598051":"event","Q5759296":"event","Q5954294":"event","Q6045582":"event","Q7015825":"event","Q8026289":"event","Q8035821":"event","Q10307706":"event","Q10387951":"event","Q10387949":"event","Q11251820":"event","Q11328791":"event","Q12505307":"event","Q14489467":"event","Q15056133":"event","Q16329755":"event","Q16585566":"event","Q16987323":"event","Q17635744":"event","Q19952464":"event","Q21234868":"event","Q21411001":"event","Q24871078":"event","Q28447912":"event","Q30942770":"event","Q34548368":"event","Q48781998":"event","Q49870668":"event","Q50329691":"event","Q55394477":"event","Q55400435":"event","Q55671632":"event","Q57913760":"event","Q59134402":"event","Q59428876":"event","Q60492646":"event","Q65090523":"event","Q492951":"motion_picture","Q104537413":"event","Q106875443":"event","Q110653130":"event","Q113460090":"event","Q113463157":"event","Q113464299":"event","Q113465807":"event","Q113465810":"event","Q113465862":"event","Q113465971":"event","Q113466074":"event","Q113469386":"event","Q113469406":"event","Q113469410":"event","Q114854261":"event","Q215599":"collection","Q336302":"collection","Q970141":"collection","Q1139394":"collection","Q2052368":"collection","Q2489535":"collection","Q3984344":"collection","Q4364679":"collection","Q120693872":"event","Q122166881":"event","Q123945714":"event","Q21484471":"webpage","Q785247":"standard","Q2330096":"standard","Q13746422":"collection","Q1072356":"book","Q2122918":"book","Q7096323":"dataset","Q3295609":"book","Q3712211":"book","Q4423780":"book","Q4667386":"book","Q6158568":"book","Q6648456":"book","Q353056":"event","Q622383":"event","Q647559":"event","Q3461863":"event","Q3952242":"event","Q4691063":"event","Q4825265":"event","Q12607437":"book","Q12623394":"book","Q6356041":"event","Q6362591":"event","Q13135720":"book","Q7782444":"event","Q52207310":"motion_picture","Q52207399":"motion_picture","Q23356219":"book","Q26868446":"book","Q30721375":"book","Q29167077":"event","Q30605374":"event","Q37784323":"book","Q35718073":"event","Q63243358":"song","Q55443535":"book","Q55594100":"book","Q55594114":"book","Q55594143":"book","Q55594435":"book","Q55594452":"book","Q55619801":"book","Q55619935":"book","Q55620443":"book","Q55623087":"book","Q55623753":"book","Q55624423":"book","Q55625587":"book","Q55625828":"book","Q55633982":"book","Q55671315":"book","Q50686271":"event","Q50843310":"event","Q58492747":"webpage","Q53062420":"event","Q60550494":"book","Q58867406":"event","Q58867834":"event","Q59699947":"event","Q67862373":"event","Q105770631":"webpage","Q88903067":"event","Q98557322":"legislation","Q98650163":"event","Q113172284":"standard","Q113472408":"standard","Q102111921":"event","Q110135832":"book","Q105069320":"event","Q113156090":"book","Q113681980":"book","Q114798244":"book","Q115729964":"book","Q116190244":"book","Q109984849":"event","Q111019485":"event","Q117837138":"book","Q115230003":"event","Q922853":"song","Q116189089":"event","Q123156204":"book","Q123578147":"book","Q117759855":"event","Q121031547":"event","Q121031569":"event","Q121631497":"event","Q124145499":"event","Q300851":"standard","Q731128":"standard","Q1206939":"standard","Q1562489":"standard","Q3788482":"standard","Q104696061":"webpage","Q587679":"event","Q1005339":"event","Q1005679":"event","Q1152266":"event","Q1152265":"event","Q1152270":"event","Q1152271":"event","Q1152273":"event","Q1202088":"event","Q1202089":"event","Q1202094":"event","Q1202092":"event","Q1202093":"event","Q1222273":"event","Q1222562":"event","Q1234810":"event","Q1420666":"event","Q1482264":"event","Q4435061":"event","Q6084623":"event","Q6084979":"event","Q7240444":"event","Q7554316":"event","Q114612576":"webpage","Q115491908":"webpage","Q17351671":"book","Q11900897":"event","Q98277904":"periodical","Q28052666":"event","Q56191922":"software","Q57695955":"standard","Q58787903":"standard","Q55693697":"book","Q55695009":"book","Q55739666":"book","Q55739723":"book","Q55758901":"book","Q55758954":"book","Q55759018":"book","Q55768581":"book","Q55768668":"book","Q55938552":"book","Q56012644":"book","Q17379835":"webpage","Q58483088":"book","Q65090058":"standard","Q61752993":"book","Q56398267":"event","Q77940145":"book","Q77942102":"book","Q77944268":"book","Q77944409":"book","Q77944785":"book","Q86598505":"book","Q88291753":"book","Q84592525":"event","Q98807796":"book","Q98539261":"event","Q98539274":"event","Q99299800":"event","Q107435280":"book","Q108103627":"book","Q109964663":"book","Q114893143":"software","Q111489136":"book","Q105443475":"event","Q105443516":"event","Q105443545":"event","Q105452088":"event","Q105479764":"event","Q105589549":"event","Q6484285":"map","Q115857006":"book","Q115857034":"book","Q109471870":"event","Q109473326":"event","Q1250520":"dataset","Q1631107":"dataset","Q115111146":"event","Q1905727":"song","Q1973860":"song","Q117324429":"event","Q117324435":"event","Q117327086":"event","Q5051330":"dataset","Q3976062":"song","Q6941730":"dataset","Q121315915":"event","Q124248527":"event","Q124788600":"event","Q11418206":"song","Q4116861":"software","Q7575402":"software","Q3408995":"book","Q260858":"event","Q385739":"event","Q635103":"event","Q670265":"event","Q824504":"speech","Q1375427":"event","Q1761818":"event","Q2409117":"event","Q2550299":"event","Q2949123":"event","Q3052748":"event","Q4653676":"event","Q5570217":"event","Q5690823":"event","Q7166195":"event","Q21884005":"standard","Q22100850":"software","Q12164334":"event","Q16541164":"event","Q47114558":"dataset","Q26887428":"event","Q30325538":"event","Q30681640":"event","Q59560196":"standard","Q61782519":"standard","Q122979403":"periodical","Q55140060":"event","Q63553771":"event","Q63554032":"event","Q64001169":"event","Q64251310":"event","Q93533999":"software","Q106554914":"song","Q106797790":"broadcast","Q109654109":"broadcast","Q109677093":"broadcast","Q109684855":"broadcast","Q109750820":"broadcast","Q110438165":"broadcast","Q110730867":"broadcast","Q104636634":"software","Q105038301":"software","Q121769964":"dataset","Q104096788":"book","Q99748589":"event","Q123490564":"broadcast","Q552461":"regulation","Q931552":"motion_picture","Q104676100":"event","Q108264898":"event","Q108456892":"event","Q108887198":"event","Q109044243":"event","Q7316326":"regulation","Q110628398":"event","Q111539301":"event","Q10282403":"regulation","Q113455816":"event","Q11545359":"map","Q11626042":"map","Q2127960":"dataset","Q115797566":"event","Q116025148":"event","Q116054868":"event","Q116539777":"event","Q5282128":"dataset","Q120320393":"event","Q124301055":"event","Q124713404":"event","Q22130431":"map","Q11999969":"dataset","Q22908731":"report","Q6542723":"software","Q7246937":"software","Q2583265":"book","Q281829":"event","Q546842":"legislation","Q1392593":"event","Q2040963":"performance","Q73897568":"periodical","Q3039634":"legislation","Q2777879":"performance","Q2998897":"performance","Q3092269":"event","Q3578301":"event","Q5278333":"event","Q6084414":"event","Q28225717":"broadcast","Q6156617":"event","Q10526654":"event","Q11411772":"event","Q12949048":"event","Q13360129":"event","Q15111554":"event","Q30325002":"legislation","Q65494848":"report","Q50423863":"legislation","Q88223288":"regulation","Q88320241":"regulation","Q88705465":"regulation","Q88706341":"regulation","Q88707306":"regulation","Q88709702":"regulation","Q89061144":"regulation","Q95349143":"regulation","Q61729594":"legislation","Q65150416":"event","Q28354":"event","Q95597105":"dataset","Q107525339":"map","Q109359415":"map","Q109364773":"map","Q97054320":"broadcast","Q77454236":"event","Q78793696":"event","Q78794217":"event","Q78794597":"event","Q17300027":"periodical","Q123171747":"map","Q123171768":"map","Q123171786":"map","Q113328617":"dataset","Q89031984":"event","Q89579780":"event","Q89580544":"event","Q89580727":"event","Q89582128":"event","Q89584514":"event","Q89584528":"event","Q89670486":"event","Q89671012":"event","Q95116664":"event","Q108454654":"standard","Q98745410":"event","Q124416055":"dataset","Q124416435":"dataset","Q105810973":"event","Q105827064":"event","Q106635228":"event","Q106635229":"event","Q106635287":"event","Q118278392":"dataset","Q107996504":"event","Q109497724":"event","Q112154199":"event","Q116770662":"event","Q775344":"broadcast","Q117389020":"event","Q119032338":"event","Q122737330":"event","Q12983462":"song","Q859398":"software","Q16372007":"song","Q5153356":"software","Q113919076":"performance","Q322259":"event","Q332225":"event","Q818963":"event","Q1168287":"event","Q1970173":"event","Q2089242":"event","Q3476490":"event","Q28135032":"broadcast","Q6359078":"event","Q10691739":"event","Q11423077":"event","Q11564376":"event","Q12035201":"event","Q25496701":"software","Q18131152":"event","Q890206":"performance","Q106101379":"manuscript","Q26185628":"event","Q28089258":"event","Q10668278":"performance","Q51675442":"software","Q74303978":"broadcast","Q3196405":"manuscript","Q61002034":"event","Q86833385":"broadcast","Q31764":"event","Q99515493":"dataset","Q100139554":"dataset","Q100139796":"dataset","Q110876331":"motion_picture","Q98526239":"broadcast","Q104539790":"dataset","Q116033461":"motion_picture","Q106425682":"dataset","Q106807531":"dataset","Q106878463":"dataset","Q105011823":"broadcast","Q105440808":"broadcast","Q105580963":"broadcast","Q105882178":"broadcast","Q105885086":"broadcast","Q105885166":"broadcast","Q105908617":"broadcast","Q106070543":"broadcast","Q106393132":"broadcast","Q106462625":"broadcast","Q106625193":"broadcast","Q106625205":"broadcast","Q106625222":"broadcast","Q106625419":"broadcast","Q106639851":"broadcast","Q106727606":"broadcast","Q106727619":"broadcast","Q106727696":"broadcast","Q106882658":"broadcast","Q106902380":"broadcast","Q106914773":"broadcast","Q107442166":"broadcast","Q108357966":"broadcast","Q113223474":"dataset","Q114766816":"broadcast","Q106255345":"software","Q96372405":"event","Q96474700":"event","Q104439053":"book","Q123694306":"dataset","Q99738027":"event","Q99738092":"event","Q99738111":"event","Q112884016":"software","Q124395617":"broadcast","Q108881436":"book","Q446780":"regulation","Q1747837":"motion_picture","Q111180384":"book","Q106640245":"event","Q114079361":"book","Q114079439":"book","Q4590027":"regulation","Q107581015":"event","Q107628485":"event","Q107628488":"event","Q107628507":"event","Q107628546":"event","Q107745608":"event","Q107745617":"event","Q114609471":"book","Q114609479":"book","Q108135774":"event","Q108552900":"event","Q111678621":"event","Q112669384":"event","Q119318561":"book","Q508790":"song","Q123964803":"book","Q124611522":"book","Q2824103":"broadcast","Q4470542":"song","Q6379472":"song","Q122208385":"event","Q122830661":"event","Q122830684":"event","Q11655362":"song","Q12111341":"song","Q371805":"standard","Q12274303":"song","Q12802984":"song","Q106588852":"broadcast","Q110727234":"performance","Q33593042":"regulation","Q594550":"event","Q1709894":"event","Q2005272":"event","Q12106333":"book","Q27912070":"broadcast","Q13632557":"book","Q17518557":"book","Q12250928":"event","Q12250944":"event","Q12250949":"event","Q12250958":"event","Q12250971":"event","Q12250993":"event","Q20024995":"book","Q24283984":"book","Q27560760":"book","Q1982463":"broadcast","Q60535736":"map","Q2905677":"performance","Q11931373":"performance","Q106635276":"periodical","Q106651148":"periodical","Q106664450":"periodical","Q106668702":"periodical","Q106677940":"periodical","Q107170524":"periodical","Q107171988":"periodical","Q107178411":"periodical","Q107179479":"periodical","Q107181855":"periodical","Q107182185":"periodical","Q107182376":"periodical","Q107182467":"periodical","Q107183126":"periodical","Q107236776":"periodical","Q107236966":"periodical","Q63068880":"book","Q64657836":"book","Q108202399":"motion_picture","Q109568295":"map","Q101413630":"song","Q109470683":"song","Q109470686":"song","Q109470687":"song","Q109470684":"song","Q109470685":"song","Q109470688":"song","Q63481999":"broadcast","Q91224525":"event","Q116921159":"collection","Q73067531":"performance","Q107110391":"software","Q105104863":"book","Q108329751":"book","Q108917284":"book","Q114901705":"software","Q768650":"regulation","Q115221745":"software","Q1800833":"motion_picture","Q111818118":"book","Q105753296":"legislation","Q105445345":"event","Q115159349":"book","Q115159406":"book","Q115160551":"book","Q115160714":"book","Q115160712":"book","Q115166873":"book","Q108749499":"event","Q110313262":"legislation","Q110487796":"legislation","Q6002335":"speech","Q110245716":"event","Q110373000":"event","Q110996236":"event","Q111040000":"event","Q112221264":"event","Q407916":"song","Q115193749":"event","Q1127578":"song","Q115915870":"event","Q115915871":"event","Q116456767":"event","Q117195501":"event","Q6705418":"song","Q7596498":"song","Q124477892":"event","Q104998020":"performance","Q375673":"software","Q11086742":"broadcast","Q204698":"book","Q715697":"book","Q905171":"book","Q929047":"book","Q1100591":"book","Q1494806":"book","Q5290202":"book","Q6026483":"book","Q116609":"event","Q273039":"event","Q7309642":"book","Q788043":"event","Q868557":"event","Q1521818":"event","Q2006207":"event","Q2577348":"event","Q2936887":"event","Q3408844":"event","Q3824436":"event","Q16003114":"book","Q20965967":"software","Q10902974":"event","Q115724607":"webpage","Q27031827":"software","Q55610541":"regulation","Q24887419":"event","Q61868326":"map","Q26253296":"event","Q28100410":"event","Q28469958":"event","Q29224491":"event","Q11266439":"webpage","Q51937413":"book","Q47345468":"event","Q47468936":"event","Q55567596":"book","Q55631298":"event","Q58743167":"event","Q99194075":"speech","Q65234641":"event","Q111280422":"motion_picture","Q112623923":"map","Q111290948":"speech","Q113208471":"regulation","Q115493112":"webpage","Q116075721":"map","Q83191240":"event","Q114065946":"post","Q110263445":"broadcast","Q124740318":"map","Q124740323":"map","Q113617701":"treaty","Q112351487":"software","Q542475":"motion_picture","Q1613773":"regulation","Q116447683":"software","Q3072039":"motion_picture","Q121362277":"software","Q124629760":"software","Q1671699":"dataset","Q1777837":"dataset","Q966438":"song","Q1077388":"song","Q1947846":"song","Q2910735":"song","Q118143121":"event","Q118143130":"event","Q118143138":"event","Q118143144":"event","Q118143170":"event","Q118143168":"event","Q118143177":"event","Q3395292":"song","Q1786567":"broadcast","Q118499551":"event","Q2125867":"broadcast","Q118727351":"event","Q6059909":"dataset","Q5001430":"song","Q5202394":"song","Q120434499":"event","Q5717026":"song","Q7694469":"song","Q123164020":"event","Q7281198":"broadcast","Q21028464":"motion_picture","Q123910691":"event","Q124478045":"event","Q1630941":"software","Q2246055":"book","Q2599412":"book","Q1160214":"event","Q1206071":"event","Q1242708":"event","Q1309930":"event","Q1631955":"event","Q1770766":"event","Q1770779":"event","Q2937260":"event","Q3441463":"event","Q12143498":"event","Q12388486":"event","Q25104379":"software","Q17354595":"event","Q18431960":"event","Q18918137":"event","Q19753730":"event","Q21140826":"event","Q23657059":"event","Q23657135":"event","Q23657241":"event","Q23660852":"event","Q23661987":"event","Q23681146":"event","Q23681152":"event","Q23726521":"event","Q23727520":"event","Q23727539":"event","Q27031964":"event","Q27889498":"event","Q27927857":"event","Q116865825":"manuscript","Q4167836":"webpage","Q4663903":"webpage","Q41479544":"event","Q41479621":"event","Q42902724":"event","Q116700394":"periodical","Q47089371":"event","Q14204246":"webpage","Q19511695":"webpage","Q9158":"software","Q30415057":"webpage","Q35243371":"webpage","Q35250433":"webpage","Q64161":"event","Q94574942":"song","Q98382204":"dataset","Q106590023":"song","Q56005592":"webpage","Q117816719":"dataset","Q116456147":"song","Q115665502":"broadcast","Q60715851":"webpage","Q120491619":"dataset","Q120097528":"broadcast","Q100843605":"event","Q114562260":"software","Q1410020":"map","Q104696754":"event","Q104709550":"event","Q2177763":"regulation","Q109285818":"event","Q121363144":"software","Q121539601":"software","Q117160814":"book","Q122195018":"software","Q122195568":"software","Q122264178":"software","Q122264265":"software","Q122264344":"software","Q122264957":"software","Q122270779":"software","Q122270784":"software","Q121664244":"book","Q12303319":"regulation","Q124555688":"book","Q124611158":"book","Q124611718":"book","Q124726063":"book","Q124785376":"book","Q124785394":"book","Q118875961":"event","Q2621422":"broadcast","Q5104955":"song","Q123192171":"event","Q123192169":"event","Q124047482":"event","Q72688":"software","Q2846915":"software","Q2846918":"software","Q2846919":"software","Q2846916":"software","Q2846920":"software","Q2846924":"software","Q148453":"book","Q723362":"book","Q1742962":"book","Q1747998":"book","Q2349495":"book","Q4164367":"book","Q12226408":"software","Q7534220":"book","Q1189820":"event","Q1362172":"event","Q2326542":"event","Q3180872":"event","Q15089879":"software","Q10313304":"book","Q15621498":"software","Q15961745":"software","Q4903797":"event","Q16348624":"software","Q5063219":"event","Q17305518":"software","Q18063397":"software","Q18915790":"software","Q19862344":"software","Q20741039":"software","Q21041344":"software","Q22021703":"software","Q22274379":"software","Q23310067":"software","Q23310070":"software","Q27964209":"software","Q29000531":"software","Q50364330":"software","Q42417410":"event","Q48803820":"event","Q62059755":"software","Q64886247":"software","Q65066507":"software","Q11250":"software","Q39238":"software","Q62665135":"event","Q85684089":"software","Q89700881":"software","Q96480174":"software","Q122395769":"map","Q124623434":"map","Q124711296":"map","Q104696214":"software","Q105607376":"software","Q122096037":"dataset","Q110146494":"software","Q124364330":"dataset","Q124613007":"dataset","Q110890424":"software","Q121608810":"broadcast","Q111369340":"software","Q113495629":"software","Q113588976":"software","Q112897591":"book","Q115264777":"book","Q122853506":"book","Q123455481":"book","Q123615731":"book","Q486487":"software","Q491546":"software","Q609733":"software","Q737508":"software","Q1087971":"software","Q1209367":"software","Q112983":"book","Q181275":"book","Q3429239":"book","Q4735223":"book","Q4826265":"book","Q82414":"event","Q131938":"event","Q159821":"event","Q189656":"event","Q420474":"event","Q705157":"event","Q934016":"event","Q981205":"event","Q7578116":"book","Q983063":"event","Q988994":"event","Q1075020":"event","Q1551488":"event","Q1635930":"event","Q2101619":"event","Q2628560":"event","Q2780812":"event","Q2839017":"event","Q2918953":"event","Q3407503":"event","Q3407505":"event","Q15222398":"software","Q4067114":"event","Q10927187":"book","Q4352998":"event","Q4380864":"event","Q4380868":"event","Q4817933":"event","Q4971427":"event","Q5047378":"event","Q5160500":"event","Q5177021":"event","Q11946197":"book","Q12578980":"book","Q6965073":"event","Q7132937":"event","Q7250058":"event","Q7250060":"event","Q19602704":"book","Q26260337":"software","Q24842448":"book","Q24944707":"book","Q26845760":"book","Q42402646":"book","Q53889171":"software","Q54365951":"book","Q5046":"software","Q11226":"software","Q11248":"software","Q97613710":"book","Q109455637":"software","Q107422949":"book","Q108293881":"book","Q107197027":"event","Q107417383":"event","Q111831868":"event","Q120378923":"event","Q120964139":"event","Q122294979":"event","Q123521264":"periodical","Q277919":"standard","Q131669":"software","Q269856":"software","Q1233006":"standard","Q930714":"software","Q959549":"software","Q1405638":"software","Q1475825":"software","Q2042663":"standard","Q2516350":"standard","Q2871730":"software","Q3909444":"software","Q4047260":"software","Q6022524":"standard","Q5636103":"software","Q6013084":"software","Q6723313":"software","Q7142882":"software","Q7927948":"software","Q8465350":"software","Q11320378":"software","Q79791":"event","Q231577":"event","Q632639":"event","Q637160":"event","Q721654":"event","Q1252585":"event","Q1252596":"event","Q1254181":"event","Q1254184":"event","Q1342132":"event","Q1661478":"event","Q13512320":"software","Q2370417":"event","Q3016939":"event","Q3345908":"event","Q15814161":"software","Q15980209":"software","Q5111497":"event","Q5655230":"event","Q5671238":"event","Q18012472":"software","Q7250061":"event","Q7281191":"event","Q7318925":"event","Q8015861":"event","Q8038638":"event","Q20057018":"software","Q10544259":"event","Q10875077":"event","Q11122659":"event","Q11401902":"event","Q11679626":"event","Q23665359":"software","Q12412152":"event","Q12776523":"event","Q13099480":"event","Q25429379":"software","Q14904808":"event","Q15192579":"event","Q16532279":"event","Q17058566":"event","Q17105972":"event","Q28718983":"software","Q18630286":"event","Q18633267":"event","Q20092524":"event","Q24962817":"event","Q24964148":"event","Q27962392":"event","Q30020409":"event","Q30020460":"event","Q30324162":"event","Q42681198":"event","Q56808665":"standard","Q48734726":"event","Q55093337":"event","Q11089":"standard","Q44484":"standard","Q11368":"software","Q34182":"software","Q44571":"software","Q48464":"software","Q73484013":"event","Q91945103":"event","Q97358197":"event","Q109923223":"software","Q99569197":"event","Q111520556":"software","Q103846501":"legislation","Q104819488":"event","Q5323129":"standard","Q109616530":"event","Q110091424":"event","Q110680555":"legislation","Q117207654":"legislation","Q124539624":"event","Q11421132":"song","Q173904":"software","Q343568":"software","Q1137596":"software","Q1143118":"software","Q1395452":"software","Q2628513":"software","Q5923736":"software","Q8018891":"software","Q146575":"event","Q214152":"event","Q836854":"legislation","Q1668046":"legislation","Q1190993":"event","Q2309297":"legislation","Q2494151":"legislation","Q2906787":"legislation","Q3117517":"event","Q4942970":"legislation","Q4942972":"legislation","Q5058941":"legislation","Q5058949":"legislation","Q5153054":"legislation","Q5464060":"event","Q6055790":"legislation","Q6024584":"event","Q7462493":"event","Q10655263":"legislation","Q11913426":"legislation","Q12353139":"event","Q13377536":"legislation","Q15633647":"legislation","Q15628675":"event","Q15628696":"event","Q16182777":"event","Q18208174":"legislation","Q18641061":"event","Q19853509":"legislation","Q21035141":"event","Q21035188":"event","Q27491541":"event","Q30014464":"event","Q58857460":"event","Q59594011":"event","Q22702":"legislation","Q1311":"event","Q1314":"event","Q1312":"event","Q1313":"event","Q97957575":"software","Q100350715":"event","Q101545880":"event","Q191903":"regulation","Q3492425":"regulation","Q113540493":"book","Q111474087":"event","Q121346195":"book","Q124472589":"book","Q118342324":"event","Q6774739":"dataset","Q120647798":"event","Q11187442":"dataset","Q125650":"standard","Q161278":"standard","Q1423339":"standard","Q1547957":"standard","Q106046":"book","Q228675":"book","Q1366376":"book","Q1381446":"book","Q1675259":"book","Q1985913":"book","Q20645845":"dataset","Q2089875":"book","Q2484834":"book","Q3592712":"book","Q4305572":"book","Q4781483":"book","Q6189715":"book","Q83390":"event","Q231659":"event","Q419736":"event","Q452539":"event","Q516766":"event","Q693827":"event","Q858893":"event","Q890355":"event","Q976547":"event","Q1426764":"event","Q1431591":"event","Q1532651":"event","Q1614911":"event","Q1741926":"event","Q13522376":"software","Q2155825":"event","Q2164591":"event","Q2359665":"event","Q2382560":"event","Q2511747":"event","Q9139154":"book","Q2685913":"event","Q2883697":"event","Q28135014":"dataset","Q3075768":"event","Q15080196":"standard","Q3268683":"event","Q3775029":"event","Q3892002":"event","Q4670134":"event","Q4804181":"event","Q4857582":"event","Q6190053":"event","Q6519077":"event","Q10475926":"event","Q11379842":"event","Q12040458":"event","Q19226615":"book","Q13097681":"event","Q13136160":"event","Q20826062":"book","Q15964720":"event","Q17145344":"event","Q18326594":"event","Q18450809":"event","Q55648297":"regulation","Q22661774":"event","Q27996721":"event","Q30060492":"event","Q8953":"regulation","Q48773471":"book","Q14116":"software","Q72414054":"standard","Q99495581":"dataset","Q94285357":"book","Q111660893":"broadcast","Q104156769":"book","Q109971781":"standard","Q106203422":"book","Q106645589":"book","Q106771604":"book","Q314537":"regulation","Q467578":"regulation","Q116278248":"software","Q116278254":"software","Q105288154":"event","Q3458253":"regulation","Q3633724":"regulation","Q3936064":"regulation","Q6103524":"regulation","Q120669183":"software","Q6518453":"regulation","Q111671331":"event","Q124331614":"software","Q124539804":"software","Q18838604":"regulation","Q372269":"software","Q451816":"software","Q1149007":"standard","Q831660":"software","Q1421584":"standard","Q1137896":"software","Q1784206":"software","Q1931790":"software","Q2154346":"software","Q3086736":"software","Q28147500":"regulation","Q5172434":"dataset","Q5448778":"software","Q7550843":"dataset","Q7700782":"software","Q7802107":"software","Q7935102":"software","Q10500841":"software","Q11282930":"software","Q73989":"event","Q197973":"event","Q327835":"event","Q734263":"event","Q1194539":"event","Q1216727":"event","Q1735829":"event","Q1780707":"event","Q13717398":"software","Q2456855":"event","Q2904535":"event","Q3277405":"event","Q3317976":"event","Q3322731":"event","Q3327913":"event","Q3543393":"event","Q4264021":"event","Q5053154":"event","Q5405824":"event","Q5405829":"event","Q5614243":"event","Q17147013":"software","Q20706915":"software","Q9395683":"event","Q21055677":"software","Q11878847":"event","Q11891940":"event","Q12981823":"event","Q13079179":"event","Q14916566":"event","Q15782928":"event","Q31398150":"standard","Q25302803":"event","Q37760740":"standard","Q70437274":"regulation","Q48559493":"software","Q49243071":"standard","Q55335263":"software","Q60617925":"software","Q85486397":"regulation","Q62591185":"software","Q64350339":"software","Q54484705":"event","Q14717":"standard","Q98017499":"legislation","Q63303020":"event","Q75846839":"standard","Q64584601":"event","Q102410240":"regulation","Q38087":"event","Q58263":"event","Q108570445":"regulation","Q102040062":"software","Q92268472":"event","Q104760508":"software","Q108099476":"software","Q110505373":"software","Q110874204":"software","Q111417227":"standard","Q101045250":"event","Q1039968":"motion_picture","Q107581410":"event","Q108416019":"event","Q120735094":"software","Q110861071":"event","Q123483270":"standard","Q113773091":"event","Q3764782":"song","Q121359300":"event","Q122983799":"event","Q124216712":"event","Q1061460":"software","Q1102629":"software","Q1377581":"software","Q1640628":"software","Q2098992":"software","Q3297989":"software","Q3765017":"software","Q5156373":"software","Q5380395":"software","Q6821765":"software","Q7831460":"software","Q8074176":"software","Q10430128":"software","Q11335799":"software","Q11376090":"software","Q137161":"event","Q167071":"event","Q167824":"event","Q207932":"event","Q257717":"event","Q277069":"event","Q318963":"event","Q383917":"event","Q523511":"event","Q609114":"event","Q623708":"event","Q633181":"event","Q670146":"event","Q675510":"event","Q814767":"event","Q824202":"event","Q915172":"event","Q964755":"event","Q1137923":"event","Q1500442":"event","Q1712663":"event","Q1783455":"event","Q1886706":"event","Q2111163":"event","Q2296224":"event","Q2339285":"event","Q2534205":"event","Q2534837":"event","Q2607189":"event","Q2671658":"event","Q2918219":"event","Q2972879":"event","Q3206529":"event","Q3306998":"event","Q3855312":"event","Q3997308":"event","Q4178567":"event","Q5249063":"event","Q6312465":"event","Q7110108":"event","Q7304576":"event","Q7603898":"event","Q7690791":"event","Q9309947":"event","Q10332600":"event","Q10474324":"event","Q10585097":"event","Q11786428":"event","Q12351569":"event","Q12409183":"event","Q13420159":"event","Q13470307":"event","Q25712511":"software","Q14549021":"event","Q28757850":"standard","Q18669741":"event","Q21224061":"event","Q27070651":"event","Q39170567":"standard","Q41335025":"event","Q51616":"event","Q116270065":"motion_picture","Q98271319":"event","Q124670108":"song","Q668312":"motion_picture","Q1046788":"motion_picture","Q110903900":"book","Q106635331":"event","Q8049065":"motion_picture","Q11349807":"motion_picture","Q12959682":"motion_picture","Q115861680":"event","Q18655723":"motion_picture","Q2062060":"software","Q113497":"book","Q1536561":"book","Q175233":"event","Q181232":"event","Q352785":"event","Q477099":"event","Q491332":"event","Q653954":"event","Q765534":"event","Q773129":"event","Q861883":"event","Q882761":"event","Q1074009":"event","Q1209093":"event","Q1216498":"event","Q1231614":"event","Q1267445":"event","Q1269210":"event","Q1358264":"event","Q1687964":"event","Q1768785":"event","Q1891923":"event","Q2145417":"event","Q2398220":"event","Q2477607":"event","Q2554501":"event","Q2694862":"event","Q3105649":"event","Q3178363":"event","Q3757977":"event","Q3909866":"event","Q3968473":"event","Q4127370":"event","Q4906371":"event","Q5100561":"event","Q5138229":"event","Q5146967":"event","Q5185108":"event","Q5566841":"event","Q5568541":"event","Q5577290":"event","Q5954306":"event","Q6060246":"event","Q6406489":"event","Q6496189":"event","Q6522578":"event","Q6671040":"event","Q6972844":"event","Q6978652":"event","Q7210011":"event","Q7320524":"event","Q7362553":"event","Q7435636":"event","Q7437755":"event","Q7450693":"event","Q7502893":"event","Q7522912":"event","Q7573872":"event","Q7585971":"event","Q7602628":"event","Q7987664":"event","Q10307711":"event","Q10659558":"event","Q10872326":"event","Q10891647":"event","Q11389697":"event","Q11512390":"event","Q16056693":"event","Q16950225":"event","Q17012060":"event","Q17012083":"event","Q17055683":"event","Q17085818":"event","Q25616506":"book","Q19646251":"event","Q20056255":"event","Q20891577":"event","Q24060932":"event","Q28187305":"event","Q48999145":"book","Q48734839":"event","Q53074392":"event","Q64739814":"event","Q66473967":"event","Q7973":"event","Q109358431":"motion_picture","Q77036421":"event","Q86518131":"event","Q115945663":"software","Q118189277":"software","Q118876973":"software","Q118901809":"software","Q108571719":"event","Q123054280":"software","Q124237017":"software","Q124259707":"software","Q114428959":"event","Q115694563":"event","Q1273568":"broadcast","Q120907462":"event","Q120907475":"event","Q120907506":"event","Q120907518":"event","Q124834869":"event","Q477202":"software","Q1155702":"software","Q1474218":"software","Q1807085":"software","Q1934532":"software","Q2070573":"software","Q2298125":"software","Q4036754":"software","Q4228982":"software","Q4497428":"software","Q4835082":"software","Q7593080":"software","Q7894144":"software","Q8073201":"software","Q113025278":"performance","Q10622204":"software","Q117211705":"performance","Q2111319":"event","Q3587619":"event","Q3587616":"event","Q4418025":"event","Q5037987":"event","Q5153879":"event","Q17010649":"software","Q6557456":"event","Q7202198":"event","Q125088409":"performance","Q10397458":"event","Q11376187":"event","Q12409466":"event","Q16979465":"event","Q29167474":"standard","Q29167475":"standard","Q29167476":"standard","Q29167477":"standard","Q29167495":"standard","Q17315159":"event","Q20851363":"event","Q20851418":"event","Q193217":"performance","Q210854":"performance","Q359607":"performance","Q442133":"performance","Q448738":"performance","Q599877":"performance","Q630161":"performance","Q704073":"performance","Q774475":"performance","Q834566":"performance","Q988502":"performance","Q1432540":"performance","Q1674378":"performance","Q1818108":"performance","Q1917591":"performance","Q2995521":"performance","Q3228974":"performance","Q3981262":"performance","Q4947422":"performance","Q5765288":"performance","Q51673934":"software","Q19754215":"performance","Q56351992":"event","Q47112":"performance","Q104884110":"software","Q95633321":"event","Q107466928":"software","Q98562826":"event","Q110651967":"software","Q111847169":"software","Q112121811":"software","Q104919020":"event","Q111950433":"book","Q6979507":"speech","Q111903402":"event","Q113861709":"event","Q1735630":"dataset","Q2932613":"dataset","Q123133308":"book","Q3399828":"dataset","Q124573046":"book","Q6010762":"dataset","Q6656179":"dataset","Q12090051":"dataset","Q180122":"standard","Q492197":"standard","Q841708":"standard","Q507703":"software","Q578173":"software","Q1188495":"standard","Q1193354":"standard","Q1421681":"standard","Q1653444":"standard","Q1187338":"software","Q1252773":"software","Q2164944":"software","Q2746589":"standard","Q2747387":"standard","Q2481505":"software","Q2665141":"software","Q16825889":"dataset","Q3687628":"software","Q4681865":"software","Q188602":"book","Q5161689":"software","Q5970258":"standard","Q5970262":"standard","Q682203":"book","Q2558132":"book","Q2605476":"book","Q2624969":"book","Q2891173":"book","Q3920975":"book","Q10566612":"standard","Q10478832":"software","Q384765":"legislation","Q576822":"event","Q7570223":"book","Q7982018":"book","Q8026382":"book","Q1586038":"event","Q2207090":"event","Q2857712":"event","Q3178415":"event","Q3900775":"legislation","Q15995156":"standard","Q10707987":"book","Q16178184":"software","Q16627794":"software","Q5870887":"event","Q7142931":"event","Q7203505":"event","Q7551154":"event","Q7551158":"event","Q15735174":"book","Q18121429":"book","Q18340514":"book","Q12010205":"event","Q19255325":"book","Q20949719":"book","Q16561343":"event","Q17089411":"event","Q17150480":"event","Q41794672":"software","Q59138843":"software","Q59138899":"software","Q59138925":"software","Q59139052":"software","Q59154480":"software","Q59154494":"software","Q59851707":"standard","Q56653708":"book","Q62474270":"book","Q45842":"software","Q61358194":"event","Q41247":"event","Q85369493":"event","Q96882649":"software","Q100163998":"book","Q106248240":"software","Q108480878":"software","Q108702521":"software","Q105502076":"book","Q112972318":"software","Q113244968":"software","Q113441443":"software","Q114007610":"software","Q117816878":"dataset","Q124419055":"dataset","Q1224984":"dataset","Q1235234":"dataset","Q123458585":"book","Q123458629":"book","Q123466769":"book","Q123471666":"book","Q2396005":"song","Q2713150":"collection","Q5227240":"dataset","Q12057995":"dataset","Q12328550":"dataset","Q11792325":"song","Q260080":"software","Q285237":"software","Q758895":"software","Q1066707":"software","Q1545483":"software","Q1637192":"software","Q2433210":"software","Q2560413":"software","Q3866394":"software","Q4047728":"software","Q4048342":"software","Q4189732":"software","Q5433600":"software","Q966479":"book","Q1958065":"book","Q2052999":"book","Q21040941":"dataset","Q2481042":"book","Q7395272":"software","Q11190216":"software","Q11194160":"software","Q11305042":"software","Q1984664":"review","Q12127664":"software","Q2665700":"review","Q3058675":"review","Q3780403":"review","Q4367188":"review","Q4382347":"review","Q2910009":"event","Q4017617":"event","Q15995158":"standard","Q15995157":"standard","Q11781628":"book","Q11986043":"book","Q17083583":"software","Q12566525":"book","Q11545910":"event","Q11567715":"event","Q23930024":"software","Q24534575":"standard","Q25100938":"standard","Q25493120":"event","Q28053962":"review","Q56316865":"dataset","Q66656823":"dataset","Q54328396":"software","Q54953993":"standard","Q55739527":"software","Q56191369":"software","Q56196027":"software","Q48817613":"review","Q59326100":"standard","Q65071978":"standard","Q65769812":"book","Q105685577":"song","Q93440972":"software","Q93723008":"software","Q100354072":"software","Q98391050":"review","Q98607365":"review","Q108655245":"book","Q108655406":"book","Q108655430":"book","Q116236836":"software","Q106676473":"event","Q107504929":"event","Q108311215":"legislation","Q5474477":"regulation","Q120920449":"standard","Q109588571":"event","Q124613241":"event","Q267151":"software","Q272597":"software","Q642215":"software","Q756637":"software","Q1300758":"standard","Q828322":"software","Q846224":"software","Q1186471":"software","Q1758006":"standard","Q1330336":"software","Q1422746":"software","Q2070892":"software","Q2622299":"software","Q3548041":"standard","Q4282636":"software","Q5014368":"software","Q5156020":"software","Q5165064":"software","Q5906732":"software","Q7265518":"software","Q7705752":"software","Q7935188":"software","Q10397513":"software","Q619801":"event","Q864968":"event","Q906577":"event","Q1637842":"legislation","Q1743028":"event","Q13636504":"software","Q2238822":"event","Q2390763":"event","Q2920383":"legislation","Q15219210":"standard","Q3846508":"event","Q16525012":"standard","Q5178966":"event","Q5419114":"event","Q6927120":"legislation","Q7002556":"legislation","Q7063753":"legislation","Q6936320":"event","Q8189896":"event","Q21030988":"software","Q21169670":"software","Q11645848":"event","Q12410259":"legislation","Q24864148":"standard","Q24789150":"software","Q30680823":"software","Q19692163":"event","Q24894176":"event","Q30130128":"event","Q54882268":"collection","Q54882450":"collection","Q34377357":"event","Q52888003":"event","Q52888124":"event","Q55004488":"event","Q67650225":"software","Q61125769":"legislation","Q113687694":"motion_picture","Q84314295":"event","Q96475230":"software","Q109406736":"song","Q97185377":"legislation","Q108739976":"software","Q109496685":"software","Q109657450":"software","Q110647054":"software","Q113085760":"standard","Q1437388":"dataset","Q1925081":"dataset","Q3882785":"dataset","Q6546616":"dataset","Q6822257":"dataset","Q7247296":"dataset","Q261918":"software","Q1370727":"software","Q1981678":"standard","Q1632665":"software","Q2368049":"software","Q6109327":"software","Q7978562":"software","Q10515305":"standard","Q1351781":"event","Q1801994":"event","Q1895188":"event","Q3586860":"event","Q3586864":"event","Q5354603":"event","Q5354658":"event","Q5354664":"event","Q5354677":"event","Q5354684":"event","Q5354694":"event","Q5354705":"event","Q5354710":"event","Q5354711":"event","Q5354708":"event","Q5354722":"event","Q5354741":"event","Q5354756":"event","Q5354762":"event","Q5354763":"event","Q5354761":"event","Q5354765":"event","Q5354770":"event","Q5354776":"event","Q5354777":"event","Q5354787":"event","Q5354788":"event","Q5354796":"event","Q5354804":"event","Q5354832":"event","Q5354848":"event","Q5354861":"event","Q5354870":"event","Q5354879":"event","Q5354876":"event","Q5354880":"event","Q5354893":"event","Q5354901":"event","Q5354916":"event","Q7892462":"event","Q7892463":"event","Q7892466":"event","Q7892464":"event","Q7892465":"event","Q7892468":"event","Q11611231":"event","Q16191258":"event","Q16974574":"event","Q16974580":"event","Q16974590":"event","Q18395045":"event","Q18589086":"event","Q21028317":"event","Q22019872":"event","Q25022058":"event","Q25080094":"event","Q37824650":"software","Q28368813":"event","Q28368897":"event","Q28402154":"event","Q28404860":"event","Q28404906":"event","Q28405010":"event","Q28405094":"event","Q39087072":"event","Q55315917":"event","Q97124825":"event","Q108878058":"software","Q98382194":"event","Q98382202":"event","Q98382211":"event","Q98382209":"event","Q98382216":"event","Q98382413":"event","Q187909":"webpage","Q219760":"webpage","Q553085":"webpage","Q666586":"webpage","Q829896":"webpage","Q842153":"webpage","Q1877277":"webpage","Q1945774":"webpage","Q1962840":"webpage","Q2080521":"webpage","Q2128165":"webpage","Q2517039":"regulation","Q2751813":"regulation","Q2858704":"regulation","Q3104453":"regulation","Q3289824":"webpage","Q3748441":"webpage","Q5323665":"webpage","Q5412217":"webpage","Q6804271":"webpage","Q7246339":"webpage","Q7247776":"webpage","Q7403204":"webpage","Q111795548":"event","Q113840080":"event","Q11643942":"webpage","Q12683680":"webpage","Q13033698":"webpage","Q13439060":"regulation","Q13592976":"webpage","Q13582250":"regulation","Q118517006":"event","Q118867881":"event","Q7554009":"dataset","Q121093770":"event","Q7977959":"dataset","Q122196090":"event","Q20708386":"webpage","Q20723149":"regulation","Q107415":"software","Q1193246":"software","Q1389380":"software","Q1641902":"software","Q16354757":"dataset","Q3025858":"software","Q17050075":"dataset","Q3715530":"software","Q28142754":"webpage","Q5133829":"software","Q30121737":"webpage","Q6044094":"software","Q6165271":"software","Q6770906":"software","Q7574057":"software","Q11668228":"software","Q719632":"event","Q896995":"event","Q1158325":"event","Q1158377":"event","Q1327767":"event","Q1350243":"event","Q1499496":"event","Q1504429":"event","Q1798173":"event","Q1872987":"event","Q2314207":"event","Q2460866":"event","Q3143333":"event","Q4423898":"event","Q18156745":"software","Q18377772":"software","Q7270559":"event","Q15942549":"event","Q26772977":"event","Q56316739":"dataset","Q56316737":"dataset","Q56316745":"dataset","Q62210692":"dataset","Q62528509":"dataset","Q73190050":"regulation","Q41707977":"event","Q41708808":"event","Q54593011":"event","Q81314568":"dataset","Q98399252":"regulation","Q104262216":"webpage","Q96626931":"dataset","Q111591431":"regulation","Q112977308":"webpage","Q105846678":"dataset","Q117085231":"regulation","Q104767049":"broadcast","Q123337157":"webpage","Q123487813":"webpage","Q113006088":"dataset","Q113006099":"dataset","Q123198290":"broadcast","Q103413604":"event","Q763501":"map","Q1070654":"regulation","Q2111129":"regulation","Q105721759":"event","Q3432172":"regulation","Q4039164":"regulation","Q109046952":"event","Q110060431":"event","Q122766381":"software","Q124040759":"software","Q112679373":"event","Q1359130":"dataset","Q115371018":"event","Q116855295":"event","Q123478203":"event","Q124665367":"event","Q122207":"software","Q208189":"software","Q747499":"standard","Q588289":"software","Q603555":"software","Q1208648":"standard","Q941283":"software","Q105637123":"performance","Q1678488":"standard","Q12485565":"broadcast","Q2176159":"software","Q2454898":"software","Q2822898":"software","Q202208":"book","Q10334075":"software","Q492175":"legislation","Q83145":"event","Q208704":"event","Q296560":"event","Q678114":"event","Q723835":"event","Q835803":"event","Q841144":"event","Q864897":"event","Q919964":"event","Q1002704":"event","Q1006326":"event","Q1079023":"event","Q1251530":"event","Q1451837":"event","Q1612155":"event","Q1707715":"event","Q1722653":"event","Q1778874":"event","Q1970362":"event","Q2011793":"event","Q2213936":"event","Q2294714":"event","Q2367194":"event","Q2368103":"event","Q2377567":"event","Q2536650":"event","Q2558684":"event","Q2748940":"event","Q9356162":"book","Q3351641":"event","Q4210313":"event","Q4336086":"event","Q4683179":"event","Q4851867":"event","Q4859824":"event","Q5449003":"legislation","Q5449006":"legislation","Q5449007":"legislation","Q5449005":"legislation","Q5449009":"legislation","Q5185963":"event","Q17068342":"software","Q18822231":"software","Q9383264":"event","Q11284677":"event","Q12592413":"event","Q25110971":"software","Q18153387":"event","Q1620079":"performance","Q30688666":"legislation","Q41755863":"event","Q60617834":"software","Q55226612":"event","Q67650958":"software","Q65232524":"event","Q67185648":"event","Q111997258":"broadcast","Q97179611":"book","Q100708729":"legislation","Q108657675":"event","Q112214020":"event","Q5449126":"song","Q121568393":"event","Q7899987":"song","Q16141944":"song","Q17624049":"dataset","Q16674705":"song","Q18692990":"dataset","Q17990546":"song","Q20043946":"song","Q22808060":"song","Q2395474":"event","Q2559808":"event","Q2642253":"event","Q2643912":"event","Q2990946":"event","Q3032333":"event","Q3113716":"event","Q3197054":"event","Q3345428":"event","Q3665774":"event","Q15968274":"software","Q4566043":"event","Q11345451":"book","Q5399932":"event","Q5516520":"event","Q5569316":"event","Q7382029":"event","Q7569793":"event","Q7963823":"event","Q8350616":"event","Q10383448":"event","Q11782814":"event","Q13357840":"event","Q13471788":"event","Q16203068":"event","Q16481903":"event","Q16481910":"event","Q16533779":"event","Q16846845":"event","Q17520343":"event","Q18572872":"event","Q19611296":"event","Q19688404":"event","Q19899595":"event","Q19984095":"event","Q20182534":"event","Q20718275":"event","Q21006888":"event","Q21008603":"event","Q21013420":"event","Q21501489":"event","Q22691537":"event","Q22908614":"event","Q26156310":"event","Q29383137":"event","Q56303227":"song","Q62686530":"dataset","Q62686578":"dataset","Q62686625":"dataset","Q62686695":"dataset","Q62686766":"dataset","Q62686809":"dataset","Q62686889":"dataset","Q62686967":"dataset","Q62687071":"dataset","Q62687176":"dataset","Q62687230":"dataset","Q62687423":"dataset","Q38026890":"event","Q48004378":"event","Q51036091":"event","Q55131606":"event","Q55655315":"event","Q56068367":"event","Q57305027":"event","Q58109373":"event","Q61748301":"event","Q61748313":"event","Q89668267":"dataset","Q67472109":"event","Q106120739":"song","Q108478945":"dataset","Q84263257":"event","Q111094140":"dataset","Q88976016":"event","Q97670872":"event","Q1029920":"motion_picture","Q104537393":"event","Q116081600":"software","Q106314805":"event","Q108444995":"event","Q7551149":"motion_picture","Q224377":"song","Q283912":"song","Q1753264":"song","Q3935817":"dataset","Q17004170":"regulation","Q5657245":"song","Q170434":"software","Q877050":"standard","Q893139":"standard","Q474157":"software","Q657881":"software","Q1653454":"standard","Q2645429":"standard","Q2632782":"software","Q3146614":"standard","Q3146613":"standard","Q3146619":"standard","Q3146617":"standard","Q3146623":"standard","Q3146620":"standard","Q3146621":"standard","Q3146625":"standard","Q3146628":"standard","Q3146629":"standard","Q16676116":"dataset","Q4994515":"software","Q7448307":"standard","Q12317905":"standard","Q721067":"event","Q780993":"event","Q1044168":"event","Q25094598":"song","Q1370066":"event","Q2992826":"event","Q4765148":"event","Q6631808":"event","Q20202982":"standard","Q13744949":"event","Q25595203":"software","Q15991290":"event","Q15991303":"event","Q28130009":"software","Q18536323":"event","Q20716290":"legislation","Q23498202":"event","Q26857732":"event","Q28458043":"event","Q35069054":"event","Q42046473":"event","Q56827160":"standard","Q56827161":"standard","Q63067479":"software","Q51792175":"event","Q89897004":"regulation","Q89273633":"broadcast","Q108783737":"speech","Q75178934":"event","Q75179210":"event","Q75179296":"event","Q75179330":"event","Q112841248":"motion_picture","Q92891824":"standard","Q92608103":"software","Q108146417":"broadcast","Q110408389":"broadcast","Q112112926":"song","Q124390801":"motion_picture","Q22575733":"periodical","Q117467240":"broadcast","Q110314248":"software","Q124358305":"song","Q116908607":"software","Q106725777":"event","Q106726544":"event","Q107579066":"event","Q112679158":"event","Q113334375":"event","Q205748":"dataset","Q641172":"dataset","Q114066111":"event","Q738653":"dataset","Q1484802":"dataset","Q1914829":"dataset","Q2074581":"dataset","Q115809235":"event","Q117150503":"event","Q117150505":"event","Q7069643":"dataset","Q124059801":"event","Q124399518":"event","Q383826":"software","Q415298":"software","Q1047696":"software","Q1146030":"software","Q1326260":"software","Q1327157":"software","Q1369131":"software","Q2612841":"standard","Q2872595":"software","Q3513811":"standard","Q4751062":"software","Q5309097":"software","Q7622676":"standard","Q7360327":"software","Q7360332":"software","Q252496":"event","Q6888651":"book","Q335918":"event","Q471881":"event","Q505654":"event","Q567241":"event","Q695086":"event","Q733953":"event","Q861060":"event","Q896606":"event","Q1360957":"event","Q1473577":"event","Q1474208":"event","Q1728634":"event","Q1937932":"event","Q1944134":"event","Q2190250":"event","Q2657439":"event","Q3246994":"legislation","Q2899221":"event","Q2916312":"event","Q3401418":"event","Q3642692":"event","Q3722602":"event","Q4798478":"event","Q5508174":"event","Q5653655":"event","Q5828909":"event","Q6112627":"event","Q6112625":"event","Q6112629":"event","Q7049544":"event","Q7900311":"event","Q9070819":"event","Q10579078":"event","Q10641252":"event","Q10938245":"event","Q11604952":"legislation","Q11502138":"event","Q11953147":"event","Q16241150":"event","Q27961633":"software","Q17069364":"event","Q17620066":"event","Q22251965":"event","Q4208567":"performance","Q4469861":"performance","Q28692991":"event","Q28741065":"event","Q30133162":"event","Q65089335":"dataset","Q55621552":"software","Q50251850":"event","Q53865702":"event","Q60740684":"event","Q60823510":"event","Q61070574":"event","Q7983":"event","Q52857":"event","Q73375913":"legislation","Q88358807":"event","Q97487177":"event","Q110393272":"software","Q105687604":"event","Q117474613":"software","Q114480812":"book","Q109606010":"event","Q11452875":"motion_picture","Q114389267":"event","Q114799847":"event","Q115223968":"event","Q115481124":"event","Q120753396":"event","Q122166972":"event","Q124081964":"event","Q238162":"standard","Q1049935":"software","Q1076355":"software","Q1109779":"software","Q1265717":"software","Q1298366":"software","Q1397886":"software","Q1952448":"standard","Q1529437":"software","Q1882110":"software","Q2641207":"software","Q3456907":"standard","Q3434466":"software","Q4042979":"software","Q4045294":"software","Q4633137":"standard","Q258331":"book","Q5369900":"software","Q678489":"book","Q6026738":"standard","Q773298":"book","Q973917":"book","Q5923834":"software","Q1430795":"book","Q2713111":"book","Q3414877":"book","Q9332384":"software","Q4926165":"book","Q10856377":"software","Q11198227":"software","Q11333919":"software","Q172663":"event","Q429010":"event","Q1025586":"event","Q1128896":"event","Q1414383":"event","Q2358476":"event","Q2392493":"event","Q2400674":"event","Q2594601":"event","Q4150336":"event","Q11267316":"book","Q11417718":"book","Q11489321":"book","Q5017113":"event","Q11656992":"book","Q5388979":"event","Q5513458":"event","Q5654698":"event","Q5757689":"event","Q7663718":"review","Q10542416":"event","Q27578057":"standard","Q25338361":"book","Q30921678":"standard","Q22266583":"event","Q29976900":"book","Q2078967":"performance","Q28692660":"event","Q50493233":"book","Q49166289":"event","Q61654424":"software","Q61722278":"software","Q51297900":"event","Q56879316":"event","Q59773383":"event","Q71683375":"software","Q61756860":"event","Q61888674":"event","Q102430221":"broadcast","Q116784134":"motion_picture","Q105906396":"software","Q107631040":"software","Q97730452":"event","Q111515094":"software","Q106690408":"event","Q106691665":"event","Q112183379":"event","Q112678984":"event","Q112679015":"event","Q112679049":"event","Q112679246":"event","Q112679256":"event","Q219897":"dataset","Q116241618":"event","Q1541245":"song","Q3482005":"dataset","Q17092694":"standard","Q829179":"book","Q909011":"book","Q1363686":"book","Q2263479":"book","Q2892425":"book","Q3012407":"book","Q33146420":"standard","Q459555":"event","Q890055":"event","Q7786699":"book","Q7798796":"book","Q2115187":"event","Q2406578":"event","Q3497179":"event","Q3586558":"event","Q3586559":"event","Q3587380":"event","Q4128590":"event","Q4128699":"event","Q4376781":"event","Q5518574":"event","Q6067486":"event","Q6808714":"event","Q7185370":"event","Q7241485":"event","Q7405556":"event","Q10638581":"event","Q10862680":"event","Q11366960":"event","Q11930795":"event","Q12046982":"event","Q12778811":"event","Q13053377":"event","Q15146717":"event","Q15779876":"event","Q16361747":"event","Q17301632":"event","Q18698522":"event","Q19801853":"event","Q20053795":"event","Q22337503":"event","Q22341340":"event","Q24069004":"event","Q26267877":"event","Q26338179":"event","Q28545697":"event","Q28664499":"event","Q29054285":"event","Q30748068":"event","Q31297261":"event","Q47484406":"event","Q55694589":"book","Q50284081":"event","Q54257384":"event","Q60676589":"event","Q51632":"book","Q47566":"event","Q97212046":"book","Q106355253":"book","Q106355975":"book","Q118603120":"software","Q121011427":"software","Q121023939":"software","Q121036440":"software","Q121630840":"software","Q121717967":"software","Q112679272":"event","Q112679286":"event","Q112679378":"event","Q112679384":"event","Q112691467":"event","Q112691656":"event","Q112709981":"event","Q112710021":"event","Q112710095":"event","Q112892898":"event","Q113531993":"event","Q118185588":"event","Q124613253":"event","Q124630083":"event","Q124635364":"event","Q860750":"software","Q1478420":"software","Q2187138":"software","Q3177952":"software","Q4438162":"software","Q7089173":"software","Q546974":"legislation","Q479102":"event","Q890297":"event","Q1154859":"event","Q1758841":"event","Q2062773":"event","Q2613628":"event","Q2631354":"event","Q3045874":"event","Q3070358":"event","Q3234433":"event","Q3592923":"event","Q3954604":"event","Q5001982":"event","Q5019671":"event","Q5110343":"event","Q5326884":"event","Q6941964":"event","Q10422418":"event","Q10466073":"event","Q10497437":"event","Q10716079":"event","Q11612589":"legislation","Q11710615":"event","Q11787926":"event","Q13156702":"event","Q13407099":"event","Q14025305":"event","Q14624533":"event","Q15304243":"event","Q15621523":"event","Q16821656":"event","Q20737114":"event","Q25303529":"event","Q27148732":"event","Q28057350":"event","Q29510735":"event","Q30740836":"event","Q31842404":"event","Q38276571":"legislation","Q60256879":"software","Q61719251":"software","Q61721552":"software","Q61793886":"software","Q62019045":"software","Q62019057":"software","Q62019077":"software","Q62019104":"software","Q62022558":"software","Q63465202":"software","Q63466098":"software","Q63644993":"software","Q63645033":"software","Q63645108":"software","Q63645120":"software","Q63915027":"software","Q63915162":"software","Q63915391":"software","Q71443011":"software","Q71443612":"software","Q71467408":"software","Q71468194":"software","Q71468383":"software","Q71471444":"software","Q71471935":"software","Q71472862":"software","Q71474253":"software","Q71475833":"software","Q71476528":"software","Q93876174":"software","Q97097760":"software","Q99015944":"software","Q116193822":"standard","Q114863724":"book","Q121065841":"standard","Q120669239":"software","Q122619878":"standard","Q110733702":"event","Q7865909":"regulation","Q112727472":"event","Q12304354":"article-newspaper","Q117305064":"event","Q17086007":"regulation","Q5881246":"song","Q124414659":"event","Q124419474":"event","Q124477507":"event","Q93249":"software","Q373110":"software","Q567624":"software","Q1197451":"standard","Q745881":"software","Q833766":"software","Q1493335":"standard","Q1037622":"software","Q2025943":"software","Q3319112":"standard","Q3905195":"software","Q4713339":"software","Q4774499":"software","Q4774525":"software","Q4825890":"software","Q6071527":"standard","Q5656691":"software","Q10655706":"software","Q2212408":"review","Q884103":"event","Q13429867":"software","Q2242764":"event","Q19750814":"standard","Q19750831":"standard","Q19750832":"standard","Q21062105":"standard","Q11240532":"event","Q23905313":"standard","Q12057768":"event","Q26921397":"software","Q27928454":"standard","Q17317625":"event","Q30106213":"standard","Q856872":"performance","Q3930216":"performance","Q56612606":"standard","Q56293017":"event","Q40612":"software","Q60609202":"event","Q65157816":"event","Q77133429":"event","Q96196800":"software","Q97148237":"standard","Q97148958":"standard","Q88006977":"event","Q99904346":"software","Q98608942":"event","Q1452606":"regulation","Q1511642":"regulation","Q104830199":"event","Q1885318":"regulation","Q2425869":"regulation","Q3306798":"regulation","Q107120683":"event","Q4368931":"regulation","Q7973803":"regulation","Q112220249":"event","Q114839529":"event","Q4499627":"song","Q120140629":"event","Q1163955":"standard","Q3702356":"standard","Q3257939":"software","Q30680962":"regulation","Q211830":"event","Q467557":"event","Q7131937":"book","Q12871890":"standard","Q1017623":"event","Q12644279":"software","Q1531944":"event","Q1557252":"event","Q1664977":"event","Q2123469":"event","Q2161814":"event","Q2516933":"event","Q3509557":"event","Q4115029":"event","Q12503194":"book","Q6433093":"event","Q7855108":"event","Q11104487":"event","Q17189867":"event","Q17992548":"event","Q18662453":"event","Q19989676":"event","Q31884713":"software","Q52279922":"event","Q65947619":"software","Q56391631":"event","Q56391644":"event","Q56391659":"event","Q56391668":"event","Q56391785":"event","Q56391824":"event","Q56391874":"event","Q65215304":"event","Q65218610":"event","Q79136391":"standard","Q105561045":"regulation","Q124624624":"regulation","Q95316831":"event","Q113359248":"software","Q106638042":"event","Q109536021":"event","Q112251049":"event","Q113529257":"event","Q114051342":"event","Q114880182":"regulation","Q116056840":"event","Q116102883":"event","Q116207838":"event","Q117384360":"event","Q118442006":"event","Q118442022":"event","Q118442028":"event","Q118442179":"event","Q118442183":"event","Q118442186":"event","Q118501455":"event","Q283390":"software","Q283527":"software","Q283827":"software","Q1060131":"standard","Q815820":"software","Q1629076":"standard","Q1325927":"software","Q4634986":"software","Q5182402":"software","Q556900":"book","Q867870":"book","Q976646":"book","Q110606359":"performance","Q1100782":"book","Q6953261":"software","Q3481480":"book","Q11064557":"software","Q261282":"event","Q455444":"event","Q467938":"event","Q468731":"event","Q485644":"event","Q488526":"event","Q643292":"event","Q985655":"event","Q1136848":"event","Q1202197":"event","Q1351369":"event","Q1381119":"event","Q1484421":"event","Q1881278":"event","Q2139567":"event","Q2450200":"event","Q2951085":"event","Q3127244":"event","Q18351283":"software","Q10914523":"event","Q11505497":"event","Q25377002":"software","Q15955568":"event","Q18575573":"event","Q30671703":"software","Q20389574":"event","Q20739115":"event","Q22328415":"event","Q2956224":"performance","Q26805735":"event","Q39185662":"software","Q7310665":"performance","Q30178840":"event","Q31886929":"event","Q105581148":"periodical","Q39046297":"event","Q48995876":"event","Q61791393":"software","Q52230346":"event","Q54803583":"event","Q61951978":"event","Q65218611":"event","Q72164270":"book","Q47223":"event","Q72846320":"event","Q74595662":"event","Q83493046":"event","Q96381517":"software","Q85486527":"event","Q85486525":"event","Q100235486":"standard","Q97191269":"event","Q97191284":"event","Q97203350":"event","Q97457639":"event","Q97457640":"event","Q97457641":"event","Q97496498":"event","Q114900488":"software","Q115223904":"software","Q115910931":"software","Q115953246":"software","Q1714218":"regulation","Q105754052":"event","Q106464633":"event","Q108430097":"event","Q6710944":"regulation","Q121409954":"software","Q124169176":"software","Q441261":"dataset","Q457843":"dataset","Q783287":"dataset","Q1115961":"dataset","Q1713174":"dataset","Q1031690":"collection","Q1158386":"collection","Q5160283":"dataset","Q3229261":"collection","Q118867677":"event","Q6496560":"song","Q133973":"standard","Q188860":"software","Q193231":"software","Q545406":"software","Q580334":"software","Q913697":"software","Q1199316":"software","Q25393029":"regulation","Q1780936":"software","Q2164323":"software","Q2391834":"software","Q16169904":"dataset","Q2640620":"software","Q3146606":"standard","Q3146610":"standard","Q3146609":"standard","Q3146612":"standard","Q4343954":"software","Q5145831":"software","Q6456989":"software","Q5727698":"book","Q11195895":"software","Q11241197":"software","Q11311943":"software","Q75673":"event","Q138321":"event","Q255868":"event","Q432935":"event","Q594939":"event","Q1472138":"event","Q1555379":"event","Q2365689":"event","Q2591786":"event","Q2617740":"event","Q2617907":"event","Q2640756":"event","Q2992544":"event","Q3492902":"event","Q15618492":"software","Q17073339":"software","Q17088419":"software","Q6827710":"event","Q10576360":"event","Q35121365":"song","Q11580520":"event","Q11626854":"event","Q11627001":"event","Q11630000":"event","Q14554958":"event","Q28059995":"software","Q28807008":"event","Q46145450":"software","Q48745331":"event","Q48745451":"event","Q55521727":"event","Q73626664":"software","Q62609428":"event","Q62640311":"event","Q89349829":"dataset","Q89374120":"dataset","Q89697681":"dataset","Q98459187":"dataset","Q98528181":"song","Q84588901":"event","Q84589021":"event","Q109626458":"song","Q101111163":"software","Q116690325":"song","Q107819359":"software","Q114210323":"software","Q115102029":"software","Q104519344":"event","Q116790414":"software","Q105581094":"event","Q114002117":"book","Q109020953":"event","Q109359060":"event","Q121432229":"software","Q116741777":"book","Q110805611":"event","Q113622619":"legislation","Q120069218":"event","Q121479065":"event","Q191943":"standard","Q206494":"standard","Q193424":"software","Q212474":"software","Q908608":"standard","Q1092688":"standard","Q1193479":"standard","Q1414155":"standard","Q1142183":"software","Q1653395":"standard","Q1197124":"software","Q1198122":"software","Q2154077":"standard","Q106654239":"performance","Q1993135":"software","Q2281709":"software","Q2509091":"software","Q2527949":"dataset","Q2639241":"software","Q3306713":"standard","Q3058243":"software","Q18889352":"dataset","Q429767":"book","Q715768":"book","Q7269032":"standard","Q7063032":"software","Q2477849":"book","Q3802469":"book","Q4082733":"book","Q4400636":"book","Q5147136":"book","Q5192593":"book","Q1048801":"event","Q1143267":"event","Q1254652":"event","Q1539080":"event","Q1570510":"event","Q2116757":"event","Q2319714":"event","Q11288680":"book","Q5368590":"event","Q5395902":"event","Q12164319":"book","Q17232662":"software","Q5919191":"event","Q123009321":"performance","Q18344624":"software","Q124333204":"performance","Q19765952":"software","Q21490628":"software","Q13732971":"event","Q19877485":"event","Q31839143":"software","Q24833619":"event","Q3116754":"performance","Q28456918":"event","Q10360435":"performance","Q48837969":"software","Q56324333":"software","Q58325919":"software","Q58898459":"software","Q60616268":"software","Q28721502":"performance","Q65007441":"software","Q56315696":"event","Q71679871":"software","Q11871":"book","Q70113667":"event","Q92257769":"software","Q96146141":"software","Q85852394":"event","Q99542992":"software","Q95612776":"book","Q107576803":"book","Q101246147":"event","Q108100335":"book","Q109315463":"book","Q2889327":"dataset","Q1381447":"song","Q7551852":"standard","Q9326126":"standard","Q82991":"event","Q164754":"event","Q190042":"event","Q205570":"event","Q239973":"event","Q270088":"event","Q273469":"event","Q285389":"event","Q12237265":"standard","Q327110":"event","Q422986":"event","Q428526":"event","Q520006":"event","Q551817":"event","Q596886":"event","Q610865":"event","Q627485":"event","Q639244":"event","Q646317":"event","Q661101":"event","Q765057":"event","Q806391":"event","Q819951":"event","Q845098":"event","Q850292":"event","Q909300":"event","Q911134":"event","Q932452":"event","Q936619":"event","Q943691":"event","Q953415":"event","Q975128":"event","Q979298":"event","Q1034242":"event","Q1055047":"event","Q1112779":"event","Q1112958":"event","Q1128219":"event","Q1141381":"event","Q1145925":"event","Q1162779":"event","Q1191199":"event","Q1205063":"event","Q1205216":"event","Q1284388":"event","Q1290715":"event","Q1312359":"event","Q1318642":"event","Q1319876":"event","Q1388456":"event","Q1390470":"event","Q1399526":"event","Q1413606":"event","Q1415179":"event","Q1438162":"event","Q1473250":"event","Q1515869":"event","Q1517419":"event","Q1523681":"event","Q1534697":"event","Q1571546":"event","Q1571544":"event","Q1571548":"event","Q1571553":"event","Q1571556":"event","Q1591510":"event","Q1639160":"event","Q1673136":"event","Q1754117":"event","Q1755998":"event","Q1812109":"event","Q1870596":"event","Q1950891":"event","Q1970128":"event","Q2005506":"event","Q2083108":"event","Q2244992":"event","Q2270699":"event","Q2283223":"event","Q9190324":"song","Q11571348":"book","Q16934823":"standard","Q17074885":"standard","Q13427116":"event","Q17772965":"event","Q103109864":"motion_picture","Q6843":"event","Q7852":"event","Q16640":"event","Q19317":"event","Q31668":"event","Q46326":"event","Q107362984":"dataset","Q105769000":"event","Q106949747":"event","Q107251839":"event","Q107292148":"event","Q108485992":"event","Q108864219":"event","Q109316830":"event","Q109330009":"event","Q110361817":"event","Q113456780":"event","Q115367762":"event","Q115367790":"event","Q115367807":"event","Q115367818":"event","Q115367833":"event","Q115367850":"event","Q115376453":"event","Q115376468":"event","Q115439160":"event","Q115517988":"event","Q115518165":"event","Q115521846":"event","Q115535211":"event","Q115535255":"event","Q115535955":"event","Q115536339":"event","Q115556785":"event","Q115556888":"event","Q115604017":"event","Q115604170":"event","Q115604253":"event","Q115605923":"event","Q2348572":"event","Q2439750":"event","Q2468836":"event","Q2557178":"event","Q2564304":"event","Q2610233":"event","Q2953911":"event","Q2954011":"event","Q2954142":"event","Q2955477":"event","Q2955692":"event","Q3063011":"event","Q3334740":"event","Q3461806":"event","Q3653318":"event","Q3654350":"event","Q3781589":"event","Q4354501":"event","Q4511512":"event","Q4511568":"event","Q4638793":"event","Q4774455":"event","Q5450960":"event","Q5974617":"event","Q6139189":"event","Q6604313":"event","Q8035610":"event","Q10711847":"event","Q10869075":"event","Q11339103":"event","Q11783508":"event","Q11783509":"event","Q12365621":"event","Q12594341":"event","Q14518260":"event","Q15714554":"event","Q15819082":"event","Q15819083":"event","Q15819080":"event","Q15819081":"event","Q15847107":"event","Q15855106":"event","Q16717546":"event","Q17118250":"event","Q17379619":"event","Q18170326":"event","Q18625055":"event","Q21055703":"event","Q21804572":"event","Q21804580":"event","Q21809337":"event","Q21857771":"event","Q22669035":"event","Q23425564":"event","Q25038435":"event","Q25379789":"event","Q26709563":"event","Q28793120":"event","Q30899369":"event","Q43438324":"event","Q43598589":"event","Q55729484":"event","Q56294100":"event","Q61056709":"event","Q61459801":"event","Q63891765":"event","Q65392626":"event","Q75058565":"event","Q115606137":"event","Q115606626":"event","Q115608154":"event","Q115624929":"event","Q115625124":"event","Q115631885":"event","Q115647264":"event","Q115647293":"event","Q115647315":"event","Q115647386":"event","Q115647387":"event","Q115647384":"event","Q115647385":"event","Q115679056":"event","Q115681367":"event","Q115681365":"event","Q115681371":"event","Q115681369":"event","Q115681374":"event","Q115681378":"event","Q115681379":"event","Q115681376":"event","Q115681382":"event","Q115681380":"event","Q115681381":"event","Q115687092":"event","Q115765296":"event","Q115950134":"event","Q399811":"broadcast","Q1658957":"broadcast","Q4382232":"broadcast","Q120843042":"event","Q121287776":"event","Q5219865":"broadcast","Q121889955":"event","Q122897704":"event","Q10681387":"broadcast","Q14509702":"broadcast","Q1253136":"book","Q19952572":"broadcast","Q80767":"event","Q129292":"event","Q129455":"event","Q210707":"event","Q223251":"event","Q252397":"event","Q299128":"event","Q303871":"event","Q428792":"event","Q429292":"event","Q459459":"event","Q478770":"event","Q524107":"event","Q579095":"event","Q648257":"event","Q688127":"event","Q772787":"event","Q799305":"event","Q799330":"event","Q869121":"event","Q913063":"event","Q929905":"event","Q1141321":"event","Q1257251":"event","Q1319755":"event","Q1376517":"event","Q1397416":"event","Q1467563":"event","Q1499149":"event","Q1503455":"event","Q1548436":"event","Q1622604":"event","Q1663817":"event","Q1810789":"event","Q1839475":"event","Q1918724":"event","Q1948986":"event","Q1975250":"event","Q1983915":"event","Q2066197":"event","Q2144108":"event","Q2166202":"event","Q2185592":"event","Q11940464":"book","Q28195059":"broadcast","Q7209788":"event","Q85879530":"periodical","Q23739":"broadcast","Q23745":"broadcast","Q76160317":"broadcast","Q865585":"periodical","Q3399338":"periodical","Q4433771":"periodical","Q12898151":"periodical","Q102227549":"broadcast","Q16000113":"periodical","Q104761176":"event","Q104901635":"event","Q106018406":"event","Q107040722":"event","Q107377714":"event","Q107723505":"event","Q108828376":"event","Q111655411":"event","Q112259356":"event","Q113450516":"event","Q114608607":"event","Q114839655":"event","Q122841408":"event","Q123466418":"event","Q123734735":"event","Q124419948":"event","Q124478294":"event","Q361909":"event","Q738622":"event","Q834840":"event","Q1185865":"event","Q2271055":"event","Q2297714":"event","Q2419773":"event","Q2462288":"event","Q2469502":"event","Q2553885":"event","Q2609547":"event","Q2651160":"event","Q2704778":"event","Q2949233":"event","Q2949471":"event","Q2949480":"event","Q2949521":"event","Q2954449":"event","Q2975537":"event","Q3375071":"event","Q3515130":"event","Q3652861":"event","Q3653395":"event","Q3653952":"event","Q3789959":"event","Q5360132":"event","Q5412228":"event","Q5413453":"event","Q5424338":"event","Q6541336":"event","Q7892643":"event","Q7892641":"event","Q7892647":"event","Q7893535":"event","Q7893537":"event","Q10535877":"event","Q11279175":"event","Q11346229":"event","Q12362452":"event","Q12877393":"event","Q13440232":"event","Q14923870":"event","Q15714635":"event","Q16849691":"event","Q17075088":"event","Q17335201":"event","Q17335214":"event","Q18061350":"event","Q18125614":"event","Q18125699":"event","Q18357042":"event","Q18397818":"event","Q18416783":"event","Q18711024":"event","Q18712912":"event","Q20747438":"event","Q21234541":"event","Q21234774":"event","Q24970150":"event","Q25399151":"event","Q26988085":"event","Q27027131":"event","Q28151532":"event","Q31897668":"event","Q33219694":"event","Q41497558":"event","Q42309070":"event","Q47289823":"event","Q48862215":"event","Q48977411":"event","Q48977459":"event","Q56063508":"event","Q56325600":"event","Q60526674":"event","Q61519036":"event","Q61519203":"event","Q61519381":"event","Q61519759":"event","Q61519892":"event","Q61520114":"event","Q61520261":"event","Q71271906":"event","Q97359920":"event","Q108570960":"review","Q107649955":"event","Q107976231":"event","Q108131727":"event","Q113134736":"review","Q115047549":"event","Q117035823":"event","Q122475173":"event","Q2882210":"book","Q2919068":"book","Q3511337":"book","Q3620728":"book","Q134145":"event","Q163313":"event","Q169918":"event","Q223170":"event","Q263233":"event","Q277731":"event","Q285957":"performance","Q304337":"event","Q330558":"event","Q462100":"event","Q482526":"event","Q508928":"event","Q528449":"event","Q607965":"event","Q617335":"event","Q646110":"event","Q648474":"event","Q663145":"event","Q910542":"event","Q912165":"event","Q919472":"event","Q920397":"event","Q934724":"event","Q937649":"event","Q1004054":"event","Q1024155":"event","Q1032086":"event","Q1038199":"event","Q1061773":"event","Q1062311":"event","Q1116662":"event","Q1129940":"event","Q1130031":"event","Q1133634":"event","Q1137641":"event","Q1138388":"event","Q1141778":"event","Q1153109":"event","Q1154592":"event","Q1155117":"event","Q1190880":"event","Q1344269":"event","Q1423881":"event","Q3058662":"review","Q1986705":"event","Q2005275":"event","Q2090583":"event","Q2239275":"event","Q2465585":"event","Q2605489":"event","Q2952430":"event","Q3557006":"legislation","Q3557020":"legislation","Q3557041":"legislation","Q3557084":"legislation","Q3153927":"event","Q3239561":"event","Q3797537":"event","Q3911657":"event","Q5323758":"legislation","Q5323756":"legislation","Q5323757":"legislation","Q5323760":"legislation","Q5323761":"legislation","Q4958902":"event","Q7185385":"event","Q7306395":"event","Q13634065":"event","Q16981125":"event","Q18204317":"event","Q23962616":"event","Q48999919":"event","Q381642":"manuscript","Q65028060":"event","Q68708725":"event","Q69152161":"event","Q15804":"event","Q25020":"event","Q69426776":"event","Q69499553":"event","Q69505214":"event","Q69580701":"event","Q88181393":"event","Q101087116":"event","Q104254982":"event","Q104537401":"event","Q116236834":"software","Q116645836":"software","Q105535583":"event","Q105535632":"event","Q117428071":"software","Q107100828":"event","Q118726715":"software","Q108296071":"event","Q109259295":"event","Q110880374":"event","Q111425780":"event","Q112583267":"event","Q124514989":"software","Q124515090":"software","Q113562598":"event","Q125096742":"software","Q116055499":"event","Q3136090":"dataset","Q116597750":"event","Q116962602":"event","Q117262510":"event","Q117845627":"event","Q119499140":"event","Q120936487":"event","Q22810230":"report","Q214932":"software","Q536420":"software","Q578868":"software","Q1199309":"software","Q1311927":"software","Q1339223":"software","Q1892535":"software","Q3177954":"software","Q108854146":"performance","Q5432283":"software","Q7551387":"software","Q7708433":"software","Q3364894":"book","Q9370544":"software","Q10336582":"software","Q11756212":"software","Q2333803":"event","Q2881853":"event","Q119929339":"performance","Q3868655":"book","Q7439349":"book","Q7963794":"event","Q8034255":"event","Q9088760":"event","Q9675907":"event","Q10260007":"event","Q10383488":"event","Q11390066":"event","Q11390285":"event","Q13027880":"event","Q13636537":"event","Q16056350":"event","Q22981814":"book","Q22981813":"book","Q16837861":"event","Q16850989":"event","Q16967821":"event","Q18088964":"event","Q19916292":"event","Q34685933":"software","Q1433428":"performance","Q1957470":"performance","Q24882750":"event","Q2489759":"performance","Q28540863":"event","Q28540963":"event","Q29000951":"event","Q29423165":"event","Q30692559":"book","Q34548322":"event","Q55058128":"software","Q50862300":"event","Q58841951":"book","Q52997136":"event","Q56063517":"event","Q56399237":"event","Q59365764":"event","Q61984600":"event","Q62819448":"event","Q63349193":"event","Q84420118":"event","Q106764019":"software","Q97374310":"event","Q117038666":"software","Q105717058":"event","Q112584732":"book","Q107580332":"event","Q122382583":"software","Q122382635":"software","Q123037979":"software","Q124695018":"software","Q113510357":"event","Q273057":"dataset","Q475356":"dataset","Q1391116":"dataset","Q1609353":"dataset","Q115102539":"event","Q2033233":"dataset","Q2110197":"dataset","Q3962380":"dataset","Q4769616":"dataset","Q6822329":"dataset","Q7144753":"dataset","Q12331427":"dataset","Q431028":"standard","Q830340":"software","Q854954":"software","Q1440548":"software","Q1966904":"software","Q2311792":"software","Q2467894":"software","Q4533343":"software","Q5421990":"standard","Q6805426":"software","Q7554269":"software","Q7700717":"software","Q24879310":"dataset","Q11350034":"software","Q319995":"event","Q619066":"event","Q1006494":"event","Q1253781":"event","Q1267188":"event","Q26876682":"dataset","Q13199995":"software","Q2114776":"event","Q2117807":"event","Q2156219":"event","Q2542485":"event","Q3150463":"event","Q3879024":"event","Q5057785":"event","Q6084566":"event","Q6972712":"event","Q13109899":"event","Q13111301":"event","Q13114745":"event","Q25325358":"software","Q16135682":"event","Q16137384":"event","Q22134877":"event","Q27826498":"event","Q29380957":"event","Q66380803":"regulation","Q33279156":"event","Q59156045":"dataset","Q59156132":"dataset","Q59156183":"dataset","Q59156192":"dataset","Q59156210":"dataset","Q59156238":"dataset","Q59156244":"dataset","Q59156256":"dataset","Q59156264":"dataset","Q59156692":"dataset","Q59156700":"dataset","Q59156710":"dataset","Q59156725":"dataset","Q59156734":"dataset","Q59156741":"dataset","Q59156767":"dataset","Q60586493":"dataset","Q51158871":"standard","Q55951070":"software","Q47221960":"event","Q47240905":"event","Q50288571":"event","Q74086777":"software","Q116763393":"motion_picture","Q96294969":"book","Q102128235":"software","Q112981695":"broadcast","Q116671664":"dataset","Q117460269":"dataset","Q107494132":"software","Q108575058":"software","Q260607":"regulation","Q104536173":"event","Q111770833":"book","Q117150699":"standard","Q4381750":"regulation","Q109023693":"event","Q88456792":"performance","Q112960176":"event","Q206290":"dataset","Q123198327":"book","Q117485487":"event","Q120668510":"event","Q10478669":"dataset","Q939636":"standard","Q1047541":"standard","Q1072083":"standard","Q1122267":"standard","Q1426659":"software","Q1961044":"standard","Q2044200":"standard","Q3054349":"standard","Q3564764":"standard","Q18392279":"dataset","Q512898":"book","Q1076506":"book","Q2110126":"book","Q143692":"event","Q162318":"event","Q206959":"event","Q257913":"event","Q263755":"event","Q704813":"event","Q857351":"event","Q887670":"event","Q895266":"event","Q974274":"event","Q1009297":"event","Q1009301":"event","Q7643429":"book","Q1117228":"event","Q1203886":"event","Q1331607":"event","Q1477338":"event","Q1530635":"event","Q1638749":"event","Q1780972":"event","Q1974959":"event","Q2049711":"event","Q2299201":"event","Q2340640":"event","Q2583784":"event","Q2977046":"event","Q3246424":"event","Q3898276":"performance","Q3910572":"event","Q4231500":"event","Q5196998":"event","Q5861858":"event","Q6269530":"event","Q6815921":"event","Q7574869":"event","Q10655129":"event","Q10655253":"event","Q10711120":"event","Q11141294":"event","Q11410200":"event","Q14948388":"event","Q16959693":"event","Q18694350":"event","Q21400465":"event","Q22276038":"event","Q22909636":"event","Q25999227":"event","Q34262807":"event","Q34542788":"event","Q42170175":"event","Q47466753":"event","Q48956889":"event","Q63860328":"book","Q2078":"standard","Q57450669":"event","Q56909":"event","Q2872429":"periodical","Q77023152":"event","Q113572302":"regulation","Q85680242":"event","Q87337481":"event","Q87764589":"event","Q87768669":"event","Q96463181":"event","Q96754639":"event","Q98807712":"event","Q109019267":"book","Q106613434":"event","Q5769583":"motion_picture","Q5769580":"motion_picture","Q5769586":"motion_picture","Q5769589":"motion_picture","Q5769592":"motion_picture","Q110611344":"event","Q112117159":"event","Q2663608":"song","Q1352815":"broadcast","Q124414602":"event","Q124477484":"event","Q20820424":"speech","Q918333":"software","Q1139456":"song","Q1314918":"book","Q1776553":"book","Q1868532":"book","Q1907293":"book","Q161981":"event","Q266098":"event","Q460132":"event","Q611855":"event","Q663891":"event","Q694766":"event","Q784007":"event","Q969079":"event","Q1138456":"event","Q1278424":"event","Q1388468":"event","Q1399129":"event","Q1631840":"event","Q1641088":"event","Q1723677":"event","Q1812995":"event","Q1828204":"event","Q1933172":"event","Q1960955":"event","Q1972122":"event","Q2100913":"event","Q2128113":"event","Q2134841":"event","Q2186869":"event","Q2271146":"event","Q2305850":"event","Q2358030":"event","Q2379395":"event","Q2431923":"event","Q2601944":"event","Q4311799":"review","Q2753135":"event","Q3102259":"event","Q3686096":"performance","Q4229161":"event","Q4719013":"event","Q5570137":"event","Q6055821":"legislation","Q6488425":"event","Q6941403":"event","Q19840511":"software","Q10476443":"event","Q11783883":"event","Q13157160":"event","Q15089348":"event","Q15973082":"event","Q17322046":"event","Q20107140":"event","Q20603222":"event","Q21115086":"event","Q22160401":"event","Q24198315":"event","Q25048962":"performance","Q27630524":"performance","Q64447881":"speech","Q64467983":"speech","Q57326878":"software","Q65651503":"dataset","Q57776091":"event","Q57776190":"event","Q277583":"manuscript","Q60723717":"event","Q60988014":"event","Q64004398":"event","Q65198175":"event","Q86752106":"event","Q107226630":"event","Q109023299":"event","Q113129735":"event","Q113129789":"event","Q121591386":"book","Q116700611":"legislation","Q116600395":"event","Q117344940":"event","Q3252662":"broadcast","Q121536386":"event","Q121834128":"event","Q122853905":"event","Q123143647":"event","Q123203590":"event","Q125120445":"event","Q210700":"standard","Q763744":"software","Q870780":"software","Q1428844":"standard","Q1535269":"standard","Q1142726":"software","Q1653458":"standard","Q1283077":"software","Q3277848":"software","Q3467906":"software","Q4112110":"software","Q4826465":"software","Q5970272":"standard","Q1483342":"book","Q2538131":"book","Q4066161":"book","Q4370097":"book","Q4384332":"book","Q288132":"event","Q425943":"event","Q543108":"event","Q663992":"event","Q698654":"event","Q776196":"event","Q864463":"event","Q1201816":"event","Q1202269":"event","Q1207217":"event","Q1572106":"event","Q1665609":"event","Q13679033":"standard","Q2095001":"event","Q2159633":"event","Q2177183":"event","Q2741064":"event","Q2741261":"event","Q4743360":"event","Q5827809":"event","Q12569437":"book","Q6061510":"event","Q6898689":"event","Q17019867":"book","Q17321236":"book","Q11265757":"event","Q19128706":"book","Q13737219":"event","Q13859879":"event","Q13872840":"event","Q15895260":"legislation","Q16724349":"event","Q17665272":"event","Q19285091":"event","Q19394118":"event","Q19771501":"event","Q20921574":"event","Q20921589":"event","Q21936902":"event","Q23022613":"event","Q24659965":"event","Q42417700":"event","Q47508301":"event","Q121411945":"periodical","Q52641":"standard","Q60747577":"event","Q62522317":"event","Q65090522":"event","Q568765":"periodical","Q13959":"event","Q3402519":"periodical","Q85801888":"software","Q12016659":"periodical","Q86660706":"event","Q96141142":"event","Q98456674":"event","Q99345851":"event","Q124316157":"collection","Q7502098":"regulation","Q113571968":"event","Q113573971":"event","Q113648817":"event","Q663979":"song","Q1092924":"song","Q3310463":"dataset","Q4842492":"dataset","Q3655716":"song","Q6530268":"dataset","Q21292967":"motion_picture","Q12138990":"song","Q12138989":"song","Q602900":"event","Q716176":"event","Q849095":"event","Q918346":"event","Q1006573":"event","Q1007356":"event","Q1057954":"event","Q1128324":"event","Q2112448":"event","Q2243695":"event","Q2385043":"event","Q2409723":"event","Q2668479":"event","Q3587147":"event","Q3587148":"event","Q3587541":"event","Q3722420":"event","Q4058302":"event","Q4127445":"event","Q4127470":"event","Q4128600":"event","Q4193497":"event","Q4201985":"event","Q4216626":"event","Q4288581":"event","Q4289143":"event","Q4303936":"event","Q4333828":"event","Q4369093":"event","Q4400789":"event","Q4466245":"event","Q4824471":"event","Q4852690":"event","Q5100410":"event","Q5116010":"event","Q5354849":"event","Q5518656":"event","Q5827551":"event","Q5828421":"event","Q6067231":"event","Q6518201":"event","Q7232773":"event","Q7432143":"event","Q7865794":"event","Q7878497":"event","Q7890695":"event","Q7890774":"event","Q7890780":"event","Q8241475":"event","Q10271596":"event","Q10271606":"event","Q10340639":"event","Q10340642":"event","Q10340643":"event","Q10340640":"event","Q10660882":"event","Q10824155":"event","Q10860648":"event","Q11366961":"event","Q11862935":"event","Q11918755":"event","Q11918770":"event","Q11931634":"event","Q12033797":"event","Q12041763":"event","Q12042582":"event","Q12090908":"event","Q12311825":"event","Q12323704":"event","Q17099653":"event","Q18479521":"event","Q19870925":"event","Q21637595":"event","Q23688115":"event","Q27644483":"event","Q28677340":"event","Q47472773":"event","Q56254033":"event","Q56316064":"event","Q56344098":"event","Q56344100":"event","Q93771184":"dataset","Q96374831":"book","Q90403399":"event","Q100235449":"event","Q101062984":"event","Q12778795":"event","Q14509381":"event","Q14516417":"event","Q15273379":"event","Q15283424":"event","Q16939528":"event","Q17317594":"event","Q18248981":"event","Q20085071":"event","Q22160105":"event","Q22160112":"event","Q22160120":"event","Q22160593":"event","Q22162827":"event","Q22266214":"event","Q22266213":"event","Q22266255":"event","Q22266624":"event","Q22266709":"event","Q22268901":"event","Q22269206":"event","Q22269333":"event","Q22269349":"event","Q22275878":"event","Q22275938":"event","Q22275982":"event","Q22276008":"event","Q22276080":"event","Q22276119":"event","Q22276155":"event","Q22276186":"event","Q22276208":"event","Q22276226":"event","Q22276264":"event","Q22276298":"event","Q22276316":"event","Q22276331":"event","Q22276354":"event","Q22280876":"event","Q22280897":"event","Q22280976":"event","Q22281036":"event","Q22283516":"event","Q22283539":"event","Q22283753":"event","Q22284407":"event","Q22330752":"event","Q22330839":"event","Q22330909":"event","Q22330922":"event","Q22333025":"event","Q22333190":"event","Q22333339":"event","Q22333685":"event","Q22333900":"event","Q22338585":"event","Q22338592":"event","Q22341275":"event","Q22341286":"event","Q22341315":"event","Q22341320":"event","Q22341330":"event","Q22341339":"event","Q22341433":"event","Q22342153":"event","Q22342178":"event","Q22342180":"event","Q22342211":"event","Q22342312":"event","Q22342918":"event","Q22342927":"event","Q22342947":"event","Q22342957":"event","Q22343924":"event","Q22343980":"event","Q22442768":"event","Q22442774":"event","Q22442788":"event","Q22669381":"event","Q22669427":"event","Q22669480":"event","Q22669513":"event","Q22669521":"event","Q22669526":"event","Q22669525":"event","Q22669531":"event","Q22669528":"event","Q22669535":"event","Q22669547":"event","Q22669552":"event","Q22669582":"event","Q22669585":"event","Q22669591":"event","Q22669594":"event","Q22669603":"event","Q22669601":"event","Q22669606":"event","Q22669611":"event","Q22669618":"event","Q22669621":"event","Q22669625":"event","Q22669632":"event","Q22669642":"event","Q22695893":"event","Q22695898":"event","Q22695896":"event","Q22695905":"event","Q22696274":"event","Q22696370":"event","Q22696377":"event","Q22696383":"event","Q22696395":"event","Q22696400":"event","Q22696414":"event","Q22703240":"event","Q22703975":"event","Q22703992":"event","Q22703997":"event","Q22704005":"event","Q22704041":"event","Q22704045":"event","Q24045394":"event","Q24176296":"event","Q24176345":"event","Q24176839":"event","Q24177311":"event","Q24178042":"event","Q24178659":"event","Q24179666":"event","Q24180344":"event","Q24181434":"event","Q24182685":"event","Q24183035":"event","Q24332812":"event","Q24333627":"event","Q24384357":"event","Q24397514":"event","Q24410897":"event","Q24451601":"event","Q24452127":"event","Q24529773":"event","Q24541623":"event","Q24558942":"event","Q24566658":"event","Q24567296":"event","Q24568879":"event","Q24576690":"event","Q24618255":"event","Q24659969":"event","Q24706075":"event","Q24712693":"event","Q24713040":"event","Q24713353":"event","Q24713657":"event","Q24713744":"event","Q24714461":"event","Q24714562":"event","Q24715089":"event","Q24715171":"event","Q24715411":"event","Q24718538":"event","Q24718627":"event","Q24718981":"event","Q25343327":"event","Q25343622":"event","Q25343621":"event","Q25343631":"event","Q25343628":"event","Q25343642":"event","Q25343650":"event","Q25343648":"event","Q25363097":"event","Q25363518":"event","Q25367811":"event","Q25367878":"event","Q25367968":"event","Q25369215":"event","Q25369324":"event","Q25369733":"event","Q25438796":"event","Q25448839":"event","Q25448932":"event","Q25449075":"event","Q25455090":"event","Q25467156":"event","Q25467527":"event","Q25468000":"event","Q25477438":"event","Q25517032":"event","Q25531251":"event","Q25532438":"event","Q25532583":"event","Q25534775":"event","Q25534840":"event","Q25535282":"event","Q25544454":"event","Q25544724":"event","Q25546358":"event","Q25546854":"event","Q25548020":"event","Q116430596":"software","Q105283586":"event","Q106377263":"event","Q106377266":"event","Q106377264":"event","Q106377265":"event","Q106690375":"event","Q106901434":"event","Q110453684":"event","Q112520701":"event","Q112612974":"event","Q112692667":"event","Q115476941":"event","Q115536116":"event","Q115536605":"event","Q116199369":"event","Q1428162":"song","Q2859605":"song","Q2956240":"song","Q2956246":"song","Q4083733":"song","Q4440575":"song","Q120736802":"event","Q8054833":"song","Q123943225":"event","Q137341":"event","Q194796":"event","Q769451":"event","Q786705":"event","Q896575":"event","Q946131":"event","Q1069698":"event","Q1190392":"event","Q1415790":"event","Q1475062":"event","Q1515229":"event","Q1753160":"event","Q2000006":"event","Q2142411":"event","Q2320317":"event","Q3339914":"event","Q5058950":"event","Q5172488":"event","Q5178491":"event","Q5353623":"event","Q5629417":"event","Q6025903":"event","Q6952729":"event","Q7048853":"event","Q7450654":"event","Q7520824":"event","Q11088419":"event","Q11865368":"event","Q12876999":"event","Q22931433":"event","Q25415999":"event","Q25548021":"event","Q25548647":"event","Q26211781":"event","Q26260699":"event","Q28333164":"event","Q28649370":"event","Q29054308":"event","Q30139181":"event","Q30579807":"event","Q38498738":"event","Q26473":"song","Q47516525":"event","Q49103570":"event","Q49637768":"event","Q56185179":"event","Q56364341":"event","Q56821073":"event","Q56821289":"event","Q26284":"event","Q29144":"event","Q84035267":"event","Q122451386":"regulation","Q124424236":"map","Q124424296":"map","Q118610743":"song","Q104767287":"event","Q106000106":"event","Q2744385":"speech","Q3922143":"speech","Q125136147":"software","Q121760899":"book","Q5191437":"dataset","Q124005210":"event","Q5151822":"book","Q93842":"event","Q393189":"event","Q552161":"event","Q594812":"event","Q622016":"event","Q649749":"event","Q933785":"event","Q1089520":"event","Q1141402":"event","Q1144157":"event","Q1144163":"event","Q1537360":"event","Q1671798":"event","Q1851677":"event","Q1851685":"event","Q2025421":"event","Q2041991":"event","Q2087386":"event","Q2090627":"event","Q2342543":"event","Q2470247":"event","Q2471205":"event","Q2613104":"event","Q2913890":"event","Q2913892":"event","Q2954419":"event","Q2988192":"event","Q3305012":"event","Q4274450":"event","Q4806634":"event","Q29966258":"dataset","Q4819187":"event","Q4852697":"event","Q4929940":"event","Q5168499":"event","Q5177995":"event","Q5191359":"event","Q5330437":"event","Q5448074":"event","Q5448075":"event","Q5522435":"event","Q5594924":"event","Q5925944":"event","Q5930430":"event","Q5931621":"event","Q5965161":"event","Q5974546":"event","Q5974544":"event","Q5974551":"event","Q5974549":"event","Q5974555":"event","Q5974553":"event","Q5974558":"event","Q5974559":"event","Q5974556":"event","Q5974561":"event","Q5974566":"event","Q5974564":"event","Q5974565":"event","Q5974570":"event","Q5974568":"event","Q5974574":"event","Q5974572":"event","Q5974573":"event","Q5974576":"event","Q5974583":"event","Q5974581":"event","Q5974587":"event","Q5974585":"event","Q5974591":"event","Q5974589":"event","Q5974593":"event","Q5974598":"event","Q5974596":"event","Q5974602":"event","Q5974607":"event","Q5974605":"event","Q5985363":"event","Q6128710":"event","Q7370438":"event","Q13930359":"event","Q18480501":"event","Q56298479":"dataset","Q63860280":"book","Q123130760":"dataset","Q123186574":"dataset","Q6136640":"event","Q6145647":"event","Q6148624":"event","Q6149606":"event","Q6710131":"event","Q6843472":"event","Q6903035":"event","Q6955214":"event","Q7122390":"event","Q7155745":"event","Q7198123":"event","Q7419363":"event","Q7588376":"event","Q7809247":"event","Q7889632":"event","Q10290398":"event","Q10327191":"event","Q10385004":"event","Q11284681":"event","Q11311600":"event","Q11320867":"event","Q11323009":"event","Q11324638":"event","Q11336664":"event","Q11338803":"event","Q11343183":"event","Q11343714":"event","Q11421054":"event","Q11510125":"event","Q12060810":"event","Q12060811":"event","Q12060812":"event","Q15894752":"event","Q16933460":"event","Q16953232":"event","Q16955370":"event","Q16968401":"event","Q16971599":"event","Q17039073":"event","Q17098985":"event","Q17099499":"event","Q17100126":"event","Q17101864":"event","Q17149933":"event","Q17193933":"event","Q17991075":"event","Q17994901":"event","Q18355257":"event","Q18359247":"event","Q18470637":"event","Q18474372":"event","Q18700516":"event","Q20038989":"event","Q20040886":"event","Q20041674":"event","Q21154276":"event","Q23034407":"event","Q23048889":"event","Q24859934":"event","Q24860246":"event","Q24868735":"event","Q24871095":"event","Q24895314":"event","Q24897039":"event","Q24897674":"event","Q24900121":"event","Q24901654":"event","Q25315520":"event","Q25315541":"event","Q25418927":"event","Q25419103":"event","Q25419101":"event","Q25419104":"event","Q28689743":"event","Q28689756":"event","Q29168234":"event","Q30913161":"event","Q30927659":"event","Q30927662":"event","Q48744481":"event","Q48995910":"event","Q53889489":"event","Q56338790":"event","Q57608780":"event","Q57611756":"event","Q57612023":"event","Q58622526":"event","Q59624231":"event","Q60473775":"event","Q60550377":"event","Q61763401":"event","Q61860767":"event","Q63076647":"event","Q64605380":"event","Q69992216":"event","Q69992378":"event","Q74802306":"event","Q74803629":"event","Q84312768":"event","Q84418196":"event","Q105369350":"event","Q3684597":"motion_picture","Q110417414":"event","Q113027647":"event","Q113456458":"event","Q113468474":"event","Q119212508":"event","Q122363382":"event","Q122790779":"event","Q122834703":"event","Q122865714":"event","Q122909165":"event","Q123865706":"event","Q123919218":"event","Q123940829":"event","Q153068":"event","Q187916":"event","Q338989":"event","Q426388":"event","Q487791":"event","Q605458":"event","Q612758":"event","Q723556":"event","Q769173":"event","Q905026":"event","Q940390":"event","Q1058887":"event","Q1083375":"event","Q1141795":"event","Q1162701":"event","Q1262954":"event","Q1311060":"event","Q1492807":"event","Q1542651":"event","Q1856617":"event","Q2111344":"event","Q2371570":"event","Q2734958":"event","Q2813889":"event","Q2924286":"event","Q2924287":"event","Q2924284":"event","Q2924290":"event","Q2948690":"event","Q3051173":"event","Q3347856":"event","Q3495279":"event","Q3891842":"event","Q4548060":"event","Q4790675":"event","Q4960231":"event","Q4960233":"event","Q4960239":"event","Q4960246":"event","Q4960263":"event","Q4969650":"event","Q5454310":"event","Q5647749":"event","Q6156602":"event","Q6406411":"event","Q6444725":"event","Q7081702":"event","Q7166872":"event","Q7388593":"event","Q7426491":"event","Q7700505":"event","Q7840010":"event","Q7887563":"event","Q7999128":"event","Q8049947":"event","Q11269201":"event","Q11298906":"event","Q11298968":"event","Q11321094":"event","Q11334797":"event","Q11334800":"event","Q11335700":"event","Q11341634":"event","Q11364221":"event","Q11393769":"event","Q11441477":"event","Q11452523":"event","Q11510864":"event","Q11524380":"event","Q11524890":"event","Q11525047":"event","Q11537375":"event","Q11647234":"event","Q11880005":"event","Q12029305":"event","Q12049904":"event","Q12603711":"event","Q17054177":"event","Q45045456":"event","Q59544693":"event","Q64712054":"event","Q65721197":"event","Q55629":"event","Q98480259":"event","Q100501146":"event","Q964061":"motion_picture","Q104521254":"event","Q104581340":"event","Q105320724":"event","Q117025158":"software","Q118128908":"software","Q108939181":"event","Q109036307":"event","Q120721930":"software","Q109598357":"event","Q110755912":"event","Q111668117":"event","Q111701882":"event","Q112162495":"event","Q112169107":"event","Q242039":"standard","Q263029":"standard","Q123733":"software","Q215552":"software","Q255188":"software","Q305901":"software","Q1045106":"standard","Q612825":"software","Q796216":"software","Q1321517":"software","Q1367557":"software","Q1588573":"software","Q1838229":"software","Q2742192":"software","Q3457058":"software","Q3805198":"software","Q3805199":"software","Q3805196":"software","Q3805197":"software","Q4048537":"software","Q267634":"book","Q5960443":"software","Q22001389":"dataset","Q6453074":"book","Q12032405":"software","Q707597":"event","Q830090":"performance","Q1256907":"event","Q1258212":"event","Q2066411":"event","Q2629138":"event","Q2691960":"event","Q3433433":"event","Q16038990":"software","Q16675432":"software","Q6560903":"event","Q6857846":"event","Q19597382":"software","Q16933744":"book","Q24534424":"standard","Q16219815":"event","Q18479749":"event","Q18693936":"event","Q19654878":"event","Q20160549":"event","Q31838956":"software","Q20735954":"performance","Q21027484":"performance","Q56843912":"map","Q21995082":"event","Q22098114":"event","Q22907854":"event","Q54151974":"software","Q54844883":"software","Q55187831":"software","Q55582541":"book","Q55582560":"book","Q77253697":"broadcast","Q56164610":"event","Q2027":"software","Q7598":"software","Q70461930":"software","Q65117554":"event","Q65211922":"event","Q80933428":"software","Q108803475":"regulation","Q80124670":"event","Q85884092":"event","Q97621243":"software","Q97621286":"software","Q86736913":"event","Q100370374":"software","Q97209313":"event","Q111381712":"software","Q102124796":"event","Q3037400":"regulation","Q110620467":"event","Q110711846":"event","Q110711847":"event","Q110711844":"event","Q110711845":"event","Q110711850":"event","Q110711851":"event","Q110711848":"event","Q110711854":"event","Q110711852":"event","Q110711853":"event","Q110711858":"event","Q110711859":"event","Q110711856":"event","Q110711857":"event","Q110711862":"event","Q110711863":"event","Q110711860":"event","Q110711861":"event","Q110711866":"event","Q110711867":"event","Q110711864":"event","Q110711865":"event","Q110711870":"event","Q110711871":"event","Q110711868":"event","Q110711869":"event","Q110711874":"event","Q110711875":"event","Q110711872":"event","Q110711873":"event","Q112161563":"event","Q124423898":"book","Q123990465":"event","Q123990475":"event","Q124169147":"event","Q124169217":"event","Q215819":"software","Q431195":"software","Q484935":"software","Q1361160":"standard","Q2357154":"software","Q2566342":"software","Q2919848":"software","Q3884002":"software","Q5014224":"software","Q7249354":"software","Q3098275":"book","Q3199214":"book","Q125307":"review","Q1420867":"review","Q1558505":"review","Q386006":"event","Q12018160":"dataset","Q7311227":"book","Q1188852":"event","Q1896500":"event","Q3406098":"event","Q3587322":"event","Q3587323":"event","Q3587320":"event","Q3587321":"event","Q3587326":"event","Q3587327":"event","Q3587324":"event","Q3587325":"event","Q3587330":"event","Q3587328":"event","Q3587329":"event","Q3587334":"event","Q3587332":"event","Q3722848":"event","Q5759549":"review","Q5053303":"event","Q7144503":"legislation","Q7239034":"event","Q7841425":"event","Q16543809":"event","Q16957146":"event","Q24574680":"event","Q2338544":"performance","Q28941860":"review","Q60740694":"dataset","Q50822530":"software","Q48758455":"event","Q60846649":"event","Q62020230":"performance","Q85757603":"broadcast","Q48359853":"performance","Q97320474":"book","Q114083348":"software","Q940525":"regulation","Q104630847":"event","Q104735712":"event","Q104865460":"event","Q105774620":"legislation","Q2821946":"regulation","Q107196291":"event","Q112326202":"event","Q112326251":"event","Q112326328":"event","Q175902":"dataset","Q114065102":"legislation","Q932420":"dataset","Q205730":"collection","Q2886577":"dataset","Q117536249":"legislation","Q118127451":"event","Q5570651":"dataset","Q7251500":"dataset","Q7277178":"dataset","Q7689673":"dataset","Q191012":"standard","Q206924":"standard","Q12154808":"song","Q836661":"software","Q1665191":"standard","Q2496164":"software","Q16335141":"dataset","Q1786016":"song","Q7927946":"software","Q3342913":"book","Q6753317":"book","Q970308":"legislation","Q105653689":"webpage","Q1498255":"event","Q1751626":"event","Q106574913":"webpage","Q106575300":"webpage","Q106612246":"webpage","Q2217954":"event","Q2393315":"event","Q2906301":"legislation","Q107302455":"webpage","Q3070220":"event","Q3070233":"event","Q3070310":"event","Q3435775":"event","Q4162842":"event","Q4310377":"event","Q17042768":"standard","Q16688751":"software","Q17089542":"software","Q6664265":"legislation","Q111019629":"webpage","Q6783801":"event","Q7973180":"event","Q114901426":"webpage","Q12299091":"event","Q117317792":"webpage","Q117317846":"webpage","Q20485156":"book","Q14796683":"event","Q18408179":"event","Q22947792":"event","Q35687379":"software","Q11333579":"webpage","Q15407973":"webpage","Q15647814":"webpage","Q20769287":"webpage","Q67080352":"software","Q22808320":"webpage","Q33972":"software","Q24571879":"webpage","Q24574745":"webpage","Q30432511":"webpage","Q105756287":"motion_picture","Q110577062":"dataset","Q110597548":"dataset","Q113391507":"dataset","Q54662266":"webpage","Q113685974":"dataset","Q56428020":"webpage","Q116463177":"song","Q59541917":"webpage","Q61996773":"webpage","Q108905501":"software","Q66480449":"webpage","Q116859711":"dataset","Q112161596":"event","Q113976861":"event","Q302987":"song","Q115859671":"legislation","Q2560570":"dataset","Q116547044":"event","Q116938684":"event","Q117321917":"event","Q2631975":"song","Q50811238":"periodical","Q123360736":"event","Q124312353":"event","Q124312699":"event","Q124414048":"event","Q1854343":"software","Q4120889":"software","Q16961472":"song","Q5562992":"software","Q5978554":"software","Q6839216":"software","Q11236768":"standard","Q1292786":"review","Q185523":"event","Q527207":"event","Q571381":"event","Q684138":"event","Q996954":"event","Q1429184":"event","Q1439074":"event","Q2062594":"event","Q3822001":"review","Q2429635":"event","Q2944276":"legislation","Q2505543":"event","Q2593659":"event","Q2746144":"event","Q2819161":"event","Q3135724":"event","Q3927614":"legislation","Q3653936":"event","Q15282750":"software","Q11396839":"book","Q4812461":"event","Q5146309":"event","Q5576246":"event","Q5594802":"event","Q5903448":"event","Q6050412":"event","Q6498067":"event","Q6952244":"event","Q6952901":"event","Q18845397":"software","Q7698985":"event","Q7946342":"event","Q9385839":"event","Q11058355":"event","Q25929318":"software","Q16995927":"event","Q17020857":"event","Q17510384":"event","Q18210557":"event","Q18232178":"event","Q19646072":"legislation","Q19803127":"event","Q20749438":"event","Q21005969":"event","Q938118":"performance","Q1033913":"performance","Q23902005":"event","Q28044810":"event","Q35222554":"event","Q15790928":"performance","Q39087320":"event","Q34825":"software","Q61355174":"event","Q61356090":"event","Q63865762":"legislation","Q65067387":"event","Q2360559":"periodical","Q3428685":"periodical","Q4835951":"periodical","Q5253501":"periodical","Q75476195":"event","Q12021525":"periodical","Q101761418":"broadcast","Q20055188":"periodical","Q92062711":"event","Q124745288":"broadcast","Q1172162":"regulation","Q116687357":"software","Q111972467":"book","Q111972478":"book","Q111972495":"book","Q106849510":"event","Q107022954":"event","Q119789115":"dataset","Q121010291":"software","Q110128725":"event","Q124368239":"dataset","Q115249005":"event","Q881912":"broadcast","Q2875011":"song","Q118835354":"event","Q119930182":"event","Q6912084":"dataset","Q123028615":"event","Q123028916":"event","Q123028937":"event","Q10436287":"dataset","Q288096":"standard","Q64426019":"periodical","Q5252671":"software","Q5375622":"software","Q66759360":"periodical","Q6822481":"software","Q3178617":"book","Q3201017":"book","Q3440918":"book","Q9383074":"standard","Q5562953":"book","Q5662428":"book","Q404405":"event","Q7456849":"book","Q895824":"event","Q925458":"event","Q1321593":"event","Q1772230":"event","Q2283013":"event","Q2539315":"event","Q3130521":"event","Q3153130":"event","Q10513545":"book","Q4912032":"legislation","Q5160126":"event","Q5281373":"event","Q5367862":"event","Q6917814":"event","Q7495968":"event","Q20916723":"software","Q17011199":"book","Q17213403":"book","Q17217514":"book","Q10712098":"event","Q11915198":"event","Q11926271":"event","Q25001010":"software","Q14947832":"event","Q22025254":"book","Q17017983":"event","Q24902889":"book","Q28684433":"book","Q936412":"performance","Q30608150":"event","Q45787211":"dataset","Q110896015":"periodical","Q45203135":"event","Q117027695":"periodical","Q117884857":"periodical","Q61009090":"software","Q124080926":"periodical","Q124327805":"periodical","Q124327878":"periodical","Q55624785":"event","Q67650639":"software","Q42378":"standard","Q80876":"manuscript","Q48510":"software","Q58852757":"event","Q3125472":"manuscript","Q106641524":"song","Q96781548":"software","Q98559103":"software","Q110131505":"standard","Q110132623":"standard","Q110132901":"standard","Q110133975":"standard","Q110134612":"standard","Q101093753":"event","Q108404215":"performance","Q109020342":"event","Q122906617":"software","Q124728018":"periodical","Q115048266":"event","Q115473745":"event","Q170238":"broadcast","Q1259759":"broadcast","Q2388283":"broadcast","Q123461793":"event","Q7437708":"broadcast","Q9384895":"song","Q728183":"standard","Q380266":"software","Q387950":"software","Q11396323":"broadcast","Q900585":"software","Q5953007":"software","Q6155239":"software","Q20097097":"broadcast","Q10343079":"software","Q21402249":"broadcast","Q21504449":"broadcast","Q11298493":"software","Q11328978":"software","Q215014":"event","Q285885":"event","Q336332":"event","Q353280":"event","Q478382":"event","Q7124780":"book","Q580758":"event","Q947533":"event","Q1141651":"event","Q1148100":"event","Q1161017":"event","Q1412369":"event","Q1543261":"event","Q1637433":"event","Q3433279":"event","Q3587369":"event","Q4958900":"event","Q17086335":"standard","Q16872960":"software","Q5458869":"event","Q16978760":"software","Q5657747":"event","Q6797290":"event","Q7410130":"event","Q7631191":"event","Q7699768":"event","Q9683607":"event","Q10370861":"event","Q10726046":"event","Q10996728":"event","Q11266554":"event","Q11362482":"event","Q11422932":"event","Q11449290":"event","Q14957210":"event","Q16912555":"event","Q16947758":"event","Q18591647":"event","Q20045350":"event","Q39049892":"software","Q28456244":"event","Q28679584":"event","Q6412308":"performance","Q48997230":"software","Q60617897":"software","Q55641557":"event","Q56351611":"event","Q77916592":"software","Q16346":"event","Q55293":"event","Q108541894":"regulation","Q97610790":"periodical","Q112977197":"broadcast","Q104860440":"software","Q107314083":"software","Q109614367":"standard","Q111137792":"software","Q113564515":"software","Q104677346":"event","Q120116033":"software","Q74980542":"webpage","Q109461212":"event","Q112289905":"event","Q124429913":"software","Q124695114":"software","Q124695146":"software","Q117006363":"event","Q124284679":"book","Q7907833":"song","Q7864671":"broadcast","Q124680869":"event","Q819122":"software","Q845159":"motion_picture","Q1049203":"software","Q95691391":"webpage","Q97303168":"webpage","Q97950663":"webpage","Q7637202":"software","Q131080":"event","Q11567528":"software","Q11639894":"software","Q713540":"legislation","Q105528595":"webpage","Q836736":"event","Q861941":"event","Q1043345":"event","Q1878302":"event","Q1912100":"event","Q13631399":"software","Q2271023":"event","Q108091160":"webpage","Q108292642":"webpage","Q3595838":"event","Q3870151":"event","Q108783631":"webpage","Q4328808":"event","Q11381119":"book","Q11477317":"book","Q11580879":"book","Q5110306":"event","Q110010043":"webpage","Q17030435":"software","Q17121289":"software","Q5781167":"event","Q6374036":"event","Q111803808":"webpage","Q7719450":"event","Q19377322":"software","Q112869585":"webpage","Q114785468":"webpage","Q10512375":"event","Q10553988":"event","Q115595777":"webpage","Q115615343":"webpage","Q115707333":"webpage","Q11399932":"event","Q116152698":"webpage","Q22908656":"software","Q11476267":"event","Q11526135":"event","Q11543445":"event","Q116313869":"webpage","Q11582050":"event","Q11590783":"event","Q11611120":"event","Q12716443":"event","Q20043347":"book","Q18289615":"event","Q19111187":"event","Q124372134":"webpage","Q26928894":"book","Q229345":"performance","Q5300113":"performance","Q29561638":"event","Q63952888":"broadcast","Q11753321":"webpage","Q60748603":"software","Q15671253":"webpage","Q19887878":"webpage","Q20769160":"webpage","Q54824152":"event","Q24731821":"webpage","Q26142649":"webpage","Q26267864":"webpage","Q67704099":"event","Q39174":"event","Q36330215":"webpage","Q91258173":"software","Q48552277":"webpage","Q98034066":"software","Q56876519":"webpage","Q96664258":"event","Q109937652":"event","Q120734597":"event","Q123907414":"event","Q277875":"event","Q320803":"event","Q620932":"event","Q694874":"event","Q739227":"event","Q765982":"event","Q778559":"event","Q791183":"event","Q926006":"event","Q951799":"event","Q983696":"event","Q1060588":"event","Q1135337":"event","Q1154703":"event","Q1161047":"event","Q1250640":"event","Q1417217":"event","Q1426540":"event","Q1585186":"event","Q1630626":"event","Q1681685":"event","Q1814442":"event","Q2068688":"event","Q2202034":"event","Q2228810":"event","Q2365464":"event","Q2371046":"event","Q2539756":"event","Q2575989":"event","Q2596525":"event","Q2954231":"event","Q2954234":"event","Q2954235":"event","Q2954328":"event","Q2954343":"event","Q2954405":"event","Q2954437":"event","Q2954804":"event","Q2955753":"event","Q2999641":"event","Q3031465":"event","Q3073334":"event","Q3334741":"event","Q3492700":"event","Q3600404":"event","Q3691184":"event","Q4351908":"event","Q4354709":"event","Q4689729":"event","Q11488223":"book","Q5060322":"event","Q5060326":"event","Q5060327":"event","Q5060330":"event","Q5954321":"event","Q6952135":"event","Q7129610":"event","Q7565954":"event","Q7565966":"event","Q7565973":"event","Q7565978":"event","Q8035929":"event","Q10392399":"event","Q10685395":"event","Q10685482":"event","Q11390231":"event","Q11404432":"event","Q11455712":"event","Q11489125":"event","Q11579831":"event","Q11590475":"event","Q11675338":"event","Q11675410":"event","Q11708504":"event","Q11777258":"event","Q11888034":"event","Q11902817":"event","Q14867489":"event","Q16002008":"event","Q16245541":"event","Q16961825":"event","Q16982514":"event","Q17009195":"event","Q17083199":"event","Q17143639":"event","Q17147746":"event","Q17225061":"event","Q19803251":"event","Q20648996":"event","Q20715885":"event","Q20804886":"event","Q22080014":"event","Q24892914":"event","Q25402731":"event","Q30925247":"event","Q48745694":"event","Q60589804":"event","Q109423255":"event","Q109623346":"event","Q109623729":"event","Q110733884":"event","Q117356212":"book","Q116203522":"event","Q125127415":"dataset","Q122587105":"event","Q12105343":"song","Q12134889":"song","Q109017384":"performance","Q1976583":"book","Q1991869":"book","Q3940786":"book","Q964741":"event","Q1892297":"event","Q1931444":"event","Q2142757":"event","Q2346191":"event","Q3023688":"event","Q3524717":"event","Q3586831":"event","Q3586834":"event","Q3586835":"event","Q3586832":"event","Q3586836":"event","Q3586840":"event","Q28702252":"song","Q28704262":"song","Q11690026":"book","Q7904542":"event","Q10658541":"legislation","Q10605243":"event","Q10937578":"event","Q17586363":"book","Q11294781":"event","Q12412186":"event","Q12845156":"event","Q20043999":"book","Q16637328":"event","Q16684585":"event","Q16821191":"event","Q18469476":"event","Q18521515":"event","Q26225484":"book","Q26228231":"book","Q27022710":"book","Q2212942":"performance","Q27832699":"event","Q27832702":"event","Q27832706":"event","Q27832704":"event","Q27832710":"event","Q27832715":"event","Q27832712":"event","Q27832718":"event","Q27832724":"event","Q27832728":"event","Q27832734":"event","Q27832732":"event","Q27832739":"event","Q27832737":"event","Q48855846":"event","Q48872399":"event","Q51279780":"event","Q55279953":"event","Q55625390":"event","Q55625388":"event","Q55634102":"event","Q56648044":"event","Q63968276":"event","Q63968290":"event","Q63968288":"event","Q63968955":"event","Q63969026":"event","Q63969031":"event","Q63969028":"event","Q63969035":"event","Q66330372":"event","Q72996181":"book","Q74121484":"event","Q74124757":"event","Q88975093":"book","Q108842705":"song","Q85341842":"event","Q86736746":"event","Q97198341":"event","Q97292900":"event","Q105488055":"book","Q105488088":"book","Q1193463":"standard","Q5365683":"standard","Q7831510":"standard","Q10397058":"standard","Q10397082":"standard","Q74705":"event","Q93565":"event","Q121702":"event","Q123577":"event","Q129535":"event","Q129532":"event","Q130222":"event","Q132373":"event","Q132377":"event","Q133547":"event","Q137959":"event","Q168582":"event","Q169947":"event","Q172760":"event","Q194976":"event","Q195125":"event","Q199356":"event","Q203273":"event","Q206984":"event","Q239103":"event","Q242052":"event","Q248952":"event","Q264806":"event","Q265609":"event","Q286203":"event","Q299126":"event","Q299125":"event","Q299163":"event","Q299178":"event","Q299180":"event","Q299186":"event","Q299187":"event","Q299189":"event","Q299198":"event","Q299202":"event","Q299206":"event","Q299235":"event","Q299241":"event","Q299248":"event","Q299254":"event","Q299256":"event","Q299263":"event","Q299264":"event","Q299269":"event","Q299274":"event","Q299279":"event","Q299277":"event","Q299281":"event","Q1378622":"event","Q1984487":"event","Q17147115":"standard","Q5500257":"event","Q7797265":"event","Q19842126":"standard","Q124079710":"performance","Q12344463":"event","Q12344475":"event","Q12344476":"event","Q13070866":"event","Q13776265":"event","Q26270021":"standard","Q30125639":"standard","Q18715679":"event","Q54969304":"standard","Q8500":"event","Q12776":"event","Q41520":"event","Q43605":"event","Q60874":"event","Q64313":"event","Q64795":"event","Q104649821":"standard","Q299287":"event","Q299289":"event","Q299299":"event","Q299296":"event","Q299332":"event","Q299362":"event","Q299382":"event","Q299409":"event","Q299423":"event","Q299425":"event","Q299432":"event","Q299439":"event","Q299437":"event","Q299459":"event","Q299473":"event","Q299499":"event","Q299496":"event","Q299506":"event","Q299511":"event","Q299516":"event","Q299526":"event","Q299531":"event","Q299532":"event","Q299543":"event","Q299541":"event","Q299582":"event","Q299603":"event","Q299634":"event","Q299642":"event","Q299640":"event","Q299651":"event","Q299658":"event","Q299664":"event","Q299701":"event","Q299706":"event","Q299714":"event","Q299729":"event","Q299740":"event","Q299745":"event","Q299783":"event","Q299802":"event","Q299814":"event","Q299818":"event","Q299821":"event","Q299914":"event","Q299931":"event","Q299939":"event","Q299950":"event","Q299948":"event","Q299963":"event","Q300009":"event","Q300027":"event","Q300031":"event","Q319496":"event","Q323824":"event","Q331570":"event","Q427873":"event","Q428394":"event","Q431569":"event","Q461834":"event","Q491853":"event","Q497769":"event","Q526017":"event","Q535453":"event","Q539495":"event","Q540920":"event","Q555063":"event","Q557099":"event","Q557548":"event","Q557814":"event","Q558006":"event","Q558656":"event","Q559476":"event","Q559650":"event","Q560080":"event","Q584646":"event","Q595467":"event","Q596990":"event","Q605286":"event","Q606172":"event","Q616701":"event","Q627279":"event","Q633933":"event","Q634567":"event","Q684730":"event","Q696794":"event","Q716601":"event","Q716644":"event","Q716678":"event","Q716943":"event","Q735402":"event","Q739665":"event","Q743453":"event","Q760716":"event","Q768991":"event","Q769417":"event","Q769431":"event","Q775471":"event","Q779922":"event","Q796569":"event","Q796839":"event","Q800121":"event","Q886270":"event","Q890516":"event","Q890882":"event","Q929574":"event","Q941398":"event","Q945967":"event","Q954590":"event","Q965607":"event","Q1025949":"event","Q1091028":"event","Q1103815":"event","Q1103842":"event","Q1117449":"event","Q1119295":"event","Q1119578":"event","Q1122524":"event","Q1134214":"event","Q1151287":"event","Q1161519":"event","Q1204262":"event","Q1388797":"event","Q1393324":"event","Q1393450":"event","Q1393456":"event","Q1393508":"event","Q1426603":"event","Q1442756":"event","Q1442932":"event","Q1443177":"event","Q1443908":"event","Q1486923":"event","Q1559570":"event","Q1615988":"event","Q1634719":"event","Q1638045":"event","Q1653961":"event","Q1654339":"event","Q1654545":"event","Q1729493":"event","Q1765968":"event","Q1765987":"event","Q1765993":"event","Q1766004":"event","Q1766027":"event","Q1767359":"event","Q1767608":"event","Q1768061":"event","Q1770734":"event","Q1770736":"event","Q1770747":"event","Q1770744":"event","Q1770751":"event","Q1777029":"event","Q1783626":"event","Q1960810":"event","Q1961253":"event","Q1961762":"event","Q1966034":"event","Q1981381":"event","Q1995680":"event","Q2004692":"event","Q2016020":"event","Q2018057":"event","Q2074452":"event","Q2080820":"event","Q2205905":"event","Q2244936":"event","Q2371030":"event","Q2371222":"event","Q2415348":"event","Q2420534":"event","Q2421258":"event","Q2423399":"event","Q2423417":"event","Q2425642":"event","Q2537839":"event","Q2616055":"event","Q2632546":"event","Q2657736":"event","Q2694093":"event","Q2830532":"event","Q2866098":"event","Q2872166":"event","Q2896105":"event","Q2937459":"event","Q2949523":"event","Q2963330":"event","Q2975162":"event","Q2976234":"event","Q2976273":"event","Q2976341":"event","Q2976449":"event","Q2999429":"event","Q2999810":"event","Q2999845":"event","Q3000131":"event","Q3042549":"event","Q3083292":"event","Q3083527":"event","Q3083653":"event","Q3083763":"event","Q3087335":"event","Q3087459":"event","Q3088894":"event","Q3089208":"event","Q3106786":"event","Q3153340":"event","Q3177909":"event","Q3257647":"event","Q3324280":"event","Q3353485":"event","Q3353551":"event","Q3353595":"event","Q3353780":"event","Q3353913":"event","Q3353917":"event","Q3354028":"event","Q3377484":"event","Q3495290":"event","Q3497987":"event","Q3506485":"event","Q3534237":"event","Q3534292":"event","Q3534358":"event","Q3534566":"event","Q3534612":"event","Q3534675":"event","Q3534676":"event","Q3534722":"event","Q3534725":"event","Q3534738":"event","Q3534814":"event","Q3534817":"event","Q3534865":"event","Q3534932":"event","Q3534993":"event","Q3535028":"event","Q3535034":"event","Q3535035":"event","Q3535049":"event","Q3535077":"event","Q3535082":"event","Q3535088":"event","Q3535243":"event","Q3540474":"event","Q3540489":"event","Q3540525":"event","Q3597331":"event","Q3600432":"event","Q3600649":"event","Q3600718":"event","Q3600739":"event","Q3600751":"event","Q3600805":"event","Q3600843":"event","Q3600847":"event","Q3600856":"event","Q3600884":"event","Q3600903":"event","Q3600948":"event","Q3601327":"event","Q3601330":"event","Q3601347":"event","Q3601638":"event","Q3601887":"event","Q3601888":"event","Q3601990":"event","Q3601994":"event","Q3602132":"event","Q3602149":"event","Q3602256":"event","Q3603058":"event","Q3603490":"event","Q3603520":"event","Q3603907":"event","Q3604223":"event","Q3605142":"event","Q3605923":"event","Q3606309":"event","Q3606853":"event","Q3606912":"event","Q3606917":"event","Q3607004":"event","Q3607245":"event","Q3609725":"event","Q3610771":"event","Q3611654":"event","Q3611701":"event","Q3612542":"event","Q3612735":"event","Q3612771":"event","Q3613041":"event","Q3613656":"event","Q3614074":"event","Q3614110":"event","Q3614697":"event","Q3615237":"event","Q3615379":"event","Q3615406":"event","Q3616311":"event","Q3617962":"event","Q3620171":"event","Q3620457":"event","Q3621067":"event","Q3621221":"event","Q3623162":"event","Q3624633":"event","Q3624843":"event","Q3624984":"event","Q3625000":"event","Q3627426":"event","Q3627461":"event","Q3627687":"event","Q3627921":"event","Q3628224":"event","Q3629454":"event","Q3629473":"event","Q3629939":"event","Q3630094":"event","Q3631082":"event","Q3631557":"event","Q3631712":"event","Q3631856":"event","Q3631948":"event","Q3632102":"event","Q3632207":"event","Q3632289":"event","Q3632701":"event","Q3632713":"event","Q3632952":"event","Q3632956":"event","Q3632966":"event","Q3632973":"event","Q3632987":"event","Q3633572":"event","Q3634125":"event","Q3634142":"event","Q3634199":"event","Q3634380":"event","Q3634483":"event","Q3634815":"event","Q3634870":"event","Q3634976":"event","Q3635079":"event","Q3636208":"event","Q3636890":"event","Q3637504":"event","Q3637509":"event","Q3637575":"event","Q3637701":"event","Q3637844":"event","Q3637894":"event","Q3638210":"event","Q3638307":"event","Q3638528":"event","Q3638539":"event","Q3638580":"event","Q3638594":"event","Q3638593":"event","Q3639471":"event","Q3639751":"event","Q3640336":"event","Q3640695":"event","Q3641012":"event","Q3641088":"event","Q3641095":"event","Q3641441":"event","Q3641448":"event","Q3641513":"event","Q3641604":"event","Q3641859":"event","Q3641916":"event","Q3642936":"event","Q3643010":"event","Q3643283":"event","Q3643851":"event","Q3643894":"event","Q3643975":"event","Q3643984":"event","Q3644325":"event","Q3644342":"event","Q3644801":"event","Q3644842":"event","Q3645279":"event","Q3645520":"event","Q3645563":"event","Q3646016":"event","Q3646238":"event","Q3646273":"event","Q3646350":"event","Q3646356":"event","Q3646483":"event","Q3646516":"event","Q3646730":"event","Q3646751":"event","Q3646808":"event","Q3646940":"event","Q3647225":"event","Q3649463":"event","Q3649547":"event","Q3649879":"event","Q3649903":"event","Q3649998":"event","Q3650525":"event","Q3650660":"event","Q3650671":"event","Q3651832":"event","Q3651894":"event","Q3652027":"event","Q3653725":"event","Q3654748":"event","Q3655130":"event","Q3655294":"event","Q3656625":"event","Q3656772":"event","Q3656796":"event","Q3658127":"event","Q3658138":"event","Q3658445":"event","Q3658681":"event","Q3660576":"event","Q3661360":"event","Q3661371":"event","Q3661526":"event","Q3663286":"event","Q3663972":"event","Q3664140":"event","Q3664280":"event","Q3665269":"event","Q3665273":"event","Q3665766":"event","Q3665787":"event","Q3665857":"event","Q3665934":"event","Q3666008":"event","Q3666037":"event","Q3666105":"event","Q3666176":"event","Q3666713":"event","Q3666808":"event","Q3667771":"event","Q3674576":"event","Q3674597":"event","Q3675214":"event","Q3675598":"event","Q3677008":"event","Q3678553":"event","Q3678624":"event","Q3678641":"event","Q3678655":"event","Q3678714":"event","Q3678724":"event","Q3680362":"event","Q3680700":"event","Q3682571":"event","Q3682849":"event","Q3683335":"event","Q3683487":"event","Q3683613":"event","Q3683812":"event","Q3683866":"event","Q3684250":"event","Q3686296":"event","Q3686348":"event","Q3686362":"event","Q3686659":"event","Q3689188":"event","Q3689987":"event","Q3690315":"event","Q3690373":"event","Q3690473":"event","Q3690538":"event","Q3690645":"event","Q3690697":"event","Q3690726":"event","Q3690848":"event","Q3690973":"event","Q3693269":"event","Q3695077":"event","Q3695290":"event","Q3695673":"event","Q3695897":"event","Q3696159":"event","Q3696334":"event","Q3696508":"event","Q3696847":"event","Q3698733":"event","Q3699189":"event","Q3699404":"event","Q3699618":"event","Q3699955":"event","Q3699961":"event","Q3700797":"event","Q3702794":"event","Q3702866":"event","Q3703856":"event","Q3704859":"event","Q3705157":"event","Q3705562":"event","Q3705902":"event","Q3706160":"event","Q3706333":"event","Q3706372":"event","Q3707644":"event","Q3712550":"event","Q3714405":"event","Q3714412":"event","Q3714489":"event","Q3715313":"event","Q3715761":"event","Q3715789":"event","Q3715936":"event","Q3716475":"event","Q3717008":"event","Q3717021":"event","Q3717680":"event","Q3717781":"event","Q3719180":"event","Q3720297":"event","Q3720663":"event","Q3720749":"event","Q3724053":"event","Q3724109":"event","Q3725435":"event","Q3726398":"event","Q3730949":"event","Q3733152":"event","Q3733267":"event","Q3733269":"event","Q3733487":"event","Q3735966":"event","Q3737344":"event","Q3738447":"event","Q3738448":"event","Q3742349":"event","Q3742740":"event","Q3743025":"event","Q3745746":"event","Q3746380":"event","Q3746685":"event","Q3746748":"event","Q3746863":"event","Q3747981":"event","Q3748002":"event","Q3748499":"event","Q3751985":"event","Q3752681":"event","Q3753107":"event","Q3754137":"event","Q3754141":"event","Q3756000":"event","Q3756044":"event","Q3757474":"event","Q3758388":"event","Q3758450":"event","Q3758455":"event","Q3760014":"event","Q3760037":"event","Q3760059":"event","Q3761543":"event","Q3771964":"event","Q3772825":"event","Q3772892":"event","Q3772944":"event","Q3773601":"event","Q3773610":"event","Q3774003":"event","Q3774233":"event","Q3775797":"event","Q3775969":"event","Q3776303":"event","Q3776626":"event","Q3776908":"event","Q3778037":"event","Q3778048":"event","Q3778065":"event","Q3778152":"event","Q3778186":"event","Q3778213":"event","Q3778410":"event","Q3780077":"event","Q3780296":"event","Q3782362":"event","Q3782574":"event","Q3782723":"event","Q3782793":"event","Q3782809":"event","Q3782846":"event","Q3782857":"event","Q3782895":"event","Q3782902":"event","Q3783058":"event","Q3783541":"event","Q3783549":"event","Q3783722":"event","Q3784068":"event","Q3784739":"event","Q3785650":"event","Q3785658":"event","Q3785678":"event","Q3785992":"event","Q3786453":"event","Q3786546":"event","Q3786855":"event","Q3787021":"event","Q3787550":"event","Q3787640":"event","Q3787667":"event","Q3787691":"event","Q3788665":"event","Q3788932":"event","Q3789032":"event","Q3789045":"event","Q3789162":"event","Q3789194":"event","Q3789244":"event","Q3789310":"event","Q3789328":"event","Q3789365":"event","Q3789370":"event","Q3789394":"event","Q3789434":"event","Q3789496":"event","Q3789528":"event","Q3789632":"event","Q3789674":"event","Q3789678":"event","Q3789703":"event","Q3789709":"event","Q3789718":"event","Q3789747":"event","Q3789754":"event","Q3789808":"event","Q3789812":"event","Q3789831":"event","Q3789839":"event","Q3789872":"event","Q3789878":"event","Q3789888":"event","Q3790340":"event","Q3796399":"event","Q3797954":"event","Q3797980":"event","Q3797988":"event","Q3798154":"event","Q3798590":"event","Q3799319":"event","Q3799525":"event","Q3799553":"event","Q3799599":"event","Q3799732":"event","Q3799913":"event","Q3799953":"event","Q3800174":"event","Q3800183":"event","Q3800198":"event","Q3800367":"event","Q3800418":"event","Q3801775":"event","Q3802402":"event","Q3803483":"event","Q3804562":"event","Q3804995":"event","Q3805009":"event","Q3805746":"event","Q3806198":"event","Q3806224":"event","Q3806774":"event","Q3808059":"event","Q3808966":"event","Q3808977":"event","Q3809508":"event","Q3809770":"event","Q3809992":"event","Q3811991":"event","Q3812427":"event","Q3812536":"event","Q3812703":"event","Q3812756":"event","Q3812760":"event","Q3812861":"event","Q3812873":"event","Q3813127":"event","Q3813144":"event","Q3813181":"event","Q3814044":"event","Q3814761":"event","Q3814967":"event","Q3815117":"event","Q3815639":"event","Q3815726":"event","Q3815931":"event","Q3815953":"event","Q3815974":"event","Q3816070":"event","Q3816530":"event","Q3816545":"event","Q3816783":"event","Q3817247":"event","Q3817511":"event","Q3817559":"event","Q3817701":"event","Q3817814":"event","Q3820205":"event","Q3820336":"event","Q3820766":"event","Q3821202":"event","Q3825520":"event","Q3826095":"event","Q3826122":"event","Q3826129":"event","Q3826622":"event","Q3827535":"event","Q3827699":"event","Q3827705":"event","Q3828172":"event","Q3828437":"event","Q3829355":"event","Q3830229":"event","Q3830782":"event","Q3831285":"event","Q3831448":"event","Q3832105":"event","Q3832394":"event","Q3832447":"event","Q3832475":"event","Q3832572":"event","Q3833114":"event","Q3833141":"event","Q3833232":"event","Q3833375":"event","Q3833384":"event","Q3835058":"event","Q3835580":"event","Q3836476":"event","Q3837260":"event","Q3837390":"event","Q3837961":"event","Q3837971":"event","Q3838980":"event","Q3839218":"event","Q3840939":"event","Q3841562":"event","Q3841964":"event","Q3842052":"event","Q3842154":"event","Q3842339":"event","Q3842781":"event","Q3842806":"event","Q3842916":"event","Q3843106":"event","Q3843487":"event","Q3843957":"event","Q3844000":"event","Q3844082":"event","Q3844090":"event","Q3844309":"event","Q3844406":"event","Q3844686":"event","Q3844927":"event","Q3845224":"event","Q3845232":"event","Q3845317":"event","Q3846880":"event","Q3847060":"event","Q3849409":"event","Q3849820":"event","Q3849907":"event","Q3850218":"event","Q3850663":"event","Q3850837":"event","Q3852387":"event","Q3852477":"event","Q3853662":"event","Q3853831":"event","Q3854045":"event","Q3854131":"event","Q3854150":"event","Q3854393":"event","Q3854557":"event","Q3854635":"event","Q3854804":"event","Q3855370":"event","Q3855787":"event","Q3855791":"event","Q3855800":"event","Q3855807":"event","Q3856003":"event","Q3856009":"event","Q3857794":"event","Q3857832":"event","Q3858175":"event","Q3859501":"event","Q3859787":"event","Q3859891":"event","Q3860600":"event","Q3861045":"event","Q3861130":"event","Q3861310":"event","Q3862191":"event","Q3862336":"event","Q3862352":"event","Q3862360":"event","Q3862413":"event","Q3862419":"event","Q3862423":"event","Q3862506":"event","Q3862513":"event","Q3862871":"event","Q3863083":"event","Q3863112":"event","Q3867068":"event","Q3867125":"event","Q3867138":"event","Q3867219":"event","Q3867375":"event","Q3868522":"event","Q3869473":"event","Q3869907":"event","Q3869921":"event","Q3869966":"event","Q3870037":"event","Q3870180":"event","Q3870211":"event","Q3870225":"event","Q3870318":"event","Q3870591":"event","Q3874950":"event","Q3874973":"event","Q3875018":"event","Q3875024":"event","Q3875200":"event","Q3875235":"event","Q3875302":"event","Q3875329":"event","Q3875340":"event","Q3875621":"event","Q3875920":"event","Q3876603":"event","Q3876655":"event","Q3878533":"event","Q3878542":"event","Q3878798":"event","Q3878876":"event","Q3878897":"event","Q3879299":"event","Q3879897":"event","Q3879981":"event","Q3879986":"event","Q3880040":"event","Q3880501":"event","Q3880726":"event","Q3880964":"event","Q3881071":"event","Q3881249":"event","Q3881328":"event","Q3881483":"event","Q3882045":"event","Q3883099":"event","Q3883111":"event","Q3883123":"event","Q3883130":"event","Q3883137":"event","Q3883169":"event","Q3883186":"event","Q3883193":"event","Q3883208":"event","Q3883215":"event","Q3883233":"event","Q3883251":"event","Q3883337":"event","Q3883377":"event","Q3883492":"event","Q3883592":"event","Q3884193":"event","Q3885939":"event","Q3886256":"event","Q3886348":"event","Q3886871":"event","Q3886886":"event","Q3888758":"event","Q3892716":"event","Q3892721":"event","Q3892726":"event","Q3892916":"event","Q3895234":"event","Q3895943":"event","Q3896910":"event","Q3898348":"event","Q3898885":"event","Q3898992":"event","Q3899121":"event","Q3899293":"event","Q3899422":"event","Q3900013":"event","Q3900553":"event","Q3900676":"event","Q3901601":"event","Q3954695":"event","Q3958447":"event","Q3959117":"event","Q3959335":"event","Q3959398":"event","Q3959511":"event","Q3959810":"event","Q3959809":"event","Q3959814":"event","Q3959891":"event","Q3960070":"event","Q3961775":"event","Q3961985":"event","Q3961996":"event","Q3962843":"event","Q3962955":"event","Q3964332":"event","Q3964962":"event","Q3965577":"event","Q3965585":"event","Q3965602":"event","Q3965608":"event","Q3966937":"event","Q3967100":"event","Q3967179":"event","Q3967192":"event","Q3967241":"event","Q3967245":"event","Q3967270":"event","Q3967503":"event","Q3967576":"event","Q3967614":"event","Q3968691":"event","Q3973768":"event","Q3975857":"event","Q3975861":"event","Q3976378":"event","Q3976914":"event","Q3976995":"event","Q3977040":"event","Q3977051":"event","Q3978105":"event","Q3978181":"event","Q3978361":"event","Q3978613":"event","Q3979022":"event","Q3979145":"event","Q3979249":"event","Q3979433":"event","Q3979440":"event","Q3979465":"event","Q3980194":"event","Q3980649":"event","Q3980744":"event","Q3980818":"event","Q3980834":"event","Q3980840":"event","Q3981092":"event","Q3981179":"event","Q3981238":"event","Q3981270":"event","Q3981343":"event","Q3981383":"event","Q3981480":"event","Q3981715":"event","Q3982594":"event","Q3982649":"event","Q3982723":"event","Q3983023":"event","Q3983444":"event","Q3983669":"event","Q3983710":"event","Q3983735":"event","Q3985275":"event","Q3987443":"event","Q3987749":"event","Q3990341":"event","Q3990362":"event","Q3991146":"event","Q3991309":"event","Q3991460":"event","Q3991630":"event","Q3992207":"event","Q3992290":"event","Q3992375":"event","Q3992425":"event","Q3993795":"event","Q3994402":"event","Q3994427":"event","Q3994450":"event","Q3994506":"event","Q3994517":"event","Q3994536":"event","Q3994548":"event","Q3994549":"event","Q3994570":"event","Q3994581":"event","Q3994665":"event","Q3994691":"event","Q3995105":"event","Q3905055":"event","Q3906301":"event","Q3906890":"event","Q3907679":"event","Q3908048":"event","Q3908655":"event","Q3909130":"event","Q3909332":"event","Q3909344":"event","Q3909705":"event","Q3909829":"event","Q3910963":"event","Q3911280":"event","Q3922259":"event","Q3925401":"event","Q3925427":"event","Q3925433":"event","Q3925440":"event","Q3926163":"event","Q3926228":"event","Q3928022":"event","Q3928171":"event","Q3929662":"event","Q3929735":"event","Q3929996":"event","Q3931236":"event","Q3931294":"event","Q3931297":"event","Q3931553":"event","Q3931782":"event","Q3932235":"event","Q3932963":"event","Q3933265":"event","Q3933868":"event","Q3933882":"event","Q3934241":"event","Q3935265":"event","Q3935780":"event","Q3936165":"event","Q3936227":"event","Q3936244":"event","Q3937969":"event","Q3938141":"event","Q3939694":"event","Q3939782":"event","Q3939832":"event","Q3940066":"event","Q3940383":"event","Q3940421":"event","Q3940804":"event","Q3941758":"event","Q3942056":"event","Q3942084":"event","Q3942628":"event","Q3943452":"event","Q3943519":"event","Q3943551":"event","Q3943731":"event","Q3943760":"event","Q3944106":"event","Q3944531":"event","Q3944943":"event","Q3945028":"event","Q3945463":"event","Q3945558":"event","Q3945759":"event","Q3945806":"event","Q3945808":"event","Q3945885":"event","Q3946307":"event","Q3946397":"event","Q3946726":"event","Q3946803":"event","Q3946829":"event","Q3946929":"event","Q3947386":"event","Q3947444":"event","Q3947890":"event","Q3948547":"event","Q3948564":"event","Q3948987":"event","Q3949390":"event","Q3949413":"event","Q3949561":"event","Q3950151":"event","Q3950160":"event","Q3950209":"event","Q3950225":"event","Q3950389":"event","Q3950405":"event","Q3950522":"event","Q3950988":"event","Q3951540":"event","Q3951895":"event","Q3952225":"event","Q3953614":"event","Q3954177":"event","Q3954480":"event","Q3954502":"event","Q3954565":"event","Q4366218":"event","Q4454733":"event","Q4509271":"event","Q4510456":"event","Q4797848":"event","Q4836135":"event","Q4942801":"event","Q4957984":"event","Q4984045":"event","Q5068924":"event","Q5071577":"event","Q5082753":"event","Q5168153":"event","Q5168210":"event","Q5413401":"event","Q5490846":"event","Q5514875":"event","Q5551202":"event","Q5744971":"event","Q5787894":"event","Q5942858":"event","Q6005569":"event","Q6052577":"event","Q6053982":"event","Q6123948":"event","Q6417564":"event","Q6728095":"event","Q6785427":"event","Q6785432":"event","Q6819490":"event","Q6952254":"event","Q6952263":"event","Q6952969":"event","Q6980868":"event","Q7023722":"event","Q7096050":"event","Q7127993":"event","Q7179488":"event","Q7269946":"event","Q7335177":"event","Q7426098":"event","Q7523148":"event","Q7607039":"event","Q7698261":"event","Q7700325":"event","Q7700459":"event","Q7700462":"event","Q7700460":"event","Q7700461":"event","Q7829347":"event","Q7832260":"event","Q7863693":"event","Q7889248":"event","Q7907578":"event","Q7992062":"event","Q8036294":"event","Q8349777":"event","Q9560694":"event","Q11090803":"event","Q11351733":"event","Q11362264":"event","Q11389224":"event","Q11389239":"event","Q11389359":"event","Q11419795":"event","Q11421030":"event","Q11421028":"event","Q13222050":"event","Q13360734":"event","Q13493441":"event","Q13526286":"event","Q13528155":"event","Q13582675":"event","Q13582710":"event","Q13583330":"event","Q13600685":"event","Q13861080":"event","Q14174007":"event","Q14320759":"event","Q14342109":"event","Q14395789":"event","Q14478218":"event","Q14514524":"event","Q14856072":"event","Q15041810":"event","Q15054936":"event","Q15069684":"event","Q15097531":"event","Q15131563":"event","Q15131574":"event","Q15144568":"event","Q15147839":"event","Q15211049":"event","Q15275875":"event","Q15295658":"event","Q15361334":"event","Q15502507":"event","Q15689750":"event","Q15729796":"event","Q15731893":"event","Q15735641":"event","Q15781230":"event","Q15781235":"event","Q15781242":"event","Q15781244":"event","Q15959551":"event","Q15974424":"event","Q16023722":"event","Q16054181":"event","Q16219512":"event","Q16274825":"event","Q16512362":"event","Q16529509":"event","Q16534435":"event","Q16546328":"event","Q16563995":"event","Q16564054":"event","Q16564136":"event","Q16580434":"event","Q16584404":"event","Q16613251":"event","Q16615810":"event","Q16618886":"event","Q16632531":"event","Q16680326":"event","Q16680679":"event","Q16680755":"event","Q16830262":"event","Q16830263":"event","Q16830264":"event","Q16850252":"event","Q16955406":"event","Q16956397":"event","Q16977292":"event","Q16981798":"event","Q16984643":"event","Q16987821":"event","Q17011128":"event","Q17011135":"event","Q17022891":"event","Q17151899":"event","Q17256963":"event","Q17270829":"event","Q17306815":"event","Q17310096":"event","Q17310097":"event","Q17333175":"event","Q17333181":"event","Q17333184":"event","Q17333197":"event","Q17333214":"event","Q17333223":"event","Q17361963":"event","Q17383767":"event","Q17461001":"event","Q17462082":"event","Q17462095":"event","Q17464028":"event","Q17489335":"event","Q17493278":"event","Q17622371":"event","Q17622546":"event","Q17624645":"event","Q17625497":"event","Q17628571":"event","Q17633105":"event","Q17633886":"event","Q17637042":"event","Q17637518":"event","Q17639419":"event","Q17639746":"event","Q17640525":"event","Q17747114":"event","Q17993729":"event","Q18018759":"event","Q18129441":"event","Q18159015":"event","Q18194670":"event","Q18202318":"event","Q18213482":"event","Q18213481":"event","Q18213488":"event","Q18287737":"event","Q18341693":"event","Q18377780":"event","Q18392682":"event","Q18396069":"event","Q18409973":"event","Q18412581":"event","Q18415531":"event","Q18418347":"event","Q18536387":"event","Q18544772":"event","Q18580167":"event","Q18604482":"event","Q18641731":"event","Q18698620":"event","Q18979560":"event","Q19160228":"event","Q19258246":"event","Q19428421":"event","Q19605869":"event","Q19606574":"event","Q19817651":"event","Q19833989":"event","Q19891914":"event","Q19892939":"event","Q19924530":"event","Q20010797":"event","Q20020843":"event","Q20127833":"event","Q20164838":"event","Q20312401":"event","Q20439575":"event","Q20647502":"event","Q20648829":"event","Q20713720":"event","Q20797926":"event","Q20804888":"event","Q21010022":"event","Q21027485":"event","Q21030874":"event","Q21040127":"event","Q21055686":"event","Q21093703":"event","Q21093700":"event","Q21093701":"event","Q21093712":"event","Q21093723":"event","Q21093726":"event","Q21093725":"event","Q21234484":"event","Q21235476":"event","Q21235523":"event","Q21336943":"event","Q21395689":"event","Q21408242":"event","Q21476775":"event","Q22008239":"event","Q22026039":"event","Q22059426":"event","Q22079824":"event","Q22079845":"event","Q22079851":"event","Q22079858":"event","Q22086620":"event","Q22095418":"event","Q22095956":"event","Q22096122":"event","Q22096136":"event","Q22096406":"event","Q22096448":"event","Q22222885":"event","Q22235842":"event","Q22298555":"event","Q22683265":"event","Q22829012":"event","Q22919781":"event","Q23018491":"event","Q23038902":"event","Q23039164":"event","Q23039200":"event","Q23039334":"event","Q23039397":"event","Q23039414":"event","Q23039600":"event","Q23785490":"event","Q23795293":"event","Q23797188":"event","Q23895149":"event","Q23956839":"event","Q24088385":"event","Q24197286":"event","Q24636970":"event","Q24699540":"event","Q24908119":"event","Q24911704":"event","Q24972047":"event","Q24993214":"event","Q24993217":"event","Q25247386":"event","Q25350515":"event","Q25377940":"event","Q25378133":"event","Q25378153":"event","Q25378415":"event","Q25378540":"event","Q25378617":"event","Q25383755":"event","Q25384986":"event","Q25403316":"event","Q26268612":"event","Q26268650":"event","Q26307058":"event","Q26694763":"event","Q26722566":"event","Q26806402":"event","Q26836193":"event","Q26836508":"event","Q26863790":"event","Q26869510":"event","Q27220048":"event","Q27308030":"event","Q27517306":"event","Q27567168":"event","Q27888220":"event","Q27897066":"event","Q28003735":"event","Q28065175":"event","Q28071051":"event","Q28108951":"event","Q28141548":"event","Q28223971":"event","Q28224191":"event","Q28229057":"event","Q28230598":"event","Q28402654":"event","Q28434536":"event","Q28439721":"event","Q28446863":"event","Q28447931":"event","Q28449553":"event","Q28681433":"event","Q28739880":"event","Q28970885":"event","Q28976348":"event","Q29045824":"event","Q29111854":"event","Q29976438":"event","Q30056998":"event","Q30224302":"event","Q30329653":"event","Q30636372":"event","Q30640119":"event","Q30644035":"event","Q30644056":"event","Q30644268":"event","Q30899671":"event","Q30909403":"event","Q34802615":"event","Q34972831":"event","Q38184051":"event","Q39045340":"event","Q39056481":"event","Q39057700":"event","Q39061118":"event","Q39080169":"event","Q40445394":"event","Q41799397":"event","Q42531004":"event","Q43380317":"event","Q47006610":"event","Q47013041":"event","Q47117944":"event","Q47443726":"event","Q47482648":"event","Q47487926":"event","Q47487925":"event","Q47487928":"event","Q47487971":"event","Q47487968":"event","Q47487973":"event","Q47488698":"event","Q47488699":"event","Q47488700":"event","Q47488701":"event","Q47488750":"event","Q47832385":"event","Q47841968":"event","Q47916304":"event","Q47921081":"event","Q48031037":"event","Q48133303":"event","Q48207643":"event","Q48261162":"event","Q48636487":"event","Q48673590":"event","Q48843043":"event","Q48990084":"event","Q50185613":"event","Q50186904":"event","Q50384692":"event","Q50410412":"event","Q50418195":"event","Q50418202":"event","Q50470152":"event","Q50470306":"event","Q50472085":"event","Q50472157":"event","Q50472800":"event","Q50476608":"event","Q50476661":"event","Q50476759":"event","Q50476812":"event","Q50476866":"event","Q50477552":"event","Q50477604":"event","Q50477754":"event","Q50477829":"event","Q50477931":"event","Q3996962":"event","Q3997087":"event","Q3997430":"event","Q3998000":"event","Q3999222":"event","Q3999332":"event","Q3999351":"event","Q3999363":"event","Q3999376":"event","Q3999433":"event","Q3999595":"event","Q3999701":"event","Q4000382":"event","Q4000412":"event","Q4000453":"event","Q4001138":"event","Q4002130":"event","Q4002148":"event","Q4002185":"event","Q4002204":"event","Q4002238":"event","Q4002380":"event","Q4003083":"event","Q4007206":"event","Q4007618":"event","Q4007977":"event","Q4007990":"event","Q4008491":"event","Q4008505":"event","Q4008548":"event","Q4009335":"event","Q4009661":"event","Q4010154":"event","Q4011100":"event","Q4011460":"event","Q4011468":"event","Q4011580":"event","Q4011707":"event","Q4013959":"event","Q4013961":"event","Q4013974":"event","Q4014104":"event","Q4014335":"event","Q4014751":"event","Q4015767":"event","Q4016836":"event","Q4016887":"event","Q4016895":"event","Q4017093":"event","Q4017170":"event","Q4017354":"event","Q4017622":"event","Q4017666":"event","Q4017785":"event","Q4017825":"event","Q4018287":"event","Q4018384":"event","Q4018777":"event","Q4018790":"event","Q4018912":"event","Q4019086":"event","Q4019091":"event","Q4019107":"event","Q4019104":"event","Q4019130":"event","Q4019506":"event","Q4019713":"event","Q4020075":"event","Q4020461":"event","Q4020513":"event","Q4020717":"event","Q4020733":"event","Q4020740":"event","Q4021029":"event","Q4021433":"event","Q4022725":"event","Q4023183":"event","Q4023185":"event","Q4023309":"event","Q4023575":"event","Q4023674":"event","Q4023687":"event","Q4023857":"event","Q4024105":"event","Q4024108":"event","Q4024112":"event","Q4024918":"event","Q4025007":"event","Q4025012":"event","Q4025042":"event","Q4045891":"event","Q4050441":"event","Q4052770":"event","Q4224218":"event","Q4256960":"event","Q4288439":"event","Q4339756":"event","Q4366215":"event","Q4366216":"event","Q4366217":"event","Q106938984":"event","Q109535303":"event","Q111187591":"event","Q111913525":"event","Q111913793":"event","Q112695240":"event","Q114096661":"event","Q116299141":"event","Q116449343":"event","Q117808718":"event","Q120067830":"event","Q122618489":"event","Q124352933":"event","Q120804":"event","Q141716":"event","Q145505":"event","Q149882":"event","Q175861":"event","Q203784":"event","Q209556":"event","Q245886":"event","Q245885":"event","Q245892":"event","Q257285":"event","Q301292":"event","Q303419":"event","Q303811":"event","Q314038":"event","Q1570656":"event","Q50477995":"event","Q50478097":"event","Q50479021":"event","Q50479069":"event","Q50479199":"event","Q50479241":"event","Q50479278":"event","Q50479308":"event","Q50479383":"event","Q50479631":"event","Q50547864":"event","Q50547896":"event","Q50547916":"event","Q50547939":"event","Q50547960":"event","Q50548026":"event","Q50548059":"event","Q50548110":"event","Q50548457":"event","Q50548533":"event","Q50548556":"event","Q50548710":"event","Q50548734":"event","Q50548757":"event","Q50548777":"event","Q50548802":"event","Q50548834":"event","Q50548865":"event","Q50548896":"event","Q50548930":"event","Q50548946":"event","Q50548968":"event","Q50549210":"event","Q50549208":"event","Q50549209":"event","Q50549215":"event","Q50549218":"event","Q50549222":"event","Q50549223":"event","Q50549220":"event","Q50549221":"event","Q50549224":"event","Q50549228":"event","Q50549229":"event","Q50549232":"event","Q50549233":"event","Q50549237":"event","Q50549246":"event","Q50549247":"event","Q50549250":"event","Q50549251":"event","Q50549257":"event","Q50549263":"event","Q50549266":"event","Q50842727":"event","Q55640283":"event","Q56378748":"event","Q60846927":"event","Q61445364":"event","Q62666870":"event","Q64822995":"event","Q15222":"event","Q27450":"event","Q31345":"event","Q85280333":"event","Q97670098":"event","Q99194720":"event","Q99655727":"event","Q99656088":"event","Q99656421":"event","Q100786919":"event","Q324257":"event","Q328539":"event","Q375218":"event","Q375545":"event","Q443941":"event","Q474007":"event","Q474534":"event","Q540439":"event","Q608883":"event","Q616151":"event","Q628010":"event","Q645310":"event","Q645545":"event","Q653127":"event","Q655951":"event","Q656382":"event","Q663964":"event","Q683469":"event","Q683482":"event","Q684360":"event","Q688120":"event","Q689657":"event","Q689703":"event","Q692149":"event","Q694225":"event","Q695984":"event","Q696667":"event","Q696677":"event","Q696710":"event","Q724011":"event","Q724014":"event","Q724094":"event","Q727021":"event","Q727359":"event","Q729230":"event","Q730186":"event","Q735943":"event","Q747654":"event","Q758639":"event","Q773829":"event","Q781528":"event","Q783023":"event","Q792499":"event","Q797176":"event","Q797189":"event","Q799209":"event","Q799376":"event","Q799377":"event","Q799422":"event","Q799425":"event","Q799434":"event","Q799450":"event","Q799469":"event","Q799591":"event","Q799594":"event","Q799593":"event","Q799633":"event","Q799644":"event","Q799658":"event","Q799659":"event","Q799657":"event","Q799661":"event","Q803628":"event","Q805057":"event","Q805144":"event","Q805762":"event","Q806492":"event","Q806493":"event","Q806528":"event","Q807299":"event","Q815487":"event","Q815488":"event","Q815500":"event","Q816076":"event","Q822054":"event","Q834406":"event","Q894458":"event","Q894457":"event","Q894470":"event","Q894571":"event","Q894853":"event","Q899204":"event","Q903055":"event","Q954074":"event","Q960248":"event","Q969090":"event","Q991734":"event","Q992559":"event","Q995595":"event","Q1003607":"event","Q1003631":"event","Q1003698":"event","Q1003701":"event","Q1003889":"event","Q1032155":"event","Q1032264":"event","Q1032833":"event","Q1033744":"event","Q1035830":"event","Q1043418":"event","Q1072807":"event","Q1073307":"event","Q1073355":"event","Q1073723":"event","Q1073735":"event","Q1073977":"event","Q1110379":"event","Q1116354":"event","Q1120597":"event","Q1130994":"event","Q1131040":"event","Q1140677":"event","Q1149324":"event","Q1149395":"event","Q1152534":"event","Q1152533":"event","Q1152542":"event","Q1152547":"event","Q1152706":"event","Q1152708":"event","Q1152819":"event","Q1152836":"event","Q1162557":"event","Q1162560":"event","Q1169153":"event","Q1180970":"event","Q1188726":"event","Q1188732":"event","Q1188736":"event","Q1188737":"event","Q1188740":"event","Q1193650":"event","Q1194788":"event","Q1202091":"event","Q1203123":"event","Q1203198":"event","Q1203472":"event","Q1203591":"event","Q1203593":"event","Q1204142":"event","Q1233985":"event","Q1235427":"event","Q1240036":"event","Q1245467":"event","Q1246458":"event","Q1254649":"event","Q1255145":"event","Q1256690":"event","Q1262142":"event","Q1266209":"event","Q1267784":"event","Q1267829":"event","Q1270050":"event","Q1270143":"event","Q1274559":"event","Q1276626":"event","Q1277716":"event","Q1278396":"event","Q1279569":"event","Q1282002":"event","Q1282211":"event","Q1283160":"event","Q1290911":"event","Q1291694":"event","Q1307348":"event","Q1309521":"event","Q1315945":"event","Q1316180":"event","Q1321278":"event","Q1323243":"event","Q1325650":"event","Q1327578":"event","Q1334737":"event","Q1341097":"event","Q1342577":"event","Q1342810":"event","Q1353734":"event","Q1358044":"event","Q1367044":"event","Q1370190":"event","Q1370189":"event","Q1370324":"event","Q1370420":"event","Q1370853":"event","Q1371249":"event","Q1375254":"event","Q1375518":"event","Q1376114":"event","Q1377363":"event","Q1385247":"event","Q1387258":"event","Q1387905":"event","Q1390124":"event","Q1390140":"event","Q1396170":"event","Q1401758":"event","Q1410316":"event","Q1412253":"event","Q1413731":"event","Q1417544":"event","Q1417794":"event","Q1417799":"event","Q1418147":"event","Q1418979":"event","Q1420655":"event","Q1428559":"event","Q1430384":"event","Q1433086":"event","Q1433192":"event","Q1450503":"event","Q1450505":"event","Q1450598":"event","Q1455275":"event","Q1456424":"event","Q1462977":"event","Q1465483":"event","Q1469053":"event","Q1469581":"event","Q1477055":"event","Q1478906":"event","Q1478904":"event","Q1484521":"event","Q1491833":"event","Q1502455":"event","Q1505582":"event","Q1505882":"event","Q1507281":"event","Q1509457":"event","Q1513289":"event","Q1515782":"event","Q1517150":"event","Q1521351":"event","Q1522958":"event","Q1522970":"event","Q1522968":"event","Q1522973":"event","Q1524526":"event","Q1526627":"event","Q1531252":"event","Q1531700":"event","Q1538381":"event","Q1544524":"event","Q1546327":"event","Q1546329":"event","Q1551665":"event","Q1551671":"event","Q1551668":"event","Q1551983":"event","Q1552924":"event","Q1556727":"event","Q1557948":"event","Q1562929":"event","Q1563114":"event","Q1563377":"event","Q1566376":"event","Q1572887":"event","Q1573963":"event","Q1574935":"event","Q1575199":"event","Q1576656":"event","Q1579590":"event","Q1586501":"event","Q1604564":"event","Q1608552":"event","Q1614032":"event","Q1617761":"event","Q1618143":"event","Q1623569":"event","Q1626942":"event","Q1632327":"event","Q1632810":"event","Q1637740":"event","Q1644669":"event","Q1651180":"event","Q1652172":"event","Q1661179":"event","Q1661203":"event","Q1661253":"event","Q1661462":"event","Q1661461":"event","Q1661531":"event","Q1661706":"event","Q1661730":"event","Q1661757":"event","Q1661763":"event","Q1667712":"event","Q1667853":"event","Q1668185":"event","Q1668910":"event","Q1670208":"event","Q1672768":"event","Q1672769":"event","Q1672850":"event","Q1674279":"event","Q1674283":"event","Q1674634":"event","Q1674632":"event","Q1674669":"event","Q1675034":"event","Q1675067":"event","Q1675068":"event","Q1675123":"event","Q1679821":"event","Q1683169":"event","Q1683232":"event","Q1684034":"event","Q1685213":"event","Q1685869":"event","Q1687914":"event","Q1695924":"event","Q1703624":"event","Q1705940":"event","Q1711429":"event","Q1711454":"event","Q1711490":"event","Q1719131":"event","Q1723084":"event","Q1723513":"event","Q1731784":"event","Q1740580":"event","Q1741051":"event","Q1747348":"event","Q1749925":"event","Q1750264":"event","Q1750458":"event","Q1752398":"event","Q1755200":"event","Q1758889":"event","Q1780951":"event","Q1781629":"event","Q1784333":"event","Q1789594":"event","Q1789592":"event","Q1797308":"event","Q1803360":"event","Q1805717":"event","Q1810278":"event","Q1821179":"event","Q1821177":"event","Q1823166":"event","Q1824036":"event","Q1853314":"event","Q1864968":"event","Q1864969":"event","Q1878292":"event","Q1878314":"event","Q1882522":"event","Q1882589":"event","Q1883115":"event","Q1887081":"event","Q1887782":"event","Q1887862":"event","Q1887860":"event","Q1890454":"event","Q1891856":"event","Q1911518":"event","Q1914690":"event","Q1914688":"event","Q1919760":"event","Q1926218":"event","Q1926589":"event","Q1943321":"event","Q1943330":"event","Q1944455":"event","Q1956478":"event","Q1956484":"event","Q1964273":"event","Q1977678":"event","Q1977689":"event","Q1981535":"event","Q1982890":"event","Q1983296":"event","Q1988018":"event","Q1989626":"event","Q2000667":"event","Q2000712":"event","Q2000899":"event","Q2000969":"event","Q2001330":"event","Q2001418":"event","Q2001423":"event","Q2034849":"event","Q2048934":"event","Q2065510":"event","Q2067749":"event","Q2070093":"event","Q2072630":"event","Q2087865":"event","Q2099680":"event","Q2102206":"event","Q2102204":"event","Q2104038":"event","Q2105303":"event","Q2105362":"event","Q2105361":"event","Q2108612":"event","Q2117459":"event","Q2152739":"event","Q2164862":"event","Q2175726":"event","Q2175869":"event","Q2177010":"event","Q2177019":"event","Q2177020":"event","Q2177040":"event","Q2205028":"event","Q2205295":"event","Q2216954":"event","Q2216952":"event","Q2223631":"event","Q2228875":"event","Q2249247":"event","Q2249252":"event","Q2249297":"event","Q2254761":"event","Q2254764":"event","Q2255260":"event","Q2255911":"event","Q2261202":"event","Q2272115":"event","Q2272152":"event","Q2272156":"event","Q2272190":"event","Q2289123":"event","Q2289151":"event","Q2294542":"event","Q2294540":"event","Q2294583":"event","Q2295176":"event","Q2304242":"event","Q2304603":"event","Q2305039":"event","Q2315195":"event","Q2315299":"event","Q2353605":"event","Q2368560":"event","Q2368579":"event","Q2368577":"event","Q2368637":"event","Q2369781":"event","Q2372330":"event","Q2372973":"event","Q2376386":"event","Q2380385":"event","Q2380393":"event","Q2380447":"event","Q2380836":"event","Q2381177":"event","Q2388298":"event","Q2388904":"event","Q2392422":"event","Q2395088":"event","Q2457528":"event","Q2457619":"event","Q2457622":"event","Q2460806":"event","Q2464679":"event","Q2465009":"event","Q2467831":"event","Q2468228":"event","Q2472969":"event","Q2473864":"event","Q2473895":"event","Q2473892":"event","Q2474373":"event","Q2493431":"event","Q2522263":"event","Q2522738":"event","Q2540626":"event","Q2542334":"event","Q2550479":"event","Q2557307":"event","Q2564240":"event","Q2564374":"event","Q2564408":"event","Q2567276":"event","Q2593517":"event","Q2593712":"event","Q2600838":"event","Q2601690":"event","Q2604275":"event","Q2647774":"event","Q2660810":"event","Q2668171":"event","Q2673366":"event","Q2677993":"event","Q2678375":"event","Q2692250":"event","Q2692249":"event","Q2699419":"event","Q2708412":"event","Q2740408":"event","Q2791348":"event","Q2796024":"event","Q2920838":"event","Q2947213":"event","Q2947219":"event","Q2947670":"event","Q2947678":"event","Q5390385":"event","Q5481629":"event","Q6627798":"event","Q6952899":"event","Q10876319":"event","Q10876320":"event","Q10888408":"event","Q11327932":"event","Q11389709":"event","Q11389738":"event","Q11390114":"event","Q11419798":"event","Q11421034":"event","Q12480205":"event","Q13425771":"event","Q13425769":"event","Q13425787":"event","Q13425794":"event","Q13425795":"event","Q13425807":"event","Q13425811":"event","Q13425813":"event","Q13425822":"event","Q13425820":"event","Q13425831":"event","Q13425838":"event","Q13425836":"event","Q13425842":"event","Q13425841":"event","Q13425845":"event","Q13425848":"event","Q13433401":"event","Q13440326":"event","Q13440635":"event","Q13476049":"event","Q13476139":"event","Q13481914":"event","Q13482000":"event","Q13482869":"event","Q13483119":"event","Q13486474":"event","Q13487266":"event","Q13487270":"event","Q13487282":"event","Q13504533":"event","Q13504537":"event","Q13505709":"event","Q13506458":"event","Q13506679":"event","Q13506957":"event","Q13506970":"event","Q13506974":"event","Q13507103":"event","Q13507290":"event","Q13507309":"event","Q13507314":"event","Q13507321":"event","Q13507326":"event","Q13507331":"event","Q13507387":"event","Q13507423":"event","Q13507585":"event","Q13518398":"event","Q13534150":"event","Q14191429":"event","Q14624995":"event","Q14627250":"event","Q14634758":"event","Q14646306":"event","Q14646316":"event","Q14646875":"event","Q14671734":"event","Q14702601":"event","Q14702604":"event","Q14719011":"event","Q14719014":"event","Q14847061":"event","Q14848223":"event","Q14848224":"event","Q14848225":"event","Q14920651":"event","Q14920652":"event","Q14924292":"event","Q14943523":"event","Q14943530":"event","Q15010886":"event","Q15012133":"event","Q15059709":"event","Q15059793":"event","Q15059798":"event","Q15059873":"event","Q15103181":"event","Q15244982":"event","Q15293777":"event","Q15293871":"event","Q15307369":"event","Q15345977":"event","Q15346053":"event","Q15629323":"event","Q15730410":"event","Q15730408":"event","Q15784703":"event","Q15941614":"event","Q15941619":"event","Q15941628":"event","Q16325346":"event","Q16325350":"event","Q16548549":"event","Q16686153":"event","Q16725896":"event","Q16817374":"event","Q16872946":"event","Q17152453":"event","Q17166701":"event","Q17565737":"event","Q18171099":"event","Q18204130":"event","Q18342520":"event","Q18421661":"event","Q18524061":"event","Q18572173":"event","Q18638297":"event","Q18643370":"event","Q18643369":"event","Q18664082":"event","Q18668362":"event","Q18670367":"event","Q18713229":"event","Q18729894":"event","Q18759773":"event","Q18814377":"event","Q19118320":"event","Q19355314":"event","Q19467946":"event","Q20807089":"event","Q20807092":"event","Q20884549":"event","Q20884819":"event","Q22119585":"event","Q22120056":"event","Q22670106":"event","Q23687386":"event","Q23815643":"event","Q25468850":"event","Q26132559":"event","Q26206573":"event","Q26265941":"event","Q26265947":"event","Q26268654":"event","Q27118920":"event","Q27267358":"event","Q28090496":"event","Q28608792":"event","Q28920021":"event","Q29292973":"event","Q30093390":"event","Q30113252":"event","Q30143268":"event","Q33060692":"event","Q33076666":"event","Q33090228":"event","Q39995075":"event","Q39995177":"event","Q40287245":"event","Q40353592":"event","Q40353856":"event","Q40504484":"event","Q40733460":"event","Q41598960":"event","Q41633887":"event","Q41942238":"event","Q41946161":"event","Q41948885":"event","Q41952404":"event","Q42329067":"event","Q42614437":"event","Q42940471":"event","Q43289454":"event","Q44726365":"event","Q44845418":"event","Q45319806":"event","Q46219689":"event","Q46649143":"event","Q47045263":"event","Q47164937":"event","Q47407008":"event","Q47509275":"event","Q47509290":"event","Q47509294":"event","Q47509309":"event","Q49274380":"event","Q50074222":"event","Q50074494":"event","Q50298306":"event","Q50301923":"event","Q50301952":"event","Q50363106":"event","Q50363445":"event","Q50363453":"event","Q50363524":"event","Q50376394":"event","Q50381011":"event","Q50382567":"event","Q50382592":"event","Q50383283":"event","Q52734874":"event","Q52734927":"event","Q52735607":"event","Q53572574":"event","Q53572582":"event","Q53572691":"event","Q54196650":"event","Q55073977":"event","Q55691286":"event","Q55777361":"event","Q55971753":"event","Q56377965":"event","Q56422682":"event","Q56426226":"event","Q56492528":"event","Q56524515":"event","Q56545112":"event","Q56564298":"event","Q56564297":"event","Q56598959":"event","Q56598956":"event","Q56598970":"event","Q56605209":"event","Q56653854":"event","Q56809299":"event","Q56928388":"event","Q57003917":"event","Q57228612":"event","Q57450124":"event","Q57947373":"event","Q59181239":"event","Q59181274":"event","Q59555985":"event","Q62079816":"event","Q62081308":"event","Q62081740":"event","Q62985932":"event","Q63343131":"event","Q63845306":"event","Q63845307":"event","Q63845310":"event","Q63845311":"event","Q63845308":"event","Q63845309":"event","Q63845312":"event","Q63845313":"event","Q63845398":"event","Q63845399":"event","Q63845396":"event","Q63845397":"event","Q63845402":"event","Q63845403":"event","Q63845401":"event","Q63845405":"event","Q63845486":"event","Q63845487":"event","Q63845491":"event","Q63845488":"event","Q63845489":"event","Q63845494":"event","Q63845493":"event","Q63845496":"event","Q63845717":"event","Q63845721":"event","Q63845727":"event","Q63845724":"event","Q63845730":"event","Q63845733":"event","Q63845737":"event","Q63845743":"event","Q63845740":"event","Q63845942":"event","Q63845943":"event","Q63845941":"event","Q63845946":"event","Q63845947":"event","Q63845944":"event","Q63845945":"event","Q63845948":"event","Q63846030":"event","Q63846031":"event","Q63846029":"event","Q63846032":"event","Q63846033":"event","Q63846037":"event","Q63846040":"event","Q63846041":"event","Q63846135":"event","Q63846138":"event","Q63846136":"event","Q63846137":"event","Q63846191":"event","Q63846192":"event","Q63846193":"event","Q63854265":"event","Q63854272":"event","Q63925462":"event","Q64618050":"event","Q64875437":"event","Q64944636":"event","Q65048613":"event","Q65548946":"event","Q65548947":"event","Q65548945":"event","Q65552678":"event","Q65552679":"event","Q65552680":"event","Q65706137":"event","Q65725727":"event","Q65725724":"event","Q65725725":"event","Q65725729":"event","Q65735644":"event","Q65736363":"event","Q65736937":"event","Q65739095":"event","Q65739103":"event","Q65807190":"event","Q65807191":"event","Q65807194":"event","Q65807192":"event","Q65807193":"event","Q65807391":"event","Q65807394":"event","Q65807395":"event","Q65807392":"event","Q65807393":"event","Q65807398":"event","Q65807399":"event","Q65807396":"event","Q65807397":"event","Q65807400":"event","Q65807401":"event","Q65807494":"event","Q65926798":"event","Q66023989":"event","Q66062438":"event","Q66127952":"event","Q66127959":"event","Q66127956":"event","Q66127957":"event","Q66127962":"event","Q66127963":"event","Q66127960":"event","Q66127961":"event","Q66127966":"event","Q66127967":"event","Q66127964":"event","Q66127965":"event","Q66207654":"event","Q67147038":"event","Q67147039":"event","Q67147043":"event","Q67147044":"event","Q67147067":"event","Q67147068":"event","Q67157845":"event","Q67166219":"event","Q67166221":"event","Q67206715":"event","Q67491838":"event","Q67567806":"event","Q67567807":"event","Q67567805":"event","Q67567810":"event","Q67567809":"event","Q67567813":"event","Q67567816":"event","Q67567821":"event","Q67567826":"event","Q67567832":"event","Q67567841":"event","Q67567845":"event","Q67567850":"event","Q68066457":"event","Q68066462":"event","Q68066468":"event","Q68066474":"event","Q68066493":"event","Q68066499":"event","Q69992823":"event","Q69993044":"event","Q71029213":"event","Q71363771":"event","Q71608701":"event","Q71609251":"event","Q71782233":"event","Q71788368":"event","Q72365643":"event","Q73989685":"event","Q75145522":"event","Q76386450":"event","Q76386460":"event","Q79132633":"event","Q79132790":"event","Q79132806":"event","Q106653057":"event","Q106785811":"event","Q106785815":"event","Q106785813":"event","Q106785818":"event","Q106785819":"event","Q106854629":"event","Q107404408":"event","Q107410127":"event","Q107840466":"event","Q107843764":"event","Q108166416":"event","Q108324504":"event","Q109476821":"event","Q109496350":"event","Q109859460":"event","Q109860089":"event","Q109860254":"event","Q109860332":"event","Q110111868":"event","Q110385105":"event","Q110660804":"event","Q110818785":"event","Q110869635":"event","Q110939227":"event","Q111036119":"event","Q111036131":"event","Q111036132":"event","Q111036142":"event","Q111036146":"event","Q111036150":"event","Q111036151":"event","Q111036157":"event","Q111036162":"event","Q111036181":"event","Q111036189":"event","Q111036202":"event","Q111036219":"event","Q111036225":"event","Q111036229":"event","Q111036233":"event","Q111036237":"event","Q111036241":"event","Q111036245":"event","Q111036248":"event","Q111038586":"event","Q111038588":"event","Q111038594":"event","Q111038595":"event","Q111038596":"event","Q111038608":"event","Q111168498":"event","Q111168502":"event","Q111168503":"event","Q111168500":"event","Q111168506":"event","Q111168507":"event","Q111168504":"event","Q111168505":"event","Q111168509":"event","Q111191574":"event","Q111191575":"event","Q111191576":"event","Q111192678":"event","Q111192679":"event","Q111192681":"event","Q111192687":"event","Q111192684":"event","Q111201102":"event","Q111201276":"event","Q111217780":"event","Q111217789":"event","Q111217799":"event","Q111217796":"event","Q111217803":"event","Q111217805":"event","Q111217808":"event","Q111238705":"event","Q111238710":"event","Q111238714":"event","Q111238718":"event","Q111238716":"event","Q111238721":"event","Q111252395":"event","Q111252404":"event","Q79132828":"event","Q79313070":"event","Q79313616":"event","Q79967121":"event","Q79967943":"event","Q79978422":"event","Q80681226":"event","Q84068115":"event","Q86914384":"event","Q87086840":"event","Q94474207":"event","Q96880618":"event","Q100893968":"event","Q100977379":"event","Q101110957":"event","Q111252405":"event","Q111252411":"event","Q111252414":"event","Q111252412":"event","Q111252419":"event","Q111252416":"event","Q111252417":"event","Q111267576":"event","Q111267581":"event","Q111267590":"event","Q111267588":"event","Q111279662":"event","Q111279667":"event","Q111279664":"event","Q111279669":"event","Q111281006":"event","Q111281004":"event","Q111281005":"event","Q111281011":"event","Q111281013":"event","Q111281018":"event","Q111285985":"event","Q111285993":"event","Q111286002":"event","Q111286003":"event","Q111286001":"event","Q111286006":"event","Q111286028":"event","Q111286029":"event","Q111291114":"event","Q111291115":"event","Q111291113":"event","Q111291118":"event","Q111291119":"event","Q111291116":"event","Q111291120":"event","Q111301343":"event","Q111301371":"event","Q111301373":"event","Q111305041":"event","Q111305062":"event","Q111305060":"event","Q111305065":"event","Q111305069":"event","Q111305240":"event","Q111305295":"event","Q111306282":"event","Q111306305":"event","Q111306310":"event","Q111306335":"event","Q111306351":"event","Q111310186":"event","Q111310191":"event","Q111310188":"event","Q111310192":"event","Q111310193":"event","Q111310217":"event","Q111364404":"event","Q111837771":"event","Q111844826":"event","Q112436240":"event","Q112634010":"event","Q112634033":"event","Q112673150":"event","Q112675472":"event","Q112764801":"event","Q113006151":"event","Q113026077":"event","Q113239508":"event","Q113353496":"event","Q113367575":"event","Q113586378":"event","Q113677454":"event","Q113680390":"event","Q113680403":"event","Q113685657":"event","Q113685805":"event","Q113814642":"event","Q113814687":"event","Q113817871":"event","Q113817892":"event","Q113883963":"event","Q113957482":"event","Q114041638":"event","Q114055808":"event","Q115189477":"event","Q115218964":"event","Q115218969":"event","Q115218977":"event","Q116057575":"event","Q116195303":"event","Q116195818":"event","Q116205634":"event","Q116206222":"event","Q116206528":"event","Q116235887":"event","Q116457237":"event","Q116523974":"event","Q116680382":"event","Q116680578":"event","Q116793404":"event","Q116896869":"event","Q116896877":"event","Q116970176":"event","Q116971515":"event","Q116977458":"event","Q116995715":"event","Q117015158":"event","Q117089237":"event","Q117188459":"event","Q117655064":"event","Q117655102":"event","Q117655116":"event","Q117655133":"event","Q118108760":"event","Q118112136":"event","Q118130445":"event","Q118130465":"event","Q118175802":"event","Q118187926":"event","Q118192239":"event","Q118192405":"event","Q118220470":"event","Q118351726":"event","Q118676376":"event","Q119217804":"event","Q119292836":"event","Q119435299":"event","Q119442487":"event","Q119472100":"event","Q119477661":"event","Q119519120":"event","Q119519126":"event","Q119597108":"event","Q119619023":"event","Q119619139":"event","Q119619148":"event","Q119619922":"event","Q119619927":"event","Q119619932":"event","Q119619937":"event","Q119619940":"event","Q119620429":"event","Q119620447":"event","Q119620460":"event","Q119620468":"event","Q119621326":"event","Q119621330":"event","Q119621335":"event","Q119621343":"event","Q119621349":"event","Q119622883":"event","Q119622896":"event","Q119623000":"event","Q119623983":"event","Q119623990":"event","Q119624002":"event","Q119624014":"event","Q119624951":"event","Q119625030":"event","Q119625029":"event","Q119625032":"event","Q119625059":"event","Q119625061":"event","Q119625075":"event","Q119625093":"event","Q119841099":"event","Q119943618":"event","Q120434264":"event","Q120600259":"event","Q120666287":"event","Q120844822":"event","Q121031412":"event","Q121032425":"event","Q121310598":"event","Q121345142":"event","Q121385499":"event","Q121403385":"event","Q121404270":"event","Q121404326":"event","Q121406361":"event","Q121406606":"event","Q121408809":"event","Q121408960":"event","Q121480259":"event","Q121605264":"event","Q121734948":"event","Q121851142":"event","Q122763380":"event","Q122911798":"event","Q122978209":"event","Q123117650":"event","Q123214027":"event","Q123225013":"event","Q123271978":"event","Q123351531":"event","Q123464523":"event","Q123513996":"event","Q123739881":"event","Q124096453":"event","Q103839756":"event","Q107020037":"review","Q106806190":"event","Q116885087":"book","Q111550295":"event","Q114105082":"legislation","Q116957843":"event","Q119855376":"legislation","Q119855386":"legislation","Q119855410":"legislation","Q119857966":"legislation","Q119976239":"legislation","Q119976619":"legislation","Q119976945":"legislation","Q122029889":"legislation","Q124134783":"event","Q124146455":"event","Q124146562":"event","Q124146571":"event","Q124146580":"event","Q124151209":"event","Q124214349":"event","Q124291191":"event","Q124293073":"event","Q124293114":"event","Q124293498":"event","Q124293539":"event","Q124293651":"event","Q124330389":"event","Q124385938":"event","Q124385953":"event","Q124386716":"event","Q124423417":"event","Q124485460":"event","Q124567039":"event","Q124664035":"event","Q124690498":"event","Q124733211":"event","Q124741890":"event","Q124741932":"event","Q124741933":"event","Q124788781":"event","Q124790750":"event","Q124791133":"event","Q309227":"software","Q97011660":"webpage","Q4389389":"software","Q7594163":"software","Q11308156":"software","Q1501923":"review","Q11578127":"software","Q175399":"event","Q225457":"event","Q282581":"event","Q419595":"event","Q430173":"event","Q474297":"event","Q485321":"event","Q499176":"event","Q526371":"event","Q529359":"event","Q841137":"event","Q2535401":"review","Q1182237":"event","Q1342323":"event","Q2007314":"event","Q2086665":"event","Q3210210":"event","Q3545509":"event","Q15008061":"software","Q3587397":"event","Q110597964":"webpage","Q6015972":"event","Q6015984":"event","Q6015989":"event","Q6016007":"event","Q6016005":"event","Q6016023":"event","Q7676227":"review","Q114746893":"webpage","Q10488275":"event","Q115493615":"webpage","Q115666147":"webpage","Q12868922":"event","Q14885577":"event","Q16565741":"legislation","Q122832588":"webpage","Q4387047":"webpage","Q51675374":"software","Q51675524":"software","Q21528878":"webpage","Q22247630":"webpage","Q25051296":"webpage","Q31939":"event","Q36836":"event","Q72850604":"event","Q54085024":"webpage","Q55648788":"webpage","Q97730338":"event","Q104412418":"event","Q105105812":"event","Q106282769":"event","Q106282874":"event","Q106285453":"event","Q106293005":"event","Q106636603":"event","Q106636606":"event","Q106636607":"event","Q106636604":"event","Q106636610":"event","Q106636611":"event","Q106636608":"event","Q106636609":"event","Q106636614":"event","Q106636615":"event","Q106636612":"event","Q106636613":"event","Q106636616":"event","Q106637288":"event","Q106637289":"event","Q107358728":"event","Q114165572":"event","Q114167088":"event","Q114169745":"event","Q114708195":"event","Q115242496":"event","Q115242507":"event","Q115242575":"event","Q115563610":"event","Q115563611":"event","Q115563612":"event","Q115563613":"event","Q116982664":"event","Q117046576":"event","Q117048418":"event","Q117048579":"event","Q117086583":"event","Q117794045":"event","Q118583516":"event","Q118610550":"event","Q118629432":"event","Q118629458":"event","Q118629497":"event","Q120965285":"event","Q120966082":"event","Q120966145":"event","Q120966301":"event","Q121064558":"event","Q121153282":"event","Q121811437":"event","Q123000371":"event","Q123000408":"event","Q123000428":"event","Q123777174":"event","Q123777175":"event","Q123777172":"event","Q123777173":"event","Q123777178":"event","Q123777179":"event","Q123777176":"event","Q123777180":"event","Q123777181":"event","Q123777184":"event","Q123777185":"event","Q22231118":"event","Q22231119":"event","Q22231116":"event","Q22231117":"event","Q23005603":"event","Q23005601":"event","Q23015458":"event","Q26878947":"event","Q28939976":"event","Q29866603":"event","Q29919182":"event","Q30336909":"event","Q30339152":"event","Q30744668":"event","Q30744786":"event","Q52100938":"event","Q59948415":"event","Q60181400":"event","Q60669124":"event","Q60669131":"event","Q61805860":"event","Q61818771":"event","Q62091935":"event","Q69591137":"event","Q71580493":"event","Q74275170":"event","Q74275176":"event","Q93608579":"event","Q94150939":"event","Q98686837":"event","Q101049923":"event","Q101052353":"event","Q101052391":"event","Q101052547":"event","Q101069484":"event","Q123777186":"event","Q123777190":"event","Q123777191":"event","Q123777188":"event","Q123777189":"event","Q123777194":"event","Q123777195":"event","Q123777192":"event","Q123777193":"event","Q123777198":"event","Q123777199":"event","Q123777196":"event","Q123777202":"event","Q123777200":"event","Q123777201":"event","Q123777206":"event","Q123777207":"event","Q123777205":"event","Q123777210":"event","Q123777208":"event","Q123777209":"event","Q123777214":"event","Q123777215":"event","Q123777212":"event","Q123777213":"event","Q123777218":"event","Q123777219":"event","Q123777216":"event","Q123777217":"event","Q123777222":"event","Q123777223":"event","Q123777220":"event","Q123777221":"event","Q123777226":"event","Q123777227":"event","Q123777224":"event","Q123777225":"event","Q123777230":"event","Q123777231":"event","Q123777228":"event","Q123777229":"event","Q123777234":"event","Q123777235":"event","Q123777232":"event","Q123777233":"event","Q123777238":"event","Q123777239":"event","Q123777236":"event","Q123777237":"event","Q123777243":"event","Q123777240":"event","Q123777246":"event","Q123777247":"event","Q123777244":"event","Q123777245":"event","Q123777250":"event","Q123777251":"event","Q123777248":"event","Q123777249":"event","Q123777254":"event","Q123777255":"event","Q123777253":"event","Q123777258":"event","Q123777259":"event","Q123777256":"event","Q123777257":"event","Q123777262":"event","Q123777260":"event","Q123777261":"event","Q123777267":"event","Q123782555":"event","Q123783285":"event","Q123783301":"event","Q123783317":"event","Q123812750":"event","Q124037651":"event","Q124037694":"event","Q124158606":"event","Q124288851":"event","Q124354577":"event","Q124788734":"event","Q107980675":"event","Q109279082":"event","Q111283049":"event","Q122740579":"software","Q122759476":"software","Q111962642":"event","Q114796725":"event","Q114796772":"event","Q114796785":"event","Q114796809":"event","Q114796814":"event","Q114796819":"event","Q114796816":"event","Q114796824":"event","Q114796831":"event","Q114796842":"event","Q114796855":"event","Q114796853":"event","Q114796858":"event","Q114796861":"event","Q114796864":"event","Q114796878":"event","Q114796888":"event","Q114796892":"event","Q114796903":"event","Q772497":"song","Q116213263":"event","Q2936610":"song","Q121628413":"event","Q121920335":"event","Q124144209":"event","Q124247163":"event","Q124968454":"event","Q124985920":"event","Q1023097":"software","Q1075238":"software","Q1384222":"software","Q26214208":"webpage","Q1954906":"software","Q1108828":"book","Q245753":"event","Q1046763":"event","Q1185363":"event","Q2094010":"legislation","Q107344376":"webpage","Q3298051":"event","Q3511669":"event","Q3722110":"event","Q6671135":"event","Q18433212":"software","Q7013332":"event","Q8027366":"event","Q19595415":"software","Q10271510":"event","Q11163656":"event","Q11261037":"event","Q11262978":"event","Q116152754":"webpage","Q11428715":"event","Q11525357":"event","Q11595783":"event","Q25303346":"software","Q25450968":"software","Q15881232":"event","Q16152245":"event","Q16482065":"event","Q121267780":"webpage","Q22833321":"event","Q28686576":"event","Q109969754":"periodical","Q47258130":"event","Q48743845":"event","Q15145755":"webpage","Q122923258":"periodical","Q18711811":"webpage","Q65665574":"software","Q10400522":"periodical","Q10400521":"periodical","Q10400525":"periodical","Q95124454":"software","Q108935176":"dataset","Q96240590":"software","Q123015443":"webpage","Q59259626":"webpage","Q108901409":"software","Q109599573":"software","Q98456875":"event","Q101246180":"event","Q539062":"event","Q571392":"event","Q593239":"event","Q637299":"event","Q643796":"event","Q673617":"event","Q679655":"event","Q701548":"event","Q739879":"event","Q745158":"event","Q891431":"event","Q910166":"event","Q910655":"event","Q920847":"event","Q921777":"event","Q925157":"event","Q926075":"event","Q930091":"event","Q960558":"event","Q980160":"event","Q1039648":"event","Q1092852":"event","Q1092885":"event","Q1137352":"event","Q1164158":"event","Q1318941":"event","Q1421899":"event","Q1436680":"event","Q1462514":"event","Q1498024":"event","Q1518135":"event","Q1526873":"event","Q1537823":"event","Q1542980":"event","Q1576179":"event","Q1749060":"event","Q1811167":"event","Q1813672":"event","Q1835362":"event","Q1878866":"event","Q1918558":"event","Q1942604":"event","Q1997710":"event","Q2008655":"event","Q2013736":"event","Q2019800":"event","Q2071432":"event","Q2125347":"event","Q2141075":"event","Q2254180":"event","Q2297585":"event","Q2321665":"event","Q2342761":"event","Q2411906":"event","Q2446500":"event","Q2509889":"event","Q2514791":"event","Q2659756":"event","Q2699610":"event","Q2715335":"event","Q2799112":"event","Q2896796":"event","Q2912397":"event","Q2974011":"event","Q2980461":"event","Q3026781":"event","Q3028151":"event","Q3028178":"event","Q3074669":"event","Q3113760":"event","Q3114051":"event","Q3124513":"event","Q3297061":"event","Q3313856":"event","Q3313857":"event","Q3316335":"event","Q3333127":"event","Q3365097":"event","Q3365127":"event","Q3365124":"event","Q3485639":"event","Q3533613":"event","Q3533793":"event","Q4106930":"event","Q7137496":"event","Q12327798":"event","Q13102145":"event","Q19860625":"event","Q19969561":"event","Q20012065":"event","Q20651312":"event","Q21893660":"event","Q22231110":"event","Q22231111":"event","Q22231108":"event","Q22231109":"event","Q22231114":"event","Q22231115":"event","Q22231112":"event","Q22231113":"event","Q106677579":"event","Q109017702":"event","Q110628558":"event","Q11523643":"regulation","Q1189053":"review","Q245512":"event","Q288066":"event","Q289543":"event","Q294615":"event","Q303372":"event","Q375423":"event","Q432804":"event","Q476310":"event","Q500860":"event","Q502948":"event","Q603536":"event","Q642482":"event","Q773327":"event","Q781434":"event","Q811014":"event","Q892194":"event","Q919925":"event","Q920247":"event","Q958723":"event","Q973759":"event","Q979392":"event","Q1032219":"event","Q1096045":"event","Q1159370":"event","Q1165859":"event","Q1170415":"event","Q1204189":"event","Q1261456":"event","Q1273956":"event","Q1285570":"event","Q1318363":"event","Q1330699":"event","Q1360577":"event","Q1376860":"event","Q1475171":"event","Q1529643":"event","Q1544612":"event","Q1548381":"event","Q1563816":"event","Q1579285":"event","Q1666410":"event","Q1666873":"event","Q1672884":"event","Q1672910":"event","Q1685566":"event","Q2671818":"event","Q2819305":"event","Q2950787":"event","Q3114398":"event","Q3504613":"event","Q4160090":"event","Q11545728":"book","Q5640434":"event","Q7081526":"event","Q7089494":"event","Q7884302":"event","Q10397388":"event","Q11388616":"event","Q11444818":"event","Q11495308":"event","Q11632028":"event","Q16675450":"event","Q17083002":"event","Q19080986":"event","Q21590059":"event","Q22909834":"event","Q24887308":"event","Q26001264":"event","Q39081581":"event","Q41795188":"event","Q55664204":"event","Q59553734":"event","Q61055405":"event","Q61585852":"event","Q26281":"event","Q96146237":"software","Q100348312":"event","Q106453208":"event","Q106457682":"event","Q106541812":"event","Q106542375":"event","Q106600824":"event","Q106601420":"event","Q106612724":"event","Q106612926":"event","Q106613506":"event","Q107301475":"event","Q107407050":"event","Q107642314":"event","Q108343457":"event","Q109660536":"event","Q110718502":"event","Q111028916":"event","Q118323822":"event","Q119942210":"event","Q119950064":"event","Q123125169":"event","Q124478306":"event","Q1789500":"event","Q2031197":"event","Q2037951":"event","Q2731488":"event","Q3306648":"event","Q3335008":"event","Q4034977":"event","Q4035886":"event","Q4036033":"event","Q4036509":"event","Q4040830":"event","Q4042133":"event","Q4044273":"event","Q4045306":"event","Q4047234":"event","Q4047235":"event","Q4048102":"event","Q4048105":"event","Q4993329":"event","Q4993677":"event","Q10525929":"event","Q10534868":"event","Q14405816":"event","Q15047133":"event","Q15176819":"event","Q15790888":"event","Q15848022":"event","Q16828501":"event","Q17507505":"event","Q17984898":"event","Q18432335":"event","Q19577175":"event","Q20687468":"event","Q20747688":"event","Q21089539":"event","Q21999753":"event","Q22079925":"event","Q22336953":"event","Q23022267":"event","Q23072367":"event","Q24553364":"event","Q25172016":"event","Q25380042":"event","Q27212388":"event","Q27630808":"event","Q27676063":"event","Q28936398":"event","Q30334461":"event","Q30600938":"event","Q33311724":"event","Q42062109":"event","Q47831465":"event","Q48813387":"event","Q50358729":"event","Q50378024":"event","Q50385398":"event","Q55636069":"event","Q56383693":"event","Q56753361":"event","Q56753469":"event","Q57308278":"event","Q57470579":"event","Q57470646":"event","Q60041851":"event","Q60428654":"event","Q60617178":"event","Q60690987":"event","Q61412708":"event","Q62086468":"event","Q68919477":"event","Q74445032":"event","Q79254427":"event","Q107357080":"event","Q107358505":"event","Q107358924":"event","Q107637253":"event","Q110462550":"event","Q10467299":"regulation","Q438150":"dataset","Q1229611":"dataset","Q115633130":"event","Q116174766":"event","Q116209903":"event","Q117885195":"event","Q120727301":"event","Q18043430":"webpage","Q87879655":"webpage","Q209536":"standard","Q301671":"book","Q2069352":"book","Q2558958":"book","Q5587860":"book","Q824540":"event","Q979949":"event","Q7687455":"book","Q1305501":"event","Q1388446":"event","Q1418168":"event","Q2025261":"event","Q2266066":"event","Q2348250":"event","Q3986798":"event","Q4912040":"legislation","Q11274709":"book","Q5197842":"event","Q5251091":"event","Q18980233":"standard","Q7265401":"event","Q7503184":"event","Q19750815":"standard","Q7987778":"event","Q11924610":"event","Q13593952":"event","Q16158036":"legislation","Q18166183":"event","Q18749644":"event","Q20646667":"event","Q20646670":"event","Q20646668":"event","Q20679712":"event","Q20680270":"event","Q21622405":"event","Q58408484":"webpage","Q623202":"performance","Q26186176":"event","Q28453813":"event","Q28954851":"event","Q66474017":"webpage","Q66666236":"webpage","Q66715753":"webpage","Q66794983":"webpage","Q67184262":"webpage","Q67185183":"webpage","Q67197591":"webpage","Q67198564":"webpage","Q67202271":"webpage","Q68926185":"webpage","Q69766158":"webpage","Q63241860":"dataset","Q42148058":"event","Q45319416":"event","Q14360432":"webpage","Q17442446":"webpage","Q21623879":"webpage","Q55476738":"event","Q81989119":"dataset","Q82004331":"dataset","Q28092864":"webpage","Q99913107":"webpage","Q101032436":"webpage","Q106706063":"webpage","Q121717782":"dataset","Q96692808":"event","Q97579381":"event","Q97579498":"event","Q97579500":"event","Q124024028":"dataset","Q100582954":"event","Q116006225":"standard","Q116697934":"standard","Q116704400":"standard","Q116704870":"standard","Q116704951":"standard","Q116704970":"standard","Q116704986":"standard","Q116705880":"standard","Q116710490":"standard","Q113240837":"book","Q121296445":"standard","Q121375298":"standard","Q121410408":"standard","Q121729708":"standard","Q121754058":"standard","Q122827944":"standard","Q122828597":"standard","Q122828873":"standard","Q122829928":"standard","Q122863607":"standard","Q123222009":"standard","Q120742462":"book","Q181693":"standard","Q209607":"standard","Q209633":"standard","Q209659":"standard","Q209695":"standard","Q209708":"standard","Q209743":"standard","Q313909":"standard","Q354639":"standard","Q648564":"standard","Q738006":"standard","Q849492":"standard","Q1024318":"standard","Q1063852":"standard","Q609331":"software","Q1149640":"standard","Q1155672":"standard","Q1280745":"standard","Q1365051":"standard","Q1389149":"standard","Q1867168":"standard","Q2043644":"standard","Q2124350":"standard","Q2383433":"standard","Q2496688":"standard","Q4046639":"standard","Q4075657":"standard","Q4795959":"standard","Q5207124":"standard","Q5507381":"standard","Q6429318":"standard","Q7036458":"standard","Q7036544":"standard","Q7387119":"standard","Q744040":"event","Q897119":"event","Q1438868":"event","Q1531245":"event","Q2142464":"event","Q2922711":"event","Q3960682":"event","Q4650555":"event","Q4904885":"event","Q4906520":"event","Q5159882":"event","Q5200409":"event","Q6714071":"event","Q21051444":"standard","Q12685950":"event","Q12884584":"event","Q30242162":"standard","Q28653601":"event","Q56240413":"standard","Q56487870":"standard","Q65553416":"standard","Q57701167":"event","Q63352667":"event","Q32096":"event","Q93891945":"standard","Q104217105":"book","Q104226530":"book","Q111307290":"software","Q110641401":"event","Q121841060":"periodical","Q115280877":"event","Q115288957":"event","Q115289074":"event","Q115289318":"event","Q115327920":"event","Q115327950":"event","Q115328054":"event","Q115328212":"event","Q115328308":"event","Q115328335":"event","Q115331192":"event","Q115331221":"event","Q115331249":"event","Q115331259":"event","Q115331322":"event","Q115331331":"event","Q115331342":"event","Q115331392":"event","Q115331413":"event","Q119147373":"event","Q4922471":"broadcast","Q123200595":"event","Q16247289":"broadcast","Q491053":"event","Q491505":"event","Q675180":"event","Q823306":"event","Q1905729":"event","Q2047885":"event","Q2104048":"event","Q2951201":"event","Q3454043":"event","Q4160913":"event","Q5071582":"event","Q5099539":"event","Q5928466":"event","Q5956294":"event","Q6137959":"event","Q7122263":"event","Q7267967":"event","Q7332332":"event","Q78898325":"periodical","Q7768411":"event","Q10873376":"event","Q10874846":"event","Q11065422":"event","Q11261368":"event","Q11578736":"event","Q11783515":"event","Q16256406":"event","Q16598694":"event","Q16969891":"event","Q16969957":"event","Q16999523":"event","Q17110771":"event","Q17148060":"event","Q17189483":"event","Q18121235":"event","Q18626355":"event","Q19936988":"event","Q20646877":"event","Q20804110":"event","Q21189798":"event","Q22095332":"event","Q22100745":"event","Q22909293":"event","Q24839291":"event","Q24896528":"event","Q25270494":"event","Q55422400":"broadcast","Q70597985":"webpage","Q47762931":"event","Q50584731":"event","Q50820765":"event","Q55170631":"event","Q55171044":"event","Q55732365":"event","Q56877748":"event","Q58692830":"event","Q65640446":"event","Q107974527":"webpage","Q74123387":"event","Q86737046":"event","Q86743033":"event","Q123015276":"webpage","Q109352904":"software","Q104173673":"event","Q104677554":"event","Q104677577":"event","Q107787123":"event","Q2367126":"dataset","Q57207479":"periodical","Q124434111":"event","Q2313301":"standard","Q3570403":"standard","Q21652487":"dataset","Q3738583":"book","Q173704":"event","Q173739":"event","Q174080":"event","Q1043786":"event","Q1092864":"event","Q1131293":"event","Q1346003":"event","Q1421853":"event","Q1548846":"event","Q1829157":"event","Q1998642":"event","Q2021907":"event","Q2092674":"event","Q2613789":"event","Q2727828":"event","Q2818070":"event","Q3113923":"event","Q10479841":"book","Q4037235":"event","Q4810956":"event","Q5171999":"event","Q5302273":"event","Q5527485":"event","Q5594971":"event","Q6470596":"event","Q6731952":"event","Q28971994":"broadcast","Q6954100":"event","Q7078911":"event","Q7370982":"event","Q7830859":"event","Q7981321":"event","Q8035323":"event","Q12790051":"event","Q26205771":"standard","Q26207712":"standard","Q26207734":"standard","Q26207792":"standard","Q26207808":"standard","Q26207821":"standard","Q26207986":"standard","Q26208253":"standard","Q26211338":"standard","Q16024637":"event","Q16965239":"event","Q24283994":"book","Q24284014":"book","Q25464347":"book","Q19866105":"event","Q20107484":"event","Q20181844":"event","Q24906084":"event","Q28206864":"event","Q28403568":"event","Q28403569":"event","Q28403751":"event","Q28403796":"event","Q28447773":"event","Q28447779":"event","Q28447809":"event","Q28447827":"event","Q28447867":"event","Q28447967":"event","Q30645601":"event","Q39046566":"event","Q39046576":"event","Q43080916":"event","Q57775833":"software","Q63914800":"software","Q60740537":"event","Q60744346":"event","Q60785088":"event","Q62789940":"event","Q62790009":"event","Q63527079":"event","Q85723101":"event","Q87267404":"event","Q87267425":"event","Q87267436":"event","Q87267444":"event","Q96482439":"event","Q99026520":"event","Q99192928":"event","Q99541097":"event","Q112676353":"software","Q113331561":"software","Q106317803":"event","Q618254":"event","Q649930":"event","Q848247":"event","Q1059994":"event","Q1273266":"event","Q1501660":"event","Q1539532":"event","Q1661524":"event","Q2108803":"event","Q2301224":"event","Q3209535":"event","Q3389165":"event","Q4366088":"event","Q4735619":"event","Q4743621":"event","Q5029004":"event","Q5290181":"event","Q5448077":"event","Q5899429":"event","Q6313295":"event","Q6448126":"event","Q7542322":"event","Q7700500":"event","Q7856853":"event","Q10509145":"event","Q10715702":"event","Q11685509":"event","Q11968694":"event","Q26211510":"standard","Q26211528":"standard","Q26211536":"standard","Q28346137":"standard","Q17115912":"event","Q17624166":"event","Q18400581":"event","Q18890098":"event","Q18890124":"event","Q19118609":"event","Q19605587":"event","Q26906554":"book","Q21511345":"event","Q22833318":"event","Q26279994":"event","Q26897352":"event","Q46135307":"event","Q46195901":"event","Q47358534":"event","Q47465437":"event","Q51624051":"event","Q56231131":"event","Q56753103":"event","Q63874701":"event","Q64641382":"event","Q64641394":"event","Q64657694":"event","Q64667852":"event","Q64681730":"event","Q64691832":"event","Q64706513":"event","Q64715490":"event","Q64741346":"event","Q64775779":"event","Q64784663":"event","Q64784716":"event","Q64786445":"event","Q64786527":"event","Q64788184":"event","Q64819746":"event","Q64825625":"event","Q64831519":"event","Q64831521":"event","Q64831583":"event","Q64847663":"event","Q64848420":"event","Q64848430":"event","Q64850498":"event","Q64850496":"event","Q64864971":"event","Q64912702":"event","Q64917162":"event","Q64944559":"event","Q64952244":"event","Q64994967":"event","Q64995931":"event","Q65013127":"event","Q65032927":"event","Q65044046":"event","Q65044048":"event","Q65048341":"event","Q65063969":"event","Q65065277":"event","Q65078705":"event","Q65088436":"event","Q65104958":"event","Q65148846":"event","Q65480326":"event","Q65507994":"event","Q65548297":"event","Q65553461":"event","Q104538110":"event","Q106043413":"event","Q106562461":"event","Q106644070":"event","Q106978496":"event","Q107009735":"event","Q107118086":"event","Q107540719":"event","Q108337727":"event","Q108761755":"event","Q108858827":"event","Q108861375":"event","Q109265668":"event","Q109302750":"event","Q109606336":"event","Q111072137":"event","Q122766407":"software","Q111628470":"event","Q113453684":"event","Q125096548":"software","Q114245299":"event","Q114354462":"event","Q115178678":"event","Q2229436":"dataset","Q116287138":"event","Q1760256":"song","Q121637540":"event","Q121909180":"event","Q123002737":"event","Q123724352":"event","Q123862811":"event","Q124620786":"event","Q12637954":"dataset","Q280761":"standard","Q1080961":"standard","Q642214":"book","Q1978390":"book","Q7096284":"software","Q3730692":"book","Q186431":"event","Q429049":"event","Q969877":"event","Q1132884":"event","Q3298291":"event","Q4745879":"event","Q5505241":"event","Q6974390":"event","Q11410674":"event","Q19285900":"book","Q25053937":"software","Q26329975":"standard","Q26383099":"standard","Q26385770":"standard","Q27894844":"standard","Q17882250":"event","Q17941946":"event","Q17941952":"event","Q19761738":"event","Q24711235":"event","Q28966106":"event","Q28966115":"event","Q29053675":"event","Q29346472":"event","Q62382254":"dataset","Q48997688":"software","Q56255042":"standard","Q51434463":"event","Q51931416":"event","Q65697924":"software","Q66364374":"software","Q56272970":"event","Q72970624":"software","Q75209826":"software","Q65556452":"event","Q65598523":"event","Q65619883":"event","Q65620048":"event","Q66311885":"event","Q67447052":"event","Q67447095":"event","Q97361908":"broadcast","Q111264093":"regulation","Q76941636":"event","Q82030147":"event","Q83982399":"event","Q106393171":"broadcast","Q106634018":"broadcast","Q106681812":"broadcast","Q112339489":"dataset","Q99518895":"software","Q116515088":"broadcast","Q98971225":"event","Q112342577":"software","Q113343163":"software","Q113343165":"software","Q113359274":"software","Q2584671":"motion_picture","Q2973154":"motion_picture","Q105729508":"event","Q106164053":"event","Q106164255":"event","Q106164503":"event","Q106164646":"event","Q106164813":"event","Q106181220":"event","Q106201677":"event","Q106213754":"event","Q106213814":"event","Q118646244":"software","Q5620056":"motion_picture","Q5905132":"motion_picture","Q780605":"dataset","Q1045785":"dataset","Q1050259":"dataset","Q115137753":"event","Q115487618":"event","Q116908386":"event","Q18355406":"motion_picture","Q1074045":"book","Q4053792":"book","Q10876391":"software","Q11338014":"software","Q112055":"event","Q187214":"event","Q221295":"event","Q242068":"event","Q248554":"event","Q430295":"event","Q660460":"event","Q1678499":"event","Q1869055":"event","Q3540503":"event","Q15156455":"software","Q3799069":"event","Q3937030":"event","Q4158493":"event","Q11612178":"book","Q16681627":"software","Q7502163":"event","Q19826567":"software","Q20671729":"software","Q22001316":"software","Q22001361":"software","Q22001390":"software","Q11383281":"event","Q11736908":"event","Q12713601":"event","Q27670585":"software","Q16586431":"event","Q16681240":"event","Q16681244":"event","Q18411082":"event","Q18883431":"event","Q19967276":"event","Q20542163":"event","Q21003426":"event","Q26819140":"event","Q30580599":"event","Q42409239":"software","Q56355441":"dataset","Q67184635":"webpage","Q39894018":"book","Q34542827":"event","Q34548345":"event","Q36345696":"event","Q38080438":"event","Q45107320":"event","Q47530688":"legislation","Q47530729":"legislation","Q47530757":"legislation","Q47530780":"legislation","Q47530802":"legislation","Q47449779":"event","Q65130365":"standard","Q56085106":"event","Q60533564":"event","Q61055621":"event","Q108871338":"regulation","Q108871336":"regulation","Q108871337":"regulation","Q109653432":"motion_picture","Q109613893":"dataset","Q88088423":"legislation","Q115743929":"dataset","Q116923620":"dataset","Q116941751":"dataset","Q116955544":"dataset","Q190470":"event","Q426729":"event","Q589184":"event","Q649716":"event","Q666840":"event","Q1046221":"event","Q1046254":"event","Q1047162":"event","Q1054898":"event","Q1133950":"event","Q1186515":"event","Q1188693":"event","Q1193637":"event","Q1325137":"event","Q1363953":"event","Q1478081":"event","Q1478084":"event","Q1814592":"event","Q1863006":"event","Q2057656":"event","Q2497263":"event","Q2734141":"event","Q2869095":"event","Q2869225":"event","Q2887191":"event","Q2922871":"event","Q2922905":"event","Q2925836":"event","Q3008386":"event","Q3057773":"event","Q3126700":"event","Q3440468":"event","Q3452924":"event","Q3589362":"event","Q3641551":"event","Q3650366":"event","Q3892348":"event","Q3892442":"event","Q3998588":"event","Q4366001":"event","Q4806651":"event","Q4815578":"event","Q4815583":"event","Q4867733":"event","Q4867739":"event","Q4867736":"event","Q4875783":"event","Q4931300":"event","Q4936994":"event","Q4951243":"event","Q5033154":"event","Q5153755":"event","Q5184997":"event","Q5192575":"event","Q5198622":"event","Q5198620":"event","Q5215424":"event","Q5284371":"event","Q5305318":"event","Q5443199":"event","Q5443202":"event","Q5447065":"event","Q5463571":"event","Q5466169":"event","Q5466173":"event","Q5624491":"event","Q5647309":"event","Q5732939":"event","Q5966065":"event","Q5966758":"event","Q5966840":"event","Q5966935":"event","Q5966998":"event","Q5967267":"event","Q5967351":"event","Q6123108":"event","Q6160041":"event","Q6304153":"event","Q6304158":"event","Q6304156":"event","Q6304160":"event","Q6368757":"event","Q7129601":"event","Q7361076":"event","Q7569301":"event","Q7658365":"event","Q7673414":"event","Q7894227":"event","Q8035768":"event","Q8036379":"event","Q10265390":"event","Q10340634":"event","Q10340645":"event","Q10354969":"event","Q12761996":"event","Q48867433":"event","Q51881871":"event","Q51881941":"event","Q101900049":"software","Q113940312":"software","Q104835757":"event","Q104860438":"event","Q104863907":"event","Q104870655":"event","Q104871260":"event","Q104873856":"event","Q105320308":"event","Q105320442":"event","Q106015658":"event","Q107404398":"event","Q110969762":"event","Q111140972":"event","Q111141428":"event","Q111681983":"event","Q112666408":"event","Q113374349":"event","Q113614235":"event","Q116457663":"event","Q118482621":"event","Q118482675":"event","Q118950969":"event","Q120176942":"event","Q120666895":"event","Q121610421":"event","Q122200368":"event","Q122815760":"event","Q8038086":"event","Q10286747":"event","Q10367086":"event","Q10882647":"event","Q10882840":"event","Q11741491":"event","Q14582865":"event","Q14851978":"event","Q14855244":"event","Q14916389":"event","Q15978401":"event","Q16147222":"event","Q16166945":"event","Q16535591":"event","Q16585499":"event","Q16841345":"event","Q16851022":"event","Q16851025":"event","Q16982887":"event","Q17125181":"event","Q17149468":"event","Q18216875":"event","Q19882131":"event","Q20713534":"event","Q20713549":"event","Q24948032":"event","Q25042727":"event","Q25047428":"event","Q25220992":"event","Q26132862":"event","Q26996240":"event","Q27862684":"event","Q27962621":"event","Q30126458":"event","Q30682355":"event","Q39055625":"event","Q48781520":"event","Q50393009":"event","Q50472594":"event","Q51155371":"event","Q51155484":"event","Q51155570":"event","Q51155664":"event","Q51155766":"event","Q51155860":"event","Q51156125":"event","Q51156339":"event","Q51156443":"event","Q51156537":"event","Q51156639":"event","Q53967335":"event","Q56275855":"event","Q65129733":"event","Q65202159":"event","Q72011280":"event","Q72011538":"event","Q72011642":"event","Q73801590":"event","Q73801613":"event","Q84476898":"event","Q85743991":"event","Q85743989":"event","Q85743995":"event","Q85743997":"event","Q85744000":"event","Q85745592":"event","Q85748479":"event","Q85769951":"event","Q85782609":"event","Q85786015":"event","Q85804527":"event","Q85804530":"event","Q96371075":"event","Q97373693":"event","Q20830799":"event","Q23034771":"event","Q27925543":"event","Q27925545":"event","Q27925646":"event","Q29564413":"event","Q43233939":"event","Q51155378":"event","Q51155394":"event","Q51155399":"event","Q51155402":"event","Q51155417":"event","Q51155426":"event","Q51155447":"event","Q51155451":"event","Q51155454":"event","Q51155491":"event","Q51155503":"event","Q51155506":"event","Q51155517":"event","Q51155520":"event","Q51155539":"event","Q51155536":"event","Q51155542":"event","Q51155575":"event","Q51155589":"event","Q51155592":"event","Q51155596":"event","Q51155607":"event","Q51155611":"event","Q51155627":"event","Q51155629":"event","Q51155632":"event","Q51155668":"event","Q51155684":"event","Q51155688":"event","Q51155689":"event","Q51155705":"event","Q51155708":"event","Q51155727":"event","Q51155730":"event","Q51155732":"event","Q51155783":"event","Q51155787":"event","Q51155785":"event","Q51155805":"event","Q51155809":"event","Q51155826":"event","Q51155829":"event","Q51155833":"event","Q51155899":"event","Q51155901":"event","Q51155904":"event","Q51155958":"event","Q51156069":"event","Q51156080":"event","Q51156132":"event","Q51156147":"event","Q51156149":"event","Q51156152":"event","Q51156166":"event","Q51156173":"event","Q51156198":"event","Q51156196":"event","Q51156258":"event","Q51156263":"event","Q51156261":"event","Q51156285":"event","Q51156303":"event","Q51156301":"event","Q51156346":"event","Q51156363":"event","Q51156364":"event","Q51156370":"event","Q51156389":"event","Q51156398":"event","Q51156412":"event","Q51156449":"event","Q51156458":"event","Q51156462":"event","Q51156476":"event","Q51156482":"event","Q51156496":"event","Q51156501":"event","Q51156543":"event","Q51156561":"event","Q51156564":"event","Q51156568":"event","Q51156582":"event","Q51156590":"event","Q51156604":"event","Q51156605":"event","Q51156644":"event","Q51156662":"event","Q51156660":"event","Q51156665":"event","Q51156679":"event","Q51156684":"event","Q51156699":"event","Q51156703":"event","Q2299775":"dataset","Q2584888":"dataset","Q15409334":"event","Q15409332":"event","Q15409382":"event","Q15409443":"event","Q15409446":"event","Q15409445":"event","Q15409450":"event","Q15409449":"event","Q15409452":"event","Q15409610":"event","Q15409611":"event","Q15409609":"event","Q15409614":"event","Q15409613":"event","Q15409683":"event","Q15409681":"event","Q15409755":"event","Q15409758":"event","Q28919047":"event","Q51155467":"event","Q51155471":"event","Q51155476":"event","Q51155554":"event","Q51155559":"event","Q51155557":"event","Q51155645":"event","Q51155651":"event","Q51155649":"event","Q51155750":"event","Q51155752":"event","Q51155757":"event","Q51155846":"event","Q51155845":"event","Q51155851":"event","Q51156082":"event","Q51156101":"event","Q51156110":"event","Q51156108":"event","Q51156204":"event","Q51156220":"event","Q51156224":"event","Q51156228":"event","Q51156306":"event","Q51156317":"event","Q51156320":"event","Q51156325":"event","Q51156414":"event","Q51156430":"event","Q51156428":"event","Q51156433":"event","Q51156506":"event","Q51156526":"event","Q51156524":"event","Q51156529":"event","Q51156608":"event","Q51156622":"event","Q51156625":"event","Q51156628":"event","Q51156712":"event","Q51156738":"event","Q51156742":"event","Q51156747":"event","Q51202846":"event","Q51202866":"event","Q51202880":"event","Q51202919":"event","Q51202923":"event","Q51202947":"event","Q51202945":"event","Q51202951":"event","Q51202970":"event","Q51202974":"event","Q51202973":"event","Q51202990":"event","Q51202995":"event","Q51202996":"event","Q51203019":"event","Q51203024":"event","Q51203030":"event","Q51203049":"event","Q51203057":"event","Q51203062":"event","Q51203111":"event","Q51203115":"event","Q51203119":"event","Q51203138":"event","Q51203146":"event","Q51203150":"event","Q51203168":"event","Q51203175":"event","Q51203173":"event","Q51203191":"event","Q51203193":"event","Q51203197":"event","Q51203217":"event","Q51203222":"event","Q51203225":"event","Q105723390":"software","Q104873991":"event","Q108418469":"legislation","Q111135851":"legislation","Q113366951":"legislation","Q100154329":"webpage","Q216315":"event","Q221259":"event","Q270166":"event","Q277593":"event","Q304918":"event","Q376996":"event","Q431197":"event","Q511855":"event","Q2072755":"event","Q2576723":"event","Q2748086":"event","Q2917964":"event","Q4887699":"event","Q4999776":"event","Q12409117":"book","Q11394662":"legislation","Q11489406":"legislation","Q11555052":"legislation","Q11555053":"legislation","Q11607679":"legislation","Q11607677":"legislation","Q15409762":"event","Q15409764":"event","Q15409833":"event","Q15409836":"event","Q15409944":"event","Q15678828":"event","Q17397881":"event","Q18125080":"event","Q18350828":"event","Q18352052":"event","Q18398258":"event","Q18712607":"event","Q20982627":"event","Q21270498":"event","Q21406868":"event","Q21519353":"event","Q21523768":"event","Q21561376":"event","Q24865673":"legislation","Q27555119":"event","Q27572180":"event","Q27632406":"event","Q27922094":"event","Q27941277":"event","Q31189462":"event","Q51119345":"event","Q51119382":"event","Q55550551":"event","Q55550563":"event","Q55550577":"event","Q55550594":"event","Q55550606":"event","Q55550618":"event","Q55550641":"event","Q55550661":"event","Q55550671":"event","Q55550682":"event","Q55550689":"event","Q55550701":"event","Q55550713":"event","Q55550729":"event","Q55550745":"event","Q55550760":"event","Q55550774":"event","Q55550785":"event","Q55550799":"event","Q55550811":"event","Q55550824":"event","Q55550832":"event","Q55550842":"event","Q55550852":"event","Q55550864":"event","Q55550880":"event","Q55550889":"event","Q55550905":"event","Q55550919":"event","Q55550931":"event","Q55550947":"event","Q55550961":"event","Q55550972":"event","Q55550983":"event","Q55550999":"event","Q55551016":"event","Q11261":"software","Q61073909":"event","Q61073912":"event","Q61073913":"event","Q61073918":"event","Q61073920":"event","Q61073921":"event","Q29861":"event","Q118753160":"broadcast","Q522661":"event","Q522786":"event","Q527589":"event","Q537000":"event","Q547348":"event","Q565448":"event","Q586010":"event","Q613542":"event","Q651760":"event","Q698783":"event","Q743595":"event","Q766663":"event","Q843256":"event","Q869563":"event","Q908784":"event","Q908828":"event","Q908870":"event","Q909952":"event","Q912196":"event","Q913252":"event","Q925355":"event","Q926026":"event","Q942061":"event","Q1050132":"event","Q1068673":"event","Q1071351":"event","Q1071357":"event","Q1080415":"event","Q1080427":"event","Q1080438":"event","Q1082815":"event","Q1179231":"event","Q1179427":"event","Q1510056":"event","Q1548839":"event","Q2037281":"event","Q2704271":"event","Q2815227":"event","Q3054061":"event","Q3505844":"event","Q3598049":"event","Q6022657":"event","Q6843620":"event","Q7335381":"event","Q11481410":"event","Q11903556":"event","Q20972355":"event","Q22916781":"event","Q42431080":"event","Q56353850":"event","Q74825616":"event","Q74831359":"event","Q74831402":"event","Q86731128":"event","Q96243426":"event","Q97165139":"event","Q97165154":"event","Q97171040":"event","Q98799820":"event","Q98803888":"event","Q98804452":"event","Q98843046":"event","Q98843068":"event","Q98843135":"event","Q98844607":"event","Q99343759":"event","Q99347157":"event","Q99347565":"event","Q99353255":"event","Q99354278":"event","Q99430206":"event","Q99430267":"event","Q99430287":"event","Q99430607":"event","Q99430799":"event","Q99430809":"event","Q99431720":"event","Q99432320":"event","Q99441932":"event","Q99441952":"event","Q99441974":"event","Q99441995":"event","Q99443044":"event","Q99443817":"event","Q99444147":"event","Q99472045":"event","Q99520829":"event","Q99540178":"event","Q99540822":"event","Q99540868":"event","Q99540889":"event","Q99540908":"event","Q99540929":"event","Q99654384":"event","Q99654458":"event","Q99662602":"event","Q99662712":"event","Q99662805":"event","Q99662853":"event","Q99663085":"event","Q104762953":"event","Q116790461":"software","Q105477531":"event","Q105676265":"event","Q106129926":"event","Q106345759":"event","Q106345798":"event","Q106839571":"event","Q106958550":"event","Q106959885":"event","Q107629937":"event","Q108159060":"event","Q108453748":"event","Q108715248":"event","Q108732020":"event","Q108738628":"event","Q108738758":"event","Q108738891":"event","Q108748847":"event","Q108748998":"event","Q108759581":"event","Q108769188":"event","Q108769575":"event","Q108769634":"event","Q108769927":"event","Q108936089":"event","Q109233425":"event","Q110357911":"event","Q110358837":"event","Q110887248":"event","Q110888093":"event","Q110888126":"event","Q111042820":"event","Q111050070":"event","Q114347110":"event","Q115562284":"event","Q116621413":"event","Q2016457":"software","Q16695167":"song","Q152395":"event","Q161376":"event","Q379881":"event","Q815520":"event","Q836943":"event","Q968354":"event","Q1825417":"event","Q1897717":"event","Q2091206":"event","Q2336094":"event","Q2516049":"event","Q3025298":"event","Q3413631":"event","Q3653440":"event","Q3748339":"event","Q6099933":"event","Q6952926":"event","Q7378519":"event","Q15079786":"book","Q12168697":"event","Q20151226":"event","Q27718083":"book","Q59826893":"dataset","Q44481679":"event","Q61719571":"software","Q57539893":"event","Q60147786":"event","Q61630069":"event","Q68431138":"event","Q112683966":"map","Q85875088":"event","Q99617648":"event","Q99664737":"event","Q99688417":"event","Q99843977":"event","Q99844297":"event","Q99844568":"event","Q99844758":"event","Q99846300":"event","Q99846964":"event","Q99936871":"event","Q100137290":"event","Q100137363":"event","Q100137669":"event","Q100165583":"event","Q100165758":"event","Q100165793":"event","Q100165825":"event","Q100165898":"event","Q100166026":"event","Q548206":"motion_picture","Q111489125":"book","Q116661440":"software","Q120766894":"standard","Q120767033":"standard","Q120785885":"standard","Q120799517":"standard","Q120799558":"standard","Q116481026":"book","Q116481037":"book","Q116481268":"book","Q116810576":"book","Q123198217":"software","Q124781282":"standard","Q118744581":"event","Q7601050":"broadcast","Q1194674":"software","Q107080092":"broadcast","Q5110393":"software","Q1774127":"event","Q5043888":"event","Q18663243":"software","Q124353995":"broadcast","Q11831280":"event","Q14830021":"event","Q18433459":"event","Q28035577":"event","Q66763446":"webpage","Q64224805":"broadcast","Q63248180":"software","Q64170508":"software","Q67574055":"software","Q67574919":"software","Q68902449":"book","Q64778852":"event","Q64918780":"event","Q64919264":"event","Q64995666":"event","Q65037116":"event","Q65037117":"event","Q65037122":"event","Q89374949":"software","Q124740548":"map","Q92282911":"event","Q92282917":"event","Q92282921":"event","Q92312633":"event","Q93154471":"event","Q93306512":"event","Q93395403":"event","Q104884479":"software","Q93455684":"event","Q93462299":"event","Q93557859":"event","Q93558267":"event","Q93559100":"event","Q93559480":"event","Q105192287":"software","Q105197552":"software","Q105222350":"software","Q94175697":"event","Q94179291":"event","Q94184439":"event","Q94328265":"event","Q94330803":"event","Q94335159":"event","Q94440690":"event","Q94449872":"event","Q94456036":"event","Q94461921":"event","Q94464324":"event","Q94466552":"event","Q94553207":"event","Q94566633":"event","Q94572592":"event","Q94602639":"event","Q94606948":"event","Q94609396":"event","Q94614514":"event","Q94620924":"event","Q94634947":"event","Q94674064":"event","Q98017851":"event","Q98017920":"event","Q111602863":"software","Q104869738":"event","Q105687046":"event","Q111050703":"event","Q11399926":"regulation","Q11452942":"regulation","Q11631301":"regulation","Q17069312":"report","Q13635346":"dataset","Q16848268":"treaty","Q378625":"book","Q4484477":"event","Q5168161":"event","Q19219303":"book","Q12708896":"event","Q15883395":"event","Q16773134":"event","Q16965370":"event","Q996838":"performance","Q65181871":"webpage","Q65181907":"webpage","Q66050470":"webpage","Q66101878":"webpage","Q66385405":"webpage","Q67182786":"webpage","Q70453213":"report","Q92896548":"webpage","Q59658968":"event","Q66362695":"dataset","Q66363169":"dataset","Q61704031":"event","Q72284214":"event","Q72591660":"event","Q72592003":"event","Q72601141":"event","Q72601146":"event","Q72601149":"event","Q72601153":"event","Q72601159":"event","Q72601161":"event","Q72601168":"event","Q72601172":"event","Q72601178":"event","Q72601181":"event","Q72601191":"event","Q72601197":"event","Q72601202":"event","Q72601208":"event","Q72601212":"event","Q72601217":"event","Q72601221":"event","Q72601226":"event","Q72601224":"event","Q72601231":"event","Q72601237":"event","Q72601244":"event","Q72601250":"event","Q72601254":"event","Q72601257":"event","Q72601261":"event","Q72601267":"event","Q72601271":"event","Q72601276":"event","Q72601283":"event","Q72601291":"event","Q72601297":"event","Q72601303":"event","Q72601311":"event","Q72601309":"event","Q72601318":"event","Q72601322":"event","Q72601327":"event","Q72601330":"event","Q72601340":"event","Q72601346":"event","Q72601351":"event","Q72601354":"event","Q72601358":"event","Q72607814":"event","Q73712583":"event","Q85845681":"standard","Q76418219":"event","Q80716240":"event","Q106698068":"broadcast","Q106698131":"broadcast","Q106698140":"broadcast","Q106704934":"broadcast","Q106704937":"broadcast","Q106704989":"broadcast","Q94679742":"event","Q94683099":"event","Q94684100":"event","Q94694443":"event","Q94694538":"event","Q94694673":"event","Q107667728":"software","Q1188663":"webpage","Q104830881":"event","Q108678537":"legislation","Q111421098":"event","Q7980672":"speech","Q113561924":"event","Q1046088":"dataset","Q94953459":"performance","Q97976264":"performance","Q123267691":"event","Q123518050":"event","Q72415":"standard","Q21235007":"dataset","Q505425":"event","Q629880":"event","Q787065":"event","Q922379":"event","Q978420":"event","Q1204825":"event","Q1760295":"event","Q3586949":"event","Q4351985":"event","Q5447138":"event","Q21830861":"webpage","Q10865539":"event","Q11970590":"event","Q11970589":"event","Q11981530":"event","Q11981534":"event","Q11981535":"event","Q11981533":"event","Q11981539":"event","Q11981536":"event","Q11981537":"event","Q11981542":"event","Q11981543":"event","Q11981540":"event","Q11981541":"event","Q11981546":"event","Q11981544":"event","Q11981545":"event","Q11981548":"event","Q12742766":"event","Q17067427":"event","Q18646143":"event","Q19377750":"event","Q19377751":"event","Q19377755":"event","Q19377752":"event","Q19377753":"event","Q19377758":"event","Q19377756":"event","Q19377757":"event","Q19377762":"event","Q19377763":"event","Q19377760":"event","Q19377761":"event","Q19377767":"event","Q19377764":"event","Q19377765":"event","Q19377770":"event","Q19377771":"event","Q19377769":"event","Q19377773":"event","Q19952562":"event","Q21506111":"event","Q22341298":"event","Q24660195":"event","Q38806003":"event","Q65789047":"dataset","Q57265164":"software","Q88509703":"regulation","Q60988941":"event","Q74842049":"webpage","Q65152203":"event","Q106036966":"webpage","Q78795588":"book","Q89288125":"software","Q83768835":"event","Q106997754":"broadcast","Q106997761":"broadcast","Q106997767":"broadcast","Q106997772":"broadcast","Q106997784":"broadcast","Q19141585":"periodical","Q92601632":"event","Q106560450":"software","Q107608170":"software","Q109594644":"software","Q109720157":"software","Q31839822":"periodical","Q113359259":"software","Q113360209":"software","Q104716797":"event","Q108750339":"event","Q10991395":"webpage","Q97970431":"performance","Q244611":"event","Q1346707":"event","Q1355247":"event","Q1408039":"event","Q1535563":"event","Q1554232":"event","Q1683209":"event","Q1814351":"event","Q1967202":"event","Q2024469":"event","Q2225964":"event","Q2964173":"event","Q3045762":"event","Q3140055":"event","Q3403230":"event","Q3404984":"event","Q3703473":"event","Q3910523":"event","Q4649839":"event","Q4824156":"event","Q4887635":"event","Q5461357":"event","Q5533179":"event","Q5533180":"event","Q6351681":"event","Q6359046":"event","Q6359201":"event","Q6359205":"event","Q18385539":"standard","Q6963241":"event","Q6963244":"event","Q6963270":"event","Q6978541":"event","Q7209850":"event","Q7423191":"event","Q7438994":"event","Q7589626":"event","Q10873931":"event","Q10873965":"event","Q12808470":"event","Q15279583":"event","Q15731592":"event","Q15916431":"event","Q16592353":"event","Q16687986":"event","Q17151691":"event","Q18204262":"event","Q18657938":"event","Q20982919":"event","Q59191021":"dataset","Q59248059":"dataset","Q59248072":"dataset","Q23888340":"event","Q24189210":"event","Q24835101":"event","Q25350548":"event","Q25587711":"event","Q30715794":"event","Q83800887":"dataset","Q48725816":"event","Q52305798":"event","Q55639519":"event","Q58281635":"event","Q98540827":"dataset","Q100707366":"dataset","Q100717717":"dataset","Q100721610":"dataset","Q100746750":"dataset","Q100748418":"dataset","Q100775261":"webpage","Q100775825":"webpage","Q65129840":"event","Q104635718":"dataset","Q106546316":"dataset","Q106548776":"webpage","Q106978635":"dataset","Q107156729":"dataset","Q107156739":"dataset","Q73107411":"event","Q73365776":"event","Q79039843":"event","Q91990050":"event","Q96798339":"legislation","Q96474589":"event","Q96474603":"event","Q96474676":"event","Q96474677":"event","Q96474691":"event","Q96474692":"event","Q97185865":"event","Q104709546":"event","Q104722655":"event","Q104722990":"event","Q104723376":"event","Q104723700":"event","Q104758795":"event","Q104758823":"event","Q104758855":"event","Q104758883":"event","Q104766956":"event","Q104787186":"event","Q104787275":"event","Q104787302":"event","Q104817971":"event","Q104829424":"event","Q104831999":"event","Q104832083":"event","Q104832441":"event","Q104832507":"event","Q104842040":"event","Q104864806":"event","Q104865385":"event","Q104865744":"event","Q104866013":"event","Q104866279":"event","Q104883066":"event","Q104900138":"event","Q104903902":"event","Q104903952":"event","Q104904003":"event","Q104904033":"event","Q104904073":"event","Q104904110":"event","Q104909835":"event","Q104910622":"event","Q104949395":"event","Q105653634":"event","Q112325889":"book","Q105938904":"event","Q106283309":"event","Q106317387":"event","Q106533421":"event","Q113453616":"dataset","Q107008135":"event","Q107610554":"event","Q108371207":"event","Q115097491":"book","Q110599832":"legislation","Q110600499":"legislation","Q124616073":"software","Q114799827":"event","Q124742584":"dataset","Q120102540":"event","Q124726268":"event","Q20820617":"speech","Q20829009":"speech","Q131303":"software","Q373442":"software","Q732970":"software","Q1413365":"software","Q30897819":"motion_picture","Q133462":"event","Q687031":"event","Q1973511":"event","Q4970106":"event","Q5378276":"event","Q5467878":"event","Q6020058":"event","Q7304642":"legislation","Q7437991":"legislation","Q7118812":"event","Q7604686":"legislation","Q16044814":"event","Q17050828":"event","Q29647057":"software","Q24629887":"event","Q25212904":"legislation","Q60050485":"speech","Q30894000":"performance","Q99441966":"webpage","Q111450319":"webpage","Q101856615":"broadcast","Q101893835":"broadcast","Q104123273":"broadcast","Q106697975":"broadcast","Q106747030":"broadcast","Q90901530":"event","Q105103619":"software","Q105103699":"software","Q100532807":"legislation","Q100754500":"legislation","Q622820":"article-journal","Q110022526":"book","Q110275985":"book","Q117069722":"software","Q2992277":"article-journal","Q3028597":"article-journal","Q106193139":"event","Q106491623":"event","Q4220428":"article-journal","Q107411113":"event","Q121307131":"software","Q8031368":"article-journal","Q112711344":"event","Q112727041":"event","Q115487625":"event","Q123977368":"legislation","Q178051":"standard","Q192869":"standard","Q215106":"standard","Q654383":"standard","Q2584726":"standard","Q3362070":"software","Q4390943":"software","Q221178":"event","Q595998":"event","Q607354":"event","Q610903":"event","Q809005":"event","Q848943":"event","Q1079817":"event","Q1670259":"event","Q17154458":"standard","Q28136925":"broadcast","Q6963239":"event","Q11506547":"event","Q16951282":"legislation","Q16949509":"event","Q65195862":"regulation","Q52429227":"software","Q41463697":"event","Q48879612":"event","Q48879636":"event","Q62617958":"standard","Q52434585":"event","Q62584801":"event","Q107244961":"article-journal","Q84944905":"software","Q14472063":"periodical","Q105011790":"broadcast","Q105012297":"broadcast","Q105474650":"broadcast","Q105885182":"broadcast","Q105908707":"broadcast","Q106625210":"broadcast","Q106625239":"broadcast","Q106633624":"broadcast","Q106633763":"broadcast","Q106697970":"broadcast","Q106727748":"broadcast","Q106727754":"broadcast","Q106727771":"broadcast","Q106727832":"broadcast","Q106727901":"broadcast","Q106727914":"broadcast","Q106727922":"broadcast","Q106727935":"broadcast","Q106727950":"broadcast","Q106727966":"broadcast","Q106727999":"broadcast","Q106744755":"broadcast","Q106745097":"broadcast","Q106745341":"broadcast","Q106746993":"broadcast","Q106747143":"broadcast","Q106748356":"broadcast","Q106748460":"broadcast","Q106748640":"broadcast","Q106749118":"broadcast","Q106749214":"broadcast","Q106779377":"broadcast","Q106912483":"broadcast","Q106914703":"broadcast","Q108263475":"broadcast","Q98967985":"software","Q106542308":"software","Q111083433":"software","Q111995946":"standard","Q113930396":"software","Q113990327":"software","Q114444607":"software","Q110025156":"book","Q110275970":"book","Q110275973":"book","Q110541086":"book","Q1696148":"motion_picture","Q111489248":"book","Q106078186":"event","Q114079354":"book","Q107996858":"event","Q109659750":"legislation","Q115857017":"book","Q109860353":"event","Q110245212":"event","Q110245408":"event","Q110372986":"event","Q110373283":"event","Q110373359":"event","Q110373398":"event","Q110373429":"event","Q110458655":"event","Q111039982":"event","Q112159162":"event","Q114121545":"event","Q11498848":"regulation","Q114853395":"event","Q783874":"song","Q2515188":"dataset","Q2074644":"broadcast","Q122875896":"event","Q11448155":"broadcast","Q856327":"book","Q3408287":"book","Q11187440":"software","Q116375993":"performance","Q314967":"event","Q467064":"event","Q523224":"event","Q787680":"event","Q1617457":"event","Q2166064":"event","Q2518023":"event","Q3041191":"event","Q3433280":"event","Q6112431":"event","Q6796753":"event","Q19423910":"book","Q16969638":"event","Q21059662":"event","Q23657067":"event","Q23657075":"event","Q28493785":"event","Q10543608":"performance","Q33123961":"event","Q62707668":"software","Q60847566":"event","Q63869675":"event","Q63891738":"event","Q63891752":"event","Q105396484":"map","Q108914573":"webpage","Q109600401":"regulation","Q76763282":"event","Q113130325":"regulation","Q113205732":"regulation","Q113207769":"regulation","Q113207996":"regulation","Q113211161":"regulation","Q113296948":"regulation","Q113297495":"regulation","Q113302563":"regulation","Q113327930":"regulation","Q108881260":"broadcast","Q110955215":"broadcast","Q114885550":"dataset","Q116872592":"dataset","Q105861139":"software","Q96474704":"event","Q100705263":"event","Q113939436":"software","Q113940299":"software","Q113940297":"software","Q268854":"motion_picture","Q116741532":"software","Q116774996":"software","Q116779426":"software","Q117706384":"dataset","Q117743313":"software","Q108118070":"event","Q116672077":"book","Q121746052":"software","Q117800330":"dataset","Q117800463":"dataset","Q117800469":"dataset","Q117800524":"dataset","Q123155338":"software","Q123819435":"dataset","Q115308791":"event","Q115776212":"event","Q115903279":"event","Q123198342":"book","Q123734791":"book","Q123734795":"book","Q121142146":"legislation","Q121176788":"legislation","Q4765080":"broadcast","Q121435618":"event","Q121436090":"event","Q121436173":"event","Q121504365":"event","Q121631353":"event","Q124047848":"event","Q124312375":"event","Q124312714":"event","Q124312871":"event","Q124663861":"event","Q1260861":"software","Q26268098":"motion_picture","Q2313710":"software","Q4375640":"software","Q7058673":"software","Q20220309":"broadcast","Q1308919":"review","Q115492574":"webpage","Q18325242":"event","Q18573266":"event","Q20639305":"event","Q20982615":"event","Q20987607":"event","Q20988541":"event","Q21994303":"event","Q22080285":"event","Q22080340":"event","Q22080403":"event","Q22080496":"event","Q22080680":"event","Q30918879":"book","Q60715738":"webpage","Q27165261":"event","Q28404322":"event","Q28822711":"event","Q30324790":"event","Q31188843":"event","Q54932319":"broadcast","Q7419258":"webpage","Q52684958":"event","Q101898470":"broadcast","Q102364578":"broadcast","Q116495775":"motion_picture","Q116680334":"motion_picture","Q116771780":"motion_picture","Q116771790":"motion_picture","Q116771830":"motion_picture","Q113040113":"dataset","Q124107335":"map","Q111241357":"broadcast","Q115312732":"dataset","Q117833265":"dataset","Q115097963":"broadcast","Q120897786":"dataset","Q121438691":"broadcast","Q111411020":"software","Q115117118":"software","Q115117130":"software","Q115117135":"software","Q115117167":"software","Q115117168":"software","Q116280691":"software","Q110930257":"event","Q124365468":"software","Q113952420":"event","Q338779":"song","Q1123734":"song","Q117815241":"event","Q3080071":"broadcast","Q6022825":"broadcast","Q204214":"software","Q237580":"software","Q245793":"software","Q1150103":"standard","Q719621":"software","Q725779":"software","Q731220":"software","Q831367":"software","Q880146":"software","Q973778":"software","Q1687403":"software","Q1755887":"software","Q1882031":"software","Q2156242":"software","Q2165453":"software","Q2666693":"software","Q108847554":"performance","Q15977715":"broadcast","Q5456375":"software","Q5463958":"software","Q110241635":"performance","Q6047784":"software","Q6072277":"software","Q1778220":"book","Q10261777":"software","Q268357":"event","Q330953":"event","Q618395":"event","Q1063423":"event","Q1063430":"event","Q1194340":"event","Q1741802":"event","Q2529839":"event","Q2533907":"event","Q24906243":"broadcast","Q16114598":"software","Q4895359":"event","Q5204797":"event","Q17042400":"software","Q7272924":"legislation","Q20026619":"standard","Q19683982":"software","Q21598512":"software","Q10467373":"event","Q11514881":"event","Q12048403":"event","Q34487266":"broadcast","Q13220251":"event","Q28859989":"software","Q28861781":"software","Q18061850":"event","Q18061967":"event","Q20153891":"event","Q30324028":"event","Q40720553":"event","Q40720559":"event","Q40720564":"event","Q40720568":"event","Q40720946":"event","Q40720950":"event","Q40720953":"event","Q40720956":"event","Q62903328":"broadcast","Q53959413":"standard","Q45311620":"event","Q58636917":"software","Q65403895":"software","Q59245710":"event","Q7800425":"manuscript","Q1932":"event","Q89580282":"software","Q109523071":"song","Q97782987":"software","Q105994387":"software","Q108445168":"software","Q124423623":"dataset","Q113258437":"software","Q114401995":"standard","Q111970457":"event","Q123682624":"software","Q112685094":"event","Q1501313":"dataset","Q121902966":"book","Q918098":"broadcast","Q240815":"software","Q473751":"software","Q510878":"software","Q588784":"software","Q773240":"software","Q783866":"software","Q977076":"software","Q1049628":"software","Q1199356":"software","Q1412818":"software","Q1444922":"software","Q1559347":"software","Q1924669":"software","Q3045088":"software","Q3276556":"software","Q3351552":"software","Q3363001":"software","Q5227388":"software","Q5513505":"software","Q5516340":"software","Q5565944":"software","Q5689555":"software","Q2725354":"book","Q8095398":"software","Q9260028":"standard","Q10614538":"software","Q10724012":"software","Q814902":"event","Q1071761":"event","Q1194269":"event","Q1334701":"event","Q1365473":"event","Q1785695":"event","Q3214425":"event","Q3453330":"event","Q3694579":"event","Q5369934":"event","Q5420663":"event","Q16988498":"software","Q17424195":"software","Q17426384":"software","Q6201500":"event","Q21127166":"software","Q16313770":"book","Q22003134":"software","Q11618208":"event","Q19133616":"book","Q29642875":"software","Q30591588":"software","Q46371164":"software","Q53411682":"software","Q53679757":"software","Q63584350":"book","Q74126326":"event","Q102394163":"dataset","Q98545376":"software","Q110720508":"broadcast","Q111536489":"software","Q101012613":"event","Q114703842":"software","Q116058246":"standard","Q3124714":"webpage","Q118225287":"software","Q118482835":"software","Q4680663":"regulation","Q4680668":"regulation","Q120102418":"software","Q7397665":"webpage","Q124040159":"software","Q124587498":"software","Q125121154":"software","Q115353571":"event","Q116954224":"event","Q15983252":"webpage","Q1410418":"standard","Q1143087":"software","Q1149226":"software","Q1189206":"software","Q1482252":"software","Q1502841":"software","Q4339810":"software","Q4339809":"software","Q4875402":"software","Q5970270":"standard","Q5513518":"software","Q7048932":"standard","Q7170492":"software","Q7670377":"standard","Q8028368":"standard","Q8069448":"standard","Q3958013":"book","Q11187787":"standard","Q510868":"event","Q831648":"event","Q7683515":"book","Q1176224":"event","Q1240569":"event","Q1566419":"event","Q2742964":"event","Q3153683":"event","Q15881236":"software","Q11410812":"book","Q11588327":"book","Q11612882":"book","Q11612941":"book","Q5428139":"event","Q8035355":"event","Q9206702":"event","Q21323922":"software","Q11960442":"event","Q20102893":"book","Q25112199":"software","Q14303973":"event","Q15104326":"event","Q27866048":"standard","Q16515010":"event","Q16823610":"event","Q17230138":"event","Q33523692":"software","Q33523835":"software","Q3842899":"performance","Q10851335":"performance","Q11853877":"performance","Q46996496":"software","Q17120991":"performance","Q75880289":"regulation","Q59392156":"software","Q60617880":"software","Q63061679":"standard","Q64015090":"event","Q64045847":"event","Q64683339":"event","Q85928720":"standard","Q104654618":"software","Q102104632":"event","Q109593799":"event","Q109924100":"event","Q111539646":"event","Q112033376":"event","Q113115859":"event","Q55633069":"manuscript","Q485228":"dataset","Q115520933":"event","Q115821163":"event","Q3153861":"dataset","Q1138628":"broadcast","Q4798414":"broadcast","Q12021769":"dataset","Q333967":"software","Q387688":"software","Q11235226":"broadcast","Q578713":"software","Q11281236":"broadcast","Q11323152":"broadcast","Q11335932":"broadcast","Q11423603":"broadcast","Q1229379":"standard","Q1229441":"standard","Q11650048":"broadcast","Q1130489":"software","Q1755411":"standard","Q1757463":"software","Q1806819":"software","Q1923906":"software","Q3093436":"software","Q5248086":"software","Q6886151":"software","Q7705753":"software","Q11244274":"software","Q396044":"event","Q606639":"event","Q860228":"event","Q1185305":"event","Q1203320":"event","Q2954102":"event","Q15400317":"software","Q19643088":"software","Q12340392":"event","Q25348457":"software","Q15078695":"event","Q16837751":"event","Q16838875":"event","Q33524422":"software","Q33524721":"software","Q33524976":"software","Q33525229":"software","Q33526069":"software","Q33526443":"software","Q33526600":"software","Q33526801":"software","Q33527325":"software","Q33527549":"software","Q33527907":"software","Q33528238":"software","Q33528421":"software","Q33528628":"software","Q33635800":"software","Q43634921":"software","Q43635278":"software","Q43636199":"software","Q43636658":"software","Q43637860":"software","Q22110347":"performance","Q22114540":"performance","Q22115031":"performance","Q61978471":"event","Q106574717":"dataset","Q85737192":"event","Q86755961":"event","Q104093099":"software","Q119346227":"broadcast","Q109423347":"software","Q103921799":"event","Q107689195":"event","Q107693925":"event","Q124694970":"software","Q124757184":"software","Q11637709":"webpage","Q115612146":"event","Q116957808":"event","Q221181":"software","Q483881":"software","Q488978":"software","Q524357":"software","Q748319":"software","Q771202":"software","Q828318":"software","Q858368":"software","Q1417032":"software","Q2744208":"software","Q3340004":"software","Q3569290":"software","Q4020354":"software","Q4304915":"software","Q4419886":"software","Q4451239":"software","Q10720256":"software","Q493742":"event","Q1757181":"event","Q1859420":"event","Q2087929":"event","Q2413978":"event","Q2703885":"event","Q2855477":"event","Q3126275":"event","Q3141315":"event","Q3363711":"event","Q3952256":"event","Q15926623":"software","Q16297177":"software","Q4927905":"event","Q18168774":"software","Q7112919":"event","Q19683436":"software","Q19845304":"software","Q8567266":"event","Q10382709":"event","Q10389571":"event","Q10861403":"event","Q25313371":"software","Q19704499":"event","Q26720971":"event","Q54854623":"event","Q11215":"software","Q11230":"software","Q11233":"software","Q11246":"software","Q81575703":"software","Q81575705":"software","Q96741505":"software","Q104733778":"software","Q106043758":"software","Q107269746":"software","Q111371387":"software","Q111508990":"software","Q111508995":"software","Q111509026":"software","Q111509027":"software","Q111509029":"software","Q112284013":"software","Q115049220":"standard","Q115130625":"software","Q115558415":"software","Q116236809":"software","Q116278109":"software","Q106812766":"event","Q121769643":"software","Q83370":"software","Q401831":"software","Q483132":"software","Q484892":"software","Q495432":"software","Q580564":"software","Q691243":"software","Q917189":"software","Q1064344":"software","Q1931689":"standard","Q1647019":"software","Q2247688":"software","Q4020349":"software","Q7201780":"software","Q7888831":"software","Q9130638":"software","Q11574242":"software","Q169737":"event","Q326892":"event","Q524610":"event","Q556496":"event","Q845114":"event","Q898591":"event","Q900576":"event","Q1062492":"event","Q1307227":"event","Q25390252":"song","Q1684507":"event","Q1755225":"event","Q2257070":"event","Q2300257":"event","Q2505535":"event","Q3123616":"event","Q3439829":"event","Q4115346":"event","Q4592477":"event","Q4836602":"event","Q4994137":"event","Q5393721":"event","Q6983400":"event","Q7313659":"event","Q7366192":"event","Q7575667":"event","Q7575669":"event","Q7575672":"event","Q7575673":"event","Q7575676":"event","Q7575682":"event","Q8960966":"event","Q10280357":"event","Q10353213":"event","Q26791581":"standard","Q26921434":"software","Q16834937":"event","Q29017752":"software","Q19909730":"event","Q1869334":"performance","Q25037303":"event","Q26185936":"event","Q46069542":"legislation","Q60982656":"software","Q65047081":"event","Q65196342":"event","Q85792816":"software","Q96195505":"software","Q97291175":"software","Q104819482":"software","Q105221690":"software","Q96405228":"event","Q110639931":"software","Q111515095":"software","Q111515096":"software","Q111515101":"software","Q105751138":"event","Q107151225":"event","Q108760929":"event","Q108760932":"event","Q108920005":"event","Q109668823":"event","Q110111461":"event","Q122906588":"software","Q113015786":"event","Q116131032":"event","Q116278033":"event","Q3423660":"dataset","Q119983048":"event","Q121286063":"event","Q10438508":"dataset","Q10478639":"dataset","Q10497164":"dataset","Q10547434":"dataset","Q124603953":"event","Q238354":"software","Q350432":"software","Q2385777":"standard","Q2108252":"software","Q3041438":"software","Q5260569":"standard","Q7119555":"software","Q114811":"event","Q153271":"event","Q633506":"event","Q841184":"event","Q26209596":"dataset","Q1235753":"event","Q1361894":"event","Q1416059":"event","Q1499600":"event","Q1529436":"event","Q1548628":"event","Q1668097":"event","Q1824674":"event","Q2115011":"event","Q2143986":"event","Q2543966":"event","Q2896569":"event","Q28369847":"dataset","Q3293251":"event","Q3298250":"event","Q3405240":"event","Q3470315":"event","Q3587382":"event","Q3587381":"event","Q3587386":"event","Q4243924":"event","Q5354786":"event","Q5354822":"event","Q5930071":"event","Q5969550":"event","Q7010958":"event","Q7400131":"event","Q7864918":"event","Q7887983":"event","Q7887986":"event","Q7887985":"event","Q7973727":"event","Q10858737":"event","Q11346238":"event","Q12756870":"event","Q16467746":"event","Q17145665":"event","Q17269186":"event","Q18345293":"event","Q18638656":"event","Q18701815":"event","Q20994454":"event","Q24083601":"event","Q24846923":"event","Q25408461":"event","Q29588946":"event","Q30572165":"event","Q34542757":"event","Q51544760":"event","Q63914682":"software","Q63914753":"software","Q63914927":"software","Q55649142":"event","Q71477837":"software","Q73476571":"software","Q111517550":"dataset","Q108611897":"software","Q108731424":"software","Q108924240":"software","Q109470190":"software","Q98048858":"event","Q109942850":"software","Q111306718":"software","Q111411588":"software","Q112074728":"software","Q104525354":"event","Q5365960":"motion_picture","Q108863993":"event","Q109930449":"event","Q123668790":"standard","Q123669410":"standard","Q123669580":"standard","Q123669609":"standard","Q123678686":"standard","Q123678779":"standard","Q123678918":"standard","Q123679353":"standard","Q123679549":"standard","Q123679698":"standard","Q123679999":"standard","Q116969415":"event","Q116971890":"event","Q117185568":"event","Q373155":"standard","Q944633":"standard","Q2519245":"standard","Q3841521":"standard","Q7094106":"software","Q457500":"event","Q648945":"event","Q8193338":"book","Q2616539":"event","Q28739778":"dataset","Q3586251":"event","Q5003750":"event","Q5219928":"event","Q5949238":"event","Q11408956":"event","Q11419290":"event","Q11431351":"event","Q11442189":"event","Q11489226":"event","Q12867166":"event","Q12867171":"event","Q15256689":"event","Q42245028":"dataset","Q19844610":"event","Q20018725":"event","Q21512546":"event","Q47502370":"dataset","Q26466721":"event","Q55605057":"software","Q55632755":"software","Q84322932":"motion_picture","Q61448957":"software","Q62625561":"software","Q63283385":"software","Q51879476":"event","Q52362967":"event","Q71274998":"standard","Q71275233":"standard","Q71432876":"standard","Q71433176":"standard","Q71828821":"standard","Q71829168":"standard","Q71831258":"standard","Q71832451":"standard","Q71837258":"standard","Q71856089":"standard","Q71858982":"standard","Q71859176":"standard","Q71859354":"standard","Q71859512":"standard","Q71859659":"standard","Q71973058":"standard","Q60527676":"event","Q62071638":"event","Q66603542":"event","Q66603543":"event","Q66603544":"event","Q66615612":"event","Q66659576":"event","Q66724548":"event","Q104540818":"regulation","Q111975528":"motion_picture","Q111975808":"motion_picture","Q115797406":"dataset","Q115797416":"dataset","Q106611632":"software","Q107636709":"software","Q107636751":"software","Q107636783":"software","Q107636890":"software","Q124963349":"dataset","Q111662778":"software","Q111662777":"software","Q111669984":"software","Q113773777":"software","Q117275133":"event","Q163696":"event","Q169359":"event","Q288079":"event","Q407991":"event","Q508051":"event","Q512129":"event","Q512963":"event","Q667997":"event","Q721063":"event","Q781192":"event","Q877671":"event","Q895534":"event","Q917566":"event","Q968639":"event","Q1059021":"event","Q1077734":"event","Q1116814":"event","Q1189134":"event","Q1193854":"event","Q1203806":"event","Q1250656":"event","Q1323147":"event","Q1346984":"event","Q1374588":"event","Q1374609":"event","Q1468088":"event","Q1750573":"event","Q1751126":"event","Q1897916":"event","Q1970399":"event","Q2022394":"event","Q2036730":"event","Q2103991":"event","Q2282372":"event","Q2318056":"event","Q2557059":"event","Q2565182":"event","Q2589882":"event","Q2617992":"event","Q2623334":"event","Q2690333":"event","Q2759944":"event","Q2796146":"event","Q2796173":"event","Q2948940":"event","Q2949278":"event","Q2953003":"event","Q2954080":"event","Q2954411":"event","Q2999645":"event","Q3000564":"event","Q3046254":"event","Q3270632":"event","Q3436550":"event","Q3653348":"event","Q3653602":"event","Q3654440":"event","Q3700391":"event","Q3736900":"event","Q3736909":"event","Q3750874":"event","Q4127374":"event","Q4244129":"event","Q4264451":"event","Q4264454":"event","Q4489569":"event","Q4508905":"event","Q4508911":"event","Q4509265":"event","Q4509668":"event","Q4689962":"event","Q4689963":"event","Q4806587":"event","Q4806595":"event","Q4806598":"event","Q4806698":"event","Q4806699":"event","Q4806700":"event","Q4806704":"event","Q4806741":"event","Q4806752":"event","Q4806774":"event","Q4806775":"event","Q4845076":"event","Q4958733":"event","Q5153811":"event","Q5322959":"event","Q5324162":"event","Q5324163":"event","Q5324160":"event","Q5324164":"event","Q5324165":"event","Q5327742":"event","Q5412763":"event","Q5413069":"event","Q5413097":"event","Q10948":"event","Q28950":"event","Q33045":"event","Q5413386":"event","Q5413384":"event","Q5413391":"event","Q5413389":"event","Q5413394":"event","Q5413392":"event","Q5413398":"event","Q5413397":"event","Q5413403":"event","Q5413400":"event","Q5413404":"event","Q5413446":"event","Q5425586":"event","Q5425584":"event","Q5425585":"event","Q5425588":"event","Q5425593":"event","Q5694546":"event","Q5969414":"event","Q5969429":"event","Q6026398":"event","Q6098721":"event","Q6505941":"event","Q7076181":"event","Q7076192":"event","Q7122265":"event","Q7378194":"event","Q7565965":"event","Q7575662":"event","Q8030888":"event","Q10685487":"event","Q11291989":"event","Q11538952":"event","Q11588212":"event","Q12038186":"event","Q12169383":"event","Q12299851":"event","Q12299908":"event","Q12770865":"event","Q13135714":"event","Q14038357":"event","Q14623345":"event","Q14924306":"event","Q15067587":"event","Q15781174":"event","Q15847833":"event","Q16152180":"event","Q16554971":"event","Q16716692":"event","Q16801223":"event","Q16834552":"event","Q16845090":"event","Q16954793":"event","Q16962038":"event","Q16962226":"event","Q16968229":"event","Q16975517":"event","Q17001339":"event","Q17003000":"event","Q17003082":"event","Q17003598":"event","Q17011181":"event","Q17075295":"event","Q17084760":"event","Q17087253":"event","Q17088907":"event","Q17092805":"event","Q17103014":"event","Q17131410":"event","Q17146534":"event","Q17146586":"event","Q17156776":"event","Q17624236":"event","Q18355710":"event","Q18450116":"event","Q18469279":"event","Q19605480":"event","Q19796100":"event","Q19902252":"event","Q20012080":"event","Q20712914":"event","Q20804887":"event","Q21028314":"event","Q21282691":"event","Q21293376":"event","Q21520258":"event","Q22031906":"event","Q22032101":"event","Q22032208":"event","Q22570198":"event","Q22570231":"event","Q22833327":"event","Q22987757":"event","Q23002101":"event","Q23308598":"event","Q24964541":"event","Q25038375":"event","Q25045203":"event","Q25051732":"event","Q25055084":"event","Q104716172":"event","Q105398582":"event","Q106193092":"event","Q106956751":"event","Q112603981":"event","Q113932844":"event","Q116180197":"event","Q689445":"software","Q2516568":"software","Q2559490":"software","Q5370102":"software","Q30105403":"regulation","Q6900507":"software","Q7594819":"software","Q11248529":"software","Q80131":"event","Q131375":"event","Q188966":"event","Q191448":"event","Q1123217":"event","Q1497658":"event","Q1637219":"event","Q4158858":"event","Q4284451":"event","Q7270690":"event","Q21996535":"software","Q11489823":"event","Q11675451":"event","Q29000599":"software","Q18916556":"event","Q20736977":"event","Q21087255":"event","Q25041813":"event","Q25055094":"event","Q25055098":"event","Q25110756":"event","Q25230508":"event","Q25404399":"event","Q26212864":"event","Q27600974":"event","Q28135573":"event","Q28403527":"event","Q28405922":"event","Q28789901":"event","Q30274594":"event","Q30276524":"event","Q30323976":"event","Q30587802":"event","Q30634779":"event","Q30636248":"event","Q39054787":"event","Q39060746":"event","Q48817594":"event","Q48817599":"event","Q48817596":"event","Q48817644":"event","Q48817653":"event","Q48842375":"event","Q48844045":"event","Q48844054":"event","Q48847415":"event","Q48862207":"event","Q48862299":"event","Q48862310":"event","Q48862317":"event","Q48862325":"event","Q48862329":"event","Q48862332":"event","Q48862337":"event","Q48862345":"event","Q60748043":"software","Q55639211":"event","Q56178068":"event","Q56276268":"event","Q56291557":"event","Q56526979":"event","Q58488048":"event","Q60772917":"event","Q61001459":"event","Q63453754":"event","Q65206484":"event","Q66439822":"event","Q67478660":"event","Q718":"event","Q1293":"event","Q11411":"event","Q44914":"event","Q72115481":"event","Q73677564":"event","Q76161101":"event","Q81661501":"event","Q83476880":"event","Q112118737":"software","Q112278052":"software","Q124694932":"software","Q114912383":"event","Q3359857":"dataset","Q5281480":"dataset","Q1227545":"software","Q1691212":"software","Q4048045":"software","Q5661654":"software","Q1334257":"book","Q17145545":"broadcast","Q21629439":"broadcast","Q128713":"event","Q136269":"event","Q183042":"event","Q251092":"event","Q253088":"event","Q298553":"event","Q327365":"event","Q485447":"event","Q510548":"event","Q582872":"event","Q588962":"event","Q607463":"event","Q613969":"event","Q625082":"event","Q630894":"event","Q644298":"event","Q645441":"event","Q662746":"event","Q669272":"event","Q681555":"event","Q793688":"event","Q807020":"event","Q877358":"event","Q909640":"event","Q910622":"event","Q939029":"event","Q1073205":"event","Q1145599":"event","Q1257171":"event","Q1322124":"event","Q1330251":"event","Q1391842":"event","Q1401142":"event","Q1401155":"event","Q1408746":"event","Q1472600":"event","Q1578389":"event","Q1629727":"event","Q1638281":"event","Q1810596":"event","Q1813287":"event","Q1813295":"event","Q1849378":"event","Q2054251":"event","Q2058154":"event","Q2095072":"event","Q2446526":"event","Q2702813":"event","Q2940839":"event","Q2942913":"event","Q3009575":"event","Q3354849":"event","Q3533137":"event","Q3533252":"event","Q3533306":"event","Q3533842":"event","Q3540001":"event","Q18508820":"software","Q7688876":"event","Q7888976":"event","Q7901127":"event","Q20822063":"software","Q10299516":"event","Q10855559":"event","Q11613108":"event","Q12734616":"event","Q25861761":"software","Q24885817":"event","Q25894802":"event","Q62465093":"dataset","Q47401041":"event","Q60617863":"software","Q60775070":"software","Q100528793":"dataset","Q114794403":"dataset","Q121222277":"broadcast","Q111391909":"software","Q113124982":"software","Q113125409":"software","Q113293280":"software","Q104418034":"event","Q112031443":"event","Q115841195":"event","Q119154288":"event","Q6517465":"dataset","Q120974152":"event","Q123048050":"event","Q123048058":"event","Q123777263":"event","Q123777266":"event","Q123777264":"event","Q123777265":"event","Q610394":"software","Q1323555":"software","Q2533324":"software","Q177351":"event","Q380532":"event","Q1879308":"event","Q2593298":"event","Q2739132":"event","Q2992354":"event","Q3088847":"event","Q3492828":"event","Q4284450":"event","Q4347679":"event","Q4354765":"event","Q4423923":"event","Q4423961":"event","Q5101141":"event","Q5137223":"event","Q5775270":"event","Q5813807":"event","Q6016201":"event","Q6049561":"event","Q6165093":"event","Q6440368":"event","Q20310948":"software","Q9351943":"event","Q17014374":"book","Q22952981":"software","Q11722126":"event","Q15220407":"event","Q15975414":"event","Q16069051":"event","Q16641908":"event","Q16647261":"event","Q17325710":"event","Q18287022":"event","Q18683480":"event","Q19588431":"event","Q19679987":"event","Q19801121":"event","Q20020845":"event","Q20109024":"event","Q20724181":"event","Q20736214":"event","Q20807145":"event","Q20807415":"event","Q20855633":"event","Q21055553":"event","Q21077697":"event","Q22231107":"event","Q22670384":"event","Q25381630":"event","Q25383896":"event","Q27893184":"event","Q27997365":"event","Q28663593":"event","Q28663705":"event","Q28791979":"event","Q29002282":"event","Q29980383":"event","Q30038909":"event","Q30103254":"event","Q30339156":"event","Q38029603":"event","Q40130654":"event","Q42583237":"event","Q43043882":"event","Q56539593":"software","Q47479346":"event","Q47479350":"event","Q49595720":"event","Q50330129":"event","Q56550809":"event","Q56651671":"event","Q57706896":"event","Q57721793":"event","Q61951076":"event","Q62871690":"event","Q63976580":"event","Q63992770":"event","Q63997868":"event","Q64160607":"event","Q65951876":"event","Q70619951":"event","Q81931091":"event","Q84446334":"event","Q85017082":"event","Q116175375":"software","Q109425285":"event","Q109640489":"event","Q109658501":"event","Q116738066":"event","Q123111761":"event","Q123156556":"event","Q123887692":"event","Q751838":"software","Q804187":"software","Q3308694":"software","Q5451829":"standard","Q1063286":"book","Q734174":"event","Q932048":"event","Q1009303":"event","Q1203463":"event","Q1338187":"event","Q1458163":"event","Q1483720":"event","Q1493190":"event","Q1537281":"event","Q1590995":"event","Q1802754":"event","Q1940140":"event","Q2047484":"event","Q2256201":"event","Q2372431":"event","Q2493752":"event","Q4127453":"event","Q4127592":"event","Q4127615":"event","Q4229193":"event","Q4407668":"event","Q5412628":"event","Q7086900":"event","Q7494086":"event","Q21474241":"standard","Q10340653":"event","Q10340660":"event","Q11187131":"event","Q11362251":"event","Q11362260":"event","Q11362358":"event","Q11362400":"event","Q12384262":"event","Q14276938":"event","Q14551324":"event","Q17155515":"event","Q19901819":"event","Q20057822":"event","Q20180874":"event","Q20624090":"event","Q3002559":"performance","Q3329162":"performance","Q26887310":"event","Q26894053":"event","Q26895936":"event","Q26896697":"event","Q27020779":"event","Q28683830":"event","Q28683832":"event","Q29032784":"event","Q30889662":"event","Q56298645":"software","Q63915290":"software","Q63915650":"software","Q53532033":"event","Q53534649":"event","Q53538403":"event","Q53538476":"event","Q53642685":"event","Q56679145":"event","Q11983":"software","Q60853058":"event","Q60853413":"performance","Q105475134":"software","Q282587":"webpage","Q114873882":"software","Q104873669":"event","Q2673931":"webpage","Q118726739":"software","Q107654434":"event","Q121566283":"software","Q112269880":"legislation","Q1088118":"dataset","Q1092846":"dataset","Q1545752":"dataset","Q1752462":"dataset","Q116860174":"event","Q117135487":"event","Q16641149":"webpage","Q7502102":"dataset","Q124419517":"event","Q878344":"standard","Q1639854":"standard","Q2015669":"software","Q9375485":"software","Q6009879":"book","Q1134541":"event","Q1730106":"event","Q1734347":"event","Q2910355":"legislation","Q2910779":"legislation","Q2710647":"event","Q2732579":"event","Q2745456":"event","Q2755692":"event","Q2790614":"event","Q2795686":"event","Q2798560":"event","Q2856305":"event","Q2859545":"event","Q3101633":"event","Q3226846":"event","Q3745603":"event","Q4323858":"event","Q4992415":"event","Q11815573":"book","Q6150323":"event","Q7462837":"event","Q21154509":"software","Q11782483":"event","Q11871765":"event","Q12047675":"event","Q19494479":"book","Q14170532":"event","Q14170537":"event","Q14170543":"event","Q15045098":"event","Q15989366":"event","Q22981534":"book","Q22981535":"book","Q22981536":"book","Q16678023":"event","Q16716711":"event","Q16912063":"event","Q29021290":"software","Q17642222":"event","Q18434643":"event","Q18434645":"event","Q21004536":"event","Q21030243":"event","Q24262161":"event","Q28980408":"event","Q60846354":"dataset","Q40065581":"event","Q61507686":"software","Q55654808":"legislation","Q59106911":"event","Q60791791":"event","Q65049697":"event","Q34623":"legislation","Q97358680":"event","Q110874354":"software","Q2071570":"webpage","Q2826916":"regulation","Q2980539":"webpage","Q3289865":"webpage","Q6163190":"regulation","Q121782524":"standard","Q121784289":"standard","Q121786280":"standard","Q111522339":"event","Q112124639":"event","Q9368839":"regulation","Q11363644":"webpage","Q1340994":"dataset","Q115772045":"event","Q18355750":"webpage","Q355134":"software","Q3139142":"software","Q4040458":"software","Q116518":"book","Q5957454":"software","Q30937289":"webpage","Q2966817":"book","Q128814":"event","Q130848":"event","Q130911":"event","Q11590806":"software","Q205364":"event","Q213972":"event","Q323839":"event","Q701198":"event","Q902451":"event","Q981337":"event","Q1004329":"event","Q1061047":"event","Q1370841":"event","Q1405173":"event","Q1520027":"event","Q1540633":"event","Q1920649":"event","Q2256404":"event","Q2346716":"event","Q2387672":"event","Q2738807":"event","Q2830437":"event","Q3098849":"event","Q3114218":"event","Q3959472":"event","Q15621510":"software","Q15621512":"software","Q4335797":"event","Q7001233":"review","Q5493255":"event","Q17639359":"software","Q7114092":"event","Q7315829":"event","Q14914926":"event","Q14914942":"event","Q18369361":"event","Q18396894":"event","Q19914514":"event","Q19973786":"event","Q19973787":"event","Q19973788":"event","Q20107915":"event","Q56062468":"webpage","Q20680149":"event","Q20807545":"event","Q21082738":"event","Q56884303":"regulation","Q33183362":"software","Q958982":"performance","Q2339999":"performance","Q60791717":"webpage","Q5737784":"performance","Q65218586":"webpage","Q30898741":"event","Q30962903":"event","Q85822056":"webpage","Q54560134":"event","Q67016067":"software","Q60220650":"event","Q65767991":"event","Q104839872":"webpage","Q18919":"event","Q25755":"event","Q28806":"event","Q34032":"event","Q63535":"event","Q88006502":"event","Q104530614":"software","Q109539832":"software","Q157475":"event","Q170090":"event","Q178052":"event","Q180211":"event","Q259829":"event","Q319734":"event","Q327269":"event","Q327280":"event","Q340854":"event","Q386318":"event","Q392389":"event","Q426471":"event","Q427592":"event","Q465795":"event","Q471152":"event","Q474807":"event","Q487511":"event","Q499201":"event","Q517614":"event","Q570529":"event","Q591226":"event","Q598273":"event","Q599219":"event","Q599490":"event","Q600515":"event","Q601746":"event","Q605476":"event","Q610266":"event","Q611864":"event","Q614972":"event","Q616093":"event","Q616693":"event","Q644853":"event","Q649532":"event","Q653268":"event","Q658116":"event","Q658569":"event","Q659136":"event","Q660641":"event","Q668955":"event","Q674864":"event","Q675457":"event","Q676580":"event","Q682624":"event","Q692114":"event","Q730754":"event","Q737312":"event","Q761639":"event","Q821946":"event","Q821947":"event","Q821948":"event","Q844403":"event","Q850591":"event","Q891242":"event","Q894985":"event","Q907050":"event","Q907668":"event","Q911289":"event","Q923045":"event","Q932825":"event","Q936601":"event","Q943010":"event","Q962393":"event","Q968264":"event","Q973301":"event","Q1060108":"event","Q1088090":"event","Q1088157":"event","Q1090212":"event","Q1090806":"event","Q1092899":"event","Q1096116":"event","Q1103779":"event","Q1103804":"event","Q1109539":"event","Q1110082":"event","Q1122508":"event","Q1164196":"event","Q1180451":"event","Q1268418":"event","Q1271517":"event","Q1303862":"event","Q1311792":"event","Q1344479":"event","Q1350538":"event","Q1366776":"event","Q1368083":"event","Q1368654":"event","Q1385915":"event","Q1400788":"event","Q1423268":"event","Q1435962":"event","Q1476019":"event","Q1486603":"event","Q1486613":"event","Q1503120":"event","Q1517830":"event","Q1518122":"event","Q1519363":"event","Q1519668":"event","Q1526164":"event","Q1526846":"event","Q1526848":"event","Q1526860":"event","Q1526866":"event","Q1526877":"event","Q1527957":"event","Q1542174":"event","Q1542385":"event","Q1542394":"event","Q1542392":"event","Q1542396":"event","Q1542663":"event","Q1542739":"event","Q1542813":"event","Q1547573":"event","Q1548939":"event","Q1583408":"event","Q1585485":"event","Q1587013":"event","Q1588044":"event","Q1628936":"event","Q1640138":"event","Q1744497":"event","Q1749780":"event","Q1752020":"event","Q1754568":"event","Q1812660":"event","Q1813278":"event","Q1814689":"event","Q1817107":"event","Q1824712":"event","Q1841684":"event","Q1855159":"event","Q1857841":"event","Q1926035":"event","Q1962641":"event","Q1964303":"event","Q1973262":"event","Q1973921":"event","Q1973969":"event","Q1976920":"event","Q1979384":"event","Q2004657":"event","Q2004668":"event","Q2021382":"event","Q2037227":"event","Q2037237":"event","Q2037244":"event","Q2051803":"event","Q2055820":"event","Q2066150":"event","Q2089965":"event","Q2108070":"event","Q2132045":"event","Q2147422":"event","Q2157248":"event","Q2162442":"event","Q2169635":"event","Q2175991":"event","Q2175994":"event","Q2179574":"event","Q2233410":"event","Q2236734":"event","Q2256949":"event","Q2283121":"event","Q2287083":"event","Q2289844":"event","Q2303721":"event","Q2307031":"event","Q2347221":"event","Q2364790":"event","Q2372322":"event","Q2423538":"event","Q2454846":"event","Q2454854":"event","Q2466565":"event","Q2471246":"event","Q2473512":"event","Q2485118":"event","Q2526924":"event","Q2590129":"event","Q2670837":"event","Q2783065":"event","Q2922048":"event","Q3074837":"event","Q3113739":"event","Q3114235":"event","Q3365114":"event","Q3365233":"event","Q3441712":"event","Q3530122":"event","Q3533244":"event","Q3542707":"event","Q3547112":"event","Q3574586":"event","Q4300630":"event","Q5115569":"event","Q5138389":"event","Q5883492":"event","Q105942558":"event","Q106850813":"event","Q115138093":"event","Q115153874":"event","Q115154411":"event","Q115154531":"event","Q115154571":"event","Q116033862":"event","Q116033863":"event","Q116033866":"event","Q116033865":"event","Q116033868":"event","Q116869671":"event","Q117086385":"event","Q117793526":"event","Q117794100":"event","Q117794211":"event","Q118145091":"event","Q118583469":"event","Q118949445":"event","Q119149173":"event","Q119562914":"event","Q119563414":"event","Q122674293":"event","Q123153363":"event","Q124005399":"event","Q121571":"event","Q255117":"event","Q265736":"event","Q268554":"event","Q280275":"event","Q281886":"event","Q281917":"event","Q282166":"event","Q298589":"event","Q320757":"event","Q334939":"event","Q384681":"event","Q386830":"event","Q429896":"event","Q477435":"event","Q488647":"event","Q524624":"event","Q581504":"event","Q1411753":"event","Q8202753":"book","Q2299288":"event","Q2813537":"event","Q2862138":"event","Q2937412":"event","Q2955927":"event","Q2963375":"event","Q3052147":"event","Q3128742":"event","Q3139335":"event","Q3150010":"event","Q3151565":"event","Q3237804":"event","Q3304723":"event","Q3328467":"event","Q3338981":"event","Q3362755":"event","Q3519336":"event","Q3528162":"event","Q4826550":"event","Q5171014":"event","Q5370451":"event","Q7116323":"event","Q7304831":"event","Q7314673":"event","Q7927469":"event","Q11328695":"event","Q15696873":"event","Q15697091":"event","Q16974177":"event","Q18157090":"event","Q19877750":"event","Q22095239":"event","Q22095399":"event","Q22095608":"event","Q22096254":"event","Q24204538":"event","Q30639095":"event","Q39059968":"event","Q41888576":"event","Q60753395":"event","Q64995967":"event","Q64995965":"event","Q65043763":"event","Q65043766":"event","Q65043772":"event","Q65043982":"event","Q65043992":"event","Q65044827":"event","Q65951873":"event","Q65951884":"event","Q21884":"event","Q92733563":"event","Q96392358":"event","Q108730964":"software","Q582082":"event","Q648028":"event","Q648675":"event","Q654498":"event","Q654565":"event","Q675723":"event","Q680152":"event","Q680171":"event","Q744755":"event","Q749413":"event","Q774486":"event","Q776166":"event","Q778692":"event","Q783734":"event","Q800165":"event","Q828160":"event","Q848797":"event","Q854376":"event","Q910409":"event","Q919370":"event","Q919638":"event","Q927779":"event","Q936915":"event","Q941111":"event","Q949929":"event","Q961714":"event","Q975138":"event","Q1075582":"event","Q1149386":"event","Q1161755":"event","Q1162457":"event","Q1162472":"event","Q1289679":"event","Q1376855":"event","Q1399835":"event","Q1457762":"event","Q1501434":"event","Q1502732":"event","Q1583497":"event","Q1593292":"event","Q1619413":"event","Q1647788":"event","Q1673998":"event","Q1771731":"event","Q1771965":"event","Q1772214":"event","Q1772238":"event","Q1772957":"event","Q1772985":"event","Q1773662":"event","Q1775333":"event","Q1775967":"event","Q1776505":"event","Q1777773":"event","Q1778122":"event","Q1778804":"event","Q1779476":"event","Q1780193":"event","Q1780337":"event","Q1785973":"event","Q1807175":"event","Q1815189":"event","Q1820728":"event","Q1822501":"event","Q1825491":"event","Q1829727":"event","Q1835267":"event","Q1839891":"event","Q1848211":"event","Q1852166":"event","Q1853292":"event","Q1854372":"event","Q1856488":"event","Q1858179":"event","Q1858239":"event","Q1860217":"event","Q1882006":"event","Q1887255":"event","Q1896344":"event","Q1901161":"event","Q1901308":"event","Q1901408":"event","Q1910741":"event","Q1915689":"event","Q1920067":"event","Q1924643":"event","Q1928644":"event","Q1938395":"event","Q1943456":"event","Q1944970":"event","Q1970545":"event","Q1971029":"event","Q1988451":"event","Q1993127":"event","Q1995042":"event","Q2001306":"event","Q2001949":"event","Q2007725":"event","Q2021654":"event","Q2028234":"event","Q2029846":"event","Q2037679":"event","Q2038748":"event","Q2041702":"event","Q2044665":"event","Q2048921":"event","Q2049374":"event","Q2049476":"event","Q2055374":"event","Q2063988":"event","Q2070623":"event","Q2073858":"event","Q2075676":"event","Q2089669":"event","Q2091754":"event","Q2095457":"event","Q2098245":"event","Q2102469":"event","Q2104798":"event","Q2106927":"event","Q2107026":"event","Q2112420":"event","Q2115671":"event","Q2119959":"event","Q2120006":"event","Q2122849":"event","Q2123962":"event","Q2124001":"event","Q2130185":"event","Q2131190":"event","Q2135525":"event","Q2137952":"event","Q2140388":"event","Q2142475":"event","Q2142753":"event","Q2168242":"event","Q2169090":"event","Q2172605":"event","Q2178781":"event","Q2181022":"event","Q2181047":"event","Q2181282":"event","Q2182092":"event","Q2186047":"event","Q2190893":"event","Q2194865":"event","Q2198516":"event","Q2199901":"event","Q2200544":"event","Q2201764":"event","Q2205070":"event","Q2206836":"event","Q2210155":"event","Q2212459":"event","Q2215930":"event","Q2221160":"event","Q2222777":"event","Q2227320":"event","Q2242233":"event","Q2246444":"event","Q2248087":"event","Q2249813":"event","Q2255046":"event","Q2260821":"event","Q2284977":"event","Q2286741":"event","Q2289880":"event","Q2290171":"event","Q2299752":"event","Q2300124":"event","Q2300678":"event","Q2303185":"event","Q2305720":"event","Q2309492":"event","Q2313361":"event","Q2316735":"event","Q2324540":"event","Q2325096":"event","Q2328480":"event","Q2331264":"event","Q2343166":"event","Q2344291":"event","Q2350510":"event","Q2351234":"event","Q2352486":"event","Q2357329":"event","Q2357402":"event","Q2365019":"event","Q2371402":"event","Q2388111":"event","Q2390662":"event","Q2393319":"event","Q2398517":"event","Q2401441":"event","Q2407049":"event","Q2416647":"event","Q2423140":"event","Q2427555":"event","Q2433323":"event","Q2436904":"event","Q2437424":"event","Q2438746":"event","Q2440678":"event","Q2449809":"event","Q2455961":"event","Q2457278":"event","Q2462825":"event","Q2466473":"event","Q2476668":"event","Q2479655":"event","Q2479920":"event","Q2482256":"event","Q2487426":"event","Q2498569":"event","Q2505370":"event","Q2522564":"event","Q2525491":"event","Q2527308":"event","Q2530190":"event","Q2538556":"event","Q2540644":"event","Q2546224":"event","Q2553046":"event","Q2555681":"event","Q2561185":"event","Q2562288":"event","Q2565086":"event","Q2576021":"event","Q2584032":"event","Q2585764":"event","Q2600561":"event","Q2602686":"event","Q2609854":"event","Q2611360":"event","Q2612919":"event","Q2612950":"event","Q2615811":"event","Q2619808":"event","Q2620358":"event","Q2622503":"event","Q2630007":"event","Q2631439":"event","Q2632902":"event","Q2636144":"event","Q2644268":"event","Q2648537":"event","Q2655932":"event","Q2659592":"event","Q2679940":"event","Q2681563":"event","Q2685099":"event","Q2694152":"event","Q2695089":"event","Q2702069":"event","Q2703109":"event","Q2707767":"event","Q2709893":"event","Q2714839":"event","Q2728843":"event","Q2731576":"event","Q2735106":"event","Q2738642":"event","Q2743855":"event","Q2745221":"event","Q2753109":"event","Q2755811":"event","Q2780989":"event","Q2785398":"event","Q2792933":"event","Q2794722":"event","Q2802839":"event","Q2804141":"event","Q2818505":"event","Q2819182":"event","Q2835344":"event","Q2845871":"event","Q2856073":"event","Q2869206":"event","Q2873362":"event","Q2876554":"event","Q2881149":"event","Q2904893":"event","Q2914379":"event","Q2917022":"event","Q2924805":"event","Q2927761":"event","Q2958920":"event","Q2973190":"event","Q2991228":"event","Q3041780":"event","Q3044450":"event","Q3074962":"event","Q3101510":"event","Q3109268":"event","Q3111159":"event","Q3114036":"event","Q3153146":"event","Q3189573":"event","Q3196293":"event","Q3221656":"event","Q5884426":"event","Q5904038":"event","Q5973693":"event","Q6151158":"event","Q6153079":"event","Q10969927":"event","Q13102849":"event","Q13105293":"event","Q13980014":"event","Q14330267":"event","Q14615142":"event","Q15249020":"event","Q15283475":"event","Q15875463":"event","Q15875465":"event","Q15924510":"event","Q15943603":"event","Q15991804":"event","Q15991824":"event","Q16069179":"event","Q16069939":"event","Q16323594":"event","Q16556419":"event","Q16597783":"event","Q16735782":"event","Q16764906":"event","Q16764907":"event","Q16908848":"event","Q17189340":"event","Q17310311":"event","Q17354578":"event","Q17450505":"event","Q17636393":"event","Q18089070":"event","Q18610671":"event","Q19284408":"event","Q19367404":"event","Q19544139":"event","Q19720635":"event","Q20107730":"event","Q20108404":"event","Q20655553":"event","Q20724219":"event","Q20807647":"event","Q20970351":"event","Q20979836":"event","Q21008886":"event","Q21008971":"event","Q21019209":"event","Q21079593":"event","Q21170395":"event","Q21418860":"event","Q21422918":"event","Q21490948":"event","Q21611565":"event","Q21853243":"event","Q21855693":"event","Q22231106":"event","Q22328259":"event","Q22328526":"event","Q22915662":"event","Q22942578":"event","Q23045989":"event","Q24302328":"event","Q24554298":"event","Q25432442":"event","Q25687472":"event","Q28711201":"event","Q28934734":"event","Q29107135":"event","Q29126254":"event","Q30337178":"event","Q30745812":"event","Q46879592":"event","Q47008417":"event","Q48964712":"event","Q51541990":"event","Q52456671":"event","Q55087119":"event","Q55590461":"event","Q56304489":"event","Q56309242":"event","Q56863109":"event","Q57966675":"event","Q57967831":"event","Q59666948":"event","Q59667366":"event","Q60221855":"event","Q61013868":"event","Q63385929":"event","Q63385932":"event","Q63386188":"event","Q63386201":"event","Q63386208":"event","Q63817770":"event","Q63976572":"event","Q64040392":"event","Q64577915":"event","Q64577964":"event","Q64995962":"event","Q3230688":"event","Q3240544":"event","Q3353534":"event","Q3354037":"event","Q3467251":"event","Q3906932":"event","Q4322445":"event","Q4381821":"event","Q4406091":"event","Q4447597":"event","Q4487337":"event","Q4520636":"event","Q4552973":"event","Q4566050":"event","Q4574522":"event","Q4590508":"event","Q4627135":"event","Q4639733":"event","Q4661444":"event","Q4663331":"event","Q4705863":"event","Q4712635":"event","Q4733642":"event","Q4766207":"event","Q4788203":"event","Q4791362":"event","Q4832133":"event","Q4842339":"event","Q4849310":"event","Q4855191":"event","Q4869478":"event","Q4877580":"event","Q4888756":"event","Q4923567":"event","Q4925730":"event","Q4929676":"event","Q5011744":"event","Q5021913":"event","Q5029247":"event","Q5033256":"event","Q5034420":"event","Q5041314":"event","Q5048940":"event","Q5059058":"event","Q5059323":"event","Q5138198":"event","Q5147881":"event","Q5147940":"event","Q5169460":"event","Q5169506":"event","Q5177979":"event","Q5205030":"event","Q5244757":"event","Q5270770":"event","Q5302626":"event","Q5311028":"event","Q5351785":"event","Q5374146":"event","Q5450696":"event","Q5450794":"event","Q5472298":"event","Q5488229":"event","Q5507479":"event","Q5507477":"event","Q5518439":"event","Q5579444":"event","Q5580603":"event","Q5603743":"event","Q5744540":"event","Q5745844":"event","Q6021402":"event","Q6025889":"event","Q6060250":"event","Q6071073":"event","Q6392235":"event","Q6423673":"event","Q6431929":"event","Q6462797":"event","Q6466808":"event","Q6517928":"event","Q6672320":"event","Q6861781":"event","Q6879162":"event","Q6886969":"event","Q6938887":"event","Q6947814":"event","Q6958648":"event","Q7058202":"event","Q7080842":"event","Q7089988":"event","Q7096377":"event","Q7119146":"event","Q7130105":"event","Q7191667":"event","Q7231613":"event","Q7234085":"event","Q7360672":"event","Q7375800":"event","Q7423474":"event","Q7447483":"event","Q868979":"regulation","Q1410822":"regulation","Q104858579":"event","Q3150363":"regulation","Q5753009":"regulation","Q111170230":"event","Q114352680":"event","Q1029715":"book","Q873848":"event","Q1760692":"event","Q1936265":"event","Q5282172":"event","Q7566619":"event","Q7569614":"event","Q7591500":"event","Q7592447":"event","Q7639049":"event","Q7641191":"event","Q7641702":"event","Q7651059":"event","Q7709218":"event","Q7753394":"event","Q7758284":"event","Q7799091":"event","Q7827739":"event","Q7849644":"event","Q7850310":"event","Q7855286":"event","Q7927246":"event","Q7941311":"event","Q7945181":"event","Q7986142":"event","Q8035902":"event","Q8072002":"event","Q9332740":"event","Q11261910":"event","Q11316743":"event","Q11346118":"event","Q11507896":"event","Q12017912":"event","Q13461404":"event","Q13476069":"event","Q13546576":"event","Q13568091":"event","Q13583588":"event","Q13654029":"event","Q14852379":"event","Q15673027":"event","Q15879918":"event","Q15882707":"event","Q15961799":"event","Q15972983":"event","Q15974367":"event","Q15974450":"event","Q15975482":"event","Q15979002":"event","Q16743938":"event","Q16787438":"event","Q16830210":"event","Q17150906":"event","Q17162079":"event","Q17320443":"event","Q17988066":"event","Q18088520":"event","Q18358716":"event","Q18509037":"event","Q18509064":"event","Q18509187":"event","Q18523836":"event","Q18600393":"event","Q18600402":"event","Q18756126":"event","Q18756127":"event","Q18756124":"event","Q18756125":"event","Q18756130":"event","Q18756131":"event","Q18756129":"event","Q18756134":"event","Q18756133":"event","Q18756139":"event","Q18756136":"event","Q18756137":"event","Q18756140":"event","Q18756141":"event","Q18815100":"event","Q20018613":"event","Q20019264":"event","Q20114079":"event","Q20154814":"event","Q21013825":"event","Q22097767":"event","Q24898042":"event","Q28239334":"event","Q30644804":"event","Q48805056":"event","Q60526686":"event","Q60988533":"event","Q67476316":"event","Q122925646":"regulation","Q110833816":"book","Q115047038":"book","Q112727379":"event","Q112727389":"event","Q114328691":"event","Q119495380":"event","Q119518997":"event","Q20127660":"regulation","Q862490":"software","Q450824":"book","Q7230210":"software","Q3563376":"book","Q11612243":"software","Q526730":"event","Q701521":"event","Q1286701":"event","Q2543529":"event","Q3032656":"event","Q3586716":"event","Q3586734":"event","Q3586740":"event","Q3586757":"event","Q3586791":"event","Q3587402":"event","Q3587401":"event","Q3587405":"event","Q11620704":"book","Q5829908":"event","Q18289362":"event","Q18769744":"event","Q19951941":"event","Q21426449":"event","Q21426489":"event","Q24885859":"event","Q24886113":"event","Q28221929":"event","Q28221987":"event","Q39128246":"legislation","Q39133251":"legislation","Q39147013":"legislation","Q39149404":"legislation","Q39189862":"legislation","Q39192875":"legislation","Q41726684":"legislation","Q41729137":"legislation","Q41737845":"legislation","Q41738325":"legislation","Q41800354":"legislation","Q41822026":"legislation","Q41823019":"legislation","Q41823711":"legislation","Q41824945":"legislation","Q41939630":"legislation","Q41942375":"legislation","Q41947575":"legislation","Q41947954":"legislation","Q42023023":"legislation","Q42026510":"legislation","Q61008929":"software","Q61008981":"software","Q58002801":"book","Q58002806":"book","Q58002814":"book","Q58002818":"book","Q58002828":"book","Q58002835":"book","Q52392693":"event","Q55638971":"event","Q60854016":"event","Q62011419":"event","Q62011463":"event","Q63243997":"event","Q72226942":"book","Q66771315":"event","Q85728641":"event","Q85728789":"event","Q85728915":"event","Q85729059":"event","Q85729408":"event","Q85729526":"event","Q103821052":"software","Q101949943":"book","Q101950258":"book","Q97188778":"event","Q107335338":"legislation","Q107466402":"event","Q115101001":"book","Q6025269":"regulation","Q124289691":"software","Q118145827":"event","Q120907443":"event","Q175173":"software","Q185029":"software","Q380319":"software","Q543151":"software","Q626500":"software","Q655908":"software","Q864718":"software","Q1044478":"software","Q1961588":"software","Q2793151":"software","Q3965952":"software","Q4034678":"software","Q5196736":"software","Q2186782":"book","Q7289274":"software","Q7380031":"software","Q4066165":"book","Q9336300":"software","Q4749914":"book","Q10111060":"software","Q757581":"review","Q10855346":"software","Q11386286":"software","Q7144691":"book","Q7210039":"book","Q7423765":"book","Q1360806":"event","Q2062028":"event","Q2350176":"event","Q2629590":"event","Q2869155":"event","Q3657790":"event","Q4127443":"event","Q4127446":"event","Q4127447":"event","Q4127450":"event","Q4127451":"event","Q4127454":"event","Q4127452":"event","Q4127459":"event","Q4127461":"event","Q4819313":"event","Q6158963":"event","Q7100858":"event","Q7100859":"event","Q7100861":"event","Q7361870":"event","Q20923146":"software","Q10658425":"event","Q16965930":"review","Q22981826":"book","Q22981827":"book","Q22981824":"book","Q22981825":"book","Q30607131":"software","Q19819515":"event","Q19833190":"event","Q19833191":"event","Q19833189":"event","Q19833192":"event","Q19833193":"event","Q31836350":"event","Q6540326":"webpage","Q56324412":"software","Q17437798":"webpage","Q17437796":"webpage","Q17506997":"webpage","Q17580674":"webpage","Q51759403":"webpage","Q85729631":"event","Q104830011":"software","Q105702790":"software","Q105702814":"software","Q108882014":"software","Q108934731":"software","Q109324772":"software","Q104860813":"book","Q98952023":"event","Q111519486":"software","Q112727373":"event","Q112727382":"event","Q112727381":"event","Q112727386":"event","Q112727384":"event","Q112727385":"event","Q112727391":"event","Q112727388":"event","Q112727392":"event","Q112727393":"event","Q112727399":"event","Q112727396":"event","Q112727403":"event","Q112727406":"event","Q112727404":"event","Q112727405":"event","Q112727410":"event","Q112727415":"event","Q112727412":"event","Q112727418":"event","Q112727422":"event","Q112727420":"event","Q112727426":"event","Q112727427":"event","Q112727425":"event","Q112727430":"event","Q112727431":"event","Q112727435":"event","Q112727432":"event","Q112727436":"event","Q228323":"software","Q5282311":"software","Q7606662":"software","Q7893160":"event","Q26878762":"event","Q27962800":"event","Q28206753":"event","Q28221902":"event","Q28221942":"event","Q28221947":"event","Q28221954":"event","Q28221964":"event","Q28221971":"event","Q28221976":"event","Q28221992":"event","Q28222001":"event","Q28222012":"event","Q28222023":"event","Q28222036":"event","Q28222041":"event","Q28222048":"event","Q28222055":"event","Q28222099":"event","Q28222105":"event","Q28222117":"event","Q28222130":"event","Q28222148":"event","Q28222155":"event","Q28222160":"event","Q28222171":"event","Q28222179":"event","Q28222187":"event","Q28222195":"event","Q41955949":"legislation","Q41956745":"legislation","Q41957326":"legislation","Q41960526":"legislation","Q41961083":"legislation","Q41961467":"legislation","Q41961849":"legislation","Q41962367":"legislation","Q42005760":"legislation","Q42006295":"legislation","Q42006735":"legislation","Q42007143":"legislation","Q42007552":"legislation","Q42007975":"legislation","Q42008880":"legislation","Q42009480":"legislation","Q42009959":"legislation","Q42010387":"legislation","Q42013574":"legislation","Q42013841":"legislation","Q42014704":"legislation","Q42016791":"legislation","Q42017208":"legislation","Q42019786":"legislation","Q42020341":"legislation","Q42021096":"legislation","Q42027677":"legislation","Q42028163":"legislation","Q42030439":"legislation","Q42030792":"legislation","Q42045059":"legislation","Q42051294":"legislation","Q42051946":"legislation","Q42052426":"legislation","Q42052974":"legislation","Q42053250":"legislation","Q42053628":"legislation","Q115533452":"software","Q116225122":"dataset","Q119517843":"software","Q108208580":"event","Q109361695":"event","Q110273355":"legislation","Q122852768":"software","Q124102029":"software","Q19220511":"dataset","Q467011":"event","Q557083":"event","Q701398":"event","Q863300":"event","Q912988":"event","Q962292":"event","Q1007336":"event","Q1047345":"event","Q1053079":"event","Q1539031":"legislation","Q1362402":"event","Q1598329":"event","Q1682018":"event","Q2113053":"event","Q2118149":"event","Q2816453":"legislation","Q2376496":"event","Q2529196":"event","Q2869223":"event","Q2922943":"event","Q3420086":"event","Q3590900":"event","Q3879678":"event","Q3951961":"event","Q3998592":"event","Q4165237":"event","Q4203970":"event","Q4786142":"event","Q16381999":"software","Q4951242":"event","Q5198623":"event","Q5284370":"event","Q5365066":"event","Q5366509":"event","Q5580623":"event","Q5954361":"event","Q6501106":"event","Q6684362":"event","Q7233267":"legislation","Q6889062":"event","Q7279854":"event","Q7673421":"event","Q8249787":"event","Q10289831":"event","Q10843458":"event","Q11280762":"event","Q11496170":"event","Q11496171":"event","Q16874408":"event","Q17006368":"event","Q18217077":"event","Q18387135":"event","Q19577195":"event","Q20020359":"event","Q20642213":"event","Q20852929":"event","Q20921987":"event","Q23005954":"event","Q25404888":"event","Q25430612":"event","Q25430613":"event","Q27961189":"event","Q30225036":"event","Q30914354":"event","Q59156162":"dataset","Q47008378":"event","Q63183159":"software","Q54850434":"event","Q61605094":"event","Q78705928":"software","Q115799227":"song","Q104735362":"software","Q98560886":"event","Q100165600":"legislation","Q104412521":"event","Q104412526":"event","Q104412524":"event","Q107348207":"event","Q7973850":"regulation","Q123909953":"event","Q10308060":"software","Q102113":"event","Q127678":"event","Q210581":"event","Q299345":"event","Q299363":"event","Q300008":"event","Q300018":"event","Q300017":"event","Q300029":"event","Q671970":"event","Q681194":"event","Q918368":"event","Q1193885":"event","Q1334786":"event","Q1563479":"event","Q1916089":"event","Q1988040":"event","Q1991741":"event","Q2160076":"event","Q2478155":"event","Q2537906":"event","Q2701085":"event","Q2727525":"event","Q3346250":"event","Q3393631":"event","Q3601629":"event","Q3602248":"event","Q3775082":"event","Q3789061":"event","Q4017355":"event","Q4017356":"event","Q4017357":"event","Q4398134":"event","Q4535172":"event","Q4815584":"event","Q4824513":"event","Q5070083":"event","Q5974787":"event","Q6153062":"event","Q6165939":"event","Q6165941":"event","Q6269551":"event","Q6303950":"event","Q6304166":"event","Q6379259":"event","Q6978903":"event","Q7508283":"legislation","Q7934510":"event","Q10501689":"legislation","Q10481722":"event","Q10712099":"event","Q11157818":"event","Q11570733":"event","Q14550951":"legislation","Q14928252":"event","Q15850356":"event","Q15885061":"event","Q18018758":"event","Q19787437":"legislation","Q20638346":"event","Q20638347":"event","Q20638344":"event","Q20638345":"event","Q22340719":"event","Q23938120":"event","Q24900794":"event","Q24993224":"event","Q25350067":"event","Q25999230":"event","Q51676421":"software","Q41524215":"event","Q61715376":"software","Q50301185":"event","Q50549235":"event","Q50574730":"event","Q50657938":"event","Q50658266":"event","Q50658729":"event","Q50658948":"event","Q50699631":"event","Q50699774":"event","Q41000":"event","Q118444867":"software","Q109367357":"event","Q122311452":"software","Q11393858":"regulation","Q11410777":"regulation","Q11452102":"regulation","Q123267037":"book","Q123298117":"event","Q191769":"software","Q2941225":"software","Q1143290":"book","Q1516890":"book","Q5987970":"book","Q170096":"event","Q173271":"event","Q488552":"event","Q491500":"event","Q583794":"event","Q865208":"event","Q866617":"event","Q1049397":"event","Q1049733":"event","Q1066172":"event","Q1073949":"event","Q1145922":"event","Q2338574":"event","Q107285679":"webpage","Q2953976":"event","Q108094999":"webpage","Q4102678":"event","Q4284355":"event","Q11455585":"book","Q11611579":"book","Q11622338":"book","Q5962414":"event","Q5963034":"event","Q6364409":"event","Q6862502":"event","Q10869081":"event","Q11355475":"event","Q11397993":"event","Q11490312":"event","Q11608480":"event","Q15285702":"event","Q15622423":"event","Q16688377":"event","Q20102321":"event","Q29974308":"book","Q30038136":"book","Q27940843":"event","Q30068158":"event","Q59536813":"software","Q60617948":"software","Q98670663":"webpage","Q7849":"event","Q7854":"event","Q7870":"event","Q7876":"event","Q7885":"event","Q7954":"event","Q7961":"event","Q7965":"event","Q7980":"event","Q7994":"event","Q7993":"event","Q7998":"event","Q7997":"event","Q8000":"event","Q8019":"event","Q8025":"event","Q8032":"event","Q8039":"event","Q8036":"event","Q8069":"event","Q8082":"event","Q8100":"event","Q8109":"event","Q9102":"event","Q9109":"event","Q9113":"event","Q9117":"event","Q9122":"event","Q9137":"event","Q9208":"event","Q9209":"event","Q9214":"event","Q9223":"event","Q9220":"event","Q9227":"event","Q9225":"event","Q9229":"event","Q9233":"event","Q113940304":"software","Q113940337":"software","Q113940368":"software","Q104216769":"event","Q106545547":"event","Q106856346":"event","Q115159116":"book","Q115166030":"book","Q115166031":"book","Q115166029":"book","Q115166034":"book","Q115166035":"book","Q115166033":"book","Q115166036":"book","Q115166037":"book","Q108750321":"event","Q111443584":"event","Q114839608":"event","Q12085765":"song","Q12115216":"song","Q12141189":"song","Q12157230":"song","Q25392836":"webpage","Q26987258":"webpage","Q5500304":"software","Q18407189":"song","Q581634":"event","Q843417":"event","Q1383889":"event","Q1478895":"event","Q1848041":"event","Q2044642":"event","Q2757473":"event","Q2795779":"event","Q2815206":"event","Q2815625":"event","Q2819585":"event","Q2856451":"event","Q2856460":"event","Q2856464":"event","Q3164453":"event","Q3209165":"event","Q3225305":"event","Q3225501":"event","Q3547518":"event","Q4667633":"event","Q4824511":"event","Q28705723":"song","Q4970222":"event","Q4970532":"event","Q5044604":"event","Q5055355":"event","Q5099912":"event","Q5132095":"event","Q5412760":"event","Q5597856":"event","Q5946528":"event","Q6722708":"event","Q7000382":"event","Q7523152":"event","Q8035883":"event","Q11992135":"event","Q14173028":"event","Q15101744":"event","Q15532381":"event","Q15805533":"event","Q15812758":"event","Q15818916":"event","Q16955224":"event","Q54492335":"webpage","Q58336227":"event","Q120831885":"webpage","Q96482998":"event","Q121741821":"dataset","Q98637324":"event","Q100953125":"event","Q101206065":"event","Q104236503":"event","Q105315129":"event","Q105400065":"event","Q105845411":"event","Q106351574":"event","Q106504785":"event","Q108660836":"event","Q15848211":"event","Q16014225":"event","Q17017794":"event","Q17510435":"event","Q18026287":"event","Q19577037":"event","Q20648821":"event","Q20712049":"event","Q21636163":"legislation","Q25207855":"event","Q25379161":"event","Q25384151":"event","Q25388352":"event","Q26268692":"event","Q27511062":"event","Q27680204":"event","Q28008052":"event","Q28152170":"event","Q47464206":"event","Q47482732":"event","Q47482742":"event","Q47484141":"event","Q47496058":"event","Q48267135":"event","Q49544696":"event","Q50326356":"event","Q51794851":"event","Q51897918":"event","Q52408848":"event","Q55394268":"event","Q55641457":"event","Q56112215":"event","Q56294610":"event","Q57418825":"event","Q60589845":"event","Q61875318":"event","Q61875331":"event","Q64780520":"event","Q65706141":"event","Q77518996":"event","Q79461534":"event","Q79461607":"event","Q81805133":"event","Q82983020":"event","Q82983459":"event","Q83239893":"event","Q86665410":"event","Q87263048":"event","Q90048977":"event","Q90049197":"event","Q96048367":"event","Q97277766":"event","Q98195555":"event","Q99408840":"event","Q100157075":"event","Q2305591":"regulation","Q2527141":"regulation","Q2747221":"webpage","Q3139487":"regulation","Q3142818":"regulation","Q3142819":"regulation","Q108254495":"event","Q111209515":"event","Q111746312":"event","Q112727375":"event","Q10406096":"webpage","Q116055395":"event","Q124727661":"event","Q2406355":"software","Q3509118":"software","Q7573033":"software","Q7663614":"software","Q9350446":"software","Q9350447":"software","Q9350444":"software","Q11322721":"software","Q82899":"event","Q677406":"event","Q732876":"event","Q878505":"event","Q906559":"event","Q1208163":"event","Q1402070":"event","Q1550874":"event","Q1673340":"event","Q1812897":"event","Q1919769":"event","Q1990939":"event","Q2018244":"event","Q2178208":"event","Q2259724":"event","Q2331139":"event","Q2387647":"event","Q2450933":"event","Q2482360":"event","Q2503599":"event","Q2604964":"event","Q2749033":"event","Q2804311":"event","Q3240521":"event","Q3473924":"event","Q4120539":"event","Q4510180":"event","Q4689006":"event","Q4948446":"event","Q5523106":"event","Q11834046":"event","Q12016787":"event","Q12776529":"event","Q13427130":"event","Q13533330":"event","Q14509387":"event","Q16944581":"event","Q17332629":"event","Q125101257":"webpage","Q56237708":"webpage","Q23020591":"event","Q27370064":"event","Q28221910":"event","Q28922256":"event","Q30590691":"event","Q54087034":"event","Q23894233":"webpage","Q24046192":"webpage","Q24514938":"webpage","Q95556874":"regulation","Q30330522":"webpage","Q2914":"event","Q38084761":"webpage","Q58118449":"webpage","Q109318313":"software","Q109923199":"software","Q67131190":"webpage","Q72610003":"webpage","Q109776916":"event","Q112727409":"event","Q112727419":"event","Q112727429":"event","Q114880270":"regulation","Q115698838":"event","Q981514":"standard","Q25636240":"regulation","Q96707234":"webpage","Q97303167":"webpage","Q98545791":"webpage","Q102333788":"webpage","Q11630302":"software","Q211872":"event","Q382934":"event","Q587836":"event","Q605945":"event","Q729106":"event","Q913735":"event","Q928173":"event","Q991418":"event","Q1032167":"event","Q1057427":"event","Q1144343":"event","Q1282307":"event","Q1337776":"event","Q1374739":"event","Q1558662":"event","Q1729655":"event","Q2014189":"event","Q2423871":"event","Q2538512":"event","Q2539625":"event","Q2999040":"event","Q2999131":"event","Q2999182":"event","Q3504309":"event","Q4850649":"event","Q4872932":"event","Q4883139":"event","Q4956217":"event","Q4962676":"event","Q11260623":"event","Q28206714":"standard","Q121306412":"webpage","Q18400153":"event","Q19544378":"event","Q19544384":"event","Q19544385":"event","Q19544390":"event","Q19544393":"event","Q19544407":"event","Q19544424":"event","Q19544434":"event","Q19544446":"event","Q19544458":"event","Q19544457":"event","Q19544460":"event","Q20723955":"event","Q20919213":"event","Q28222073":"event","Q28222111":"event","Q28222165":"event","Q29561587":"event","Q21281405":"webpage","Q21469493":"webpage","Q21479588":"webpage","Q56326879":"event","Q23841178":"webpage","Q24571886":"webpage","Q28368760":"webpage","Q28373483":"webpage","Q29057009":"webpage","Q64736464":"event","Q32636":"event","Q47382471":"webpage","Q47524402":"webpage","Q58573615":"webpage","Q63090714":"webpage","Q110086297":"book","Q110425279":"book","Q110643319":"book","Q76735989":"webpage","Q112581015":"event","Q115859686":"event","Q120733345":"event","Q120733465":"event","Q121625367":"event","Q18889371":"dataset","Q18889411":"dataset","Q1536279":"book","Q24589734":"dataset","Q198889":"event","Q281772":"event","Q309168":"event","Q537249":"event","Q556569":"event","Q595865":"event","Q613439":"event","Q615072":"event","Q616438":"event","Q636051":"event","Q656532":"event","Q658888":"event","Q701555":"event","Q725531":"event","Q776859":"event","Q782015":"event","Q819955":"event","Q849814":"event","Q849851":"event","Q898966":"event","Q899197":"event","Q925509":"event","Q938458":"event","Q966789":"event","Q981367":"event","Q1083752":"event","Q1088759":"event","Q1166178":"event","Q1294855":"event","Q1466163":"event","Q1749242":"event","Q1811632":"event","Q2095472":"event","Q2106857":"event","Q2298236":"event","Q2333258":"event","Q2429941":"event","Q2526994":"event","Q2528763":"event","Q2609272":"event","Q2704335":"event","Q2717396":"event","Q2740399":"event","Q3003020":"event","Q3118005":"event","Q3418170":"event","Q5019665":"event","Q5030367":"event","Q5068904":"event","Q5177985":"event","Q5198880":"event","Q5292847":"event","Q5394447":"event","Q6052534":"event","Q6106793":"event","Q6179017":"event","Q6314196":"event","Q6398459":"event","Q6721688":"event","Q6765772":"event","Q7269976":"event","Q7313605":"event","Q7330899":"event","Q7381099":"event","Q7697920":"event","Q7929459":"event","Q7987655":"event","Q8017886":"event","Q8036061":"event","Q16954248":"book","Q11899957":"event","Q15388803":"event","Q17103384":"event","Q18661357":"event","Q27791005":"event","Q37341555":"event","Q53709910":"event","Q25826840":"webpage","Q64857237":"event","Q108478902":"dataset","Q56876503":"webpage","Q635115":"speech","Q116278106":"software","Q1553078":"speech","Q108646642":"event","Q109567034":"event","Q111384974":"event","Q112727380":"event","Q115735180":"event","Q118187141":"event","Q118607041":"event","Q123057370":"event","Q7099284":"software","Q629222":"event","Q665182":"event","Q676429":"event","Q720609":"event","Q775342":"event","Q789237":"event","Q887604":"event","Q903407":"event","Q1135687":"event","Q1205825":"event","Q1258503":"event","Q1266833":"event","Q1273394":"event","Q1321934":"event","Q1852267":"event","Q3418173":"event","Q3418197":"event","Q3418211":"event","Q3418216":"event","Q3862752":"event","Q3884610":"event","Q3924399":"event","Q4288486":"event","Q4855141":"event","Q6098556":"event","Q6098563":"event","Q6098635":"event","Q6098729":"event","Q6888051":"event","Q7287062":"event","Q7649370":"event","Q9066172":"event","Q9066173":"event","Q11506392":"event","Q11589832":"event","Q11670304":"event","Q11701966":"event","Q12048793":"event","Q15217470":"event","Q16040090":"event","Q16040088":"event","Q16970473":"event","Q17092633":"event","Q17628122":"event","Q124373173":"webpage","Q19946577":"event","Q20545759":"event","Q28221935":"event","Q30740039":"event","Q47194527":"event","Q50601640":"event","Q51955127":"event","Q19842659":"webpage","Q20010800":"webpage","Q56610307":"event","Q60643384":"event","Q60862257":"event","Q62032617":"event","Q64044545":"event","Q65447256":"event","Q10982":"event","Q102260507":"broadcast","Q85101118":"event","Q85879019":"event","Q86596395":"event","Q92566161":"event","Q92586589":"event","Q93622529":"event","Q96622033":"event","Q96795694":"event","Q98822459":"event","Q99207010":"event","Q99541036":"event","Q1300443":"event","Q1360284":"event","Q1404868":"event","Q1453709":"event","Q1520402":"event","Q1543109":"event","Q1667081":"event","Q1841122":"event","Q1934363":"event","Q1973903":"event","Q1979472":"event","Q1998921":"event","Q2080525":"event","Q2124013":"event","Q2135911":"event","Q2151638":"event","Q2152583":"event","Q2166014":"event","Q2175997":"event","Q2195028":"event","Q2220085":"event","Q2252981":"event","Q2266608":"event","Q2273291":"event","Q2273820":"event","Q2407435":"event","Q2458639":"event","Q2576830":"event","Q2596276":"event","Q2786776":"event","Q2945108":"event","Q3083983":"event","Q3144114":"event","Q3156042":"event","Q3280983":"event","Q3454956":"event","Q3891819":"event","Q3931682":"event","Q3931680":"event","Q4429654":"event","Q4442312":"event","Q4460750":"event","Q4652332":"event","Q4666912":"event","Q4733069":"event","Q4744956":"event","Q4816529":"event","Q4824659":"event","Q4948069":"event","Q4950413":"event","Q4968809":"event","Q4970103":"event","Q4970978":"event","Q4997351":"event","Q5013829":"event","Q5058544":"event","Q5092592":"event","Q5108821":"event","Q5153848":"event","Q5288350":"event","Q5316546":"event","Q5330484":"event","Q5347947":"event","Q5349156":"event","Q5378372":"event","Q5413395":"event","Q5580372":"event","Q5599880":"event","Q5645742":"event","Q5646189":"event","Q5676669":"event","Q5689403":"event","Q5689411":"event","Q5689414":"event","Q5689416":"event","Q5689423":"event","Q5689421":"event","Q5689461":"event","Q5714677":"event","Q5785219":"event","Q5888446":"event","Q6096875":"event","Q6097272":"event","Q6103676":"event","Q6103686":"event","Q6104128":"event","Q6412323":"event","Q6413593":"event","Q6413741":"event","Q6523275":"event","Q6721011":"event","Q6735442":"event","Q6755023":"event","Q6771991":"event","Q6771993":"event","Q6796435":"event","Q6825228":"event","Q6896105":"event","Q6953001":"event","Q6971626":"event","Q7015637":"event","Q7231121":"event","Q7235497":"event","Q7300466":"event","Q7300576":"event","Q7300583":"event","Q7338738":"event","Q7372071":"event","Q7372072":"event","Q7373894":"event","Q7374286":"event","Q7374872":"event","Q7374920":"event","Q7423425":"event","Q7432702":"event","Q7439417":"event","Q7535122":"event","Q7561978":"event","Q7597039":"event","Q7636342":"event","Q7638972":"event","Q7709883":"event","Q7737900":"event","Q7753214":"event","Q7761589":"event","Q7774229":"event","Q7923377":"event","Q7963103":"event","Q7963824":"event","Q7969370":"event","Q8030876":"event","Q8030880":"event","Q8036047":"event","Q8036159":"event","Q8085786":"event","Q9067494":"event","Q9678177":"event","Q10378621":"event","Q10667928":"event","Q10882833":"event","Q11389425":"event","Q11389715":"event","Q11389741":"event","Q11390255":"event","Q11421040":"event","Q11495138":"event","Q11517446":"event","Q11582264":"event","Q11883147":"event","Q11888216":"event","Q12046934":"event","Q12267013":"event","Q12882986":"event","Q13578912":"event","Q13816118":"event","Q13906726":"event","Q14942291":"event","Q14979598":"event","Q14980231":"event","Q15712423":"event","Q15841948":"event","Q15999858":"event","Q16537585":"event","Q16932625":"event","Q16932629":"event","Q16971486":"event","Q16983611":"event","Q16983615":"event","Q16983619":"event","Q17005525":"event","Q17017931":"event","Q17995418":"event","Q18039738":"event","Q18125104":"event","Q18470644":"event","Q18662166":"event","Q19577361":"event","Q19812499":"event","Q20016762":"event","Q20477097":"event","Q20642275":"event","Q21282148":"event","Q21282569":"event","Q21282584":"event","Q21282718":"event","Q21282717":"event","Q23463562":"event","Q24666796":"event","Q26695700":"event","Q30016890":"event","Q43446213":"event","Q43456981":"event","Q47000346":"event","Q47000422":"event","Q47000599":"event","Q55439428":"event","Q63897228":"event","Q63977382":"event","Q63977402":"event","Q64495379":"event","Q109017950":"event","Q116819453":"event","Q96286657":"webpage","Q97498045":"webpage","Q99264677":"webpage","Q129010":"event","Q129180":"event","Q130903":"event","Q153652":"event","Q287950":"event","Q499192":"event","Q499337":"event","Q505804":"event","Q506447":"event","Q510628":"event","Q510854":"event","Q614218":"event","Q674997":"event","Q697738":"event","Q914019":"event","Q956161":"event","Q971252":"event","Q971932":"event","Q1103825":"event","Q1257167":"event","Q1359051":"event","Q1359104":"event","Q1415208":"event","Q1811281":"event","Q1869039":"event","Q2048887":"event","Q2059882":"event","Q2062894":"event","Q2305567":"event","Q2559829":"event","Q3114091":"event","Q3114089":"event","Q3114094":"event","Q3114095":"event","Q3114093":"event","Q3114096":"event","Q3114100":"event","Q3462780":"event","Q3533311":"event","Q3533473":"event","Q3717110":"event","Q3717119":"event","Q3717116":"event","Q3717120":"event","Q3717121":"event","Q5358036":"event","Q27855821":"broadcast","Q27876130":"broadcast","Q14850408":"event","Q14901154":"event","Q15820817":"event","Q15871472":"event","Q16617106":"event","Q16910299":"event","Q18011975":"event","Q18039567":"event","Q18215426":"event","Q18433685":"event","Q18708418":"event","Q19056763":"event","Q19606232":"event","Q19606882":"event","Q19842424":"event","Q20080457":"event","Q20176865":"event","Q20651307":"event","Q20872499":"event","Q20872500":"event","Q20932051":"event","Q20984913":"event","Q20984918":"event","Q21011978":"event","Q21041739":"event","Q21070546":"event","Q21071155":"event","Q21072326":"event","Q21072408":"event","Q21079232":"event","Q21083327":"event","Q21087792":"event","Q21088547":"event","Q21088548":"event","Q21559145":"event","Q21683349":"event","Q21858066":"event","Q21860036":"event","Q22976711":"event","Q24074230":"event","Q26224967":"event","Q26922391":"event","Q26922709":"event","Q16905922":"webpage","Q19648608":"webpage","Q21278897":"webpage","Q67206426":"event","Q83261":"event","Q128961":"event","Q160696":"event","Q181266":"event","Q261842":"event","Q298550":"event","Q369183":"event","Q376919":"event","Q487654":"event","Q487973":"event","Q488036":"event","Q505799":"event","Q505810":"event","Q510578":"event","Q513691":"event","Q532166":"event","Q545863":"event","Q642904":"event","Q655150":"event","Q755125":"event","Q756827":"event","Q775110":"event","Q812484":"event","Q837904":"event","Q930866":"event","Q944847":"event","Q963691":"event","Q1015163":"event","Q1025457":"event","Q1025846":"event","Q26933278":"event","Q27011614":"event","Q27074321":"event","Q28731606":"event","Q28838073":"event","Q28912698":"event","Q29051814":"event","Q29167260":"event","Q29185201":"event","Q29653463":"event","Q30109961":"event","Q30129715":"event","Q32318192":"event","Q38574071":"event","Q40122064":"event","Q41463725":"event","Q41502284":"event","Q41515218":"event","Q41516381":"event","Q41517150":"event","Q41517878":"event","Q41742077":"event","Q47011900":"event","Q47483572":"event","Q47809506":"event","Q48107919":"event","Q50329550":"event","Q50331374":"event","Q50331889":"event","Q50384108":"event","Q50616833":"event","Q51045857":"event","Q51635511":"event","Q54824139":"event","Q55392043":"event","Q56439592":"event","Q56640907":"event","Q56677007":"event","Q56719083":"event","Q56870145":"event","Q56871049":"event","Q56871290":"event","Q56967029":"event","Q57043676":"event","Q57047041":"event","Q57050837":"event","Q60050411":"event","Q60156922":"event","Q60456444":"event","Q60577021":"event","Q61657222":"event","Q61964382":"event","Q62085711":"event","Q62097353":"event","Q62130143":"event","Q63084309":"event","Q63184600":"event","Q64605808":"event","Q67129026":"event","Q67130192":"event","Q67130278":"event","Q69616961":"event","Q69666731":"event","Q69674894":"event","Q69676157":"event","Q69719025":"event","Q70037703":"event","Q70275174":"event","Q70861360":"event","Q71142618":"event","Q1140568":"event","Q1140575":"event","Q1235413":"event","Q1257162":"event","Q1307625":"event","Q1358941":"event","Q1401183":"event","Q1414938":"event","Q1431283":"event","Q1431876":"event","Q1453471":"event","Q1534579":"event","Q1543278":"event","Q1570320":"event","Q1722235":"event","Q1722237":"event","Q1782970":"event","Q1863458":"event","Q1909122":"event","Q2091354":"event","Q2118279":"event","Q2200913":"event","Q2460843":"event","Q2513974":"event","Q2523462":"event","Q2523467":"event","Q2523470":"event","Q2523472":"event","Q2547931":"event","Q3413488":"event","Q3533682":"event","Q10978710":"event","Q11700854":"event","Q12294851":"event","Q13937018":"event","Q14286397":"event","Q14515843":"event","Q15103759":"event","Q15725895":"event","Q15731116":"event","Q15795516":"event","Q16671835":"event","Q16725753":"event","Q16834957":"event","Q16990605":"event","Q17135105":"event","Q17303103":"event","Q17353821":"event","Q17544147":"event","Q18589873":"event","Q19371744":"event","Q19392897":"event","Q19580171":"event","Q19605429":"event","Q19832494":"event","Q19859305":"event","Q19861645":"event","Q19985572":"event","Q20016030":"event","Q20025073":"event","Q20035564":"event","Q20084518":"event","Q20128392":"event","Q20645272":"event","Q20647587":"event","Q20648047":"event","Q20735326":"event","Q20735331":"event","Q20747413":"event","Q20751920":"event","Q20806306":"event","Q20827575":"event","Q20942855":"event","Q21070545":"event","Q21609216":"event","Q22266693":"event","Q22569748":"event","Q22569830":"event","Q22677922":"event","Q22752188":"event","Q22780713":"event","Q23058733":"event","Q23392957":"event","Q23655565":"event","Q23691294":"event","Q23905289":"event","Q27964708":"event","Q28045420":"event","Q28108324":"event","Q28126398":"event","Q28372111":"event","Q28525406":"event","Q28654180":"event","Q28659268":"event","Q28767578":"event","Q29017681":"event","Q29643864":"event","Q29654185":"event","Q30100237":"event","Q31605215":"event","Q152716":"event","Q182084":"event","Q210843":"event","Q222859":"event","Q246864":"event","Q260161":"event","Q505782":"event","Q508867":"event","Q509412":"event","Q541269":"event","Q546831":"event","Q557951":"event","Q576727":"event","Q590962":"event","Q634292":"event","Q641769":"event","Q684154":"event","Q729477":"event","Q747105":"event","Q770620":"event","Q931675":"event","Q957373":"event","Q976710":"event","Q1088102":"event","Q1131379":"event","Q1148236":"event","Q1234815":"event","Q1261210":"event","Q1266381":"event","Q1414647":"event","Q1417470":"event","Q1428946":"event","Q1485863":"event","Q1519966":"event","Q1526871":"event","Q1526884":"event","Q1541041":"event","Q1542681":"event","Q1542711":"event","Q1542747":"event","Q1543675":"event","Q1638287":"event","Q1643484":"event","Q1804506":"event","Q33129790":"event","Q33644041":"event","Q34236474":"event","Q36792096":"event","Q38215858":"event","Q42381118":"event","Q44497273":"event","Q47119506":"event","Q47124292":"event","Q47446621":"event","Q47463790":"event","Q47468983":"event","Q48426827":"event","Q48500456":"event","Q49506786":"event","Q51659762":"event","Q51680795":"event","Q52540698":"event","Q53502916":"event","Q53512672":"event","Q55120023":"event","Q55155349":"event","Q55397435":"event","Q55547119":"event","Q55577797":"event","Q56224177":"event","Q57655834":"event","Q57786306":"event","Q58903445":"event","Q59039303":"event","Q59118417":"event","Q60105912":"event","Q60107931":"event","Q60627802":"event","Q61106902":"event","Q61106900":"event","Q61106907":"event","Q61106904":"event","Q61106911":"event","Q61483587":"event","Q61641355":"event","Q62129206":"event","Q62760069":"event","Q63385699":"event","Q63927406":"event","Q64364276":"event","Q64578128":"event","Q64814876":"event","Q65041998":"event","Q65665894":"event","Q65966194":"event","Q66378100":"event","Q72488751":"event","Q72488761":"event","Q72488767":"event","Q72488775":"event","Q1855128":"event","Q1855174":"event","Q1860166":"event","Q1920105":"event","Q1973648":"event","Q2037219":"event","Q2049320":"event","Q2056068":"event","Q2064766":"event","Q2087352":"event","Q2099270":"event","Q2125551":"event","Q2127447":"event","Q2213507":"event","Q2220328":"event","Q2306447":"event","Q2364254":"event","Q2442809":"event","Q2474532":"event","Q2501029":"event","Q2546689":"event","Q2551213":"event","Q2553644":"event","Q2556477":"event","Q2579588":"event","Q2662091":"event","Q2675400":"event","Q2681884":"event","Q2685979":"event","Q2782044":"event","Q2964395":"event","Q2971903":"event","Q2973966":"event","Q2973988":"event","Q3040273":"event","Q3091494":"event","Q3114083":"event","Q3114080":"event","Q3114081":"event","Q3114085":"event","Q3114188":"event","Q3114226":"event","Q3152975":"event","Q3197737":"event","Q3365469":"event","Q3431909":"event","Q3533308":"event","Q3643126":"event","Q3643127":"event","Q3643125":"event","Q3643130":"event","Q3643131":"event","Q3643129":"event","Q3675374":"event","Q3675373":"event","Q3675378":"event","Q3675376":"event","Q3675377":"event","Q3679637":"event","Q3679646":"event","Q3681751":"event","Q3681752":"event","Q3681753":"event","Q3691032":"event","Q3691059":"event","Q3691062":"event","Q3691063":"event","Q3691060":"event","Q3691067":"event","Q3691064":"event","Q3691065":"event","Q3691068":"event","Q3716453":"event","Q3716807":"event","Q3746926":"event","Q3755467":"event","Q3755478":"event","Q3774455":"event","Q3774459":"event","Q3774456":"event","Q3774457":"event","Q3774953":"event","Q3775093":"event","Q3775163":"event","Q3775166":"event","Q3775167":"event","Q3775164":"event","Q3775165":"event","Q3775168":"event","Q3775169":"event","Q3775223":"event","Q3775221":"event","Q3775226":"event","Q3775227":"event","Q3775224":"event","Q3775225":"event","Q3775228":"event","Q3775250":"event","Q3775251":"event","Q3775249":"event","Q3775282":"event","Q3775283":"event","Q3775280":"event","Q3775284":"event","Q3775289":"event","Q3775454":"event","Q3775455":"event","Q3775472":"event","Q3776971":"event","Q3776969":"event","Q3776974":"event","Q3776975":"event","Q3776972":"event","Q3776978":"event","Q3776979":"event","Q3776977":"event","Q3776980":"event","Q3783022":"event","Q3784486":"event","Q3784487":"event","Q3784488":"event","Q3812714":"event","Q3812715":"event","Q3812712":"event","Q3812713":"event","Q3812716":"event","Q3812717":"event","Q3821066":"event","Q3821067":"event","Q3821068":"event","Q3821069":"event","Q3882248":"event","Q3895882":"event","Q3895909":"event","Q3922207":"event","Q3922209":"event","Q3922659":"event","Q3922657":"event","Q3941894":"event","Q3941895":"event","Q3941892":"event","Q3941893":"event","Q3941898":"event","Q3941896":"event","Q3941897":"event","Q3996150":"event","Q3996148":"event","Q3996149":"event","Q3996154":"event","Q3996152":"event","Q3996786":"event","Q3996787":"event","Q3996785":"event","Q3996790":"event","Q3996791":"event","Q3996788":"event","Q3996789":"event","Q3996792":"event","Q3996796":"event","Q3999735":"event","Q3999736":"event","Q4606938":"event","Q4608211":"event","Q4609045":"event","Q4609298":"event","Q4610767":"event","Q4616933":"event","Q4618065":"event","Q4618418":"event","Q6046033":"event","Q6725219":"event","Q7582459":"event","Q7582461":"event","Q7751815":"event","Q9017733":"event","Q11080986":"event","Q11171955":"event","Q11176519":"event","Q11998190":"event","Q12221252":"event","Q13060354":"event","Q13422698":"event","Q14667654":"event","Q14848313":"event","Q14850995":"event","Q14917732":"event","Q15043657":"event","Q15543036":"event","Q15629989":"event","Q15972468":"event","Q15972469":"event","Q15999749":"event","Q16069056":"event","Q16154113":"event","Q16154118":"event","Q16185746":"event","Q16274870":"event","Q16274875":"event","Q16290685":"event","Q16511453":"event","Q16533338":"event","Q16561814":"event","Q16562057":"event","Q16568539":"event","Q16592356":"event","Q16592434":"event","Q16622725":"event","Q16744737":"event","Q16763629":"event","Q16801607":"event","Q16823590":"event","Q16823596":"event","Q16954296":"event","Q16954641":"event","Q16954655":"event","Q16957863":"event","Q16957906":"event","Q16958076":"event","Q16982488":"event","Q16987217":"event","Q17000982":"event","Q17001005":"event","Q17002570":"event","Q17064522":"event","Q17071800":"event","Q17071818":"event","Q17150056":"event","Q17150063":"event","Q17253775":"event","Q17265870":"event","Q17348758":"event","Q17418583":"event","Q17486689":"event","Q17513559":"event","Q17625916":"event","Q17629292":"event","Q17636937":"event","Q17636941":"event","Q17636944":"event","Q17640182":"event","Q17640183":"event","Q17640181":"event","Q17640184":"event","Q17640185":"event","Q18056673":"event","Q18059380":"event","Q18071193":"event","Q18085383":"event","Q18086008":"event","Q18086793":"event","Q18124838":"event","Q18326475":"event","Q18347566":"event","Q18415492":"event","Q18711267":"event","Q18772405":"event","Q18958339":"event","Q19249082":"event","Q19335154":"event","Q19588577":"event","Q19605976":"event","Q19606141":"event","Q19607089":"event","Q19607326":"event","Q19636059":"event","Q19832830":"event","Q19832829":"event","Q19833434":"event","Q19863657":"event","Q19947471":"event","Q19951555":"event","Q19952249":"event","Q20004063":"event","Q20011868":"event","Q20011874":"event","Q20018702":"event","Q20046424":"event","Q20059842":"event","Q20182553":"event","Q20248501":"event","Q20311446":"event","Q20648104":"event","Q20651104":"event","Q20651314":"event","Q20680368":"event","Q20706278":"event","Q20706277":"event","Q20731483":"event","Q20748811":"event","Q20748907":"event","Q20806237":"event","Q20806250":"event","Q20806284":"event","Q20819749":"event","Q20827587":"event","Q20827588":"event","Q20855950":"event","Q20855948":"event","Q20893480":"event","Q20962750":"event","Q20971526":"event","Q20972428":"event","Q20978807":"event","Q20978954":"event","Q20979445":"event","Q20991900":"event","Q20991908":"event","Q21007699":"event","Q21030967":"event","Q21069064":"event","Q21069736":"event","Q21070561":"event","Q21074298":"event","Q21083468":"event","Q21091433":"event","Q21091977":"event","Q21207810":"event","Q21621724":"event","Q21683346":"event","Q21831173":"event","Q21847092":"event","Q21847093":"event","Q21866985":"event","Q21867749":"event","Q21869773":"event","Q21870283":"event","Q21884122":"event","Q21884141":"event","Q21885368":"event","Q21885938":"event","Q21903450":"event","Q21903469":"event","Q22008927":"event","Q22008975":"event","Q22570383":"event","Q22582912":"event","Q22583109":"event","Q22583246":"event","Q22969962":"event","Q22981819":"event","Q23673809":"event","Q23906203":"event","Q23906215":"event","Q23906212":"event","Q23920274":"event","Q23925855":"event","Q23959582":"event","Q23959642":"event","Q23959711":"event","Q23979088":"event","Q24009981":"event","Q24190839":"event","Q24190841":"event","Q24259052":"event","Q24259081":"event","Q24261953":"event","Q24262795":"event","Q24262803":"event","Q24265749":"event","Q24294742":"event","Q24298625":"event","Q24298690":"event","Q24299242":"event","Q24299309":"event","Q24299389":"event","Q24299506":"event","Q24575522":"event","Q24575531":"event","Q24841181":"event","Q24907726":"event","Q26155626":"event","Q26172626":"event","Q26268618":"event","Q26849075":"event","Q26869635":"event","Q26883245":"event","Q26884329":"event","Q26904692":"event","Q27000811":"event","Q27001033":"event","Q27031473":"event","Q27031494":"event","Q27031551":"event","Q27031552":"event","Q27698553":"event","Q27927597":"event","Q27990553":"event","Q28466688":"event","Q28466981":"event","Q28467169":"event","Q28467295":"event","Q28471114":"event","Q28473191":"event","Q28536664":"event","Q28653724":"event","Q28678686":"event","Q28698127":"event","Q28732095":"event","Q28838836":"event","Q28839187":"event","Q28858979":"event","Q28870169":"event","Q28872927":"event","Q28913151":"event","Q28927471":"event","Q28934888":"event","Q28938662":"event","Q28945491":"event","Q28971418":"event","Q28973079":"event","Q28973091":"event","Q28973130":"event","Q29054350":"event","Q29054478":"event","Q29055649":"event","Q29056376":"event","Q29066324":"event","Q29266998":"event","Q29267709":"event","Q29317221":"event","Q29452338":"event","Q29533281":"event","Q29533322":"event","Q29533362":"event","Q29577860":"event","Q29625426":"event","Q29626896":"event","Q29983299":"event","Q29983305":"event","Q30007461":"event","Q30007492":"event","Q30007521":"event","Q30012931":"event","Q30012932":"event","Q30051128":"event","Q30095621":"event","Q30097626":"event","Q30108672":"event","Q30109545":"event","Q30109928":"event","Q30109996":"event","Q30110037":"event","Q30110292":"event","Q30113551":"event","Q30124365":"event","Q30240780":"event","Q30346685":"event","Q30449667":"event","Q30738052":"event","Q32626601":"event","Q33183372":"event","Q33989957":"event","Q38217674":"event","Q38218043":"event","Q38219734":"event","Q38547929":"event","Q39058284":"event","Q39488096":"event","Q39897244":"event","Q41013844":"event","Q41103242":"event","Q41539444":"event","Q41540697":"event","Q41559877":"event","Q41741929":"event","Q41799857":"event","Q41805718":"event","Q41805731":"event","Q41806012":"event","Q41944204":"event","Q41944731":"event","Q41949985":"event","Q42042160":"event","Q42350513":"event","Q42394184":"event","Q42394196":"event","Q42888193":"event","Q42888726":"event","Q43261250":"event","Q43261268":"event","Q43262660":"event","Q43263213":"event","Q44957709":"event","Q46996112":"event","Q46996147":"event","Q47012493":"event","Q47035044":"event","Q47044161":"event","Q47044298":"event","Q47044454":"event","Q47093063":"event","Q47150644":"event","Q47154373":"event","Q47156430":"event","Q47156639":"event","Q47507745":"event","Q47517914":"event","Q47530992":"event","Q48804799":"event","Q48805118":"event","Q60821193":"event","Q60821237":"event","Q60821480":"event","Q60821510":"event","Q60821544":"event","Q60821577":"event","Q60821602":"event","Q60821637":"event","Q60821666":"event","Q60821715":"event","Q60821844":"event","Q60821877":"event","Q60821973":"event","Q60822279":"event","Q60822302":"event","Q60822333":"event","Q60881904":"event","Q60881960":"event","Q60882083":"event","Q60882187":"event","Q60965701":"event","Q61013876":"event","Q61054619":"event","Q61465713":"event","Q61727855":"event","Q61940603":"event","Q61940665":"event","Q61948784":"event","Q61985906":"event","Q61985905":"event","Q61985910":"event","Q61985911":"event","Q61985908":"event","Q61985909":"event","Q61985912":"event","Q61985913":"event","Q62002198":"event","Q62397635":"event","Q62397786":"event","Q62719881":"event","Q62721147":"event","Q62722273":"event","Q62762686":"event","Q62762687":"event","Q62762685":"event","Q62762689":"event","Q62764409":"event","Q62944679":"event","Q63144048":"event","Q63148328":"event","Q63185479":"event","Q63185561":"event","Q63344647":"event","Q63959076":"event","Q64026270":"event","Q64234589":"event","Q64254149":"event","Q64254738":"event","Q64431484":"event","Q64435886":"event","Q64541618":"event","Q64760792":"event","Q64761284":"event","Q64786505":"event","Q64840221":"event","Q65074943":"event","Q65128827":"event","Q65944505":"event","Q65974402":"event","Q66015725":"event","Q66076050":"event","Q66310421":"event","Q66559371":"event","Q66991800":"event","Q67022227":"event","Q67022552":"event","Q67023484":"event","Q67086364":"event","Q67086618":"event","Q67596130":"event","Q68029117":"event","Q68181633":"event","Q68194233":"event","Q68224195":"event","Q68360368":"event","Q68897673":"event","Q68898569":"event","Q68899210":"event","Q69547034":"event","Q69548092":"event","Q69567374":"event","Q69887728":"event","Q69888407":"event","Q70035880":"event","Q70203141":"event","Q70276947":"event","Q70874072":"event","Q72488649":"event","Q72488654":"event","Q72488663":"event","Q104124503":"event","Q104396902":"event","Q104404497":"event","Q104406928":"event","Q104637723":"event","Q104637738":"event","Q104637824":"event","Q104639724":"event","Q104639819":"event","Q104639846":"event","Q104639850":"event","Q104639852":"event","Q104639913":"event","Q72488673":"event","Q72488679":"event","Q72488698":"event","Q72488706":"event","Q72488717":"event","Q74122582":"event","Q75628179":"event","Q75693042":"event","Q75693041":"event","Q75693046":"event","Q75693050":"event","Q75693344":"event","Q75693351":"event","Q75693353":"event","Q75693359":"event","Q75693364":"event","Q75693371":"event","Q75693375":"event","Q75693381":"event","Q77558798":"event","Q77559070":"event","Q77559206":"event","Q78655433":"event","Q78656165":"event","Q78658098":"event","Q78660952":"event","Q78661338":"event","Q78661561":"event","Q78661860":"event","Q78661917":"event","Q78662057":"event","Q78662548":"event","Q78662621":"event","Q78662688":"event","Q78662723":"event","Q78662908":"event","Q78662970":"event","Q78662997":"event","Q78663227":"event","Q78663252":"event","Q78663529":"event","Q78663752":"event","Q79032029":"event","Q79034830":"event","Q79038363":"event","Q79138039":"event","Q79138190":"event","Q80011656":"event","Q80012304":"event","Q81428623":"event","Q81429146":"event","Q81432814":"event","Q81433312":"event","Q82111138":"event","Q82111146":"event","Q82751984":"event","Q83148769":"event","Q83254966":"event","Q83254969":"event","Q83255253":"event","Q83255260":"event","Q83854866":"event","Q83854871":"event","Q83854874":"event","Q83854878":"event","Q83854881":"event","Q84244466":"event","Q84756418":"event","Q85738117":"event","Q85738362":"event","Q86681356":"event","Q86844147":"event","Q87347401":"event","Q89346725":"event","Q98000180":"event","Q98749105":"event","Q98767319":"event","Q98931499":"event","Q99297800":"event","Q99393574":"event","Q99509409":"event","Q99531031":"event","Q99533763":"event","Q99571783":"event","Q99620627":"event","Q100312269":"event","Q100325952":"event","Q104640043":"event","Q104640058":"event","Q104640062":"event","Q104640063":"event","Q104640067":"event","Q104640071":"event","Q104640074":"event","Q104640082":"event","Q104640087":"event","Q104640091":"event","Q104640095":"event","Q104640103":"event","Q104640101":"event","Q104640142":"event","Q104640160":"event","Q104804621":"event","Q104804740":"event","Q104804921":"event","Q104804989":"event","Q104805008":"event","Q104805521":"event","Q104805713":"event","Q104824661":"event","Q104868769":"event","Q104868870":"event","Q104936701":"event","Q104936918":"event","Q104937008":"event","Q104937064":"event","Q105355849":"event","Q105356418":"event","Q105393053":"event","Q105393086":"event","Q105414899":"event","Q105414933":"event","Q105423442":"event","Q105423500":"event","Q105423855":"event","Q105423892":"event","Q105517408":"event","Q105517513":"event","Q105559702":"event","Q105559885":"event","Q105560655":"event","Q105560897":"event","Q105564265":"event","Q105564453":"event","Q105567150":"event","Q105567487":"event","Q105568185":"event","Q105569475":"event","Q105569610":"event","Q105580994":"event","Q105581011":"event","Q105873491":"event","Q105873510":"event","Q105931784":"event","Q105943175":"event","Q105943517":"event","Q105954704":"event","Q106065196":"event","Q106065348":"event","Q106065578":"event","Q106065628":"event","Q106066455":"event","Q106066658":"event","Q106066804":"event","Q106066987":"event","Q106070553":"event","Q106070565":"event","Q106079961":"event","Q106080036":"event","Q106080053":"event","Q106080117":"event","Q106080123":"event","Q106080232":"event","Q106080304":"event","Q106189057":"event","Q106189076":"event","Q106474136":"event","Q106870422":"event","Q106922284":"event","Q106922285":"event","Q106922296":"event","Q107441850":"event","Q107441851":"event","Q107441848":"event","Q107441854":"event","Q107441853":"event","Q107441858":"event","Q107441859":"event","Q107441856":"event","Q107441864":"event","Q107441865":"event","Q107441871":"event","Q107441868":"event","Q107441869":"event","Q107441874":"event","Q107441872":"event","Q108104163":"event","Q48833384":"event","Q48833693":"event","Q48991430":"event","Q49390716":"event","Q49390741":"event","Q49390760":"event","Q49390784":"event","Q49390806":"event","Q50082998":"event","Q50136584":"event","Q50225243":"event","Q50281020":"event","Q50330983":"event","Q50359105":"event","Q50359146":"event","Q50384194":"event","Q50384193":"event","Q50385192":"event","Q50419453":"event","Q50807780":"event","Q50880308":"event","Q50891227":"event","Q51044836":"event","Q51149776":"event","Q51165718":"event","Q51167567":"event","Q51193601":"event","Q51325533":"event","Q51601823":"event","Q51655810":"event","Q51681549":"event","Q51687919":"event","Q51717210":"event","Q51717501":"event","Q51768685":"event","Q52084211":"event","Q52456689":"event","Q52456708":"event","Q52686296":"event","Q53328235":"event","Q53329236":"event","Q53489833":"event","Q53491046":"event","Q53595770":"event","Q53869371":"event","Q53869460":"event","Q53869464":"event","Q53869631":"event","Q54097219":"event","Q54166834":"event","Q54246695":"event","Q54337715":"event","Q55127299":"event","Q55754205":"event","Q56231154":"event","Q56231796":"event","Q56232397":"event","Q56232816":"event","Q56257178":"event","Q56257200":"event","Q56319484":"event","Q56323340":"event","Q56421885":"event","Q56421919":"event","Q56422043":"event","Q56436581":"event","Q56436601":"event","Q56582095":"event","Q56604525":"event","Q56604792":"event","Q56637362":"event","Q56641007":"event","Q56641075":"event","Q56641213":"event","Q56641230":"event","Q56650647":"event","Q56840005":"event","Q56850391":"event","Q56850478":"event","Q57011413":"event","Q57053565":"event","Q57174817":"event","Q57314270":"event","Q57780342":"event","Q59120456":"event","Q59120656":"event","Q59121074":"event","Q59121193":"event","Q59186343":"event","Q59352010":"event","Q60319053":"event","Q60608378":"event","Q60608379":"event","Q60658515":"event","Q60820361":"event","Q60820885":"event","Q60820978":"event","Q60821013":"event","Q60821087":"event","Q60821142":"event","Q108105316":"event","Q108105317":"event","Q108131618":"event","Q108131620":"event","Q108283205":"event","Q108550990":"event","Q108570241":"event","Q108611340":"event","Q108710757":"event","Q108825660":"event","Q108852873":"event","Q108885081":"event","Q108885092":"event","Q108885123":"event","Q108885141":"event","Q108885471":"event","Q108888467":"event","Q108951956":"event","Q109984940":"event","Q110272049":"event","Q110312724":"event","Q110322011":"event","Q110448569":"event","Q110464620":"event","Q110465399":"event","Q110492068":"event","Q110624497":"event","Q110625265":"event","Q110625320":"event","Q110662385":"event","Q110663214":"event","Q110663390":"event","Q110663432":"event","Q110663447":"event","Q110764947":"event","Q110765400":"event","Q110765414":"event","Q110769291":"event","Q110769328":"event","Q110769340":"event","Q110769389":"event","Q110773425":"event","Q110773536":"event","Q110773567":"event","Q110773614":"event","Q110773861":"event","Q110773872":"event","Q110773889":"event","Q110773907":"event","Q110773988":"event","Q110774016":"event","Q110774048":"event","Q110774105":"event","Q110774248":"event","Q110774298":"event","Q110774627":"event","Q110774828":"event","Q110774842":"event","Q110774917":"event","Q110775085":"event","Q110775327":"event","Q110775338":"event","Q110775411":"event","Q110825636":"event","Q110883937":"event","Q110883958":"event","Q111030519":"event","Q111067934":"event","Q111186555":"event","Q111286598":"event","Q111460276":"event","Q111460319":"event","Q111584850":"event","Q111584851":"event","Q111584852":"event","Q111601921":"event","Q111609586":"event","Q112093146":"event","Q112110241":"event","Q112111718":"event","Q112111759":"event","Q112111769":"event","Q112134921":"event","Q112180337":"event","Q112183607":"event","Q112185478":"event","Q112185623":"event","Q112185887":"event","Q112185971":"event","Q112210851":"event","Q112210883":"event","Q112415330":"event","Q113279644":"event","Q113367344":"event","Q113459495":"event","Q113516679":"event","Q113571352":"event","Q113574406":"event","Q113576303":"event","Q113579478":"event","Q113579488":"event","Q113623091":"event","Q113623094":"event","Q113623095":"event","Q113623092":"event","Q113623093":"event","Q113623096":"event","Q113679221":"event","Q113701567":"event","Q113987168":"event","Q113997215":"event","Q114032678":"event","Q114217345":"event","Q114243965":"event","Q114299164":"event","Q114354377":"event","Q114354400":"event","Q114355089":"event","Q114355111":"event","Q114441299":"event","Q114615462":"event","Q114698201":"event","Q115152857":"event","Q115166047":"event","Q115166048":"event","Q115280674":"event","Q115280675":"event","Q115280762":"event","Q115280761":"event","Q115476255":"event","Q115512371":"event","Q115512373":"event","Q115522278":"event","Q115700021":"event","Q115703134":"event","Q115711055":"event","Q115718271":"event","Q115769334":"event","Q115773540":"event","Q115868060":"event","Q115868061":"event","Q116007706":"event","Q116070132":"event","Q116070136":"event","Q116178434":"event","Q116199133":"event","Q116209914":"event","Q116209913":"event","Q116237640":"event","Q116251162":"event","Q116266519":"event","Q116297763":"event","Q116298909":"event","Q116299176":"event","Q116301468":"event","Q116302509":"event","Q116302565":"event","Q116302589":"event","Q116302612":"event","Q116302746":"event","Q116302880":"event","Q116303462":"event","Q116303874":"event","Q116303960":"event","Q116304091":"event","Q116304207":"event","Q116304263":"event","Q116312712":"event","Q116312780":"event","Q116312931":"event","Q116312980":"event","Q116313162":"event","Q116313317":"event","Q116313345":"event","Q116378443":"event","Q116446204":"event","Q116609087":"event","Q116609338":"event","Q116610838":"event","Q116735737":"event","Q116753427":"event","Q116753430":"event","Q116753431":"event","Q116753428":"event","Q116754754":"event","Q116765934":"event","Q116765968":"event","Q116850323":"event","Q116854551":"event","Q116941218":"event","Q117021937":"event","Q117022108":"event","Q117022121":"event","Q117022158":"event","Q117223211":"event","Q117230913":"event","Q117231119":"event","Q117231314":"event","Q117234346":"event","Q117234445":"event","Q117276104":"event","Q117397287":"event","Q117399936":"event","Q117401477":"event","Q117401632":"event","Q117401881":"event","Q117465303":"event","Q117748995":"event","Q117803429":"event","Q118383348":"event","Q118383455":"event","Q118398668":"event","Q118455744":"event","Q118494542":"event","Q118495056":"event","Q118495209":"event","Q118495309":"event","Q118520660":"event","Q118654633":"event","Q118815094":"event","Q118892421":"event","Q119083668":"event","Q119085192":"event","Q119085369":"event","Q119085665":"event","Q119092209":"event","Q119135447":"event","Q119149003":"event","Q119149131":"event","Q119149313":"event","Q120151554":"event","Q120151556":"event","Q120884769":"event","Q121030380":"event","Q121335821":"event","Q121335931":"event","Q121618935":"event","Q121681779":"event","Q122500940":"event","Q122585771":"event","Q122617223":"event","Q122680523":"event","Q123005803":"event","Q123145993":"event","Q123165463":"event","Q123328219":"event","Q123384371":"event","Q123524347":"event","Q124034809":"event","Q124035344":"event","Q124037681":"event","Q124037736":"event","Q124037829":"event","Q124037842":"event","Q124037918":"event","Q124037955":"event","Q124037979":"event","Q124037989":"event","Q124038001":"event","Q124038036":"event","Q124069540":"event","Q124069567":"event","Q124069568":"event","Q124069617":"event","Q124069630":"event","Q124069681":"event","Q124092664":"event","Q124093204":"event","Q124093548":"event","Q124094156":"event","Q124094209":"event","Q124094231":"event","Q124094263":"event","Q124094272":"event","Q124094311":"event","Q124094332":"event","Q124094400":"event","Q124094421":"event","Q124094489":"event","Q124094518":"event","Q124094543":"event","Q124094595":"event","Q124094623":"event","Q124094630":"event","Q124094637":"event","Q124094645":"event","Q124094666":"event","Q124094678":"event","Q124094687":"event","Q124094692":"event","Q124094769":"event","Q124094775":"event","Q124094816":"event","Q124094824":"event","Q124094854":"event","Q124094867":"event","Q124094870":"event","Q124094873":"event","Q124094881":"event","Q124094900":"event","Q124094934":"event","Q124094946":"event","Q124094956":"event","Q124094964":"event","Q124094977":"event","Q124094995":"event","Q124095042":"event","Q124169399":"event","Q124172137":"event","Q124207313":"event","Q124211541":"event","Q124212256":"event","Q124212307":"event","Q124212317":"event","Q124212323":"event","Q124212372":"event","Q124212517":"event","Q124212560":"event","Q124218573":"event","Q124218593":"event","Q124218597":"event","Q124218607":"event","Q124218616":"event","Q124219303":"event","Q124219309":"event","Q124219322":"event","Q124219329":"event","Q124219337":"event","Q124428474":"event","Q124428502":"event","Q124428565":"event","Q124428575":"event","Q124428586":"event","Q124656061":"event","Q124656076":"event","Q124656096":"event","Q124883356":"event","Q152786":"event","Q331133":"event","Q347285":"event","Q347800":"event","Q347806":"event","Q347814":"event","Q376167":"event","Q597018":"event","Q691562":"event","Q740787":"event","Q923632":"event","Q944896":"event","Q1129961":"event","Q1165421":"event","Q1261951":"event","Q1542716":"event","Q1626693":"event","Q1627987":"event","Q1743586":"event","Q1773175":"event","Q1791959":"event","Q1865617":"event","Q1886744":"event","Q1929563":"event","Q1949979":"event","Q2053928":"event","Q2057517":"event","Q2063789":"event","Q2156421":"event","Q2199545":"event","Q2223608":"event","Q2370919":"event","Q2380805":"event","Q2385279":"event","Q2435617":"event","Q2446361":"event","Q2457491":"event","Q2642799":"event","Q2688668":"event","Q2886403":"event","Q2974128":"event","Q2980200":"event","Q3107657":"event","Q3113489":"event","Q3124692":"event","Q3153261":"event","Q3153266":"event","Q3153264":"event","Q3193744":"event","Q3382502":"event","Q3475015":"event","Q3533411":"event","Q3533807":"event","Q3675362":"event","Q3675364":"event","Q3675365":"event","Q3675370":"event","Q3675371":"event","Q3675368":"event","Q3675369":"event","Q3675372":"event","Q3774355":"event","Q3774541":"event","Q3774549":"event","Q3785701":"event","Q3821070":"event","Q3999277":"event","Q4604146":"event","Q4605996":"event","Q4609066":"event","Q4609065":"event","Q4609425":"event","Q4610815":"event","Q4618100":"event","Q4625338":"event","Q4625354":"event","Q4626015":"event","Q4626436":"event","Q6130291":"event","Q6153052":"event","Q9147070":"event","Q10698891":"event","Q11998188":"event","Q11998189":"event","Q13359850":"event","Q13411119":"event","Q13493260":"event","Q15205923":"event","Q15245506":"event","Q15814162":"event","Q15851289":"event","Q15920352":"event","Q15964778":"event","Q15965559":"event","Q15976136":"event","Q16154101":"event","Q16154127":"event","Q16154148":"event","Q16154239":"event","Q16154504":"event","Q16154652":"event","Q16154872":"event","Q16154918":"event","Q16274866":"event","Q16274873":"event","Q16274879":"event","Q16274886":"event","Q16274888":"event","Q16274901":"event","Q16274904":"event","Q16542181":"event","Q16560259":"event","Q16560262":"event","Q16560265":"event","Q16561746":"event","Q16636006":"event","Q16657759":"event","Q16801283":"event","Q16801592":"event","Q16823350":"event","Q16824770":"event","Q16897233":"event","Q16912097":"event","Q16954637":"event","Q16954647":"event","Q16954652":"event","Q16954824":"event","Q16954977":"event","Q16957938":"event","Q16958065":"event","Q16958335":"event","Q16960842":"event","Q16970155":"event","Q16974910":"event","Q16974973":"event","Q16982412":"event","Q16982484":"event","Q17000872":"event","Q17001027":"event","Q17001333":"event","Q17002534":"event","Q17017069":"event","Q17099191":"event","Q17150070":"event","Q17182986":"event","Q17280196":"event","Q17310866":"event","Q17332829":"event","Q17332833":"event","Q17332839":"event","Q17332841":"event","Q17355284":"event","Q17413847":"event","Q17629691":"event","Q17630478":"event","Q17630488":"event","Q17640090":"event","Q17640091":"event","Q17988750":"event","Q18086912":"event","Q18147486":"event","Q18632801":"event","Q18857018":"event","Q19316919":"event","Q19386830":"event","Q19386831":"event","Q19514090":"event","Q19588465":"event","Q19596368":"event","Q19606137":"event","Q19607330":"event","Q19750883":"event","Q19759704":"event","Q19828524":"event","Q19904114":"event","Q19933462":"event","Q20015950":"event","Q20015948":"event","Q20034877":"event","Q20080403":"event","Q20080401":"event","Q20080404":"event","Q20108461":"event","Q20631367":"event","Q20638524":"event","Q20647180":"event","Q20647339":"event","Q20647359":"event","Q20648470":"event","Q20648645":"event","Q20648670":"event","Q20655873":"event","Q20681024":"event","Q20723776":"event","Q20723777":"event","Q20724111":"event","Q20724112":"event","Q20724636":"event","Q20725950":"event","Q20730750":"event","Q20730751":"event","Q20806248":"event","Q20810118":"event","Q20814366":"event","Q20857729":"event","Q20872432":"event","Q20895351":"event","Q20895352":"event","Q20895353":"event","Q20895714":"event","Q20895715":"event","Q20895712":"event","Q20895713":"event","Q20897894":"event","Q20897893":"event","Q20898056":"event","Q20898057":"event","Q20968689":"event","Q21013075":"event","Q21044519":"event","Q21074145":"event","Q21234544":"event","Q21567794":"event","Q21567795":"event","Q21567793":"event","Q21567796":"event","Q21832571":"event","Q21832681":"event","Q21844758":"event","Q21844759":"event","Q21848550":"event","Q21855698":"event","Q22328735":"event","Q22683202":"event","Q22683201":"event","Q22915779":"event","Q23045714":"event","Q23045937":"event","Q23046202":"event","Q23197757":"event","Q23438851":"event","Q23438937":"event","Q23447236":"event","Q23458388":"event","Q23645451":"event","Q23819599":"event","Q23843462":"event","Q23903014":"event","Q23905782":"event","Q23905783":"event","Q23905930":"event","Q23920310":"event","Q23920389":"event","Q23920461":"event","Q23959821":"event","Q23981442":"event","Q23981667":"event","Q24009730":"event","Q24009779":"event","Q24009997":"event","Q24016157":"event","Q24037887":"event","Q24037897":"event","Q24068439":"event","Q24068572":"event","Q24259187":"event","Q24261954":"event","Q24262796":"event","Q24265642":"event","Q24265683":"event","Q24298541":"event","Q24406388":"event","Q24554319":"event","Q24575332":"event","Q24698518":"event","Q24698517":"event","Q24706414":"event","Q24706415":"event","Q24907725":"event","Q24908082":"event","Q24948604":"event","Q25115102":"event","Q25115145":"event","Q25687471":"event","Q25716813":"event","Q25927132":"event","Q25927619":"event","Q26208313":"event","Q26208382":"event","Q26208484":"event","Q26208508":"event","Q26208535":"event","Q26208687":"event","Q26208688":"event","Q26208710":"event","Q26208735":"event","Q26208894":"event","Q26208895":"event","Q26208892":"event","Q26208893":"event","Q26208898":"event","Q26208938":"event","Q26208939":"event","Q26227207":"event","Q26830966":"event","Q26830964":"event","Q26830965":"event","Q26869599":"event","Q26876249":"event","Q27000169":"event","Q27077238":"event","Q27855573":"event","Q28536812":"event","Q28536928":"event","Q28673485":"event","Q28725717":"event","Q28806634":"event","Q28840230":"event","Q28840263":"event","Q28840328":"event","Q28840493":"event","Q28854763":"event","Q28856174":"event","Q28862373":"event","Q28871698":"event","Q28871871":"event","Q28872397":"event","Q28872400":"event","Q28872805":"event","Q28912783":"event","Q28913197":"event","Q28934365":"event","Q28934676":"event","Q28934740":"event","Q28938992":"event","Q28942329":"event","Q28969664":"event","Q29049807":"event","Q29052659":"event","Q29054320":"event","Q29105393":"event","Q29119329":"event","Q29120357":"event","Q29120992":"event","Q29186338":"event","Q29186860":"event","Q29533341":"event","Q29533399":"event","Q29840878":"event","Q29840879":"event","Q29840882":"event","Q29840880":"event","Q29840881":"event","Q29840965":"event","Q29855174":"event","Q29983309":"event","Q29983421":"event","Q29983465":"event","Q29995101":"event","Q29995105":"event","Q30051106":"event","Q30051112":"event","Q30076903":"event","Q30077026":"event","Q30113600":"event","Q30113615":"event","Q30114760":"event","Q30124818":"event","Q30749962":"event","Q30906712":"event","Q30906741":"event","Q30909658":"event","Q30909657":"event","Q31072961":"event","Q32931599":"event","Q33423639":"event","Q38219812":"event","Q47008418":"event","Q47010892":"event","Q47010914":"event","Q47014107":"event","Q47014143":"event","Q47014164":"event","Q47035022":"event","Q47035065":"event","Q47044482":"event","Q47044481":"event","Q47044489":"event","Q47044493":"event","Q47462108":"event","Q47462153":"event","Q47517273":"event","Q47517300":"event","Q47531313":"event","Q47538656":"event","Q47538724":"event","Q47538750":"event","Q47543607":"event","Q47724697":"event","Q48804455":"event","Q48804459":"event","Q48804463":"event","Q48804461":"event","Q48804467":"event","Q48804465":"event","Q49166097":"event","Q49222578":"event","Q49223032":"event","Q50066186":"event","Q50130339":"event","Q50192379":"event","Q50192889":"event","Q50279739":"event","Q50281025":"event","Q50320990":"event","Q50329437":"event","Q50329712":"event","Q50374663":"event","Q50384912":"event","Q50401346":"event","Q50401733":"event","Q50401756":"event","Q50807649":"event","Q50878454":"event","Q50878452":"event","Q51272029":"event","Q51514022":"event","Q51514026":"event","Q51514024":"event","Q51514029":"event","Q51514035":"event","Q51514032":"event","Q51514038":"event","Q51514037":"event","Q51514041":"event","Q51601818":"event","Q51601819":"event","Q51601816":"event","Q51601820":"event","Q51701193":"event","Q51768559":"event","Q52084242":"event","Q52251414":"event","Q52251418":"event","Q52251419":"event","Q52251416":"event","Q52456670":"event","Q52456697":"event","Q52755394":"event","Q52755702":"event","Q52755861":"event","Q53330489":"event","Q53952581":"event","Q54324567":"event","Q54519569":"event","Q54519870":"event","Q54520107":"event","Q54520311":"event","Q54553356":"event","Q54560131":"event","Q54560135":"event","Q54560142":"event","Q54560140":"event","Q54560144":"event","Q55346965":"event","Q55522835":"event","Q55523189":"event","Q55523304":"event","Q55523462":"event","Q55716206":"event","Q55740498":"event","Q55740497":"event","Q55754210":"event","Q55989085":"event","Q56305486":"event","Q56322812":"event","Q56328010":"event","Q56328018":"event","Q56328019":"event","Q56328017":"event","Q56328020":"event","Q56421903":"event","Q56549238":"event","Q56677122":"event","Q56677123":"event","Q56677126":"event","Q56677125":"event","Q56682115":"event","Q56703299":"event","Q56703296":"event","Q56863127":"event","Q57174005":"event","Q57174123":"event","Q57231057":"event","Q57231061":"event","Q57242189":"event","Q57704053":"event","Q57706746":"event","Q57952972":"event","Q57953394":"event","Q57966126":"event","Q57966127":"event","Q57966130":"event","Q57966131":"event","Q57966129":"event","Q57966135":"event","Q57966132":"event","Q57966133":"event","Q57966138":"event","Q57966139":"event","Q57966137":"event","Q57966141":"event","Q57966746":"event","Q57967167":"event","Q57967165":"event","Q57967171":"event","Q57967168":"event","Q57967175":"event","Q57967172":"event","Q57967173":"event","Q57967178":"event","Q57967176":"event","Q57967177":"event","Q57967730":"event","Q57967731":"event","Q57967734":"event","Q57967733":"event","Q57967737":"event","Q57967742":"event","Q57967740":"event","Q57967741":"event","Q57967747":"event","Q57967744":"event","Q57967745":"event","Q57967750":"event","Q57967911":"event","Q58494394":"event","Q58494395":"event","Q58494392":"event","Q58494397":"event","Q58501124":"event","Q58797006":"event","Q58797004":"event","Q59347500":"event","Q59352643":"event","Q59667062":"event","Q59667403":"event","Q59773097":"event","Q59773114":"event","Q59773115":"event","Q59773113":"event","Q60580855":"event","Q60642923":"event","Q60642930":"event","Q60965049":"event","Q60965172":"event","Q60965348":"event","Q60965474":"event","Q60965751":"event","Q61002924":"event","Q61002932":"event","Q61003023":"event","Q61003097":"event","Q61003253":"event","Q61003351":"event","Q61003436":"event","Q61003704":"event","Q61003807":"event","Q61004019":"event","Q61004146":"event","Q61013873":"event","Q61013879":"event","Q61013877":"event","Q61013883":"event","Q61013880":"event","Q61013887":"event","Q61013884":"event","Q61013889":"event","Q61013902":"event","Q61013900":"event","Q61013906":"event","Q61013905":"event","Q61013910":"event","Q61013911":"event","Q61013909":"event","Q61013914":"event","Q61013912":"event","Q61013913":"event","Q61013916":"event","Q61014052":"event","Q61014124":"event","Q61014155":"event","Q61014194":"event","Q61014203":"event","Q61014201":"event","Q61054620":"event","Q61642213":"event","Q61642240":"event","Q61672274":"event","Q61869894":"event","Q61961616":"event","Q61980408":"event","Q61984386":"event","Q61985904":"event","Q62023607":"event","Q62090499":"event","Q62090645":"event","Q62128489":"event","Q62128521":"event","Q62577415":"event","Q62577447":"event","Q62765390":"event","Q62765388":"event","Q62765389":"event","Q62765394":"event","Q62765395":"event","Q62765392":"event","Q62765398":"event","Q62765399":"event","Q62765397":"event","Q62765403":"event","Q62765401":"event","Q63368374":"event","Q63386045":"event","Q63386308":"event","Q63441124":"event","Q63441248":"event","Q63484206":"event","Q63484620":"event","Q63565341":"event","Q63565349":"event","Q63759429":"event","Q63790038":"event","Q63975047":"event","Q63975054":"event","Q63976587":"event","Q64007985":"event","Q64008060":"event","Q64008091":"event","Q64040496":"event","Q64431479":"event","Q64431482":"event","Q64431483":"event","Q64431480":"event","Q64435318":"event","Q64577919":"event","Q64577969":"event","Q64995969":"event","Q64995973":"event","Q64995979":"event","Q65042342":"event","Q65042340":"event","Q65951867":"event","Q65951874":"event","Q65951887":"event","Q66074307":"event","Q66076222":"event","Q66105620":"event","Q66106418":"event","Q66106671":"event","Q66106876":"event","Q66250138":"event","Q66250353":"event","Q66309379":"event","Q66309384":"event","Q66380819":"event","Q66491087":"event","Q66552985":"event","Q66558635":"event","Q66561192":"event","Q67023803":"event","Q67197588":"event","Q67205061":"event","Q67205072":"event","Q67205154":"event","Q67205163":"event","Q71731311":"event","Q71731562":"event","Q74053625":"event","Q74612930":"event","Q78487018":"event","Q78487585":"event","Q78489369":"event","Q78489683":"event","Q78489702":"event","Q78658165":"event","Q78661016":"event","Q78661135":"event","Q78662753":"event","Q78662855":"event","Q78662883":"event","Q78662937":"event","Q78663084":"event","Q78663108":"event","Q78663172":"event","Q78663330":"event","Q78663357":"event","Q78663556":"event","Q79031111":"event","Q79031524":"event","Q79031695":"event","Q79031767":"event","Q79031829":"event","Q79032136":"event","Q79032472":"event","Q79032793":"event","Q79033022":"event","Q79033120":"event","Q79033205":"event","Q79137857":"event","Q79138056":"event","Q79138090":"event","Q79138109":"event","Q79138123":"event","Q79138297":"event","Q79138326":"event","Q79138388":"event","Q79138453":"event","Q79138472":"event","Q79138486":"event","Q79138536":"event","Q79138573":"event","Q79138599":"event","Q79138619":"event","Q79138674":"event","Q79140399":"event","Q79989229":"event","Q81810923":"event","Q82111163":"event","Q82111175":"event","Q82112974":"event","Q82112988":"event","Q82117673":"event","Q83196136":"event","Q83254971":"event","Q83255044":"event","Q83255220":"event","Q83255231":"event","Q83255232":"event","Q83255239":"event","Q83255236":"event","Q83255242":"event","Q83255240":"event","Q83255247":"event","Q83255251":"event","Q83255249":"event","Q83255258":"event","Q83255267":"event","Q83255269":"event","Q83281835":"event","Q83282106":"event","Q83854768":"event","Q83854859":"event","Q83854931":"event","Q83855023":"event","Q83855830":"event","Q83856661":"event","Q84318917":"event","Q84318922":"event","Q84321394":"event","Q84321403":"event","Q84604959":"event","Q84709413":"event","Q104058691":"event","Q104060418":"event","Q104060419":"event","Q104060416":"event","Q104060421":"event","Q104065495":"event","Q104065583":"event","Q104065863":"event","Q104065861":"event","Q104147053":"event","Q104161607":"event","Q104161786":"event","Q104161900":"event","Q104218494":"event","Q104638874":"event","Q104639725":"event","Q104639728":"event","Q104639829":"event","Q104639931":"event","Q104640055":"event","Q104640079":"event","Q104640076":"event","Q104640089":"event","Q104640097":"event","Q104640109":"event","Q104640114":"event","Q104640112":"event","Q84710025":"event","Q84720294":"event","Q84720292":"event","Q84986920":"event","Q84997312":"event","Q85040519":"event","Q85040685":"event","Q85042437":"event","Q85045630":"event","Q85046128":"event","Q85118270":"event","Q85118275":"event","Q85118272":"event","Q85118273":"event","Q85118276":"event","Q85118277":"event","Q85863596":"event","Q86717361":"event","Q86833749":"event","Q86911161":"event","Q87069464":"event","Q87347454":"event","Q97186911":"event","Q97187236":"event","Q97320372":"event","Q97369758":"event","Q98148687":"event","Q98446364":"event","Q98556488":"event","Q98556740":"event","Q98557118":"event","Q98581927":"event","Q98587661":"event","Q98590218":"event","Q98591246":"event","Q98605424":"event","Q98605581":"event","Q98608643":"event","Q98637620":"event","Q98855652":"event","Q98915719":"event","Q98918999":"event","Q98931537":"event","Q99383488":"event","Q99620597":"event","Q99620859":"event","Q99694983":"event","Q99756171":"event","Q100265621":"event","Q100326535":"event","Q100326542":"event","Q100326565":"event","Q100326591":"event","Q100326606":"event","Q101058618":"event","Q101060679":"event","Q101062348":"event","Q101069143":"event","Q101069209":"event","Q101069951":"event","Q101070055":"event","Q101070058":"event","Q101070062":"event","Q101070067":"event","Q101070064":"event","Q101070065":"event","Q101070328":"event","Q101493762":"event","Q101526605":"event","Q101537403":"event","Q102184835":"event","Q102185229":"event","Q102398788":"event","Q104640119":"event","Q104640123":"event","Q104640121":"event","Q104640126":"event","Q104640138":"event","Q104640137":"event","Q104640151":"event","Q104640149":"event","Q104640159":"event","Q104640156":"event","Q104869644":"event","Q104903860":"event","Q105321714":"event","Q105321988":"event","Q105414530":"event","Q105585435":"event","Q105614889":"event","Q105736434":"event","Q105811269":"event","Q105811376":"event","Q105836389":"event","Q105836419":"event","Q105838099":"event","Q105838328":"event","Q105839786":"event","Q105924804":"event","Q105942276":"event","Q105942296":"event","Q105942612":"event","Q106057323":"event","Q106057967":"event","Q106084278":"event","Q106091268":"event","Q106104781":"event","Q106190155":"event","Q106190187":"event","Q106190296":"event","Q106191364":"event","Q106191376":"event","Q106191709":"event","Q106191756":"event","Q106192118":"event","Q106192163":"event","Q106193073":"event","Q106193084":"event","Q106193145":"event","Q106193206":"event","Q106232674":"event","Q106239874":"event","Q106240015":"event","Q106592223":"event","Q106626529":"event","Q106626543":"event","Q106626856":"event","Q106626905":"event","Q106627240":"event","Q106908542":"event","Q106908543":"event","Q106922283":"event","Q106922286":"event","Q106922290":"event","Q106922288":"event","Q106922295":"event","Q107036247":"event","Q107036266":"event","Q107123979":"event","Q107123998":"event","Q107416828":"event","Q107441866":"event","Q107496449":"event","Q107526582":"event","Q107526635":"event","Q107566065":"event","Q107744662":"event","Q108142585":"event","Q108172203":"event","Q108772872":"event","Q108783626":"event","Q108858136":"event","Q108914889":"event","Q109333302":"event","Q109333343":"event","Q109333451":"event","Q109333479":"event","Q109333500":"event","Q109333513":"event","Q109370953":"event","Q109534922":"event","Q109535142":"event","Q109535512":"event","Q109535838":"event","Q109540509":"event","Q109540549":"event","Q109540577":"event","Q109540606":"event","Q109560058":"event","Q109560106":"event","Q109560151":"event","Q109560206":"event","Q109560224":"event","Q109560274":"event","Q109560336":"event","Q109560411":"event","Q109560417":"event","Q109560434":"event","Q109560494":"event","Q109560537":"event","Q109560740":"event","Q109560798":"event","Q109560881":"event","Q109561084":"event","Q109561090":"event","Q109561115":"event","Q109561168":"event","Q109561207":"event","Q109561242":"event","Q109561504":"event","Q109561515":"event","Q109561526":"event","Q109561567":"event","Q109562568":"event","Q109564404":"event","Q109564411":"event","Q109564418":"event","Q109564462":"event","Q109564473":"event","Q109564485":"event","Q109577520":"event","Q109589164":"event","Q109737674":"event","Q109737821":"event","Q109738090":"event","Q109738166":"event","Q109738227":"event","Q109738723":"event","Q110249799":"event","Q110249812":"event","Q110249861":"event","Q110249870":"event","Q110322025":"event","Q110385770":"event","Q110622537":"event","Q110635850":"event","Q110749025":"event","Q110764076":"event","Q110764090":"event","Q110764507":"event","Q110764558":"event","Q110764703":"event","Q110764826":"event","Q110765084":"event","Q110765104":"event","Q110765135":"event","Q110765155":"event","Q110765167":"event","Q110765321":"event","Q110765379":"event","Q110765397":"event","Q110769281":"event","Q110769309":"event","Q110769318":"event","Q110769359":"event","Q110769375":"event","Q110769380":"event","Q110769401":"event","Q110773658":"event","Q110773741":"event","Q110774032":"event","Q110774122":"event","Q110774162":"event","Q110774181":"event","Q110774190":"event","Q110774197":"event","Q110774210":"event","Q110774220":"event","Q110774241":"event","Q110774255":"event","Q110774263":"event","Q110774576":"event","Q110774668":"event","Q110774677":"event","Q110774702":"event","Q110774710":"event","Q110774718":"event","Q110774790":"event","Q110774806":"event","Q110774815":"event","Q110774888":"event","Q110775008":"event","Q110775051":"event","Q110775289":"event","Q110816429":"event","Q110909045":"event","Q110939939":"event","Q110969644":"event","Q111030854":"event","Q111051151":"event","Q111067490":"event","Q111104647":"event","Q111104654":"event","Q111105244":"event","Q111105993":"event","Q111186666":"event","Q111186677":"event","Q111286664":"event","Q111286687":"event","Q111287354":"event","Q111287720":"event","Q111287753":"event","Q111287769":"event","Q111366023":"event","Q111366027":"event","Q111372708":"event","Q111585095":"event","Q111585096":"event","Q111609712":"event","Q111784064":"event","Q111901917":"event","Q111901940":"event","Q111906209":"event","Q112111596":"event","Q112185914":"event","Q112188080":"event","Q112188817":"event","Q112206366":"event","Q112206370":"event","Q112206657":"event","Q112206660":"event","Q112760138":"event","Q112996244":"event","Q113004160":"event","Q113137341":"event","Q113137362":"event","Q113137389":"event","Q113137526":"event","Q113137553":"event","Q113270611":"event","Q113367213":"event","Q113378419":"event","Q113412739":"event","Q113458384":"event","Q113458683":"event","Q113508198":"event","Q113513122":"event","Q113513133":"event","Q113513209":"event","Q113519259":"event","Q113565272":"event","Q113579801":"event","Q113652717":"event","Q113686727":"event","Q113700287":"event","Q113892750":"event","Q114008382":"event","Q114141603":"event","Q114141604":"event","Q115056514":"event","Q115056515":"event","Q115056519":"event","Q115056516":"event","Q115056520":"event","Q115184355":"event","Q115285111":"event","Q115285699":"event","Q115285804":"event","Q115310195":"event","Q115340614":"event","Q115340615":"event","Q115340613":"event","Q115340616":"event","Q115340617":"event","Q115618064":"event","Q115621070":"event","Q115621071":"event","Q115621068":"event","Q115621074":"event","Q115621075":"event","Q115621072":"event","Q115621073":"event","Q115689294":"event","Q115689293":"event","Q115702608":"event","Q115702609":"event","Q115711053":"event","Q115780329":"event","Q115780332":"event","Q115868055":"event","Q115868053":"event","Q115868056":"event","Q115868057":"event","Q115869243":"event","Q115869244":"event","Q115869251":"event","Q115869249":"event","Q115869255":"event","Q115869252":"event","Q115869253":"event","Q115869256":"event","Q115902205":"event","Q115902209":"event","Q115902210":"event","Q115902211":"event","Q116026847":"event","Q116026850":"event","Q116026851":"event","Q116026854":"event","Q116026855":"event","Q116026852":"event","Q116026856":"event","Q116027034":"event","Q116027035":"event","Q116027033":"event","Q116027038":"event","Q116027036":"event","Q116027037":"event","Q116053254":"event","Q116053255":"event","Q116053253":"event","Q116053258":"event","Q116053259":"event","Q116053256":"event","Q116053257":"event","Q116053262":"event","Q116053263":"event","Q116053260":"event","Q116053261":"event","Q116053264":"event","Q116167815":"event","Q116168154":"event","Q116168155":"event","Q116168153":"event","Q116168156":"event","Q116195965":"event","Q116199703":"event","Q116199706":"event","Q116199707":"event","Q116202122":"event","Q116202123":"event","Q116202121":"event","Q116202124":"event","Q116209910":"event","Q116209911":"event","Q116209912":"event","Q116213294":"event","Q116213295":"event","Q116213293":"event","Q116213298":"event","Q116213296":"event","Q116213297":"event","Q116214152":"event","Q116228014":"event","Q116228015":"event","Q116228013":"event","Q116297804":"event","Q116298877":"event","Q116298931":"event","Q116298992":"event","Q116299042":"event","Q116299150":"event","Q116299170":"event","Q116299286":"event","Q116299618":"event","Q116301437":"event","Q116301470":"event","Q116302504":"event","Q116302523":"event","Q116302539":"event","Q116302584":"event","Q116302594":"event","Q116302697":"event","Q116303790":"event","Q116303970":"event","Q116303994":"event","Q116304197":"event","Q116304235":"event","Q116304266":"event","Q116312826":"event","Q116312846":"event","Q116312939":"event","Q116312937":"event","Q116312970":"event","Q116312988":"event","Q116313116":"event","Q116313129":"event","Q116313251":"event","Q116313295":"event","Q116402111":"event","Q116402112":"event","Q116689628":"event","Q116689645":"event","Q116691027":"event","Q116694724":"event","Q116694725":"event","Q116734050":"event","Q116734048":"event","Q116734049":"event","Q116734054":"event","Q116734055":"event","Q116734052":"event","Q116734053":"event","Q116734058":"event","Q116734059":"event","Q116734056":"event","Q116734057":"event","Q116734062":"event","Q116734063":"event","Q116734060":"event","Q116734061":"event","Q116734066":"event","Q116734064":"event","Q116734065":"event","Q116737626":"event","Q116737784":"event","Q116737881":"event","Q116757034":"event","Q116757035":"event","Q116850435":"event","Q116850560":"event","Q116850611":"event","Q116854261":"event","Q116854270":"event","Q116854346":"event","Q116983533":"event","Q116984538":"event","Q117009785":"event","Q117021917":"event","Q117022054":"event","Q117022077":"event","Q117022195":"event","Q117069717":"event","Q117081117":"event","Q117081126":"event","Q117223054":"event","Q117275950":"event","Q117289007":"event","Q117289020":"event","Q117318104":"event","Q117318691":"event","Q117319003":"event","Q117337494":"event","Q117350574":"event","Q117351111":"event","Q117351542":"event","Q117351776":"event","Q117358266":"event","Q117358278":"event","Q117358285":"event","Q117358424":"event","Q117359388":"event","Q117749057":"event","Q117805185":"event","Q117806330":"event","Q117808098":"event","Q117808115":"event","Q117808131":"event","Q117808142":"event","Q118129175":"event","Q118314189":"event","Q118324053":"event","Q118383243":"event","Q118494791":"event","Q118575085":"event","Q118705265":"event","Q118744999":"event","Q118765315":"event","Q118765474":"event","Q118798980":"event","Q118798985":"event","Q118799003":"event","Q118799012":"event","Q118849032":"event","Q118867215":"event","Q118867278":"event","Q118950659":"event","Q118961131":"event","Q118961473":"event","Q118962147":"event","Q119085303":"event","Q119093344":"event","Q119148893":"event","Q119154845":"event","Q119157614":"event","Q119157645":"event","Q119204228":"event","Q119205649":"event","Q119205737":"event","Q119224934":"event","Q119224948":"event","Q119225035":"event","Q119225045":"event","Q119248186":"event","Q119249048":"event","Q119518171":"event","Q119570145":"event","Q119572386":"event","Q119572775":"event","Q119573598":"event","Q119716684":"event","Q119719480":"event","Q119719722":"event","Q119719756":"event","Q119720019":"event","Q119722461":"event","Q119723554":"event","Q119723641":"event","Q119766178":"event","Q119766340":"event","Q119766541":"event","Q119767463":"event","Q120146865":"event","Q120153039":"event","Q120153041":"event","Q120170731":"event","Q120170728":"event","Q120170732":"event","Q120170763":"event","Q120170772":"event","Q120185091":"event","Q120185204":"event","Q120196282":"event","Q120196288":"event","Q120198657":"event","Q120198697":"event","Q120804852":"event","Q120833442":"event","Q120868019":"event","Q120868054":"event","Q121032960":"event","Q121335766":"event","Q121335798":"event","Q121461219":"event","Q122166617":"event","Q122166666":"event","Q122166894":"event","Q122166923":"event","Q122527537":"event","Q122677483":"event","Q123422235":"event","Q123422276":"event","Q123460127":"event","Q123461029":"event","Q123461047":"event","Q123461061":"event","Q123461076":"event","Q123461096":"event","Q123461161":"event","Q124034687":"event","Q124034724":"event","Q124035165":"event","Q124035183":"event","Q124035196":"event","Q124035226":"event","Q124035300":"event","Q124069706":"event","Q124071293":"event","Q124071303":"event","Q124071322":"event","Q124071332":"event","Q124071378":"event","Q124071407":"event","Q124071429":"event","Q124071468":"event","Q124071656":"event","Q124071754":"event","Q124078049":"event","Q124078187":"event","Q124078272":"event","Q124078301":"event","Q124078308":"event","Q124078359":"event","Q124078391":"event","Q124078407":"event","Q124086510":"event","Q124088008":"event","Q124088267":"event","Q124088342":"event","Q124090080":"event","Q124090624":"event","Q124090724":"event","Q124090809":"event","Q124090882":"event","Q124090976":"event","Q124091065":"event","Q124091144":"event","Q124091205":"event","Q124094137":"event","Q124094414":"event","Q124094577":"event","Q124094601":"event","Q124094618":"event","Q124094730":"event","Q124094739":"event","Q124094848":"event","Q124094860":"event","Q124094865":"event","Q124094874":"event","Q124094879":"event","Q124094885":"event","Q124094896":"event","Q124094931":"event","Q124094940":"event","Q124094973":"event","Q124095019":"event","Q124095022":"event","Q124095024":"event","Q124160195":"event","Q124169014":"event","Q124169804":"event","Q124169866":"event","Q124169892":"event","Q124170727":"event","Q124170834":"event","Q124171129":"event","Q124171155":"event","Q124197864":"event","Q124198121":"event","Q124198601":"event","Q124198956":"event","Q124201114":"event","Q124201145":"event","Q124201545":"event","Q124202419":"event","Q124207962":"event","Q124208280":"event","Q124212286":"event","Q124212394":"event","Q124212401":"event","Q124212430":"event","Q124212442":"event","Q124212445":"event","Q124212483":"event","Q124212593":"event","Q124308713":"event","Q124428249":"event","Q124428267":"event","Q124428319":"event","Q124428345":"event","Q124660355":"event","Q124675737":"event","Q124750186":"event","Q124949879":"event","Q124950071":"event","Q115667":"event","Q183186":"event","Q290514":"event","Q290523":"event","Q290588":"event","Q314687":"event","Q377862":"event","Q382673":"event","Q405510":"event","Q592618":"event","Q604500":"event","Q616656":"event","Q636454":"event","Q651236":"event","Q736263":"event","Q786110":"event","Q894986":"event","Q935429":"event","Q955021":"event","Q1027471":"event","Q1092859":"event","Q1092862":"event","Q1092866":"event","Q1137738":"event","Q1146627":"event","Q1242437":"event","Q1258698":"event","Q1265406":"event","Q1334580":"event","Q1341486":"event","Q1434191":"event","Q1519109":"event","Q1526886":"event","Q1526999":"event","Q1533156":"event","Q1541036":"event","Q1546308":"event","Q1554823":"event","Q1572063":"event","Q1572415":"event","Q1597991":"event","Q1607801":"event","Q1617683":"event","Q1627896":"event","Q1628953":"event","Q1642267":"event","Q1663227":"event","Q1667481":"event","Q1667484":"event","Q1667485":"event","Q1678137":"event","Q1684221":"event","Q1729875":"event","Q1799204":"event","Q1851745":"event","Q1859219":"event","Q1922659":"event","Q1922753":"event","Q1973009":"event","Q2024333":"event","Q2031662":"event","Q2096649":"event","Q2119689":"event","Q2120129":"event","Q2189765":"event","Q2240546":"event","Q2262918":"event","Q2375121":"event","Q2432696":"event","Q2446371":"event","Q2446387":"event","Q2446466":"event","Q2563687":"event","Q2628387":"event","Q2643837":"event","Q2669732":"event","Q3025538":"event","Q3084308":"event","Q3113755":"event","Q3356512":"event","Q3406153":"event","Q3533446":"event","Q3533444":"event","Q3533490":"event","Q3533491":"event","Q3533489":"event","Q3533494":"event","Q3533495":"event","Q3533493":"event","Q3533705":"event","Q3533708":"event","Q3533713":"event","Q3533782":"event","Q3533783":"event","Q3533786":"event","Q3533787":"event","Q3533785":"event","Q3533788":"event","Q3533799":"event","Q3533838":"event","Q3735947":"event","Q3768642":"event","Q3768643":"event","Q3768640":"event","Q3768641":"event","Q3768647":"event","Q3768645":"event","Q3768648":"event","Q4606356":"event","Q4608600":"event","Q4612084":"event","Q4612090":"event","Q4613900":"event","Q4618604":"event","Q4624936":"event","Q4671869":"event","Q4834538":"event","Q4844371":"event","Q6685041":"event","Q8108876":"event","Q11705181":"event","Q11958583":"event","Q12007218":"event","Q12894596":"event","Q13411354":"event","Q13548460":"event","Q14034362":"event","Q14555023":"event","Q14564436":"event","Q14759925":"event","Q15205981":"event","Q15407763":"event","Q15461037":"event","Q15666441":"event","Q15704590":"event","Q15728788":"event","Q15881459":"event","Q15964821":"event","Q16057281":"event","Q16154106":"event","Q16154140":"event","Q16154620":"event","Q16154703":"event","Q16154733":"event","Q16154976":"event","Q16237117":"event","Q16509962":"event","Q16673673":"event","Q16677957":"event","Q16679864":"event","Q16680582":"event","Q16680594":"event","Q16910285":"event","Q16911866":"event","Q16912144":"event","Q16935653":"event","Q16954623":"event","Q16956480":"event","Q16970150":"event","Q16980475":"event","Q17000981":"event","Q17015378":"event","Q17048116":"event","Q17063894":"event","Q17103171":"event","Q17150061":"event","Q17172994":"event","Q17175087":"event","Q17276896":"event","Q17277065":"event","Q17312900":"event","Q17330398":"event","Q17330405":"event","Q17619325":"event","Q17989628":"event","Q18128718":"event","Q18434782":"event","Q18434783":"event","Q18434786":"event","Q18434788":"event","Q18710466":"event","Q18923425":"event","Q18926867":"event","Q19017361":"event","Q19159960":"event","Q19204232":"event","Q19260764":"event","Q19311022":"event","Q19412884":"event","Q19790107":"event","Q19832839":"event","Q19838230":"event","Q19838947":"event","Q19839704":"event","Q19863669":"event","Q19947163":"event","Q19975533":"event","Q19979596":"event","Q20018695":"event","Q20025125":"event","Q20025139":"event","Q20031490":"event","Q20046890":"event","Q20049366":"event","Q20055171":"event","Q20055173":"event","Q20070265":"event","Q20155428":"event","Q20155459":"event","Q20165905":"event","Q20202136":"event","Q20202379":"event","Q20312423":"event","Q20638547":"event","Q20638549":"event","Q20640109":"event","Q20640438":"event","Q20646770":"event","Q20651084":"event","Q20724116":"event","Q20725242":"event","Q20740048":"event","Q20740354":"event","Q20740444":"event","Q20797750":"event","Q20817425":"event","Q20823441":"event","Q20825195":"event","Q20825197":"event","Q20826600":"event","Q20830577":"event","Q20872305":"event","Q20872308":"event","Q20898706":"event","Q21008846":"event","Q21027926":"event","Q21070542":"event","Q21093833":"event","Q21754217":"event","Q22032242":"event","Q22101577":"event","Q22303490":"event","Q22344347":"event","Q22506035":"event","Q22569449":"event","Q22570015":"event","Q22661614":"event","Q22670388":"event","Q22677272":"event","Q22677273":"event","Q22806707":"event","Q22812462":"event","Q23001535":"event","Q23043619":"event","Q23607495":"event","Q23662251":"event","Q23662285":"event","Q23672478":"event","Q23672485":"event","Q23672495":"event","Q23718947":"event","Q23719165":"event","Q23819528":"event","Q23906140":"event","Q23954782":"event","Q23959331":"event","Q23959518":"event","Q24009642":"event","Q24025250":"event","Q24025256":"event","Q24025260":"event","Q24035112":"event","Q24035113":"event","Q24037730":"event","Q24075459":"event","Q24332273":"event","Q24907428":"event","Q25343529":"event","Q26271869":"event","Q26710099":"event","Q26726329":"event","Q26835951":"event","Q26913400":"event","Q26945247":"event","Q27897258":"event","Q27897257":"event","Q27943070":"event","Q28037272":"event","Q28121701":"event","Q28142183":"event","Q28194828":"event","Q28328705":"event","Q28473607":"event","Q28547799":"event","Q28752781":"event","Q28764018":"event","Q28820196":"event","Q28842677":"event","Q29017608":"event","Q29048898":"event","Q29052020":"event","Q29167787":"event","Q29345930":"event","Q29363962":"event","Q29510289":"event","Q29533421":"event","Q29640406":"event","Q29643729":"event","Q29958717":"event","Q30068279":"event","Q30096469":"event","Q30106430":"event","Q30108967":"event","Q30108970":"event","Q30241562":"event","Q30337990":"event","Q30644145":"event","Q30754671":"event","Q30909420":"event","Q31074539":"event","Q31074869":"event","Q31339140":"event","Q31495647":"event","Q31607760":"event","Q33424096":"event","Q36349227":"event","Q37860935":"event","Q38262773":"event","Q39054341":"event","Q41479962":"event","Q41774368":"event","Q43477553":"event","Q43480080":"event","Q45232622":"event","Q46874912":"event","Q47011953":"event","Q47057972":"event","Q47102068":"event","Q47103666":"event","Q47105567":"event","Q47425121":"event","Q47441498":"event","Q47469096":"event","Q47469097":"event","Q47479348":"event","Q47487372":"event","Q47487404":"event","Q47509863":"event","Q47747912":"event","Q48720096":"event","Q48837618":"event","Q50086432":"event","Q50190614":"event","Q50542338":"event","Q50807332":"event","Q51048622":"event","Q51078452":"event","Q51193586":"event","Q51193588":"event","Q51193589":"event","Q51193595":"event","Q51193593":"event","Q51193599":"event","Q51193596":"event","Q51193597":"event","Q51193603":"event","Q51292863":"event","Q51293683":"event","Q51293686":"event","Q51293685":"event","Q51293690":"event","Q51293691":"event","Q51293688":"event","Q51293689":"event","Q51335286":"event","Q51483509":"event","Q51683435":"event","Q51691712":"event","Q51845428":"event","Q51845472":"event","Q51863969":"event","Q51954392":"event","Q52191746":"event","Q52196694":"event","Q52456674":"event","Q52529640":"event","Q52545033":"event","Q52588755":"event","Q52588759":"event","Q52588756":"event","Q52588760":"event","Q53557910":"event","Q53597160":"event","Q53786921":"event","Q53844311":"event","Q54113453":"event","Q54834529":"event","Q54888614":"event","Q54889380":"event","Q54913189":"event","Q54940465":"event","Q55114336":"event","Q55375789":"event","Q55600027":"event","Q55638555":"event","Q55644313":"event","Q55644321":"event","Q56010988":"event","Q56072666":"event","Q56442467":"event","Q56550906":"event","Q56651675":"event","Q56673936":"event","Q56679109":"event","Q57419958":"event","Q57704277":"event","Q57705374":"event","Q57705449":"event","Q57706813":"event","Q57710931":"event","Q57716076":"event","Q58887647":"event","Q59121358":"event","Q59121679":"event","Q59138543":"event","Q59346704":"event","Q59346784":"event","Q59381870":"event","Q59773017":"event","Q60531186":"event","Q60749367":"event","Q60882504":"event","Q60884062":"event","Q60884418":"event","Q60963368":"event","Q60963432":"event","Q60963570":"event","Q60963675":"event","Q60963821":"event","Q60964306":"event","Q60964419":"event","Q60964473":"event","Q60964607":"event","Q60964911":"event","Q60964996":"event","Q61578977":"event","Q61781842":"event","Q62027130":"event","Q62033949":"event","Q62084890":"event","Q62396941":"event","Q62606790":"event","Q62760058":"event","Q62760059":"event","Q62760062":"event","Q62760063":"event","Q62760060":"event","Q62760066":"event","Q104074065":"event","Q104179748":"event","Q104189056":"event","Q104213339":"event","Q104213364":"event","Q104213524":"event","Q104392654":"event","Q104408128":"event","Q104549514":"event","Q104626288":"event","Q104637798":"event","Q104639727":"event","Q104639826":"event","Q104639867":"event","Q104640052":"event","Q104640100":"event","Q104640104":"event","Q104640118":"event","Q104640144":"event","Q104640153":"event","Q104905128":"event","Q105367666":"event","Q105368385":"event","Q105390157":"event","Q105390519":"event","Q105427112":"event","Q105427134":"event","Q105571857":"event","Q105571865":"event","Q105873466":"event","Q105928287":"event","Q105932425":"event","Q105932810":"event","Q106069620":"event","Q106069685":"event","Q106084698":"event","Q106084740":"event","Q106117464":"event","Q106513129":"event","Q107327008":"event","Q107327020":"event","Q107327036":"event","Q107532675":"event","Q107542702":"event","Q107567077":"event","Q108136627":"event","Q108280615":"event","Q108558290":"event","Q108611709":"event","Q108793825":"event","Q108858798":"event","Q109170792":"event","Q109317656":"event","Q109688811":"event","Q110095819":"event","Q110235990":"event","Q110375525":"event","Q110617199":"event","Q110651763":"event","Q110651764":"event","Q110694700":"event","Q110764063":"event","Q110769300":"event","Q110769349":"event","Q110773453":"event","Q110773757":"event","Q110773806":"event","Q110774323":"event","Q110774642":"event","Q110774723":"event","Q110774935":"event","Q110873012":"event","Q110926399":"event","Q110969225":"event","Q110969236":"event","Q110969245":"event","Q110969253":"event","Q110970907":"event","Q110970945":"event","Q111131052":"event","Q111310092":"event","Q111395674":"event","Q111502652":"event","Q111549574":"event","Q111550199":"event","Q111550202":"event","Q111550203":"event","Q111550200":"event","Q111550201":"event","Q111550206":"event","Q111550207":"event","Q111550204":"event","Q111550205":"event","Q111550210":"event","Q111550209":"event","Q98843956":"event","Q98912123":"event","Q99382835":"event","Q99941639":"event","Q101085454":"event","Q111550211":"event","Q111550214":"event","Q111550215":"event","Q111550212":"event","Q111550213":"event","Q111550218":"event","Q111550219":"event","Q111550216":"event","Q111550217":"event","Q111551119":"event","Q111557127":"event","Q111593057":"event","Q111601899":"event","Q111794251":"event","Q112157315":"event","Q112188736":"event","Q112914572":"event","Q113127534":"event","Q113327687":"event","Q113329649":"event","Q113331182":"event","Q113368405":"event","Q113458345":"event","Q113458356":"event","Q113648858":"event","Q113685954":"event","Q113687349":"event","Q113801494":"event","Q114340936":"event","Q114858761":"event","Q115110638":"event","Q115110639":"event","Q115110636":"event","Q115110637":"event","Q115110640":"event","Q115110646":"event","Q115110647":"event","Q115460967":"event","Q115462939":"event","Q115598820":"event","Q115788484":"event","Q115830532":"event","Q116056814":"event","Q116152002":"event","Q116152586":"event","Q116176438":"event","Q116176439":"event","Q116178502":"event","Q116181686":"event","Q116195966":"event","Q116299108":"event","Q116303336":"event","Q116303619":"event","Q116303932":"event","Q116304272":"event","Q116312763":"event","Q116732047":"event","Q116732071":"event","Q116753426":"event","Q116753425":"event","Q116795791":"event","Q116815380":"event","Q116925667":"event","Q116930430":"event","Q117184180":"event","Q117221338":"event","Q117231163":"event","Q117234172":"event","Q117318194":"event","Q117318768":"event","Q117353812":"event","Q117430560":"event","Q117447519":"event","Q117488651":"event","Q118581529":"event","Q118947732":"event","Q118948398":"event","Q118949778":"event","Q119149368":"event","Q119154408":"event","Q119154572":"event","Q119205373":"event","Q119564761":"event","Q120149743":"event","Q120149753":"event","Q120703822":"event","Q120825906":"event","Q120932113":"event","Q120967497":"event","Q121734477":"event","Q123123061":"event","Q123291337":"event","Q123953545":"event","Q123954005":"event","Q124004052":"event","Q124004074":"event","Q124071532":"event","Q124078068":"event","Q124078365":"event","Q124094300":"event","Q62760067":"event","Q62760068":"event","Q63038756":"event","Q63043063":"event","Q63043064":"event","Q63043069":"event","Q63108719":"event","Q63214596":"event","Q63284914":"event","Q63400396":"event","Q63440302":"event","Q63646359":"event","Q63839194":"event","Q63970255":"event","Q63982754":"event","Q63995450":"event","Q63995454":"event","Q63995453":"event","Q64222250":"event","Q64337843":"event","Q64418442":"event","Q64433975":"event","Q64436195":"event","Q64437823":"event","Q64437826":"event","Q64437827":"event","Q64437824":"event","Q64437825":"event","Q64437830":"event","Q64437828":"event","Q64437829":"event","Q64452664":"event","Q64864566":"event","Q64946073":"event","Q65589533":"event","Q66439803":"event","Q66717336":"event","Q66777548":"event","Q66777613":"event","Q67083924":"event","Q67189894":"event","Q67526457":"event","Q68091614":"event","Q69395932":"event","Q70144177":"event","Q70155580":"event","Q70621200":"event","Q72488688":"event","Q72488724":"event","Q72488730":"event","Q72488736":"event","Q72488926":"event","Q72488929":"event","Q72488942":"event","Q72488949":"event","Q72488954":"event","Q72488958":"event","Q72488960":"event","Q72488965":"event","Q72488969":"event","Q72488973":"event","Q72488978":"event","Q72488982":"event","Q74117185":"event","Q74774154":"event","Q78489659":"event","Q78661787":"event","Q78662120":"event","Q78662483":"event","Q78663137":"event","Q78663501":"event","Q78663614":"event","Q79137942":"event","Q79138252":"event","Q79138636":"event","Q79980749":"event","Q79989942":"event","Q81615405":"event","Q81632908":"event","Q81741332":"event","Q83497117":"event","Q83854802":"event","Q83854803":"event","Q83854801":"event","Q83854805":"event","Q84318914":"event","Q84318938":"event","Q84981007":"event","Q85048111":"event","Q85737171":"event","Q85744352":"event","Q85863435":"event","Q85863618":"event","Q87069485":"event","Q87671848":"event","Q97173980":"event","Q97761602":"event","Q98479316":"event","Q98649085":"event","Q98739539":"event","Q124094344":"event","Q124094460":"event","Q124094701":"event","Q124094755":"event","Q124094830":"event","Q124094863":"event","Q124094871":"event","Q124094904":"event","Q124159979":"event","Q124160157":"event","Q124168828":"event","Q124200995":"event","Q124202868":"event","Q124208450":"event","Q124212382":"event","Q124212572":"event","Q124218543":"event","Q124218557":"event","Q124218570":"event","Q124218625":"event","Q124219353":"event","Q124308718":"event","Q124428598":"event","Q124736035":"event","Q124753634":"event","Q124753931":"event","Q124760103":"event","Q125044009":"event","Q125072238":"event","Q508268":"event","Q539398":"event","Q549121":"event","Q578837":"event","Q666928":"event","Q676102":"event","Q691503":"event","Q749310":"event","Q773115":"event","Q812745":"event","Q905668":"event","Q910636":"event","Q958958":"event","Q1077830":"event","Q1092873":"event","Q1146390":"event","Q1162342":"event","Q1164181":"event","Q1321260":"event","Q1331386":"event","Q1332724":"event","Q1340118":"event","Q1399136":"event","Q1411929":"event","Q1421870":"event","Q1434748":"event","Q1463076":"event","Q1490528":"event","Q1499505":"event","Q1519385":"event","Q1526845":"event","Q1537748":"event","Q1542672":"event","Q1542838":"event","Q1554737":"event","Q1621308":"event","Q1626932":"event","Q1633240":"event","Q1648721":"event","Q1724165":"event","Q1809566":"event","Q1809578":"event","Q1809596":"event","Q1810324":"event","Q1847518":"event","Q1857797":"event","Q1928092":"event","Q1973056":"event","Q1981467":"event","Q1983265":"event","Q1987453":"event","Q2004950":"event","Q2035477":"event","Q2272162":"event","Q2297177":"event","Q2357535":"event","Q2446363":"event","Q2446364":"event","Q2446369":"event","Q2446530":"event","Q2446542":"event","Q2446550":"event","Q2446552":"event","Q2465697":"event","Q2638262":"event","Q2881642":"event","Q3008380":"event","Q3049639":"event","Q3100080":"event","Q3180120":"event","Q3415947":"event","Q3513803":"event","Q3533234":"event","Q3533239":"event","Q3533314":"event","Q3533312":"event","Q3533313":"event","Q3533316":"event","Q3533323":"event","Q3533321":"event","Q3533417":"event","Q3533425":"event","Q3533445":"event","Q3533546":"event","Q3533697":"event","Q3540468":"event","Q4465663":"event","Q4605035":"event","Q4607115":"event","Q4609421":"event","Q4609426":"event","Q4609545":"event","Q4611178":"event","Q4612216":"event","Q4613952":"event","Q4621312":"event","Q4626061":"event","Q5800301":"event","Q5880369":"event","Q6151192":"event","Q7829005":"event","Q10392437":"event","Q10392451":"event","Q11997876":"event","Q13362122":"event","Q13405647":"event","Q13534651":"event","Q15233563":"event","Q15284824":"event","Q15881447":"event","Q15881451":"event","Q15881454":"event","Q15881455":"event","Q15881453":"event","Q15980657":"event","Q16027296":"event","Q16056083":"event","Q16154145":"event","Q16154212":"event","Q16154260":"event","Q16154312":"event","Q16154738":"event","Q16154834":"event","Q16154983":"event","Q16154991":"event","Q16274862":"event","Q16274860":"event","Q16466706":"event","Q16614797":"event","Q16614803":"event","Q16614800":"event","Q16614806":"event","Q16614808":"event","Q16617094":"event","Q16617092":"event","Q16617099":"event","Q16617097":"event","Q16617101":"event","Q16802147":"event","Q16823436":"event","Q16955119":"event","Q16958071":"event","Q16960754":"event","Q16970084":"event","Q17000976":"event","Q17000995":"event","Q17014234":"event","Q17015392":"event","Q17051777":"event","Q17311367":"event","Q17486742":"event","Q17512717":"event","Q17512827":"event","Q17513221":"event","Q17513241":"event","Q17514269":"event","Q17988769":"event","Q17988827":"event","Q17988824":"event","Q18089155":"event","Q18126662":"event","Q18338268":"event","Q18434796":"event","Q18647440":"event","Q18647446":"event","Q18647451":"event","Q18745511":"event","Q18783409":"event","Q19753550":"event","Q19801136":"event","Q19901808":"event","Q19917447":"event","Q19917448":"event","Q20312067":"event","Q20426328":"event","Q20579135":"event","Q20648305":"event","Q20650086":"event","Q20650122":"event","Q20665376":"event","Q20724117":"event","Q20736294":"event","Q20736295":"event","Q20736296":"event","Q20736314":"event","Q20736315":"event","Q20738934":"event","Q20750872":"event","Q20754617":"event","Q20803718":"event","Q20803717":"event","Q20809972":"event","Q20809980":"event","Q20898929":"event","Q21006971":"event","Q21006972":"event","Q21127077":"event","Q21418919":"event","Q21427481":"event","Q21481828":"event","Q21515187":"event","Q21777219":"event","Q21816915":"event","Q22039334":"event","Q22080952":"event","Q22132642":"event","Q22328342":"event","Q22328341":"event","Q22329657":"event","Q22329661":"event","Q22337737":"event","Q22338406":"event","Q22338407":"event","Q22338408":"event","Q22814898":"event","Q22893630":"event","Q23011863":"event","Q23045712":"event","Q23534938":"event","Q23672504":"event","Q23680521":"event","Q23738111":"event","Q23738753":"event","Q23768296":"event","Q23773144":"event","Q23793832":"event","Q23905929":"event","Q24009608":"event","Q24009631":"event","Q24025270":"event","Q24032957":"event","Q24068141":"event","Q24068199":"event","Q24068206":"event","Q24084521":"event","Q24206657":"event","Q24265096":"event","Q24265113":"event","Q24323011":"event","Q24580784":"event","Q24581200":"event","Q24731999":"event","Q24907434":"event","Q24947839":"event","Q25927673":"event","Q25929252":"event","Q26432389":"event","Q26720969":"event","Q26721287":"event","Q26722387":"event","Q26726254":"event","Q26822341":"event","Q26829374":"event","Q26840126":"event","Q26840220":"event","Q26840245":"event","Q27001786":"event","Q27056262":"event","Q27061842":"event","Q27643873":"event","Q27684043":"event","Q27687926":"event","Q27816915":"event","Q27980885":"event","Q27980888":"event","Q27987477":"event","Q28057330":"event","Q28473551":"event","Q28477949":"event","Q28540833":"event","Q28673502":"event","Q28673504":"event","Q28673628":"event","Q28724725":"event","Q28752782":"event","Q28753671":"event","Q28874577":"event","Q28912946":"event","Q28926203":"event","Q28928415":"event","Q28967013":"event","Q28968893":"event","Q28969903":"event","Q28969901":"event","Q29053929":"event","Q29054305":"event","Q29054378":"event","Q29054382":"event","Q29054381":"event","Q29054395":"event","Q29060753":"event","Q29061026":"event","Q29106724":"event","Q29168199":"event","Q29227465":"event","Q29255090":"event","Q29350643":"event","Q29439729":"event","Q29839139":"event","Q29839140":"event","Q29843601":"event","Q29843942":"event","Q29849969":"event","Q29909038":"event","Q29973488":"event","Q30017860":"event","Q30107974":"event","Q30124773":"event","Q30129895":"event","Q30131984":"event","Q30909267":"event","Q30909274":"event","Q30909424":"event","Q31490843":"event","Q32541567":"event","Q33100784":"event","Q33130946":"event","Q38614711":"event","Q39061050":"event","Q39184060":"event","Q41964102":"event","Q42118136":"event","Q42302297":"event","Q42306167":"event","Q42317524":"event","Q42419359":"event","Q43142835":"event","Q43915219":"event","Q44584061":"event","Q45925298":"event","Q46951171":"event","Q47038443":"event","Q47088949":"event","Q47089084":"event","Q47089127":"event","Q47089146":"event","Q47467432":"event","Q47501912":"event","Q47501927":"event","Q47502031":"event","Q47505580":"event","Q47507832":"event","Q47507836":"event","Q47510046":"event","Q47531628":"event","Q47542396":"event","Q48840950":"event","Q48851426":"event","Q48853796":"event","Q49284834":"event","Q49596184":"event","Q50049172":"event","Q50086537":"event","Q50190837":"event","Q50330142":"event","Q50348681":"event","Q50359900":"event","Q50365348":"event","Q50437507":"event","Q50807572":"event","Q50807581":"event","Q50807629":"event","Q50807706":"event","Q50812271":"event","Q51056068":"event","Q51553693":"event","Q51581834":"event","Q51749881":"event","Q51770802":"event","Q51770800":"event","Q51770804":"event","Q51770806":"event","Q51770807":"event","Q51770805":"event","Q51770809":"event","Q51770842":"event","Q51770840":"event","Q51770841":"event","Q51845285":"event","Q51845364":"event","Q51884388":"event","Q51945619":"event","Q52073231":"event","Q52073228":"event","Q52161800":"event","Q52196472":"event","Q52524893":"event","Q52525596":"event","Q52579603":"event","Q52579726":"event","Q52786055":"event","Q52786334":"event","Q52787684":"event","Q54803568":"event","Q54957935":"event","Q55389360":"event","Q55403559":"event","Q55438484":"event","Q55438580":"event","Q55739408":"event","Q55739573":"event","Q55975943":"event","Q55976046":"event","Q55976045":"event","Q56275583":"event","Q56278337":"event","Q56278498":"event","Q56318150":"event","Q56327875":"event","Q56423514":"event","Q56423513":"event","Q56452834":"event","Q56459684":"event","Q56515086":"event","Q56637007":"event","Q56637085":"event","Q56693592":"event","Q57230913":"event","Q57230983":"event","Q57231053":"event","Q57231515":"event","Q57243925":"event","Q57245644":"event","Q57395662":"event","Q57704134":"event","Q57705332":"event","Q57705743":"event","Q57706627":"event","Q57706956":"event","Q57951992":"event","Q57968196":"event","Q57968923":"event","Q57968926":"event","Q57968927":"event","Q57968924":"event","Q57968930":"event","Q57968928":"event","Q57968929":"event","Q57968934":"event","Q57968935":"event","Q57968932":"event","Q57968933":"event","Q57968936":"event","Q57986308":"event","Q58071798":"event","Q58071796":"event","Q58071797":"event","Q58213924":"event","Q58213938":"event","Q58213944":"event","Q58213945":"event","Q58493939":"event","Q58494064":"event","Q58495051":"event","Q58495055":"event","Q58495053":"event","Q58495058":"event","Q58495059":"event","Q58495056":"event","Q58495060":"event","Q58498618":"event","Q58950425":"event","Q59619308":"event","Q59671219":"event","Q59671217":"event","Q59671223":"event","Q59671221":"event","Q59788602":"event","Q60323809":"event","Q60575823":"event","Q60575824":"event","Q60642909":"event","Q60664110":"event","Q61014092":"event","Q61031506":"event","Q61031605":"event","Q61031737":"event","Q61031815":"event","Q61031941":"event","Q61032111":"event","Q61032186":"event","Q61032386":"event","Q61032449":"event","Q61032536":"event","Q61032625":"event","Q61523415":"event","Q61523419":"event","Q61523417":"event","Q61523423":"event","Q61523420":"event","Q61523426":"event","Q61523427":"event","Q61523424":"event","Q61523431":"event","Q61523429":"event","Q61523433":"event","Q61745481":"event","Q61757344":"event","Q61757493":"event","Q61943965":"event","Q61943991":"event","Q61963754":"event","Q62084725":"event","Q62090671":"event","Q62119155":"event","Q62129037":"event","Q62129064":"event","Q62129081":"event","Q62129128":"event","Q62256950":"event","Q62502059":"event","Q62522301":"event","Q62522627":"event","Q62522631":"event","Q62522629":"event","Q62522634":"event","Q62522632":"event","Q62522633":"event","Q62522638":"event","Q62522639":"event","Q62522636":"event","Q62574648":"event","Q62574747":"event","Q62574750":"event","Q62574748":"event","Q62574749":"event","Q62760071":"event","Q62760072":"event","Q62760090":"event","Q62776650":"event","Q62776654":"event","Q62776655":"event","Q62776652":"event","Q62776653":"event","Q62776659":"event","Q62776657":"event","Q62776662":"event","Q62776660":"event","Q62776661":"event","Q63098730":"event","Q63098731":"event","Q63098728":"event","Q63098729":"event","Q63098732":"event","Q63278833":"event","Q63378902":"event","Q63378975":"event","Q63379048":"event","Q63413826":"event","Q63518629":"event","Q63870341":"event","Q63952056":"event","Q63975026":"event","Q63976615":"event","Q64160614":"event","Q64165291":"event","Q64165396":"event","Q64213715":"event","Q64400071":"event","Q64400069":"event","Q64400074":"event","Q64400075":"event","Q64400072":"event","Q64400078":"event","Q64400079":"event","Q64400077":"event","Q64400081":"event","Q64444896":"event","Q64447043":"event","Q64447202":"event","Q64681931":"event","Q64699687":"event","Q64768745":"event","Q64822103":"event","Q64822109":"event","Q64995988":"event","Q65557276":"event","Q65951878":"event","Q65951893":"event","Q65951896":"event","Q67052094":"event","Q67189780":"event","Q68029340":"event","Q68029458":"event","Q68201182":"event","Q68340415":"event","Q70623867":"event","Q71702390":"event","Q72197764":"event","Q72488933":"event","Q72488939":"event","Q72488936":"event","Q73175104":"event","Q74465864":"event","Q74901551":"event","Q75034068":"event","Q77537745":"event","Q77702102":"event","Q78636280":"event","Q78657185":"event","Q78657993":"event","Q78658035":"event","Q78661639":"event","Q78662196":"event","Q78662265":"event","Q78662341":"event","Q78662786":"event","Q78663061":"event","Q78663304":"event","Q78663480":"event","Q78663639":"event","Q79030956":"event","Q79032374":"event","Q79032687":"event","Q79033337":"event","Q79040252":"event","Q79138369":"event","Q79138555":"event","Q79138655":"event","Q79140165":"event","Q79973205":"event","Q81061076":"event","Q81072420":"event","Q81560194":"event","Q82110092":"event","Q82110508":"event","Q83196135":"event","Q83255087":"event","Q83255089":"event","Q83255108":"event","Q83255167":"event","Q83255174":"event","Q83255207":"event","Q83255226":"event","Q83255245":"event","Q83854759":"event","Q83854756":"event","Q83854761":"event","Q83854799":"event","Q83854797":"event","Q83854800":"event","Q83854895":"event","Q83854898":"event","Q83854935":"event","Q83854940":"event","Q83855229":"event","Q83855235":"event","Q83855233":"event","Q83855398":"event","Q83855396":"event","Q83855402":"event","Q83855401":"event","Q83855404":"event","Q83855405":"event","Q83855408":"event","Q83855460":"event","Q83855507":"event","Q83855510":"event","Q83855515":"event","Q83855518":"event","Q83855522":"event","Q83855521":"event","Q83855527":"event","Q83855524":"event","Q83855529":"event","Q83855532":"event","Q83855544":"event","Q83855738":"event","Q83855743":"event","Q83855750":"event","Q83855753":"event","Q104162714":"event","Q104165441":"event","Q104188984":"event","Q104190274":"event","Q104190358":"event","Q104218473":"event","Q104637782":"event","Q104639890":"event","Q104640044":"event","Q104640045":"event","Q104640049":"event","Q104640070":"event","Q104640102":"event","Q104640116":"event","Q104640129":"event","Q104640132":"event","Q104640141":"event","Q104640146":"event","Q104640150":"event","Q104640154":"event","Q104883588":"event","Q104905087":"event","Q104905088":"event","Q104905104":"event","Q104905105":"event","Q105112721":"event","Q105131317":"event","Q105131444":"event","Q105132143":"event","Q105758689":"event","Q83855758":"event","Q83855762":"event","Q83855785":"event","Q83855807":"event","Q84321423":"event","Q84321452":"event","Q84446581":"event","Q84726208":"event","Q84726461":"event","Q84729522":"event","Q84729521":"event","Q84729527":"event","Q84729534":"event","Q84729540":"event","Q84856966":"event","Q84965787":"event","Q84965785":"event","Q84965789":"event","Q84965795":"event","Q84965792":"event","Q84965798":"event","Q84965799":"event","Q84986963":"event","Q84986961":"event","Q84986964":"event","Q84990967":"event","Q84990969":"event","Q85015444":"event","Q85863623":"event","Q86662811":"event","Q89385140":"event","Q97185219":"event","Q97185233":"event","Q97185239":"event","Q97185246":"event","Q97185254":"event","Q97187856":"event","Q97187865":"event","Q98104316":"event","Q98163565":"event","Q98398890":"event","Q98398941":"event","Q98721531":"event","Q98967055":"event","Q99229480":"event","Q99229530":"event","Q99229528":"event","Q99229529":"event","Q99229539":"event","Q99229537":"event","Q99229542":"event","Q99229540":"event","Q99229541":"event","Q99329324":"event","Q99392587":"event","Q99530870":"event","Q100272026":"event","Q100325534":"event","Q100326183":"event","Q100326366":"event","Q100326657":"event","Q100326876":"event","Q100327189":"event","Q100327225":"event","Q101249177":"event","Q101579660":"event","Q102046490":"event","Q102073524":"event","Q102179006":"event","Q102251450":"event","Q105941657":"event","Q105941805":"event","Q105943253":"event","Q106070210":"event","Q106070222":"event","Q106084806":"event","Q106117815":"event","Q106118024":"event","Q106118200":"event","Q106185882":"event","Q106192709":"event","Q106225624":"event","Q106225689":"event","Q106226041":"event","Q106227751":"event","Q106239489":"event","Q106240664":"event","Q106433771":"event","Q106584158":"event","Q106589773":"event","Q106626680":"event","Q106626752":"event","Q106626947":"event","Q106627264":"event","Q106782630":"event","Q106782629":"event","Q106862412":"event","Q106862544":"event","Q106862694":"event","Q106875433":"event","Q106901107":"event","Q106960448":"event","Q107212569":"event","Q107233692":"event","Q107262860":"event","Q107326983":"event","Q107350378":"event","Q107350382":"event","Q107350380":"event","Q107350384":"event","Q107452748":"event","Q107526489":"event","Q107560017":"event","Q107710890":"event","Q107931315":"event","Q107976296":"event","Q108142886":"event","Q108172230":"event","Q108197755":"event","Q108381334":"event","Q108515575":"event","Q108541596":"event","Q108748369":"event","Q108827291":"event","Q108827288":"event","Q108827289":"event","Q108827295":"event","Q108827293":"event","Q108827297":"event","Q108827303":"event","Q108827300":"event","Q108827334":"event","Q108899420":"event","Q108936124":"event","Q109382009":"event","Q109552293":"event","Q109552501":"event","Q109552571":"event","Q109570054":"event","Q109570236":"event","Q109570243":"event","Q109588483":"event","Q109588860":"event","Q109588878":"event","Q109601419":"event","Q109601422":"event","Q109601423":"event","Q109601420":"event","Q109601426":"event","Q109601424":"event","Q109601425":"event","Q109735618":"event","Q109735617":"event","Q109772268":"event","Q109910494":"event","Q109910534":"event","Q109943248":"event","Q110375634":"event","Q110385686":"event","Q110507296":"event","Q110525939":"event","Q110526493":"event","Q110540236":"event","Q110540393":"event","Q110540410":"event","Q110540427":"event","Q110540751":"event","Q110651754":"event","Q110651755":"event","Q110651753":"event","Q110651758":"event","Q110651759":"event","Q110651756":"event","Q110651757":"event","Q110651762":"event","Q110651760":"event","Q110651761":"event","Q110658789":"event","Q110658885":"event","Q110658930":"event","Q110659099":"event","Q110659125":"event","Q110663893":"event","Q110667299":"event","Q110667334":"event","Q110713900":"event","Q110765120":"event","Q110765437":"event","Q110773675":"event","Q110773700":"event","Q110773943":"event","Q110774066":"event","Q110774232":"event","Q110774272":"event","Q110774286":"event","Q110774334":"event","Q110774652":"event","Q110774694":"event","Q110774761":"event","Q110774855":"event","Q110775170":"event","Q110775353":"event","Q110775387":"event","Q110909350":"event","Q110909349":"event","Q110915790":"event","Q111016665":"event","Q111169542":"event","Q111185909":"event","Q111186223":"event","Q111252891":"event","Q111253400":"event","Q111264661":"event","Q111306175":"event","Q111366007":"event","Q111524372":"event","Q111540569":"event","Q111568522":"event","Q111568521":"event","Q111585112":"event","Q111585113":"event","Q111591278":"event","Q111591279":"event","Q111591276":"event","Q111591277":"event","Q111591282":"event","Q111591280":"event","Q111591281":"event","Q111591284":"event","Q111591291":"event","Q111601871":"event","Q111794243":"event","Q111804978":"event","Q111832549":"event","Q112112534":"event","Q112116952":"event","Q112156780":"event","Q112185999":"event","Q112186026":"event","Q112188436":"event","Q112188889":"event","Q112289208":"event","Q112408535":"event","Q112567274":"event","Q112582353":"event","Q112582625":"event","Q112748607":"event","Q112748781":"event","Q112748851":"event","Q112789993":"event","Q113129352":"event","Q113167930":"event","Q113271013":"event","Q113272267":"event","Q113272370":"event","Q113272453":"event","Q113272567":"event","Q113329651":"event","Q113329654":"event","Q113329655":"event","Q113329652":"event","Q113329653":"event","Q113329658":"event","Q113329659":"event","Q113329657":"event","Q113329660":"event","Q113374463":"event","Q113532230":"event","Q113532279":"event","Q113532354":"event","Q113532365":"event","Q113571394":"event","Q113653019":"event","Q113678884":"event","Q113678987":"event","Q113867083":"event","Q113990254":"event","Q114164912":"event","Q114912404":"event","Q114913006":"event","Q114979598":"event","Q114984090":"event","Q114984092":"event","Q115110630":"event","Q115110631":"event","Q115110632":"event","Q115110642":"event","Q115110643":"event","Q115110644":"event","Q115110645":"event","Q115288391":"event","Q115288394":"event","Q115288395":"event","Q115288392":"event","Q115288393":"event","Q115288398":"event","Q115288396":"event","Q115288397":"event","Q115315970":"event","Q115315971":"event","Q115315972":"event","Q115315973":"event","Q115374356":"event","Q115483246":"event","Q115565418":"event","Q115565419":"event","Q115565416":"event","Q115565417":"event","Q115589128":"event","Q115589129":"event","Q115596442":"event","Q115596443":"event","Q115598818":"event","Q115598819":"event","Q115752757":"event","Q115773601":"event","Q115868058":"event","Q115868059":"event","Q115869246":"event","Q115869247":"event","Q115869245":"event","Q115869248":"event","Q116152195":"event","Q116152259":"event","Q116152348":"event","Q116152364":"event","Q116152418":"event","Q116152533":"event","Q116152751":"event","Q116155024":"event","Q116155031":"event","Q116255006":"event","Q116255007":"event","Q116255005":"event","Q116255008":"event","Q116255009":"event","Q116299020":"event","Q116299062":"event","Q116299093":"event","Q116299145":"event","Q116299165":"event","Q116299403":"event","Q116302604":"event","Q116302706":"event","Q116303034":"event","Q116303778":"event","Q116303786":"event","Q116303941":"event","Q116303975":"event","Q116304050":"event","Q116312519":"event","Q116312877":"event","Q116312886":"event","Q116312902":"event","Q116312975":"event","Q116313048":"event","Q116313196":"event","Q116313366":"event","Q116313397":"event","Q116685227":"event","Q116685228":"event","Q116685229":"event","Q116731952":"event","Q116731971":"event","Q116731988":"event","Q116765774":"event","Q116765775":"event","Q116765772":"event","Q116765773":"event","Q116765776":"event","Q116765778":"event","Q116765777":"event","Q116766678":"event","Q116766679":"event","Q116766676":"event","Q116766677":"event","Q116766682":"event","Q116766683":"event","Q116766680":"event","Q116766681":"event","Q117021810":"event","Q117022260":"event","Q117156927":"event","Q117221420":"event","Q117221518":"event","Q117231274":"event","Q117234249":"event","Q117289813":"event","Q117314417":"event","Q117314441":"event","Q117314931":"event","Q117314932":"event","Q117318170":"event","Q117337463":"event","Q117337490":"event","Q117351839":"event","Q117400498":"event","Q117447099":"event","Q117447497":"event","Q117454814":"event","Q117465344":"event","Q117599022":"event","Q117803376":"event","Q117808074":"event","Q117814810":"event","Q118455775":"event","Q118463823":"event","Q118558978":"event","Q118581510":"event","Q118864475":"event","Q118866521":"event","Q118866858":"event","Q118867410":"event","Q118891887":"event","Q118940032":"event","Q118947358":"event","Q118976356":"event","Q118976382":"event","Q119140910":"event","Q119154321":"event","Q119154966":"event","Q119155020":"event","Q119155131":"event","Q119155227":"event","Q119170494":"event","Q119170595":"event","Q119208733":"event","Q119225276":"event","Q119239055":"event","Q119239739":"event","Q119248061":"event","Q119248559":"event","Q119249653":"event","Q119358873":"event","Q119495261":"event","Q119510876":"event","Q119718200":"event","Q119765405":"event","Q120152038":"event","Q120152040":"event","Q120229765":"event","Q120229801":"event","Q120236353":"event","Q120236368":"event","Q120932759":"event","Q120934833":"event","Q120986432":"event","Q121335162":"event","Q121590507":"event","Q121738357":"event","Q121738627":"event","Q121904863":"event","Q122166712":"event","Q122167433":"event","Q122365077":"event","Q122366870":"event","Q122853241":"event","Q122853277":"event","Q122898721":"event","Q123022730":"event","Q123022731":"event","Q123022781":"event","Q123394247":"event","Q123558215":"event","Q124004149":"event","Q124034665":"event","Q124035126":"event","Q124071496":"event","Q124078038":"event","Q124078057":"event","Q106092311":"event","Q111584854":"event","Q111584855":"event","Q111584853":"event","Q111584856":"event","Q111584857":"event","Q111584937":"event","Q113531573":"event","Q113884764":"event","Q114708403":"event","Q114708407":"event","Q114708404":"event","Q114708405":"event","Q114708408":"event","Q114708409":"event","Q119109227":"event","Q119357242":"event","Q119357241":"event","Q119357247":"event","Q119357244":"event","Q119357245":"event","Q124078080":"event","Q124078088":"event","Q124078412":"event","Q124089963":"event","Q124090189":"event","Q124093737":"event","Q124094246":"event","Q124094287":"event","Q124094337":"event","Q124094504":"event","Q124094531":"event","Q124094549":"event","Q124094673":"event","Q124094714":"event","Q124094723":"event","Q124094761":"event","Q124094846":"event","Q124094844":"event","Q124094869":"event","Q124094876":"event","Q124094892":"event","Q124094970":"event","Q124095036":"event","Q124159901":"event","Q124159941":"event","Q124160083":"event","Q124168870":"event","Q124170777":"event","Q124170918":"event","Q124171077":"event","Q124171203":"event","Q124171263":"event","Q124171358":"event","Q124171402":"event","Q124201053":"event","Q124201202":"event","Q124201234":"event","Q124201410":"event","Q124202644":"event","Q124203253":"event","Q124203675":"event","Q124206685":"event","Q124208327":"event","Q124208395":"event","Q124208569":"event","Q124212291":"event","Q124212349":"event","Q124428628":"event","Q124428720":"event","Q124445983":"event","Q124446010":"event","Q124446027":"event","Q124446036":"event","Q124446089":"event","Q124617568":"event","Q124753956":"event","Q124759800":"event","Q19832834":"event","Q19832835":"event","Q19832832":"event","Q19832833":"event","Q19832836":"event","Q19832837":"event","Q20080416":"event","Q20724108":"event","Q20736216":"event","Q20739152":"event","Q21069083":"event","Q24261981":"event","Q28497728":"event","Q51281531":"event","Q51282011":"event","Q51282264":"event","Q51282485":"event","Q51283047":"event","Q51283189":"event","Q51880006":"event","Q51880004":"event","Q61631431":"event","Q105755085":"event","Q106018423":"event","Q106018425":"event","Q106603126":"event","Q107145230":"event","Q110307844":"event","Q112258034":"event","Q113884706":"event","Q116685236":"event","Q118132344":"event","Q118640125":"event","Q119255690":"event","Q119255695":"event","Q119255693":"event","Q119255699":"event","Q119292430":"event","Q119292431":"event","Q119292429":"event","Q119292432":"event","Q119312353":"event","Q119312358":"event","Q119312357":"event","Q119312361":"event","Q119356700":"event","Q119357251":"event","Q119357248":"event","Q119357249":"event","Q119524701":"event","Q119524707":"event","Q119524711":"event","Q119524708":"event","Q119524714":"event","Q119524712":"event","Q119524713":"event","Q119527050":"event","Q119527091":"event","Q119527092":"event","Q119527098":"event","Q119527099":"event","Q119527096":"event","Q119527097":"event","Q119527102":"event","Q123162021":"event","Q123901931":"event","Q124526901":"event","Q124526910":"event","Q124526923":"event","Q509309":"event","Q616086":"event","Q668109":"event","Q1141655":"event","Q1542389":"event","Q2890069":"event","Q2996834":"event","Q3001421":"event","Q3001437":"event","Q3113744":"event","Q3406972":"event","Q3533389":"event","Q3533487":"event","Q3533543":"event","Q3533541":"event","Q3533544":"event","Q3539817":"event","Q3540368":"event","Q5753347":"event","Q16560271":"event","Q16560268":"event","Q16560274":"event","Q16560277":"event","Q16560281":"event","Q16560284":"event","Q16680601":"event","Q16680628":"event","Q16912480":"event","Q17115678":"event","Q17311592":"event","Q17631761":"event","Q19795851":"event","Q20017663":"event","Q20017698":"event","Q20084073":"event","Q20730612":"event","Q20730613":"event","Q36092437":"event","Q49677239":"event","Q51278818":"event","Q51284857":"event","Q51285022":"event","Q51285462":"event","Q60014623":"event","Q61610722":"event","Q64440768":"event","Q65129902":"event","Q85521237":"event","Q85567688":"event","Q85621615":"event","Q85623664":"event","Q97515764":"event","Q99008822":"event","Q104784006":"event","Q104784011":"event","Q108713051":"event","Q110656570":"event","Q111286034":"event","Q111585098":"event","Q111585099":"event","Q111585102":"event","Q111585103":"event","Q111585100":"event","Q111585101":"event","Q111585106":"event","Q111585107":"event","Q111585104":"event","Q111585105":"event","Q111585108":"event","Q111585109":"event","Q111652095":"event","Q111652096":"event","Q111652097":"event","Q111657358":"event","Q111657617":"event","Q111668426":"event","Q112760275":"event","Q112760341":"event","Q112760396":"event","Q112760458":"event","Q112760501":"event","Q112760557":"event","Q114230889":"event","Q114231184":"event","Q114231288":"event","Q114231354":"event","Q114231485":"event","Q114231496":"event","Q114231503":"event","Q114231514":"event","Q114231550":"event","Q114231557":"event","Q114231574":"event","Q114231594":"event","Q114231675":"event","Q114231860":"event","Q116652524":"event","Q116652707":"event","Q116737965":"event","Q116737972":"event","Q116737996":"event","Q117022091":"event","Q117220286":"event","Q117220311":"event","Q117220363":"event","Q117220411":"event","Q117223263":"event","Q117231255":"event","Q117231292":"event","Q117233558":"event","Q117275885":"event","Q117318748":"event","Q117351736":"event","Q117358545":"event","Q117358561":"event","Q117400088":"event","Q21072503":"event","Q24578697":"event","Q24579050":"event","Q25346446":"event","Q26208618":"event","Q26860260":"event","Q29103688":"event","Q29448894":"event","Q29449259":"event","Q29450138":"event","Q52376104":"event","Q52385058":"event","Q52637748":"event","Q60668790":"event","Q60668791":"event","Q60668794":"event","Q60668795":"event","Q60668792":"event","Q60668793":"event","Q60668798":"event","Q60668796":"event","Q60668797":"event","Q63413896":"event","Q63614881":"event","Q63614920":"event","Q68921722":"event","Q69557670":"event","Q85863162":"event","Q85863166":"event","Q85863169":"event","Q85863173":"event","Q85863177":"event","Q86674447":"event","Q98818329":"event","Q99572007":"event","Q100325483":"event","Q100325702":"event","Q108138562":"event","Q108343976":"event","Q109589485":"event","Q109601427":"event","Q109601430":"event","Q109601431":"event","Q109601428":"event","Q109601429":"event","Q109601432":"event","Q109601433":"event","Q110526230":"event","Q110526643":"event","Q110526763":"event","Q110527184":"event","Q110527206":"event","Q110527211":"event","Q110527221":"event","Q110527228":"event","Q110536842":"event","Q110539791":"event","Q110539843":"event","Q110540140":"event","Q110540159":"event","Q110540168":"event","Q111468922":"event","Q112175376":"event","Q113411379":"event","Q114293946":"event","Q117318609":"event","Q117464894":"event","Q117465445":"event","Q117465458":"event","Q117850369":"event","Q118121706":"event","Q118976115":"event","Q119083741":"event","Q119083831":"event","Q119085725":"event","Q119137866":"event","Q119137963":"event","Q119140638":"event","Q121509614":"event","Q122166803":"event","Q124168929":"event","Q124168966":"event","Q124169232":"event","Q124169730":"event","Q124209848":"event","Q124209919":"event","Q124209976":"event","Q124210041":"event","Q124210348":"event","Q124210423":"event","Q124210481":"event","Q124210549":"event","Q124210598":"event","Q124210657":"event","Q124210702":"event","Q124210752":"event","Q124210793":"event","Q124210885":"event","Q124210980":"event","Q124211048":"event","Q386627":"event","Q608142":"event","Q728326":"event","Q772952":"event","Q929733":"event","Q1108590":"event","Q1538309":"event","Q1771238":"event","Q2954417":"event","Q2954510":"event","Q2954514":"event","Q2954512":"event","Q2954513":"event","Q2954518":"event","Q2954519":"event","Q2954522":"event","Q2954523":"event","Q2954520":"event","Q2954521":"event","Q2954528":"event","Q2954777":"event","Q3441702":"event","Q3441700":"event","Q3652582":"event","Q3652580":"event","Q3652581":"event","Q3652584":"event","Q20076345":"event","Q26840233":"event","Q51168266":"event","Q54102490":"event","Q62623380":"event","Q64584921":"event","Q84446337":"event","Q93372357":"event","Q98718307":"event","Q100326462":"event","Q3652586":"event","Q3652587":"event","Q3652585":"event","Q3652588":"event","Q3653994":"event","Q3653995":"event","Q3653993":"event","Q3653998":"event","Q3653996":"event","Q3653997":"event","Q3654000":"event","Q3654001":"event","Q4571048":"event","Q4574419":"event","Q4590185":"event","Q4590325":"event","Q4591350":"event","Q4594484":"event","Q4598462":"event","Q4599725":"event","Q4601102":"event","Q4602491":"event","Q4603969":"event","Q4605777":"event","Q4606158":"event","Q4607964":"event","Q4608410":"event","Q4608409":"event","Q4610522":"event","Q4610962":"event","Q4610963":"event","Q4613273":"event","Q4613743":"event","Q4613745":"event","Q4806618":"event","Q11600917":"event","Q14126647":"event","Q15772317":"event","Q15772676":"event","Q15772698":"event","Q15784208":"event","Q16274868":"event","Q16535172":"event","Q16535181":"event","Q16535185":"event","Q16535191":"event","Q16535197":"event","Q16535205":"event","Q16535209":"event","Q16535212":"event","Q16535217":"event","Q16535222":"event","Q16535229":"event","Q16535233":"event","Q16535238":"event","Q16535242":"event","Q16535247":"event","Q16535250":"event","Q16535258":"event","Q16535261":"event","Q16538020":"event","Q16627615":"event","Q17176044":"event","Q17266103":"event","Q17377494":"event","Q17377493":"event","Q17512649":"event","Q17623292":"event","Q17623299":"event","Q17623307":"event","Q17623304":"event","Q17623313":"event","Q17623318":"event","Q17623323":"event","Q17623328":"event","Q17623332":"event","Q17623336":"event","Q17623340":"event","Q17623344":"event","Q17623351":"event","Q17623348":"event","Q17624302":"event","Q17624307":"event","Q17624304":"event","Q18086258":"event","Q18416668":"event","Q18416675":"event","Q18416673":"event","Q18416676":"event","Q18416680":"event","Q18416695":"event","Q18416700":"event","Q18416704":"event","Q18610964":"event","Q19390636":"event","Q19403764":"event","Q19621592":"event","Q19621593":"event","Q19834172":"event","Q19834173":"event","Q19834863":"event","Q19952070":"event","Q19952271":"event","Q20806274":"event","Q20806273":"event","Q21077649":"event","Q21662293":"event","Q22677401":"event","Q23021469":"event","Q23043007":"event","Q23058938":"event","Q23058937":"event","Q23069702":"event","Q23069708":"event","Q23889459":"event","Q23889456":"event","Q23889457":"event","Q23889460":"event","Q23889469":"event","Q23889478":"event","Q23889479":"event","Q23925812":"event","Q24082748":"event","Q25382422":"event","Q25400078":"event","Q25400080":"event","Q25400081":"event","Q25400087":"event","Q25400084":"event","Q25400085":"event","Q25400090":"event","Q25400091":"event","Q25400088":"event","Q25400089":"event","Q25400099":"event","Q26883403":"event","Q26883441":"event","Q26885344":"event","Q26885403":"event","Q26885401":"event","Q26897389":"event","Q26898995":"event","Q26899000":"event","Q26912678":"event","Q26913556":"event","Q26913595":"event","Q26913599":"event","Q27074370":"event","Q28811267":"event","Q28824105":"event","Q29531801":"event","Q30752624":"event","Q30752667":"event","Q30754608":"event","Q30754631":"event","Q30754639":"event","Q30754641":"event","Q30894535":"event","Q30894537":"event","Q30894543":"event","Q30894544":"event","Q31271383":"event","Q31271456":"event","Q33314107":"event","Q33315723":"event","Q33316615":"event","Q33317179":"event","Q33342435":"event","Q33343807":"event","Q34935339":"event","Q34936787":"event","Q47010899":"event","Q48689333":"event","Q48789878":"event","Q48833948":"event","Q50061750":"event","Q50061865":"event","Q50062728":"event","Q50062776":"event","Q50063223":"event","Q50064443":"event","Q51845327":"event","Q51879172":"event","Q52289253":"event","Q52635980":"event","Q52786206":"event","Q54314912":"event","Q54315111":"event","Q54315204":"event","Q54315820":"event","Q54315986":"event","Q54318231":"event","Q54318238":"event","Q55776511":"event","Q55776556":"event","Q55776607":"event","Q56014060":"event","Q56027540":"event","Q56313866":"event","Q56313869":"event","Q56315166":"event","Q56315182":"event","Q56326424":"event","Q56326425":"event","Q60551783":"event","Q60551921":"event","Q60628901":"event","Q60842227":"event","Q60842373":"event","Q60842378":"event","Q60842441":"event","Q60842445":"event","Q60848305":"event","Q60853039":"event","Q60969777":"event","Q62132450":"event","Q62132502":"event","Q62132529":"event","Q62132551":"event","Q63385605":"event","Q63385630":"event","Q63441641":"event","Q63441650":"event","Q63522131":"event","Q63522129":"event","Q63522135":"event","Q63522141":"event","Q63522146":"event","Q64174122":"event","Q64788374":"event","Q64825869":"event","Q65130192":"event","Q65130193":"event","Q65149786":"event","Q66334675":"event","Q66338007":"event","Q66361040":"event","Q66363942":"event","Q66368955":"event","Q66369340":"event","Q73797407":"event","Q73797418":"event","Q73797425":"event","Q73797437":"event","Q73797447":"event","Q73797457":"event","Q73797465":"event","Q73797484":"event","Q73797494":"event","Q73797511":"event","Q73797521":"event","Q83283600":"event","Q83283607":"event","Q83283604":"event","Q83283610":"event","Q83283612":"event","Q83284302":"event","Q83284307":"event","Q83284304":"event","Q83284305":"event","Q83284311":"event","Q83284309":"event","Q83284314":"event","Q83284319":"event","Q83284317":"event","Q83284322":"event","Q83284323":"event","Q83284320":"event","Q83284326":"event","Q83284327":"event","Q83284331":"event","Q83284329":"event","Q83284335":"event","Q83284333":"event","Q83284338":"event","Q83284339":"event","Q83284337":"event","Q83284342":"event","Q83284340":"event","Q83284341":"event","Q83284347":"event","Q83284344":"event","Q83284345":"event","Q83284351":"event","Q83284349":"event","Q83284354":"event","Q83284355":"event","Q83284352":"event","Q83284358":"event","Q83284359":"event","Q83284363":"event","Q83284361":"event","Q83284367":"event","Q83284364":"event","Q83284368":"event","Q83284369":"event","Q83284375":"event","Q83284373":"event","Q83284378":"event","Q83284376":"event","Q83284379":"event","Q83284382":"event","Q83284386":"event","Q83284384":"event","Q83284389":"event","Q83284394":"event","Q83284393":"event","Q83284398":"event","Q83284399":"event","Q83284400":"event","Q83284407":"event","Q83284404":"event","Q83284410":"event","Q83284411":"event","Q83284409":"event","Q83284415":"event","Q83284412":"event","Q83284413":"event","Q83284416":"event","Q84051301":"event","Q84051306":"event","Q84051311":"event","Q84051318":"event","Q84051327":"event","Q84051324":"event","Q84051329":"event","Q84051335":"event","Q84051332":"event","Q84051341":"event","Q84051344":"event","Q84051349":"event","Q84051352":"event","Q84051359":"event","Q84051356":"event","Q84051362":"event","Q84051369":"event","Q84051376":"event","Q84051381":"event","Q84051389":"event","Q84051397":"event","Q84051407":"event","Q84051414":"event","Q84051419":"event","Q84051426":"event","Q84051434":"event","Q84051441":"event","Q84051444":"event","Q84051450":"event","Q84051455":"event","Q84051460":"event","Q84051464":"event","Q84051470":"event","Q84051473":"event","Q84051478":"event","Q84051487":"event","Q84051484":"event","Q84051494":"event","Q84051500":"event","Q85521188":"event","Q85521227":"event","Q86001902":"event","Q86001900":"event","Q86001909":"event","Q86001914":"event","Q86001912":"event","Q86001922":"event","Q86001920":"event","Q86001924":"event","Q86001930":"event","Q86001932":"event","Q86001933":"event","Q86001943":"event","Q86001941":"event","Q86001946":"event","Q86001951":"event","Q86001955":"event","Q86001958":"event","Q86001963":"event","Q86001965":"event","Q86001969":"event","Q86001973":"event","Q86001977":"event","Q86001983":"event","Q86001980":"event","Q86100016":"event","Q86100017":"event","Q86110781":"event","Q86110785":"event","Q86110791":"event","Q86110789":"event","Q86110794":"event","Q86110797":"event","Q86110802":"event","Q86110800":"event","Q86110804":"event","Q86110811":"event","Q86110819":"event","Q86110816":"event","Q86110823":"event","Q86110832":"event","Q105063399":"event","Q105063403":"event","Q105063405":"event","Q105063414":"event","Q105063423":"event","Q105063436":"event","Q105063450":"event","Q105063455":"event","Q105063452":"event","Q105495580":"event","Q105502908":"event","Q105726382":"event","Q105742460":"event","Q105748804":"event","Q105749411":"event","Q105779238":"event","Q105811397":"event","Q106010815":"event","Q108131308":"event","Q108131364":"event","Q108131421":"event","Q108445412":"event","Q108445449":"event","Q108460620":"event","Q108461414":"event","Q108508009":"event","Q108514308":"event","Q109377918":"event","Q109377917":"event","Q109377963":"event","Q109377965":"event","Q109377992":"event","Q110781539":"event","Q110781555":"event","Q110781813":"event","Q110781831":"event","Q110781844":"event","Q110781856":"event","Q110781862":"event","Q110781871":"event","Q110781875":"event","Q110781880":"event","Q110781886":"event","Q110781888":"event","Q110781896":"event","Q110781904":"event","Q110781908":"event","Q110781913":"event","Q110781919":"event","Q112109754":"event","Q112127653":"event","Q112225662":"event","Q112943792":"event","Q112943861":"event","Q112943913":"event","Q112944011":"event","Q112944049":"event","Q112945875":"event","Q112945938":"event","Q112946320":"event","Q112965610":"event","Q113971808":"event","Q114014345":"event","Q115650842":"event","Q115650962":"event","Q115650984":"event","Q116212632":"event","Q116212771":"event","Q116212775":"event","Q116212782":"event","Q116235747":"event","Q116235753":"event","Q116235757":"event","Q116235761":"event","Q116235767":"event","Q116235773":"event","Q116235781":"event","Q116235786":"event","Q116235790":"event","Q116235797":"event","Q116235904":"event","Q116235908":"event","Q116235913":"event","Q116879127":"event","Q116879130":"event","Q116879128":"event","Q116879129":"event","Q116879262":"event","Q116879263":"event","Q116879264":"event","Q116879265":"event","Q116879310":"event","Q116879309":"event","Q116879350":"event","Q116879351":"event","Q86665241":"event","Q86837754":"event","Q98608830":"event","Q98608838":"event","Q98608863":"event","Q116879542":"event","Q116879543":"event","Q116879540":"event","Q116879541":"event","Q116879546":"event","Q116879547":"event","Q116879544":"event","Q116879545":"event","Q116879550":"event","Q116879551":"event","Q116879548":"event","Q116879549":"event","Q116879586":"event","Q116879587":"event","Q116879584":"event","Q116879585":"event","Q116879590":"event","Q116879591":"event","Q116879588":"event","Q116879589":"event","Q116879594":"event","Q116879595":"event","Q116879592":"event","Q116879593":"event","Q116879598":"event","Q116879596":"event","Q116879634":"event","Q116879662":"event","Q116879661":"event","Q116884126":"event","Q116884127":"event","Q116884125":"event","Q116884128":"event","Q116886182":"event","Q116886180":"event","Q116886463":"event","Q116886464":"event","Q116886731":"event","Q116886732":"event","Q116890422":"event","Q116890421":"event","Q116890435":"event","Q116890442":"event","Q116890443":"event","Q116890444":"event","Q116890466":"event","Q116890467":"event","Q116890464":"event","Q116890465":"event","Q116890470":"event","Q116890471":"event","Q116890468":"event","Q116890469":"event","Q116890474":"event","Q116890475":"event","Q116890472":"event","Q116890473":"event","Q116890476":"event","Q116890486":"event","Q116890487":"event","Q116890490":"event","Q116890491":"event","Q116890488":"event","Q116890489":"event","Q116890494":"event","Q116890495":"event","Q116890492":"event","Q116890493":"event","Q116890498":"event","Q116890496":"event","Q116890497":"event","Q116890531":"event","Q116890534":"event","Q116890532":"event","Q116890533":"event","Q116890547":"event","Q116890550":"event","Q116890548":"event","Q116890549":"event","Q116890678":"event","Q116890679":"event","Q116890682":"event","Q116890683":"event","Q116890680":"event","Q116890681":"event","Q116890698":"event","Q116890699":"event","Q116890702":"event","Q116890703":"event","Q116890700":"event","Q116890701":"event","Q116890707":"event","Q116890710":"event","Q116890708":"event","Q116890709":"event","Q116890718":"event","Q116890716":"event","Q116890717":"event","Q116890720":"event","Q116890763":"event","Q116890766":"event","Q116890767":"event","Q116890764":"event","Q116890765":"event","Q116890770":"event","Q116890771":"event","Q116890768":"event","Q116890769":"event","Q116890772":"event","Q116890782":"event","Q116890783":"event","Q116890781":"event","Q116890786":"event","Q116890787":"event","Q116890784":"event","Q116890785":"event","Q116890790":"event","Q116890788":"event","Q116890789":"event","Q116895662":"event","Q116895663":"event","Q116895661":"event","Q116895726":"event","Q116895727":"event","Q116895730":"event","Q116895728":"event","Q116895729":"event","Q116895734":"event","Q116895735":"event","Q116895733":"event","Q116895736":"event","Q116895737":"event","Q116895818":"event","Q116895816":"event","Q116895817":"event","Q116895879":"event","Q116895882":"event","Q116895883":"event","Q116895880":"event","Q116895881":"event","Q116895886":"event","Q116895887":"event","Q116895884":"event","Q116895885":"event","Q116895888":"event","Q116895974":"event","Q116895978":"event","Q116895979":"event","Q116895976":"event","Q116895977":"event","Q116895982":"event","Q116895980":"event","Q116895981":"event","Q116895984":"event","Q116895985":"event","Q116896402":"event","Q116896403":"event","Q116896400":"event","Q116896401":"event","Q116952302":"event","Q116952306":"event","Q116952307":"event","Q116952304":"event","Q116952305":"event","Q116952311":"event","Q116952309":"event","Q116952314":"event","Q116952312":"event","Q116952313":"event","Q116952316":"event","Q116952778":"event","Q116952779":"event","Q116952782":"event","Q116952781":"event","Q116952807":"event","Q116952804":"event","Q116952805":"event","Q116952850":"event","Q116952851":"event","Q116952852":"event","Q116952858":"event","Q116952857":"event","Q116952910":"event","Q116952911":"event","Q116952908":"event","Q116952909":"event","Q116952914":"event","Q116952915":"event","Q116952912":"event","Q116952913":"event","Q116952918":"event","Q116952919":"event","Q116952916":"event","Q116952917":"event","Q116952922":"event","Q116952923":"event","Q116952920":"event","Q116952921":"event","Q116952924":"event","Q116952925":"event","Q86110839":"event","Q86110842":"event","Q86110847":"event","Q86110844":"event","Q86110854":"event","Q86110858":"event","Q86110861":"event","Q86110866":"event","Q86110871":"event","Q86110875":"event","Q86110879":"event","Q86110883":"event","Q86110887":"event","Q86110895":"event","Q86110899":"event","Q86110903":"event","Q86110909":"event","Q86110913":"event","Q86110918":"event","Q86110924":"event","Q86255950":"event","Q86255954":"event","Q86258967":"event","Q86258970":"event","Q86258971":"event","Q86258968":"event","Q86258969":"event","Q86258974":"event","Q86258972":"event","Q86258973":"event","Q86258978":"event","Q86258976":"event","Q86258977":"event","Q86258983":"event","Q86258980":"event","Q86258981":"event","Q86258985":"event","Q86258991":"event","Q86258992":"event","Q86258997":"event","Q86259003":"event","Q86259000":"event","Q86259007":"event","Q86259010":"event","Q86259012":"event","Q86259018":"event","Q86259019":"event","Q86259022":"event","Q86259021":"event","Q86259026":"event","Q86259024":"event","Q86259031":"event","Q86259028":"event","Q86259029":"event","Q86259039":"event","Q86259037":"event","Q86259041":"event","Q86259044":"event","Q86259051":"event","Q86259048":"event","Q86259055":"event","Q86259058":"event","Q86259062":"event","Q86259069":"event","Q86259075":"event","Q86259078":"event","Q86259081":"event","Q86259085":"event","Q86259091":"event","Q86259088":"event","Q86259093":"event","Q86259099":"event","Q86259096":"event","Q86259109":"event","Q86259115":"event","Q86259112":"event","Q86259118":"event","Q86259122":"event","Q86259127":"event","Q86259124":"event","Q86259132":"event","Q86259136":"event","Q86259145":"event","Q86259150":"event","Q86259154":"event","Q86259158":"event","Q86259163":"event","Q86259166":"event","Q86259171":"event","Q86259177":"event","Q86259185":"event","Q86259190":"event","Q86259188":"event","Q86259193":"event","Q86259199":"event","Q86259196":"event","Q86259203":"event","Q86259207":"event","Q86259214":"event","Q86259218":"event","Q116972343":"event","Q116972344":"event","Q117034742":"event","Q117034743":"event","Q117034746":"event","Q117034747":"event","Q117034744":"event","Q117034745":"event","Q117034750":"event","Q117034751":"event","Q117034748":"event","Q117034749":"event","Q117034754":"event","Q117034755":"event","Q117034752":"event","Q117034753":"event","Q117034756":"event","Q117036962":"event","Q117036960":"event","Q117036966":"event","Q117036964":"event","Q117036970":"event","Q117036971":"event","Q117036968":"event","Q117036975":"event","Q117036973":"event","Q117036979":"event","Q117036976":"event","Q117036977":"event","Q117036982":"event","Q117036980":"event","Q117036986":"event","Q117036985":"event","Q117036991":"event","Q117036988":"event","Q117036989":"event","Q117036994":"event","Q117036993":"event","Q117036998":"event","Q117036999":"event","Q117036996":"event","Q117036997":"event","Q117037002":"event","Q117037003":"event","Q117037001":"event","Q117037006":"event","Q117037007":"event","Q117037005":"event","Q117037010":"event","Q117037011":"event","Q117037009":"event","Q117037014":"event","Q117037012":"event","Q117803422":"event","Q117834380":"event","Q119149257":"event","Q120720977":"event","Q120721210":"event","Q120762066":"event","Q120762067":"event","Q120762065":"event","Q120762070":"event","Q120762068":"event","Q120762069":"event","Q122874603":"event","Q122874604":"event","Q124214641":"event","Q124214646":"event","Q124214648":"event","Q124214659":"event","Q124214666":"event","Q124214740":"event","Q124214747":"event","Q124214751":"event","Q124214757":"event","Q124214767":"event","Q124214785":"event","Q124214945":"event","Q124214957":"event","Q124214965":"event","Q124214971":"event","Q124214978":"event","Q124214986":"event","Q124215278":"event","Q124215279":"event","Q124215276":"event","Q124215277":"event","Q124215282":"event","Q124215283":"event","Q124215280":"event","Q124215281":"event","Q124215546":"event","Q124215547":"event","Q124215550":"event","Q124215551":"event","Q124215548":"event","Q124215549":"event","Q124215554":"event","Q124215552":"event","Q124215974":"event","Q116952994":"event","Q116952995":"event","Q116952998":"event","Q116952999":"event","Q116952996":"event","Q116952997":"event","Q116953002":"event","Q116953003":"event","Q116953000":"event","Q116953001":"event","Q116953006":"event","Q116953007":"event","Q116953004":"event","Q116953005":"event","Q116953010":"event","Q116953011":"event","Q116953008":"event","Q116953009":"event","Q116953058":"event","Q116953059":"event","Q116953062":"event","Q116953063":"event","Q116953060":"event","Q116953061":"event","Q116953064":"event","Q116953106":"event","Q116953107":"event","Q116953110":"event","Q116953111":"event","Q116953108":"event","Q116953109":"event","Q116953112":"event","Q116968210":"event","Q116968211":"event","Q116968214":"event","Q116968215":"event","Q116968212":"event","Q116968213":"event","Q116968216":"event","Q116968250":"event","Q116968251":"event","Q116968248":"event","Q116968249":"event","Q116968254":"event","Q116968252":"event","Q116968253":"event","Q116971587":"event","Q116971590":"event","Q116971591":"event","Q116971588":"event","Q116971589":"event","Q116971594":"event","Q116971595":"event","Q116971592":"event","Q116971593":"event","Q116971670":"event","Q116971671":"event","Q116971674":"event","Q116971675":"event","Q116971672":"event","Q116971673":"event","Q116971678":"event","Q116971676":"event","Q116971677":"event","Q116972278":"event","Q116972279":"event","Q116972276":"event","Q116972277":"event","Q116972282":"event","Q116972283":"event","Q116972280":"event","Q116972281":"event","Q116972286":"event","Q116972287":"event","Q116972284":"event","Q116972285":"event","Q116972290":"event","Q116972291":"event","Q116972288":"event","Q116972289":"event","Q116972294":"event","Q116972292":"event","Q116972293":"event","Q116972326":"event","Q116972327":"event","Q116972325":"event","Q116972330":"event","Q116972331":"event","Q116972328":"event","Q116972334":"event","Q116972335":"event","Q116972332":"event","Q116972333":"event","Q116972338":"event","Q116972339":"event","Q116972336":"event","Q116972337":"event","Q116972342":"event","Q116972340":"event","Q116972341":"event","Q124215975":"event","Q124215978":"event","Q124215979":"event","Q124215976":"event","Q124215977":"event","Q124215982":"event","Q124215983":"event","Q124215980":"event","Q124215986":"event","Q124215987":"event","Q124215984":"event","Q124215985":"event","Q124215990":"event","Q124215991":"event","Q124215988":"event","Q124215989":"event","Q124215994":"event","Q124215995":"event","Q124215992":"event","Q124215993":"event","Q124215996":"event","Q124216147":"event","Q124216150":"event","Q124216151":"event","Q124216148":"event","Q124216149":"event","Q124216154":"event","Q124216155":"event","Q124216152":"event","Q124216158":"event","Q124216159":"event","Q124216156":"event","Q124216157":"event","Q124216162":"event","Q124216163":"event","Q124216160":"event","Q124216161":"event","Q124216166":"event","Q124216167":"event","Q124216164":"event","Q124216165":"event","Q124216168":"event","Q124217842":"event","Q124217843":"event","Q124217840":"event","Q124217841":"event","Q124217846":"event","Q124217844":"event","Q124217845":"event","Q124217850":"event","Q124217851":"event","Q124217848":"event","Q124217849":"event","Q124217854":"event","Q124217855":"event","Q124217852":"event","Q124217853":"event","Q124217858":"event","Q124217859":"event","Q124217856":"event","Q124217857":"event","Q124217862":"event","Q124217863":"event","Q124217860":"event","Q124217861":"event","Q124217970":"event","Q124217971":"event","Q124217968":"event","Q124217969":"event","Q124217974":"event","Q124217975":"event","Q124217972":"event","Q124217973":"event","Q124217978":"event","Q124217976":"event","Q124217977":"event","Q124217982":"event","Q124217983":"event","Q124217980":"event","Q124217986":"event","Q124217987":"event","Q124217984":"event","Q124217985":"event","Q124217990":"event","Q124217988":"event","Q124217994":"event","Q124217995":"event","Q124217992":"event","Q124221826":"event","Q124221827":"event","Q124221830":"event","Q124221828":"event","Q124221829":"event","Q124221895":"event","Q124221898":"event","Q124221899":"event","Q124221896":"event","Q124221897":"event","Q124221900":"event","Q124221985":"event","Q124221986":"event","Q124221987":"event","Q124221990":"event","Q124221988":"event","Q124221989":"event","Q124222071":"event","Q124222074":"event","Q124222075":"event","Q124222072":"event","Q124222073":"event","Q124222078":"event","Q124222079":"event","Q124222076":"event","Q124248822":"event","Q124248823":"event","Q124248826":"event","Q124248827":"event","Q124248824":"event","Q124248825":"event","Q124248830":"event","Q124248831":"event","Q124248828":"event","Q124248829":"event","Q124248834":"event","Q124248835":"event","Q124248832":"event","Q124248833":"event","Q124248838":"event","Q124248839":"event","Q124248837":"event","Q124248842":"event","Q124248843":"event","Q124248840":"event","Q124248841":"event","Q124248846":"event","Q124248847":"event","Q124248844":"event","Q124248845":"event","Q124248848":"event","Q124249374":"event","Q124249375":"event","Q124249378":"event","Q124249379":"event","Q124249376":"event","Q124249377":"event","Q124249382":"event","Q124249383":"event","Q124249380":"event","Q124249381":"event","Q124249386":"event","Q124249387":"event","Q124249384":"event","Q124249385":"event","Q124249390":"event","Q124249391":"event","Q124249388":"event","Q124249389":"event","Q124249394":"event","Q124249395":"event","Q124249392":"event","Q124249393":"event","Q124249398":"event","Q124249399":"event","Q124249396":"event","Q124249397":"event","Q124255754":"event","Q124255755":"event","Q124255758":"event","Q124255759":"event","Q124255756":"event","Q124255757":"event","Q124255763":"event","Q124255760":"event","Q124255766":"event","Q124255767":"event","Q124255765":"event","Q124255770":"event","Q124255771":"event","Q124255768":"event","Q124255769":"event","Q124255774":"event","Q124255775":"event","Q124255773":"event","Q124255778":"event","Q124255779":"event","Q124255776":"event","Q124255777":"event","Q124255782":"event","Q124255780":"event","Q124255781":"event","Q124255784":"event","Q124255830":"event","Q124255831":"event","Q124255829":"event","Q124255834":"event","Q124255832":"event","Q124255833":"event","Q124255838":"event","Q124255836":"event","Q124255837":"event","Q124255839":"event","Q124255842":"event","Q124255843":"event","Q124255840":"event","Q124255841":"event","Q124255846":"event","Q124255847":"event","Q124255844":"event","Q124255845":"event","Q124255850":"event","Q124255851":"event","Q124255848":"event","Q124255849":"event","Q124255854":"event","Q124255855":"event","Q124255852":"event","Q124255856":"event","Q80646":"event","Q80798":"event","Q114396":"event","Q129495":"event","Q129519":"event","Q129523":"event","Q129547":"event","Q129553":"event","Q129570":"event","Q129576":"event","Q129586":"event","Q129589":"event","Q129594":"event","Q129650":"event","Q129656":"event","Q263224":"event","Q492135":"event","Q619439":"event","Q640286":"event","Q689090":"event","Q826505":"event","Q1143844":"event","Q1152549":"event","Q1202209":"event","Q1333003":"event","Q1335357":"event","Q1424329":"event","Q1558992":"event","Q1568490":"event","Q1808124":"event","Q1826259":"event","Q1968135":"event","Q1968137":"event","Q1968143":"event","Q1968141":"event","Q1968148":"event","Q1983791":"event","Q2028330":"event","Q2030105":"event","Q2057230":"event","Q2057790":"event","Q2162676":"event","Q2349412":"event","Q2394441":"event","Q2439460":"event","Q2465478":"event","Q2564187":"event","Q2726103":"event","Q2732940":"event","Q2803099":"event","Q2912687":"event","Q2950086":"event","Q2951255":"event","Q2954296":"event","Q2954297":"event","Q2954341":"event","Q2954766":"event","Q2954773":"event","Q2954780":"event","Q2954781":"event","Q2954795":"event","Q2954793":"event","Q2954798":"event","Q2954799":"event","Q2954796":"event","Q2954803":"event","Q2954801":"event","Q2954807":"event","Q2954810":"event","Q2955090":"event","Q2955088":"event","Q2955089":"event","Q2955095":"event","Q2955092":"event","Q2955093":"event","Q2955103":"event","Q2955100":"event","Q2955101":"event","Q2955107":"event","Q2955114":"event","Q32213":"event","Q32435":"event","Q48651":"event","Q2955183":"event","Q2955189":"event","Q2955198":"event","Q2955199":"event","Q2955202":"event","Q2955203":"event","Q2955201":"event","Q2955207":"event","Q2955204":"event","Q2955205":"event","Q2955210":"event","Q2955211":"event","Q2955208":"event","Q2955209":"event","Q2955214":"event","Q2955212":"event","Q2955216":"event","Q2955217":"event","Q3308402":"event","Q3339162":"event","Q3497134":"event","Q3708829":"event","Q3751354":"event","Q3752748":"event","Q3753205":"event","Q3754283":"event","Q3754388":"event","Q3754706":"event","Q3754756":"event","Q3754828":"event","Q4358575":"event","Q4824456":"event","Q4825487":"event","Q4872094":"event","Q4970541":"event","Q5030372":"event","Q5147941":"event","Q5391764":"event","Q5476928":"event","Q5659819":"event","Q5744760":"event","Q5744803":"event","Q5744857":"event","Q5744861":"event","Q5744864":"event","Q5745104":"event","Q5745110":"event","Q5745407":"event","Q6826228":"event","Q7015539":"event","Q7061200":"event","Q7382088":"event","Q7565756":"event","Q7890777":"event","Q8257676":"event","Q8257682":"event","Q8257794":"event","Q8257799":"event","Q8257802":"event","Q8257833":"event","Q8257837":"event","Q13453902":"event","Q13580466":"event","Q13630437":"event","Q13882369":"event","Q15621925":"event","Q16482051":"event","Q16538033":"event","Q16538037":"event","Q16538040":"event","Q16538044":"event","Q16538054":"event","Q16538079":"event","Q16538081":"event","Q16538087":"event","Q16538092":"event","Q16538096":"event","Q16538105":"event","Q16538111":"event","Q16538109":"event","Q16538159":"event","Q16538163":"event","Q16538167":"event","Q16538171":"event","Q16538184":"event","Q16538191":"event","Q16538188":"event","Q16538203":"event","Q16538200":"event","Q16538206":"event","Q16538209":"event","Q16538226":"event","Q16538229":"event","Q16538236":"event","Q16538240":"event","Q16538248":"event","Q16538252":"event","Q16538259":"event","Q16538256":"event","Q16538267":"event","Q16538271":"event","Q16541584":"event","Q16541602":"event","Q16627599":"event","Q16627607":"event","Q16637287":"event","Q17005940":"event","Q17174286":"event","Q17174777":"event","Q17176936":"event","Q17177294":"event","Q17319607":"event","Q17333808":"event","Q17354255":"event","Q17354258":"event","Q17354256":"event","Q17354263":"event","Q17354260":"event","Q17354267":"event","Q17354265":"event","Q17354271":"event","Q17354269":"event","Q17354275":"event","Q17354277":"event","Q17623844":"event","Q17624378":"event","Q17624381":"event","Q17624395":"event","Q17624398":"event","Q17624403":"event","Q17624413":"event","Q17624418":"event","Q17624423":"event","Q17624427":"event","Q17624434":"event","Q17624438":"event","Q17624443":"event","Q17624440":"event","Q17624447":"event","Q17624449":"event","Q17624456":"event","Q17624460":"event","Q18399671":"event","Q18478496":"event","Q19296998":"event","Q20723205":"event","Q20724394":"event","Q20725783":"event","Q20922021":"event","Q20922024":"event","Q21008186":"event","Q21008184":"event","Q21008185":"event","Q21028787":"event","Q21093817":"event","Q22021840":"event","Q22032084":"event","Q22032107":"event","Q22032209":"event","Q22138682":"event","Q22202441":"event","Q22203114":"event","Q22203119":"event","Q22284173":"event","Q22284183":"event","Q22284186":"event","Q22284188":"event","Q22303135":"event","Q22303150":"event","Q22303149":"event","Q22303152":"event","Q22303186":"event","Q22303252":"event","Q22303469":"event","Q22303567":"event","Q22680842":"event","Q22680863":"event","Q22680886":"event","Q22680897":"event","Q22680990":"event","Q22680998":"event","Q22681009":"event","Q22681018":"event","Q22951216":"event","Q22952793":"event","Q22952823":"event","Q24049992":"event","Q24050002":"event","Q24050000":"event","Q24050007":"event","Q24050008":"event","Q24050070":"event","Q24050074":"event","Q24568909":"event","Q24613102":"event","Q24613191":"event","Q24613911":"event","Q24614056":"event","Q24614205":"event","Q24614340":"event","Q24617646":"event","Q24617648":"event","Q24617852":"event","Q24618030":"event","Q24621530":"event","Q24621627":"event","Q24621798":"event","Q24622562":"event","Q24628140":"event","Q24628162":"event","Q24628181":"event","Q24628198":"event","Q24716544":"event","Q24716839":"event","Q24718413":"event","Q24718418":"event","Q24718419":"event","Q24718416":"event","Q24730499":"event","Q24730502":"event","Q24730503":"event","Q24730506":"event","Q24731406":"event","Q24731478":"event","Q24731482":"event","Q24731826":"event","Q24731830":"event","Q24731829":"event","Q24731834":"event","Q24733085":"event","Q24733090":"event","Q24733095":"event","Q24733093":"event","Q24733638":"event","Q24733666":"event","Q24733669":"event","Q24733738":"event","Q24733742":"event","Q24733779":"event","Q24733820":"event","Q24883478":"event","Q24960050":"event","Q24960051":"event","Q25061038":"event","Q25091617":"event","Q25421980":"event","Q25426410":"event","Q26834055":"event","Q26834056":"event","Q26960669":"event","Q26960674":"event","Q26961031":"event","Q26961035":"event","Q26971074":"event","Q26971143":"event","Q26971246":"event","Q26971250":"event","Q26971248":"event","Q26971252":"event","Q26972715":"event","Q26972719":"event","Q26972716":"event","Q26972717":"event","Q26972773":"event","Q26972778":"event","Q26972779":"event","Q26972776":"event","Q26972777":"event","Q26972874":"event","Q26972875":"event","Q26972872":"event","Q26972873":"event","Q26972922":"event","Q26972921":"event","Q26972926":"event","Q26972925":"event","Q26973043":"event","Q26973046":"event","Q26973044":"event","Q26973045":"event","Q26976065":"event","Q26976092":"event","Q26976108":"event","Q26976129":"event","Q26976182":"event","Q26985011":"event","Q26985015":"event","Q26985012":"event","Q26985016":"event","Q26985335":"event","Q26985338":"event","Q26985336":"event","Q26985337":"event","Q27042370":"event","Q27042369":"event","Q27042375":"event","Q27042378":"event","Q27042376":"event","Q27042380":"event","Q27042497":"event","Q27055722":"event","Q27055723":"event","Q27055721":"event","Q27055734":"event","Q27055738":"event","Q27055736":"event","Q27055741":"event","Q27055744":"event","Q27055745":"event","Q27055750":"event","Q27055756":"event","Q27056303":"event","Q27056305":"event","Q27056311":"event","Q27056308":"event","Q27056315":"event","Q27056312":"event","Q27056383":"event","Q27056386":"event","Q27056388":"event","Q27056389":"event","Q27056392":"event","Q27056458":"event","Q27056456":"event","Q27056457":"event","Q27056462":"event","Q27056460":"event","Q27056464":"event","Q27056631":"event","Q27056629":"event","Q27056634":"event","Q27056637":"event","Q27056640":"event","Q27056641":"event","Q27133416":"event","Q27133451":"event","Q27133448":"event","Q27133456":"event","Q27133460":"event","Q27133465":"event","Q27133468":"event","Q27133583":"event","Q27133593":"event","Q27133611":"event","Q27133615":"event","Q27133617":"event","Q27133623":"event","Q27133620":"event","Q27133626":"event","Q27133918":"event","Q27133950":"event","Q27133954":"event","Q27133959":"event","Q27133956":"event","Q27133962":"event","Q27133964":"event","Q27134043":"event","Q27134040":"event","Q27134051":"event","Q27134056":"event","Q27134060":"event","Q27134066":"event","Q27230404":"event","Q27230414":"event","Q27230432":"event","Q27230433":"event","Q27230439":"event","Q27230442":"event","Q27230443":"event","Q27230444":"event","Q27230450":"event","Q27230453":"event","Q27230456":"event","Q27230478":"event","Q27230606":"event","Q27230607":"event","Q27230604":"event","Q27230610":"event","Q27230611":"event","Q27230608":"event","Q27230609":"event","Q27235631":"event","Q27235634":"event","Q27235638":"event","Q27235639":"event","Q27235636":"event","Q27235637":"event","Q27236651":"event","Q27236656":"event","Q27236665":"event","Q27236674":"event","Q27236680":"event","Q27236695":"event","Q27236708":"event","Q27236728":"event","Q27237161":"event","Q27237171":"event","Q27237175":"event","Q27237183":"event","Q27237193":"event","Q27237198":"event","Q27237206":"event","Q27237210":"event","Q27681895":"event","Q27681893":"event","Q27681898":"event","Q27793461":"event","Q27793496":"event","Q27793536":"event","Q27794746":"event","Q27794750":"event","Q27794756":"event","Q27794855":"event","Q27794858":"event","Q27794861":"event","Q28005879":"event","Q28125537":"event","Q28125542":"event","Q28125545":"event","Q28125550":"event","Q28125548":"event","Q28132274":"event","Q28132278":"event","Q28132279":"event","Q28132277":"event","Q28132280":"event","Q28151176":"event","Q28163319":"event","Q28165138":"event","Q28190815":"event","Q28211992":"event","Q28332658":"event","Q28332657":"event","Q28576528":"event","Q28609069":"event","Q28656933":"event","Q28733458":"event","Q29034385":"event","Q29034408":"event","Q29043254":"event","Q29043252":"event","Q29050118":"event","Q29050117":"event","Q29051258":"event","Q29051257":"event","Q29061754":"event","Q29061811":"event","Q29642128":"event","Q29642153":"event","Q29912832":"event","Q30332239":"event","Q30332240":"event","Q30332311":"event","Q30332326":"event","Q30332486":"event","Q30332500":"event","Q30332625":"event","Q30332638":"event","Q30332699":"event","Q30332711":"event","Q30332737":"event","Q30332749":"event","Q30332806":"event","Q30332811":"event","Q30332844":"event","Q30332850":"event","Q30332924":"event","Q30332930":"event","Q30332988":"event","Q30332996":"event","Q30333018":"event","Q30333032":"event","Q30333102":"event","Q30333125":"event","Q30333137":"event","Q30333152":"event","Q30349213":"event","Q30349217":"event","Q30349222":"event","Q30349232":"event","Q30349356":"event","Q30349366":"event","Q30349364":"event","Q30349371":"event","Q30349373":"event","Q30349383":"event","Q30349395":"event","Q30349402":"event","Q30349411":"event","Q30349415":"event","Q30349435":"event","Q30349432":"event","Q30349441":"event","Q30349446":"event","Q30349468":"event","Q30349473":"event","Q30349480":"event","Q30349486":"event","Q30349499":"event","Q30349502":"event","Q27042498":"event","Q27042502":"event","Q27042506":"event","Q27042507":"event","Q27042512":"event","Q27042786":"event","Q27042784":"event","Q27042790":"event","Q27042795":"event","Q27042797":"event","Q27043197":"event","Q27043318":"event","Q27043317":"event","Q27043327":"event","Q27043324":"event","Q27043325":"event","Q27043330":"event","Q27043339":"event","Q27043336":"event","Q27043341":"event","Q27043345":"event","Q27043349":"event","Q27043353":"event","Q27043356":"event","Q27043357":"event","Q27043610":"event","Q27043926":"event","Q27043927":"event","Q27043924":"event","Q27043925":"event","Q27043929":"event","Q27043934":"event","Q27043932":"event","Q27043933":"event","Q27043936":"event","Q27043947":"event","Q27043944":"event","Q27043945":"event","Q27043949":"event","Q27043955":"event","Q27043952":"event","Q27043958":"event","Q27043957":"event","Q27043960":"event","Q27043961":"event","Q27048363":"event","Q27048368":"event","Q27048369":"event","Q27048374":"event","Q27048375":"event","Q27048376":"event","Q27048377":"event","Q27048382":"event","Q27048383":"event","Q27048387":"event","Q27048384":"event","Q27048385":"event","Q27048391":"event","Q27048388":"event","Q27048394":"event","Q27048395":"event","Q27048392":"event","Q27048393":"event","Q27048398":"event","Q27048396":"event","Q27048406":"event","Q27048410":"event","Q27048411":"event","Q27048408":"event","Q27048412":"event","Q27048419":"event","Q27048422":"event","Q27048423":"event","Q27048420":"event","Q27048421":"event","Q27048425":"event","Q27055514":"event","Q27055512":"event","Q27055530":"event","Q27055551":"event","Q27055552":"event","Q27055558":"event","Q27055557":"event","Q27055623":"event","Q27055626":"event","Q27055624":"event","Q27055631":"event","Q27055629":"event","Q27055694":"event","Q27055699":"event","Q27055696":"event","Q27055697":"event","Q27055700":"event","Q27055707":"event","Q27055710":"event","Q27055711":"event","Q27055712":"event","Q27055713":"event","Q27055719":"event","Q27055720":"event","Q30349507":"event","Q30349510":"event","Q30456396":"event","Q30456409":"event","Q30497949":"event","Q30498304":"event","Q30499104":"event","Q30500581":"event","Q30511620":"event","Q30511651":"event","Q30512013":"event","Q30512030":"event","Q30524613":"event","Q30544370":"event","Q30556121":"event","Q30556202":"event","Q30556990":"event","Q30557029":"event","Q30557246":"event","Q30557249":"event","Q30557308":"event","Q30557312":"event","Q30557504":"event","Q30557523":"event","Q30557562":"event","Q30557561":"event","Q30561188":"event","Q30562947":"event","Q30577810":"event","Q30577809":"event","Q30577837":"event","Q30577841":"event","Q30584235":"event","Q30584268":"event","Q30584329":"event","Q30682148":"event","Q30753955":"event","Q30898554":"event","Q30915924":"event","Q30923541":"event","Q30926120":"event","Q30926620":"event","Q30927681":"event","Q30933299":"event","Q30934322":"event","Q30940417":"event","Q30940580":"event","Q30962987":"event","Q30964094":"event","Q30964501":"event","Q30964896":"event","Q30965843":"event","Q30966333":"event","Q30966782":"event","Q30967329":"event","Q30967435":"event","Q31015105":"event","Q31015860":"event","Q31017274":"event","Q31017682":"event","Q31019781":"event","Q31020172":"event","Q31022185":"event","Q31022477":"event","Q31022784":"event","Q31023710":"event","Q31023986":"event","Q31024430":"event","Q31092105":"event","Q31092255":"event","Q31093255":"event","Q31093431":"event","Q31094517":"event","Q31094722":"event","Q31095887":"event","Q31096001":"event","Q31096068":"event","Q31096609":"event","Q31096694":"event","Q31271010":"event","Q31271012":"event","Q31271024":"event","Q31271029":"event","Q31271315":"event","Q31271316":"event","Q31271494":"event","Q31271492":"event","Q31271499":"event","Q31271503":"event","Q31271587":"event","Q31271588":"event","Q31271605":"event","Q31271608":"event","Q31271615":"event","Q31271620":"event","Q31271624":"event","Q31271625":"event","Q31271644":"event","Q31271645":"event","Q31272638":"event","Q31272785":"event","Q31276622":"event","Q31276813":"event","Q31298588":"event","Q31298865":"event","Q31300263":"event","Q31300750":"event","Q31504857":"event","Q31505332":"event","Q31505544":"event","Q31506358":"event","Q31507244":"event","Q31510394":"event","Q31510801":"event","Q31529645":"event","Q31529845":"event","Q32161692":"event","Q32161847":"event","Q32163348":"event","Q32163496":"event","Q32603438":"event","Q32603698":"event","Q32604159":"event","Q32604399":"event","Q32609249":"event","Q32609464":"event","Q32611136":"event","Q32611380":"event","Q33061377":"event","Q33081164":"event","Q33081176":"event","Q33081846":"event","Q33082278":"event","Q33082366":"event","Q33082364":"event","Q33082393":"event","Q33082396":"event","Q33083546":"event","Q33083550":"event","Q33083817":"event","Q33083826":"event","Q39072687":"event","Q43283498":"event","Q43283500":"event","Q43284119":"event","Q43284125":"event","Q43286073":"event","Q43286408":"event","Q43286449":"event","Q43286638":"event","Q43286663":"event","Q43288961":"event","Q43288988":"event","Q43289064":"event","Q43289069":"event","Q43289196":"event","Q43289201":"event","Q43289204":"event","Q43289211":"event","Q43289219":"event","Q43289216":"event","Q43289226":"event","Q43289235":"event","Q43289242":"event","Q43289249":"event","Q43289256":"event","Q43289266":"event","Q43289276":"event","Q43289281":"event","Q43289290":"event","Q43289301":"event","Q43289307":"event","Q43289312":"event","Q43289318":"event","Q43289321":"event","Q43289326":"event","Q43289332":"event","Q43289336":"event","Q43289343":"event","Q43289340":"event","Q43289347":"event","Q43289345":"event","Q43289351":"event","Q43289349":"event","Q43289360":"event","Q43289365":"event","Q43289371":"event","Q43289377":"event","Q43289383":"event","Q43289388":"event","Q43289393":"event","Q43289400":"event","Q43289408":"event","Q43289413":"event","Q43307022":"event","Q43307035":"event","Q43740087":"event","Q43740099":"event","Q43740111":"event","Q43740122":"event","Q43740135":"event","Q43740153":"event","Q43740169":"event","Q43740185":"event","Q43740203":"event","Q43740216":"event","Q43740227":"event","Q43740245":"event","Q43740257":"event","Q43740273":"event","Q43740286":"event","Q43744788":"event","Q43744865":"event","Q43745136":"event","Q43745198":"event","Q43775863":"event","Q43775943":"event","Q43920899":"event","Q44193874":"event","Q44193897":"event","Q45083519":"event","Q45083601":"event","Q45083914":"event","Q45083963":"event","Q45084575":"event","Q45084873":"event","Q45084954":"event","Q45171831":"event","Q45171898":"event","Q45172232":"event","Q45172237":"event","Q45172931":"event","Q45172978":"event","Q45333131":"event","Q45333138":"event","Q45333147":"event","Q45333155":"event","Q45333171":"event","Q45333178":"event","Q45333194":"event","Q45333204":"event","Q45333222":"event","Q45333232":"event","Q45333250":"event","Q45333261":"event","Q45333272":"event","Q45333279":"event","Q45333300":"event","Q45333307":"event","Q45333462":"event","Q45333562":"event","Q45333570":"event","Q45333578":"event","Q45333585":"event","Q45333596":"event","Q45333604":"event","Q45333610":"event","Q45333619":"event","Q45333630":"event","Q45333637":"event","Q45333642":"event","Q45333652":"event","Q45333659":"event","Q45333669":"event","Q45333673":"event","Q45333680":"event","Q45333686":"event","Q45333696":"event","Q45333707":"event","Q45333724":"event","Q45333730":"event","Q45333740":"event","Q45333752":"event","Q45333761":"event","Q45333779":"event","Q45333785":"event","Q45333802":"event","Q45333815":"event","Q45333844":"event","Q45333855":"event","Q45333872":"event","Q45333880":"event","Q45333896":"event","Q45333903":"event","Q45333923":"event","Q45333932":"event","Q45333961":"event","Q45333970":"event","Q45333988":"event","Q45333995":"event","Q45334011":"event","Q45334019":"event","Q45334037":"event","Q45334045":"event","Q45334062":"event","Q45334067":"event","Q45334084":"event","Q45334096":"event","Q45334115":"event","Q45334122":"event","Q45334134":"event","Q45334146":"event","Q45334163":"event","Q45334175":"event","Q45334193":"event","Q45334203":"event","Q45334217":"event","Q45334225":"event","Q45334239":"event","Q45334247":"event","Q45334266":"event","Q45334276":"event","Q45334296":"event","Q45334303":"event","Q45334328":"event","Q45334339":"event","Q45334351":"event","Q45334364":"event","Q45334376":"event","Q45334386":"event","Q45334417":"event","Q45334430":"event","Q45334445":"event","Q45334454":"event","Q45334471":"event","Q45334480":"event","Q45334496":"event","Q45334504":"event","Q45334522":"event","Q45334530":"event","Q45334549":"event","Q45334557":"event","Q45334576":"event","Q45334585":"event","Q45334596":"event","Q45334606":"event","Q45334639":"event","Q45334646":"event","Q45334719":"event","Q45334728":"event","Q45334737":"event","Q45334747":"event","Q45334755":"event","Q45334763":"event","Q45334770":"event","Q45334780":"event","Q45334791":"event","Q45334802":"event","Q45334813":"event","Q45334819":"event","Q45334827":"event","Q45334838":"event","Q45334847":"event","Q45334854":"event","Q45334863":"event","Q45334872":"event","Q45334879":"event","Q45334889":"event","Q45334901":"event","Q45334921":"event","Q45334928":"event","Q45334939":"event","Q45334954":"event","Q45334966":"event","Q45334985":"event","Q45334998":"event","Q45335018":"event","Q45335028":"event","Q45335047":"event","Q45335055":"event","Q45335068":"event","Q45335080":"event","Q45335103":"event","Q45335115":"event","Q45335132":"event","Q45335142":"event","Q45335165":"event","Q45335178":"event","Q45335196":"event","Q45335204":"event","Q45335226":"event","Q45335234":"event","Q45335251":"event","Q45335260":"event","Q45335279":"event","Q45335289":"event","Q45335304":"event","Q45335316":"event","Q45335332":"event","Q45335343":"event","Q45335359":"event","Q45335368":"event","Q45335381":"event","Q45335392":"event","Q45335405":"event","Q45335413":"event","Q45335420":"event","Q45335428":"event","Q45335437":"event","Q45335452":"event","Q45335462":"event","Q45335477":"event","Q45335491":"event","Q45335512":"event","Q45335520":"event","Q45335538":"event","Q45335547":"event","Q45335567":"event","Q45335576":"event","Q45335594":"event","Q45335607":"event","Q45335623":"event","Q45335635":"event","Q45335667":"event","Q45335677":"event","Q45335690":"event","Q45335697":"event","Q45335706":"event","Q45335713":"event","Q45335722":"event","Q45335733":"event","Q45335742":"event","Q45335753":"event","Q45335761":"event","Q45335773":"event","Q45335781":"event","Q45335789":"event","Q45335797":"event","Q45335808":"event","Q45335816":"event","Q45335827":"event","Q45335839":"event","Q45335848":"event","Q45335860":"event","Q45335873":"event","Q45335892":"event","Q45335898":"event","Q45335908":"event","Q45335923":"event","Q45335930":"event","Q45335947":"event","Q45335956":"event","Q45335984":"event","Q45335994":"event","Q45336015":"event","Q45336027":"event","Q45336043":"event","Q45336052":"event","Q45336069":"event","Q45336078":"event","Q45336090":"event","Q45336100":"event","Q45336122":"event","Q45336134":"event","Q45336141":"event","Q45336145":"event","Q45336151":"event","Q45336160":"event","Q45336169":"event","Q45336180":"event","Q45336188":"event","Q45336201":"event","Q45336212":"event","Q45336221":"event","Q45336229":"event","Q45336236":"event","Q45336244":"event","Q45336252":"event","Q45336261":"event","Q45336268":"event","Q45336277":"event","Q45336290":"event","Q45336306":"event","Q45336319":"event","Q45336338":"event","Q45336346":"event","Q45336360":"event","Q45336375":"event","Q45336383":"event","Q45336398":"event","Q45336408":"event","Q45336429":"event","Q45336438":"event","Q45336453":"event","Q45336464":"event","Q45336479":"event","Q45336489":"event","Q45336511":"event","Q45336520":"event","Q45336535":"event","Q45336545":"event","Q45336566":"event","Q45336572":"event","Q45336581":"event","Q45336600":"event","Q45336610":"event","Q45336624":"event","Q45336634":"event","Q45336652":"event","Q45336660":"event","Q45336680":"event","Q45336692":"event","Q45336712":"event","Q45336722":"event","Q45336740":"event","Q45336752":"event","Q45336763":"event","Q45336777":"event","Q45336804":"event","Q45336815":"event","Q45336829":"event","Q45336836":"event","Q45336850":"event","Q45395261":"event","Q45395284":"event","Q45395295":"event","Q45395319":"event","Q45395329":"event","Q45395350":"event","Q45395363":"event","Q45395384":"event","Q45395394":"event","Q45395404":"event","Q45395415":"event","Q45395437":"event","Q45395451":"event","Q45395472":"event","Q45395487":"event","Q45395508":"event","Q45395517":"event","Q45395542":"event","Q45395553":"event","Q45395575":"event","Q45395587":"event","Q45395611":"event","Q45395622":"event","Q45395645":"event","Q45395660":"event","Q45395681":"event","Q45395693":"event","Q45395710":"event","Q45395721":"event","Q45395749":"event","Q45395763":"event","Q45395782":"event","Q45395791":"event","Q45395800":"event","Q45395811":"event","Q45395830":"event","Q45395841":"event","Q45395860":"event","Q45395874":"event","Q45395892":"event","Q45395902":"event","Q45395946":"event","Q45395958":"event","Q45395981":"event","Q45395989":"event","Q45396009":"event","Q45396019":"event","Q45396038":"event","Q45396052":"event","Q45396067":"event","Q45396076":"event","Q45396101":"event","Q45396115":"event","Q45396137":"event","Q45396152":"event","Q45396172":"event","Q45396182":"event","Q45396240":"event","Q45396250":"event","Q45396267":"event","Q45396278":"event","Q45396298":"event","Q45396317":"event","Q45396343":"event","Q45396358":"event","Q45396380":"event","Q45396389":"event","Q45396405":"event","Q45396419":"event","Q45396443":"event","Q45396457":"event","Q45396471":"event","Q45396485":"event","Q45396517":"event","Q45396527":"event","Q45396540":"event","Q45396554":"event","Q45396572":"event","Q45396584":"event","Q45396606":"event","Q45396619":"event","Q45396640":"event","Q45396652":"event","Q45396674":"event","Q45396684":"event","Q45396712":"event","Q45396727":"event","Q45396749":"event","Q45396761":"event","Q45396798":"event","Q45396813":"event","Q45396832":"event","Q45396841":"event","Q45396859":"event","Q45396867":"event","Q45396886":"event","Q45396900":"event","Q45396928":"event","Q45396943":"event","Q45396951":"event","Q45396962":"event","Q45396975":"event","Q45396984":"event","Q45396997":"event","Q45397010":"event","Q45397024":"event","Q45397034":"event","Q45397054":"event","Q45397065":"event","Q45397084":"event","Q45397095":"event","Q45397117":"event","Q45397127":"event","Q45397144":"event","Q45397152":"event","Q45397173":"event","Q45397185":"event","Q45397207":"event","Q45397216":"event","Q45397238":"event","Q45397251":"event","Q45397276":"event","Q45397287":"event","Q45397298":"event","Q45397312":"event","Q45397341":"event","Q45397350":"event","Q45397374":"event","Q45397381":"event","Q45397399":"event","Q45397411":"event","Q45397429":"event","Q45397438":"event","Q45397461":"event","Q45397467":"event","Q45397491":"event","Q45397501":"event","Q45397525":"event","Q45397537":"event","Q45397556":"event","Q45397570":"event","Q45397603":"event","Q45397613":"event","Q45397628":"event","Q45397636":"event","Q45397651":"event","Q45397665":"event","Q45397687":"event","Q45397699":"event","Q45397718":"event","Q45397730":"event","Q45397752":"event","Q45397764":"event","Q45397782":"event","Q45397794":"event","Q45397808":"event","Q45397819":"event","Q45397858":"event","Q45397867":"event","Q45397887":"event","Q45397895":"event","Q45397917":"event","Q45397925":"event","Q45397945":"event","Q45397956":"event","Q45397979":"event","Q45397990":"event","Q45398010":"event","Q45398024":"event","Q45398043":"event","Q45398053":"event","Q45398066":"event","Q45398076":"event","Q45398100":"event","Q45398110":"event","Q45398123":"event","Q45398120":"event","Q45398131":"event","Q45398143":"event","Q45398157":"event","Q45398162":"event","Q45398176":"event","Q45398188":"event","Q45398206":"event","Q45398218":"event","Q45398234":"event","Q45398245":"event","Q45398260":"event","Q45398270":"event","Q45398300":"event","Q45728410":"event","Q45728426":"event","Q45728434":"event","Q45728447":"event","Q45728455":"event","Q45728470":"event","Q45728477":"event","Q45728491":"event","Q45728494":"event","Q45728504":"event","Q45728511":"event","Q45728525":"event","Q45728530":"event","Q45728541":"event","Q45728547":"event","Q45728564":"event","Q45728574":"event","Q45728588":"event","Q45728595":"event","Q45728608":"event","Q45728617":"event","Q45728631":"event","Q45728637":"event","Q45728653":"event","Q45728661":"event","Q45728681":"event","Q45728689":"event","Q45728701":"event","Q45728709":"event","Q45728718":"event","Q45728729":"event","Q45728746":"event","Q45728753":"event","Q45728767":"event","Q45728771":"event","Q45728782":"event","Q45728787":"event","Q45728799":"event","Q45728808":"event","Q45728820":"event","Q45728830":"event","Q45728843":"event","Q45728852":"event","Q45728862":"event","Q45728866":"event","Q45728876":"event","Q45728885":"event","Q45728904":"event","Q45728909":"event","Q45728934":"event","Q45728948":"event","Q45728965":"event","Q45728968":"event","Q45728979":"event","Q45728986":"event","Q45728998":"event","Q45729006":"event","Q45729021":"event","Q45729032":"event","Q45729046":"event","Q45729053":"event","Q45729066":"event","Q45729074":"event","Q45729091":"event","Q45729098":"event","Q45729113":"event","Q45729120":"event","Q45729131":"event","Q45729137":"event","Q45729150":"event","Q45729157":"event","Q45729162":"event","Q45729169":"event","Q45729183":"event","Q45729193":"event","Q45729206":"event","Q45729212":"event","Q45729222":"event","Q45729230":"event","Q45729241":"event","Q45729249":"event","Q45729265":"event","Q45729272":"event","Q45729288":"event","Q45729296":"event","Q45729310":"event","Q45729316":"event","Q45729334":"event","Q45729344":"event","Q45729355":"event","Q45729363":"event","Q45729380":"event","Q45729385":"event","Q45729398":"event","Q45729405":"event","Q45729415":"event","Q45729425":"event","Q46584495":"event","Q46584510":"event","Q46584543":"event","Q46584562":"event","Q46584604":"event","Q46584622":"event","Q46584650":"event","Q46584667":"event","Q46584708":"event","Q46584725":"event","Q46584749":"event","Q46584763":"event","Q46584785":"event","Q46584803":"event","Q46584829":"event","Q46584846":"event","Q46584880":"event","Q46584893":"event","Q46584929":"event","Q46584944":"event","Q46584983":"event","Q46585000":"event","Q46585025":"event","Q46585039":"event","Q46585063":"event","Q46585094":"event","Q46585106":"event","Q46585133":"event","Q46585145":"event","Q46585169":"event","Q46585181":"event","Q46585212":"event","Q46585226":"event","Q46585257":"event","Q46585269":"event","Q46585298":"event","Q46585318":"event","Q46585355":"event","Q46585373":"event","Q46585397":"event","Q46585416":"event","Q46585464":"event","Q46585485":"event","Q46585517":"event","Q46585536":"event","Q46585567":"event","Q46585588":"event","Q46585620":"event","Q46585637":"event","Q46585667":"event","Q46585684":"event","Q46585714":"event","Q46585731":"event","Q46585764":"event","Q46585783":"event","Q46585812":"event","Q46585835":"event","Q46585884":"event","Q46585901":"event","Q46585933":"event","Q46585947":"event","Q46585983":"event","Q46586000":"event","Q46586032":"event","Q46586052":"event","Q46586093":"event","Q46586110":"event","Q46586142":"event","Q46586157":"event","Q46586182":"event","Q46586196":"event","Q46586236":"event","Q46586254":"event","Q46586296":"event","Q46586314":"event","Q46586326":"event","Q46586337":"event","Q46586353":"event","Q46586365":"event","Q46586383":"event","Q46586400":"event","Q46586416":"event","Q46586434":"event","Q46586447":"event","Q46586461":"event","Q46586478":"event","Q46586496":"event","Q46586510":"event","Q46586524":"event","Q46586539":"event","Q46586550":"event","Q46586569":"event","Q46586584":"event","Q46586605":"event","Q46586623":"event","Q46586653":"event","Q46586666":"event","Q46586680":"event","Q46586696":"event","Q46586712":"event","Q45729438":"event","Q45729446":"event","Q45729461":"event","Q45729469":"event","Q45729485":"event","Q45729491":"event","Q45729511":"event","Q45729521":"event","Q45729535":"event","Q45729540":"event","Q45729553":"event","Q45729558":"event","Q45729566":"event","Q45729569":"event","Q45729579":"event","Q45729585":"event","Q45729592":"event","Q45729600":"event","Q45729622":"event","Q45729631":"event","Q45729645":"event","Q45729650":"event","Q45729666":"event","Q45729678":"event","Q45729689":"event","Q45729697":"event","Q45729715":"event","Q45729712":"event","Q45729727":"event","Q45729724":"event","Q45729744":"event","Q45729752":"event","Q45729759":"event","Q45729766":"event","Q45729795":"event","Q45729804":"event","Q45729808":"event","Q46583155":"event","Q46583169":"event","Q46583186":"event","Q46583202":"event","Q46583218":"event","Q46583231":"event","Q46583248":"event","Q46583261":"event","Q46583277":"event","Q46583295":"event","Q46583311":"event","Q46583325":"event","Q46583339":"event","Q46583354":"event","Q46583369":"event","Q46583385":"event","Q46583402":"event","Q46583426":"event","Q46583444":"event","Q46583473":"event","Q46583486":"event","Q46583500":"event","Q46583522":"event","Q46583553":"event","Q46583567":"event","Q46583600":"event","Q46583616":"event","Q46583643":"event","Q46583658":"event","Q46583691":"event","Q46583706":"event","Q46583745":"event","Q46583763":"event","Q46583793":"event","Q46583807":"event","Q46583829":"event","Q46583849":"event","Q46583896":"event","Q46583915":"event","Q46583943":"event","Q46583959":"event","Q46583985":"event","Q46584000":"event","Q46584031":"event","Q46584050":"event","Q46584087":"event","Q46584106":"event","Q46584137":"event","Q46584155":"event","Q46584187":"event","Q46584204":"event","Q46584227":"event","Q46584242":"event","Q46584273":"event","Q46584289":"event","Q46584319":"event","Q46584334":"event","Q46584363":"event","Q46584374":"event","Q46584404":"event","Q46584420":"event","Q46584450":"event","Q46584467":"event","Q46586727":"event","Q46586739":"event","Q46586753":"event","Q46586770":"event","Q46586788":"event","Q46586804":"event","Q46586819":"event","Q46586838":"event","Q46586850":"event","Q46586865":"event","Q46586883":"event","Q46586901":"event","Q46586915":"event","Q46586929":"event","Q46586945":"event","Q46586963":"event","Q46586984":"event","Q46586998":"event","Q46587016":"event","Q46587035":"event","Q46587051":"event","Q46587069":"event","Q46587078":"event","Q46587097":"event","Q46587129":"event","Q46587141":"event","Q46587172":"event","Q46587192":"event","Q46587220":"event","Q46587236":"event","Q46587268":"event","Q46587281":"event","Q46587315":"event","Q46587333":"event","Q46587372":"event","Q46587390":"event","Q46587410":"event","Q46587429":"event","Q46587482":"event","Q46587500":"event","Q46587533":"event","Q46587549":"event","Q46587578":"event","Q46587594":"event","Q46587628":"event","Q46587638":"event","Q46587663":"event","Q46587683":"event","Q46587716":"event","Q46587737":"event","Q46587769":"event","Q46587786":"event","Q46587818":"event","Q46587835":"event","Q46587873":"event","Q46587887":"event","Q46587915":"event","Q46587932":"event","Q46587961":"event","Q46587974":"event","Q46588004":"event","Q46588021":"event","Q46588047":"event","Q46588064":"event","Q46588091":"event","Q46588106":"event","Q46588134":"event","Q46588146":"event","Q46588175":"event","Q46588187":"event","Q46588211":"event","Q46588231":"event","Q46588277":"event","Q46588292":"event","Q47088403":"event","Q47088546":"event","Q47088606":"event","Q47088621":"event","Q47088646":"event","Q47088668":"event","Q47088684":"event","Q47088697":"event","Q47118669":"event","Q47294844":"event","Q47494582":"event","Q47542540":"event","Q48649559":"event","Q48649567":"event","Q48649587":"event","Q48649597":"event","Q48649616":"event","Q48649628":"event","Q48649651":"event","Q48649662":"event","Q48649685":"event","Q48649698":"event","Q48649723":"event","Q48649732":"event","Q48649749":"event","Q48649763":"event","Q48649797":"event","Q48649809":"event","Q48702863":"event","Q48782059":"event","Q49122695":"event","Q49122717":"event","Q49122757":"event","Q49122784":"event","Q49122828":"event","Q49122854":"event","Q49122884":"event","Q49122908":"event","Q49122955":"event","Q49122979":"event","Q49123026":"event","Q49123052":"event","Q49123097":"event","Q49123122":"event","Q49123167":"event","Q49123191":"event","Q49123237":"event","Q49123263":"event","Q49123313":"event","Q49123340":"event","Q49123380":"event","Q49123405":"event","Q49123443":"event","Q49123468":"event","Q49123506":"event","Q49123532":"event","Q49123571":"event","Q49123595":"event","Q49123633":"event","Q49123661":"event","Q49147174":"event","Q49147223":"event","Q49147271":"event","Q49147323":"event","Q49147382":"event","Q49147436":"event","Q49147484":"event","Q49147534":"event","Q49147582":"event","Q49147634":"event","Q49147684":"event","Q49147735":"event","Q49147793":"event","Q49147848":"event","Q49147906":"event","Q49147961":"event","Q49148015":"event","Q49148071":"event","Q49148126":"event","Q49148181":"event","Q49148237":"event","Q49148290":"event","Q49148346":"event","Q49148405":"event","Q49148455":"event","Q49148516":"event","Q49148574":"event","Q49148632":"event","Q49148690":"event","Q49148737":"event","Q49148786":"event","Q49148835":"event","Q49148883":"event","Q49148926":"event","Q49148977":"event","Q49149021":"event","Q49149069":"event","Q49149120":"event","Q49149164":"event","Q49149209":"event","Q49149255":"event","Q49149302":"event","Q49149350":"event","Q49149404":"event","Q49163921":"event","Q49164311":"event","Q49164411":"event","Q49164420":"event","Q49164430":"event","Q49164434":"event","Q49164442":"event","Q49164449":"event","Q49164457":"event","Q49164461":"event","Q49164470":"event","Q49164479":"event","Q49164484":"event","Q49164494":"event","Q49164504":"event","Q49164510":"event","Q49164521":"event","Q49164527":"event","Q49164533":"event","Q49164538":"event","Q49164543":"event","Q49164548":"event","Q49164558":"event","Q49164556":"event","Q49164562":"event","Q49164565":"event","Q49164571":"event","Q49164574":"event","Q49164582":"event","Q49164584":"event","Q49164589":"event","Q49164592":"event","Q49164597":"event","Q49164602":"event","Q49164611":"event","Q49164615":"event","Q49164620":"event","Q49164625":"event","Q49164631":"event","Q49164637":"event","Q49164642":"event","Q49164647":"event","Q49164652":"event","Q49164660":"event","Q49164729":"event","Q49164754":"event","Q49164765":"event","Q49164776":"event","Q49164784":"event","Q49164791":"event","Q49164799":"event","Q49164812":"event","Q49164816":"event","Q49164830":"event","Q49164839":"event","Q49164848":"event","Q49164859":"event","Q49164866":"event","Q49164876":"event","Q49164884":"event","Q49164891":"event","Q49164899":"event","Q49164905":"event","Q49164911":"event","Q49164915":"event","Q49164919":"event","Q49164929":"event","Q49164938":"event","Q49164948":"event","Q49164957":"event","Q49164964":"event","Q49164973":"event","Q49164982":"event","Q49164989":"event","Q49165001":"event","Q49165009":"event","Q49165017":"event","Q49165024":"event","Q49165033":"event","Q49165040":"event","Q49165051":"event","Q49165059":"event","Q49165070":"event","Q49165078":"event","Q49165086":"event","Q49165097":"event","Q49165104":"event","Q49165112":"event","Q49165118":"event","Q49165121":"event","Q49165127":"event","Q49165134":"event","Q49165139":"event","Q49165146":"event","Q49165144":"event","Q49165151":"event","Q49165159":"event","Q49165156":"event","Q49165163":"event","Q49165171":"event","Q49165168":"event","Q49165178":"event","Q49165184":"event","Q49165189":"event","Q49165195":"event","Q49165192":"event","Q49165203":"event","Q49165208":"event","Q49165214":"event","Q49165219":"event","Q49165222":"event","Q49165227":"event","Q49165232":"event","Q49165237":"event","Q49165242":"event","Q49165245":"event","Q49165251":"event","Q49165256":"event","Q49165263":"event","Q49165270":"event","Q49165275":"event","Q49165280":"event","Q49165289":"event","Q49165296":"event","Q49165302":"event","Q49165309":"event","Q49165316":"event","Q49165325":"event","Q49165334":"event","Q49165342":"event","Q49165345":"event","Q49165410":"event","Q50404774":"event","Q50404789":"event","Q50417187":"event","Q50432915":"event","Q50679108":"event","Q51291893":"event","Q51332422":"event","Q51332549":"event","Q51332553":"event","Q51332562":"event","Q51332569":"event","Q51332584":"event","Q51332592":"event","Q51332605":"event","Q51332613":"event","Q51332630":"event","Q51332632":"event","Q51332640":"event","Q51332652":"event","Q51332658":"event","Q51332671":"event","Q51332668":"event","Q51332679":"event","Q51332690":"event","Q51332726":"event","Q51332832":"event","Q51332836":"event","Q51332848":"event","Q51332856":"event","Q51332872":"event","Q51332878":"event","Q51332892":"event","Q51332900":"event","Q51332913":"event","Q51332918":"event","Q51332927":"event","Q51332932":"event","Q51332945":"event","Q51332952":"event","Q51332967":"event","Q51332977":"event","Q51332990":"event","Q51332998":"event","Q51772376":"event","Q51885734":"event","Q53869568":"event","Q53869580":"event","Q53869589":"event","Q53869610":"event","Q53869620":"event","Q53869621":"event","Q53869626":"event","Q53869625":"event","Q53869630":"event","Q53869629":"event","Q53869638":"event","Q53869636":"event","Q53869640":"event","Q53869641":"event","Q53869646":"event","Q53869647":"event","Q53869644":"event","Q53869651":"event","Q53869649":"event","Q53869655":"event","Q53869652":"event","Q53869656":"event","Q53869680":"event","Q53869698":"event","Q54520872":"event","Q54520878":"event","Q54520896":"event","Q54520905":"event","Q54520928":"event","Q54520944":"event","Q54520968":"event","Q54520980":"event","Q54520998":"event","Q54521010":"event","Q54521028":"event","Q54521043":"event","Q54521061":"event","Q54521074":"event","Q54521099":"event","Q54521111":"event","Q54521136":"event","Q54555558":"event","Q54555556":"event","Q54555562":"event","Q54555563":"event","Q54555566":"event","Q54555569":"event","Q54555575":"event","Q54555579":"event","Q54555577":"event","Q54555581":"event","Q54555606":"event","Q54555610":"event","Q54555615":"event","Q54555613":"event","Q54555619":"event","Q54555622":"event","Q54555626":"event","Q54555624":"event","Q54555629":"event","Q54555634":"event","Q54555632":"event","Q54555639":"event","Q54555636":"event","Q54555643":"event","Q54555646":"event","Q54555650":"event","Q54555652":"event","Q54555656":"event","Q54555660":"event","Q54555666":"event","Q54555671":"event","Q54555668":"event","Q54555675":"event","Q54555678":"event","Q54555683":"event","Q54555680":"event","Q54555686":"event","Q54555691":"event","Q54555688":"event","Q54555693":"event","Q54555699":"event","Q54555707":"event","Q54555704":"event","Q54555709":"event","Q54555714":"event","Q54555719":"event","Q54555717":"event","Q54555727":"event","Q54555725":"event","Q54555729":"event","Q54555734":"event","Q54555738":"event","Q54555736":"event","Q54555742":"event","Q54555740":"event","Q54555745":"event","Q54577027":"event","Q54577024":"event","Q54577039":"event","Q54577036":"event","Q54577045":"event","Q54577054":"event","Q54875264":"event","Q54875303":"event","Q55111842":"event","Q55111840":"event","Q55111846":"event","Q55111848":"event","Q55111855":"event","Q55111852":"event","Q55111853":"event","Q55111857":"event","Q55111863":"event","Q55111860":"event","Q55111867":"event","Q55111869":"event","Q55111874":"event","Q55111873":"event","Q55111879":"event","Q55111876":"event","Q55111877":"event","Q55111883":"event","Q55111880":"event","Q55111884":"event","Q55111890":"event","Q55111893":"event","Q55111898":"event","Q55111900":"event","Q55111906":"event","Q55111908":"event","Q55111915":"event","Q55111913":"event","Q55111917":"event","Q55111920":"event","Q55151691":"event","Q55151705":"event","Q55151715":"event","Q55151718":"event","Q55151821":"event","Q55151848":"event","Q55151872":"event","Q55151881":"event","Q55151911":"event","Q55151941":"event","Q55151958":"event","Q55151963":"event","Q55151971":"event","Q55151969":"event","Q55152024":"event","Q55152035":"event","Q55152042":"event","Q55152046":"event","Q55152053":"event","Q55152077":"event","Q55152102":"event","Q55152104":"event","Q55158819":"event","Q55158834":"event","Q55158832":"event","Q55158838":"event","Q55158842":"event","Q55158853":"event","Q55158887":"event","Q55158888":"event","Q55158894":"event","Q55158893":"event","Q55158911":"event","Q55158930":"event","Q55158940":"event","Q55158941":"event","Q55158944":"event","Q55158953":"event","Q55185702":"event","Q55185701":"event","Q55185706":"event","Q55185704":"event","Q55185710":"event","Q55185711":"event","Q55185714":"event","Q55185716":"event","Q55185725":"event","Q55185740":"event","Q55185789":"event","Q55185795":"event","Q55185792":"event","Q55185811":"event","Q55185809":"event","Q55185826":"event","Q55185827":"event","Q55186825":"event","Q55186829":"event","Q55186837":"event","Q55186840":"event","Q55186846":"event","Q55186850":"event","Q55186856":"event","Q55186860":"event","Q55186865":"event","Q55186871":"event","Q55186879":"event","Q55186882":"event","Q55186890":"event","Q55186896":"event","Q55186902":"event","Q55186905":"event","Q55186917":"event","Q55186920":"event","Q55186926":"event","Q55186928":"event","Q55186934":"event","Q55186937":"event","Q55186943":"event","Q55186944":"event","Q55186949":"event","Q55186953":"event","Q55186963":"event","Q55186961":"event","Q55186971":"event","Q55186969":"event","Q55186979":"event","Q55186976":"event","Q55205449":"event","Q55205458":"event","Q55205476":"event","Q55205494":"event","Q55205512":"event","Q55205518":"event","Q55205531":"event","Q55205551":"event","Q55205566":"event","Q55205582":"event","Q55205601":"event","Q55205630":"event","Q55205649":"event","Q55205667":"event","Q55205696":"event","Q55220999":"event","Q55221006":"event","Q55221023":"event","Q55221020":"event","Q55221021":"event","Q55221026":"event","Q55221027":"event","Q55221024":"event","Q55221031":"event","Q55221035":"event","Q55221033":"event","Q55221037":"event","Q55221040":"event","Q55221041":"event","Q55221044":"event","Q55221045":"event","Q55221051":"event","Q55221049":"event","Q55221058":"event","Q55221057":"event","Q55221062":"event","Q55221061":"event","Q55221066":"event","Q55221064":"event","Q55221071":"event","Q55221068":"event","Q55221069":"event","Q55221075":"event","Q55221078":"event","Q55221083":"event","Q55221080":"event","Q55221087":"event","Q55221084":"event","Q55221091":"event","Q55221089":"event","Q55221092":"event","Q55221098":"event","Q55221099":"event","Q55221102":"event","Q55221105":"event","Q55232159":"event","Q55232167":"event","Q55232180":"event","Q55232188":"event","Q55232200":"event","Q55232208":"event","Q55232222":"event","Q55232229":"event","Q55232241":"event","Q55232249":"event","Q55232262":"event","Q55232268":"event","Q55232282":"event","Q55232289":"event","Q55232302":"event","Q55232311":"event","Q55232319":"event","Q55232323":"event","Q55232330":"event","Q55232335":"event","Q55232342":"event","Q55232346":"event","Q55232353":"event","Q55232357":"event","Q55232365":"event","Q55232371":"event","Q55232379":"event","Q55232382":"event","Q55232389":"event","Q55232393":"event","Q55232402":"event","Q55232407":"event","Q55232415":"event","Q55232420":"event","Q55232430":"event","Q55232434":"event","Q55232445":"event","Q55232449":"event","Q55232553":"event","Q55232561":"event","Q55232568":"event","Q55232575":"event","Q55232585":"event","Q55232592":"event","Q55232600":"event","Q55232609":"event","Q55232617":"event","Q55232626":"event","Q55232635":"event","Q55232644":"event","Q55232652":"event","Q55232658":"event","Q55232667":"event","Q55232674":"event","Q55232681":"event","Q55232689":"event","Q55232696":"event","Q55232704":"event","Q55232711":"event","Q55232719":"event","Q55232726":"event","Q55232736":"event","Q55232745":"event","Q55232755":"event","Q55238842":"event","Q55238846":"event","Q55238844":"event","Q55238852":"event","Q55238854":"event","Q55238858":"event","Q55238856":"event","Q55238862":"event","Q55238864":"event","Q55238869":"event","Q55238873":"event","Q55238878":"event","Q55238876":"event","Q55238881":"event","Q55238884":"event","Q55238891":"event","Q55238893":"event","Q55238899":"event","Q55238896":"event","Q55238903":"event","Q55238907":"event","Q55238913":"event","Q55238922":"event","Q55238926":"event","Q55238931":"event","Q55238928":"event","Q55238938":"event","Q55238945":"event","Q55238949":"event","Q55238953":"event","Q55238958":"event","Q55238956":"event","Q55238962":"event","Q55238965":"event","Q55238970":"event","Q55238973":"event","Q55238976":"event","Q55238982":"event","Q55238980":"event","Q55238988":"event","Q55239182":"event","Q55239181":"event","Q55239186":"event","Q55239184":"event","Q55239191":"event","Q55239195":"event","Q55239193":"event","Q55239197":"event","Q55239334":"event","Q55239335":"event","Q55343203":"event","Q55343204":"event","Q55343212":"event","Q55343218":"event","Q55343223":"event","Q55343225":"event","Q55343230":"event","Q55343233":"event","Q55343239":"event","Q55343252":"event","Q55343265":"event","Q55343274":"event","Q55343291":"event","Q55343289":"event","Q55343298":"event","Q55343302":"event","Q55343310":"event","Q55343309":"event","Q55343315":"event","Q55343316":"event","Q55343320":"event","Q55343324":"event","Q55343334":"event","Q55343332":"event","Q55343338":"event","Q55343340":"event","Q55343346":"event","Q55343347":"event","Q55343353":"event","Q55343359":"event","Q55343367":"event","Q55343369":"event","Q55343790":"event","Q55343796":"event","Q55343810":"event","Q55343816":"event","Q55343820":"event","Q55343825":"event","Q55343833":"event","Q55343837":"event","Q55343843":"event","Q55343848":"event","Q55343854":"event","Q55343864":"event","Q55343869":"event","Q55343874":"event","Q55343887":"event","Q55343885":"event","Q55343894":"event","Q55343897":"event","Q55343904":"event","Q55343908":"event","Q55343918":"event","Q55343916":"event","Q55343924":"event","Q55343929":"event","Q55343939":"event","Q55343937":"event","Q55343945":"event","Q55343950":"event","Q55343955":"event","Q55343959":"event","Q55361682":"event","Q55361688":"event","Q55380931":"event","Q55380933":"event","Q55380939":"event","Q55380942":"event","Q55380947":"event","Q55380949":"event","Q55380954":"event","Q55380952":"event","Q55380957":"event","Q55380961":"event","Q55380966":"event","Q55380971":"event","Q55380975":"event","Q55380978":"event","Q55380982":"event","Q55380990":"event","Q55380988":"event","Q55380999":"event","Q55381009":"event","Q55381020":"event","Q55381028":"event","Q55381036":"event","Q55381045":"event","Q55381054":"event","Q55381077":"event","Q55381196":"event","Q55403343":"event","Q55403347":"event","Q55403345":"event","Q55403350":"event","Q55403348":"event","Q55403356":"event","Q55403357":"event","Q55403363":"event","Q55403360":"event","Q55403367":"event","Q55403365":"event","Q55403369":"event","Q55403374":"event","Q55403372":"event","Q55403373":"event","Q55403378":"event","Q55403379":"event","Q55403377":"event","Q55403399":"event","Q55403401":"event","Q55403406":"event","Q55403404":"event","Q55403405":"event","Q55403410":"event","Q55403408":"event","Q55403414":"event","Q55403412":"event","Q55403429":"event","Q55403435":"event","Q55403432":"event","Q55403433":"event","Q55403438":"event","Q55403439":"event","Q55403436":"event","Q55403443":"event","Q55403441":"event","Q55403446":"event","Q55403444":"event","Q55403451":"event","Q55403449":"event","Q55403452":"event","Q55403453":"event","Q55403458":"event","Q55403457":"event","Q55403462":"event","Q55403460":"event","Q55403466":"event","Q55403464":"event","Q55408141":"event","Q55408145":"event","Q55408195":"event","Q55408199":"event","Q55408196":"event","Q55408203":"event","Q55408205":"event","Q55408208":"event","Q55408214":"event","Q55408212":"event","Q55408217":"event","Q55408221":"event","Q55408226":"event","Q55408227":"event","Q55408231":"event","Q55408234":"event","Q55408238":"event","Q55408239":"event","Q55408246":"event","Q55408245":"event","Q55408248":"event","Q55408254":"event","Q55408252":"event","Q55408258":"event","Q55431489":"event","Q55481983":"event","Q55481981":"event","Q55481990":"event","Q55481991":"event","Q55481998":"event","Q55481996":"event","Q55482001":"event","Q55482006":"event","Q55482014":"event","Q55482016":"event","Q55482022":"event","Q55482027":"event","Q55482036":"event","Q55482041":"event","Q55482049":"event","Q55482055":"event","Q55482062":"event","Q55482067":"event","Q55482079":"event","Q55482084":"event","Q55482092":"event","Q55482097":"event","Q55482106":"event","Q55482109":"event","Q55482121":"event","Q55482125":"event","Q55482134":"event","Q55482137":"event","Q55482144":"event","Q55482150":"event","Q55482160":"event","Q55482165":"event","Q55482174":"event","Q55482179":"event","Q55482192":"event","Q55482199":"event","Q55482206":"event","Q55482212":"event","Q55482218":"event","Q55482221":"event","Q55482232":"event","Q55482237":"event","Q55482246":"event","Q55482251":"event","Q55482260":"event","Q55482266":"event","Q55482278":"event","Q55482280":"event","Q55482292":"event","Q55482300":"event","Q55482312":"event","Q55482319":"event","Q55482355":"event","Q55482366":"event","Q55482376":"event","Q55482399":"event","Q55506871":"event","Q55506877":"event","Q55506892":"event","Q55506899":"event","Q55506909":"event","Q55506917":"event","Q55506931":"event","Q55506939":"event","Q55506956":"event","Q55506961":"event","Q55506975":"event","Q55506982":"event","Q55506997":"event","Q55507007":"event","Q55507021":"event","Q55507028":"event","Q55507044":"event","Q55507052":"event","Q55507071":"event","Q55507078":"event","Q55507091":"event","Q55507097":"event","Q55507105":"event","Q55507113":"event","Q55507127":"event","Q55507134":"event","Q55507146":"event","Q55507151":"event","Q55507164":"event","Q55507171":"event","Q55507184":"event","Q55507191":"event","Q55507206":"event","Q55507214":"event","Q55507226":"event","Q55507236":"event","Q55507247":"event","Q55507258":"event","Q55507272":"event","Q55507278":"event","Q55507292":"event","Q55507299":"event","Q55507316":"event","Q55507325":"event","Q55507341":"event","Q55507348":"event","Q55507413":"event","Q55507418":"event","Q55507423":"event","Q55507425":"event","Q55507430":"event","Q55507434":"event","Q55507438":"event","Q55507440":"event","Q55507445":"event","Q55507450":"event","Q55507458":"event","Q55507466":"event","Q55507464":"event","Q55507470":"event","Q55507476":"event","Q55507483":"event","Q55507486":"event","Q55507492":"event","Q55507502":"event","Q55507514":"event","Q55507521":"event","Q55507525":"event","Q55507530":"event","Q55507539":"event","Q55600588":"event","Q55600595":"event","Q55600607":"event","Q55600616":"event","Q55600638":"event","Q55600645":"event","Q55600661":"event","Q55600670":"event","Q55632143":"event","Q55738202":"event","Q55738203":"event","Q55738206":"event","Q55738205":"event","Q55738210":"event","Q55738208":"event","Q55738214":"event","Q55738213":"event","Q55738217":"event","Q55738223":"event","Q55738220":"event","Q55738226":"event","Q55738227":"event","Q55738224":"event","Q55738230":"event","Q55738229":"event","Q55738235":"event","Q55738232":"event","Q55738233":"event","Q55738238":"event","Q55738239":"event","Q55738236":"event","Q55738242":"event","Q55738243":"event","Q55738246":"event","Q55738245":"event","Q55738251":"event","Q55738248":"event","Q55738249":"event","Q55738254":"event","Q55738255":"event","Q55738252":"event","Q55738258":"event","Q55738257":"event","Q55738263":"event","Q55738260":"event","Q55738261":"event","Q55738266":"event","Q55738267":"event","Q55738264":"event","Q55738270":"event","Q55738269":"event","Q55738275":"event","Q55738272":"event","Q55738273":"event","Q55738278":"event","Q55738279":"event","Q55738276":"event","Q55738282":"event","Q55738281":"event","Q55738287":"event","Q55738284":"event","Q55738285":"event","Q55738291":"event","Q55738289":"event","Q55738292":"event","Q55738294":"event","Q55738295":"event","Q55738298":"event","Q55738297":"event","Q55738300":"event","Q55738301":"event","Q55738307":"event","Q55738304":"event","Q55738305":"event","Q55738310":"event","Q55738311":"event","Q55738308":"event","Q55738314":"event","Q55738313":"event","Q55738318":"event","Q55738316":"event","Q55738323":"event","Q55738320":"event","Q55738321":"event","Q55738326":"event","Q55738327":"event","Q55738324":"event","Q55776655":"event","Q55776653":"event","Q55791222":"event","Q55791233":"event","Q55791297":"event","Q55791300":"event","Q55808632":"event","Q55808642":"event","Q55808698":"event","Q55808700":"event","Q55809570":"event","Q55809569":"event","Q55809575":"event","Q55809572":"event","Q55809573":"event","Q55809578":"event","Q55809579":"event","Q55809576":"event","Q55809582":"event","Q55809581":"event","Q55809586":"event","Q55809585":"event","Q55809589":"event","Q55809592":"event","Q55809598":"event","Q55809596":"event","Q55809603":"event","Q55809605":"event","Q55809610":"event","Q55809609":"event","Q55809615":"event","Q55809616":"event","Q55809622":"event","Q55809620":"event","Q55809627":"event","Q55809625":"event","Q55809631":"event","Q55809633":"event","Q55809637":"event","Q55809643":"event","Q55809640":"event","Q55809645":"event","Q55809650":"event","Q55809648":"event","Q55809659":"event","Q55809656":"event","Q55809662":"event","Q55809664":"event","Q55809669":"event","Q55809672":"event","Q55809678":"event","Q55809679":"event","Q55809683":"event","Q55809686":"event","Q55809687":"event","Q55809684":"event","Q55809690":"event","Q55809691":"event","Q55809698":"event","Q55809697":"event","Q55809701":"event","Q55809704":"event","Q55809710":"event","Q55809708":"event","Q55809714":"event","Q55809716":"event","Q55809723":"event","Q55809720":"event","Q55809726":"event","Q55809728":"event","Q55809733":"event","Q55809737":"event","Q55809744":"event","Q55809748":"event","Q55809754":"event","Q55809756":"event","Q55809766":"event","Q55809765":"event","Q55809774":"event","Q55809777":"event","Q55809783":"event","Q55809787":"event","Q55809790":"event","Q55809794":"event","Q55809798":"event","Q55809803":"event","Q55809806":"event","Q55809809":"event","Q55809813":"event","Q55809816":"event","Q55809823":"event","Q55809820":"event","Q55809827":"event","Q55809831":"event","Q55809835":"event","Q55809839":"event","Q55809842":"event","Q55809845":"event","Q55809849":"event","Q55809852":"event","Q55812973":"event","Q55812976":"event","Q55812981":"event","Q55812986":"event","Q55812988":"event","Q55812993":"event","Q55813000":"event","Q55813032":"event","Q55813056":"event","Q55813089":"event","Q55813095":"event","Q55813101":"event","Q55813180":"event","Q55995447":"event","Q55995576":"event","Q55995610":"event","Q55995623":"event","Q56301263":"event","Q56301303":"event","Q56302522":"event","Q56317902":"event","Q56318018":"event","Q56546275":"event","Q56546272":"event","Q56546282":"event","Q56546289":"event","Q56546300":"event","Q56546307":"event","Q56546318":"event","Q56546321":"event","Q56546330":"event","Q56546337":"event","Q56546348":"event","Q56546353":"event","Q56546362":"event","Q56546366":"event","Q56546372":"event","Q56546377":"event","Q56546390":"event","Q56546395":"event","Q56546407":"event","Q56546413":"event","Q56546499":"event","Q56546503":"event","Q56546518":"event","Q56546525":"event","Q56546535":"event","Q56546543":"event","Q56546551":"event","Q56546557":"event","Q56546566":"event","Q56546573":"event","Q56546610":"event","Q56546617":"event","Q56546628":"event","Q56546637":"event","Q56546647":"event","Q56684684":"event","Q56684685":"event","Q56684689":"event","Q56684699":"event","Q56684696":"event","Q56684702":"event","Q56684712":"event","Q56684735":"event","Q56684744":"event","Q56684751":"event","Q56684758":"event","Q56684761":"event","Q56684765":"event","Q56684772":"event","Q56684779":"event","Q56684782":"event","Q56684787":"event","Q56684788":"event","Q56684795":"event","Q56684796":"event","Q56684802":"event","Q56684804":"event","Q56760822":"event","Q56760823":"event","Q56760826":"event","Q56760827":"event","Q56760830":"event","Q56760828":"event","Q56760834":"event","Q56760835":"event","Q56760833":"event","Q56760839":"event","Q56760836":"event","Q56760837":"event","Q56760842":"event","Q56760843":"event","Q56760840":"event","Q56760846":"event","Q56760844":"event","Q56760850":"event","Q56760851":"event","Q56760848":"event","Q56760853":"event","Q56760858":"event","Q56760859":"event","Q56760856":"event","Q56760857":"event","Q56760862":"event","Q56760863":"event","Q56760860":"event","Q56760861":"event","Q56760866":"event","Q56760864":"event","Q56760870":"event","Q56760871":"event","Q56760869":"event","Q56760874":"event","Q56760873":"event","Q56760877":"event","Q56760880":"event","Q56760886":"event","Q56760887":"event","Q56760884":"event","Q56760885":"event","Q56760890":"event","Q56760889":"event","Q57047664":"event","Q57047681":"event","Q57047694":"event","Q57047708":"event","Q57047728":"event","Q57047744":"event","Q57047761":"event","Q57047776":"event","Q57047792":"event","Q57047805":"event","Q57047823":"event","Q57047840":"event","Q57047859":"event","Q57047872":"event","Q57047891":"event","Q57047907":"event","Q57047920":"event","Q57047936":"event","Q57047953":"event","Q57047968":"event","Q57047989":"event","Q57048004":"event","Q57048019":"event","Q57048032":"event","Q57048048":"event","Q57048063":"event","Q57048081":"event","Q57048097":"event","Q57048118":"event","Q57048134":"event","Q57048150":"event","Q57048168":"event","Q57048183":"event","Q57048199":"event","Q57048218":"event","Q57048238":"event","Q57048253":"event","Q57048272":"event","Q57048291":"event","Q57048307":"event","Q57048322":"event","Q57048337":"event","Q57048355":"event","Q57048370":"event","Q57048390":"event","Q57048403":"event","Q57048425":"event","Q57048443":"event","Q57048459":"event","Q57048478":"event","Q57048493":"event","Q57048508":"event","Q57048523":"event","Q57048544":"event","Q57048560":"event","Q57048580":"event","Q57048603":"event","Q57048757":"event","Q57048765":"event","Q57048783":"event","Q57048799":"event","Q57048819":"event","Q57048837":"event","Q57048855":"event","Q57048866":"event","Q57048882":"event","Q57048893":"event","Q57048909":"event","Q57048924":"event","Q57048945":"event","Q57048962":"event","Q57049081":"event","Q57049091":"event","Q57049109":"event","Q57049142":"event","Q57049480":"event","Q57049491":"event","Q57083260":"event","Q57083261":"event","Q57083266":"event","Q57083264":"event","Q57083269":"event","Q57083274":"event","Q57083275":"event","Q57083272":"event","Q57083278":"event","Q57083277":"event","Q57083283":"event","Q57083281":"event","Q57083286":"event","Q57083285":"event","Q57083290":"event","Q57083288":"event","Q57083295":"event","Q57083293":"event","Q57083299":"event","Q57083297":"event","Q57083303":"event","Q57083301":"event","Q57083306":"event","Q57083311":"event","Q57083308":"event","Q57083314":"event","Q57083323":"event","Q57083320":"event","Q57083338":"event","Q57083341":"event","Q57083347":"event","Q57083344":"event","Q57083350":"event","Q57083351":"event","Q57083348":"event","Q57083349":"event","Q57083355":"event","Q57083352":"event","Q57083357":"event","Q57083362":"event","Q57083360":"event","Q57083366":"event","Q57083369":"event","Q57083374":"event","Q57083375":"event","Q57083378":"event","Q57083382":"event","Q57083380":"event","Q57083385":"event","Q57083390":"event","Q57083388":"event","Q57083393":"event","Q57083399":"event","Q57083403":"event","Q57083406":"event","Q57083409":"event","Q57083413":"event","Q57083419":"event","Q57083417":"event","Q57083423":"event","Q57083427":"event","Q57083434":"event","Q57083432":"event","Q57083439":"event","Q57083443":"event","Q57083446":"event","Q57083450":"event","Q57083454":"event","Q57083458":"event","Q57083464":"event","Q57083470":"event","Q57083468":"event","Q57083474":"event","Q59617887":"event","Q59617890":"event","Q59617891":"event","Q59617894":"event","Q59617893":"event","Q59617898":"event","Q59617899":"event","Q59617896":"event","Q59617902":"event","Q59617907":"event","Q59617904":"event","Q59617905":"event","Q59617911":"event","Q59617909":"event","Q59617914":"event","Q59617915":"event","Q59617912":"event","Q59617918":"event","Q59617919":"event","Q59617922":"event","Q59617923":"event","Q59617921":"event","Q59617926":"event","Q59617927":"event","Q59617924":"event","Q59617929":"event","Q59617935":"event","Q59617932":"event","Q59617933":"event","Q59617938":"event","Q59617939":"event","Q59617936":"event","Q59617941":"event","Q59617946":"event","Q59617947":"event","Q59617944":"event","Q59617945":"event","Q59617950":"event","Q59617951":"event","Q59617954":"event","Q59617953":"event","Q59645503":"event","Q59645505":"event","Q59645510":"event","Q59645514":"event","Q59645519":"event","Q59645523":"event","Q59660139":"event","Q59660141":"event","Q59660147":"event","Q59660151":"event","Q59660149":"event","Q59660155":"event","Q59660157":"event","Q59660163":"event","Q59660161":"event","Q59660483":"event","Q59660480":"event","Q59660486":"event","Q59660490":"event","Q59660488":"event","Q59660492":"event","Q60015262":"event","Q60464214":"event","Q60464219":"event","Q60464224":"event","Q60464230":"event","Q60464234":"event","Q60464241":"event","Q60464244":"event","Q60464253":"event","Q60464259":"event","Q60464267":"event","Q60464272":"event","Q60464278":"event","Q60464276":"event","Q60464281":"event","Q60464287":"event","Q60464284":"event","Q60464289":"event","Q60464296":"event","Q60464301":"event","Q60464310":"event","Q60464314":"event","Q60464322":"event","Q60464327":"event","Q60464324":"event","Q60464330":"event","Q60464335":"event","Q60464343":"event","Q60464340":"event","Q60464348":"event","Q60464353":"event","Q60464359":"event","Q60464356":"event","Q60464360":"event","Q60464366":"event","Q60464370":"event","Q60464373":"event","Q60464378":"event","Q60464384":"event","Q60464388":"event","Q60464395":"event","Q60464393":"event","Q60464403":"event","Q60464409":"event","Q60464419":"event","Q60464416":"event","Q60464427":"event","Q60464430":"event","Q60464435":"event","Q60464438":"event","Q60464443":"event","Q60464441":"event","Q60464446":"event","Q60464447":"event","Q60464450":"event","Q60464453":"event","Q60464459":"event","Q60464457":"event","Q60464463":"event","Q60464465":"event","Q60464471":"event","Q60464469":"event","Q60464475":"event","Q60464478":"event","Q60464476":"event","Q60464481":"event","Q60464486":"event","Q60464484":"event","Q60464485":"event","Q60464490":"event","Q60464491":"event","Q60464495":"event","Q60464497":"event","Q60464503":"event","Q60464501":"event","Q60464506":"event","Q60464508":"event","Q60464512":"event","Q60464513":"event","Q60464518":"event","Q60464519":"event","Q60464523":"event","Q60464520":"event","Q60464521":"event","Q60464526":"event","Q60464530":"event","Q60464528":"event","Q60464535":"event","Q60464533":"event","Q60464537":"event","Q60464541":"event","Q60464545":"event","Q60464551":"event","Q60464549":"event","Q60464558":"event","Q60464556":"event","Q60464563":"event","Q60464561":"event","Q60464567":"event","Q60464565":"event","Q60464570":"event","Q60464571":"event","Q60464569":"event","Q60464575":"event","Q60464572":"event","Q60464579":"event","Q60464576":"event","Q60464581":"event","Q60464586":"event","Q60464587":"event","Q60464590":"event","Q60464592":"event","Q60848282":"event","Q60883855":"event","Q60883940":"event","Q61053046":"event","Q61053176":"event","Q61053226":"event","Q61075052":"event","Q61480312":"event","Q61480496":"event","Q61750426":"event","Q61770457":"event","Q61770474":"event","Q61770514":"event","Q61770529":"event","Q61770588":"event","Q61770618":"event","Q61770671":"event","Q61770702":"event","Q61770767":"event","Q61770794":"event","Q61770843":"event","Q61770865":"event","Q61770885":"event","Q61770898":"event","Q61770922":"event","Q61770934":"event","Q61770952":"event","Q61770962":"event","Q61770981":"event","Q61770992":"event","Q61771013":"event","Q61771018":"event","Q61771022":"event","Q61771025":"event","Q61771036":"event","Q61891160":"event","Q62024698":"event","Q62056807":"event","Q62056810":"event","Q62056815":"event","Q62056817":"event","Q62056821":"event","Q62056824":"event","Q62056829":"event","Q62056834":"event","Q62056839":"event","Q62056842":"event","Q62056846":"event","Q62056850":"event","Q62056852":"event","Q62056858":"event","Q62056856":"event","Q62056863":"event","Q62056867":"event","Q62056873":"event","Q62056879":"event","Q62056885":"event","Q62056891":"event","Q62056895":"event","Q62056898":"event","Q62056903":"event","Q62056901":"event","Q62056906":"event","Q62056904":"event","Q62056908":"event","Q62056909":"event","Q62056914":"event","Q62056912":"event","Q62056919":"event","Q62056916":"event","Q62056922":"event","Q62056923":"event","Q62056926":"event","Q62056931":"event","Q62056928":"event","Q62056929":"event","Q62056934":"event","Q62056935":"event","Q62056932":"event","Q62056933":"event","Q62056939":"event","Q62056937":"event","Q62056940":"event","Q62056945":"event","Q62056951":"event","Q62056955":"event","Q62056953":"event","Q62056959":"event","Q62056956":"event","Q62056961":"event","Q62056966":"event","Q62056964":"event","Q62056970":"event","Q62056968":"event","Q62056974":"event","Q62056975":"event","Q62056972":"event","Q62056979":"event","Q62056976":"event","Q62056977":"event","Q62056982":"event","Q62056983":"event","Q62056980":"event","Q62056984":"event","Q62056985":"event","Q62056990":"event","Q62056991":"event","Q62056988":"event","Q62056989":"event","Q62056994":"event","Q62056995":"event","Q62056992":"event","Q62056993":"event","Q62056998":"event","Q62056997":"event","Q62057003":"event","Q62057000":"event","Q62057001":"event","Q62057006":"event","Q62057007":"event","Q62057004":"event","Q62057005":"event","Q62057010":"event","Q62057011":"event","Q62057008":"event","Q62057015":"event","Q62057012":"event","Q62057013":"event","Q62057018":"event","Q62057016":"event","Q62057020":"event","Q62057022":"event","Q62057023":"event","Q62057021":"event","Q62057027":"event","Q62057024":"event","Q62057025":"event","Q62057030":"event","Q62057028":"event","Q62057034":"event","Q62057032":"event","Q62057038":"event","Q62057036":"event","Q62057037":"event","Q62057040":"event","Q62063251":"event","Q62063256":"event","Q62063261":"event","Q62063267":"event","Q62063264":"event","Q62063270":"event","Q62063273":"event","Q62063276":"event","Q62071994":"event","Q62071995":"event","Q62071997":"event","Q62072003":"event","Q62072000":"event","Q62072006":"event","Q62072004":"event","Q62072008":"event","Q62072012":"event","Q62072016":"event","Q62072020":"event","Q62072021":"event","Q62072026":"event","Q62072025":"event","Q62072030":"event","Q62072031":"event","Q62072034":"event","Q62072036":"event","Q62072042":"event","Q62072040":"event","Q62072047":"event","Q62072048":"event","Q62072052":"event","Q62072053":"event","Q62072056":"event","Q62072057":"event","Q62072062":"event","Q62072061":"event","Q62072067":"event","Q62072071":"event","Q62072068":"event","Q62072075":"event","Q62072072":"event","Q62072079":"event","Q62072076":"event","Q62072081":"event","Q62072084":"event","Q62072085":"event","Q62072090":"event","Q62072088":"event","Q62072094":"event","Q62072093":"event","Q62072098":"event","Q62072102":"event","Q62072100":"event","Q62072105":"event","Q62072110":"event","Q62072112":"event","Q62072118":"event","Q62072119":"event","Q62072124":"event","Q62072125":"event","Q62072130":"event","Q62072129":"event","Q62072134":"event","Q62072132":"event","Q62072138":"event","Q62072136":"event","Q62072142":"event","Q62072141":"event","Q62072146":"event","Q62072149":"event","Q62072154":"event","Q62072153":"event","Q62072158":"event","Q62072159":"event","Q62072163":"event","Q62072167":"event","Q62072164":"event","Q62072170":"event","Q62072168":"event","Q62072174":"event","Q62072175":"event","Q62072172":"event","Q62072179":"event","Q62072177":"event","Q62072182":"event","Q62072181":"event","Q62072184":"event","Q62072185":"event","Q62072191":"event","Q62072188":"event","Q62072189":"event","Q62072194":"event","Q62072195":"event","Q62072192":"event","Q62072198":"event","Q62072197":"event","Q62072200":"event","Q62072201":"event","Q62072207":"event","Q62072204":"event","Q62072210":"event","Q62072209":"event","Q62072214":"event","Q62072213":"event","Q62072218":"event","Q62072219":"event","Q62072223":"event","Q62072224":"event","Q62081489":"event","Q62081503":"event","Q62081519":"event","Q62081530":"event","Q62081537":"event","Q62081546":"event","Q62081557":"event","Q62081567":"event","Q62081575":"event","Q62081573":"event","Q63000995":"event","Q63001006":"event","Q63001035":"event","Q63001048":"event","Q63001078":"event","Q63001096":"event","Q63001126":"event","Q63001145":"event","Q63001212":"event","Q63064239":"event","Q63064241":"event","Q63064255":"event","Q63064252":"event","Q63064266":"event","Q63064264":"event","Q63064273":"event","Q63064277":"event","Q63064283":"event","Q63064286":"event","Q63064295":"event","Q63064292":"event","Q63064302":"event","Q63064300":"event","Q63064306":"event","Q63064308":"event","Q63064314":"event","Q63064312":"event","Q63064318":"event","Q63064320":"event","Q63064325":"event","Q63064328":"event","Q63064333":"event","Q63064336":"event","Q63064341":"event","Q63064344":"event","Q63065154":"event","Q63065159":"event","Q63065170":"event","Q63065174":"event","Q63065186":"event","Q63065193":"event","Q63065204":"event","Q63065212":"event","Q63241255":"event","Q63241258":"event","Q63241266":"event","Q63241271":"event","Q63241489":"event","Q63242755":"event","Q63242761":"event","Q63242780":"event","Q63242821":"event","Q63242824":"event","Q63242829":"event","Q63242835":"event","Q63242832":"event","Q63242852":"event","Q63242878":"event","Q63242892":"event","Q63242899":"event","Q63242903":"event","Q63242901":"event","Q63242907":"event","Q63242905":"event","Q63242911":"event","Q63242914":"event","Q63242917":"event","Q63242922":"event","Q63242926":"event","Q63242930":"event","Q63242934":"event","Q63242937":"event","Q63243710":"event","Q63243714":"event","Q63243712":"event","Q63243718":"event","Q63243716":"event","Q63243722":"event","Q63243720":"event","Q63243726":"event","Q63243724":"event","Q63243730":"event","Q63243728":"event","Q63243734":"event","Q63243732":"event","Q63243739":"event","Q63243737":"event","Q63243742":"event","Q63394417":"event","Q63394694":"event","Q63441561":"event","Q63441564":"event","Q63441838":"event","Q63441839":"event","Q63441842":"event","Q63441843":"event","Q63441847":"event","Q63441848":"event","Q63441854":"event","Q63441852":"event","Q63441865":"event","Q63441870":"event","Q63441879":"event","Q63441877":"event","Q63537311":"event","Q63537313":"event","Q63537372":"event","Q63537379":"event","Q63537383":"event","Q63537389":"event","Q63537396":"event","Q63537403":"event","Q63537401":"event","Q63537410":"event","Q63537408":"event","Q63537418":"event","Q63537416":"event","Q63537439":"event","Q63537457":"event","Q63537491":"event","Q63537505":"event","Q63537527":"event","Q63537539":"event","Q63537564":"event","Q63537576":"event","Q63537603":"event","Q63537611":"event","Q63537631":"event","Q63537645":"event","Q63571259":"event","Q63571389":"event","Q63571432":"event","Q63571505":"event","Q63571556":"event","Q63571661":"event","Q63571700":"event","Q63571773":"event","Q63571809":"event","Q63571884":"event","Q63571925":"event","Q63860061":"event","Q63861898":"event","Q63861908":"event","Q63861927":"event","Q63861931":"event","Q63861956":"event","Q63861967":"event","Q63861984":"event","Q63861994":"event","Q63862011":"event","Q63862021":"event","Q63862037":"event","Q63862046":"event","Q63862060":"event","Q63862067":"event","Q63862080":"event","Q63862088":"event","Q63862093":"event","Q63862098":"event","Q63862102":"event","Q63862101":"event","Q63862104":"event","Q63862105":"event","Q63862110":"event","Q63862109":"event","Q63862114":"event","Q63862113":"event","Q63862117":"event","Q63862118":"event","Q63863058":"event","Q63863059":"event","Q63863062":"event","Q63863061":"event","Q63863064":"event","Q63863065":"event","Q63863068":"event","Q63863069":"event","Q63863075":"event","Q63863077":"event","Q63869670":"event","Q63869823":"event","Q63869880":"event","Q64007242":"event","Q64439990":"event","Q64506211":"event","Q64624273":"event","Q64624304":"event","Q64624561":"event","Q64624567":"event","Q64624565":"event","Q64624574":"event","Q64624583":"event","Q64624586":"event","Q64624587":"event","Q64624584":"event","Q64624598":"event","Q64624605":"event","Q64624618":"event","Q64624623":"event","Q64624620":"event","Q64624625":"event","Q64624636":"event","Q64624643":"event","Q64624656":"event","Q64624657":"event","Q64624666":"event","Q64624665":"event","Q64682714":"event","Q64682751":"event","Q64682781":"event","Q64682802":"event","Q64691906":"event","Q64691912":"event","Q64691926":"event","Q64691925":"event","Q64691930":"event","Q64691928":"event","Q64691935":"event","Q64691939":"event","Q64691936":"event","Q64691942":"event","Q64691940":"event","Q64691944":"event","Q64691950":"event","Q64691949":"event","Q64706790":"event","Q64706794":"event","Q64706798":"event","Q64706802":"event","Q64706819":"event","Q64706820":"event","Q64788390":"event","Q64788389":"event","Q64788392":"event","Q64841102":"event","Q64841101":"event","Q64841104":"event","Q64841105":"event","Q64841110":"event","Q64841109":"event","Q64841115":"event","Q64841113":"event","Q64841118":"event","Q64841117":"event","Q64841120":"event","Q64841121":"event","Q64848606":"event","Q64848605":"event","Q64848610":"event","Q64848614":"event","Q64848623":"event","Q64848620":"event","Q64848627":"event","Q64848630":"event","Q64848633":"event","Q64848636":"event","Q64848641":"event","Q64848645":"event","Q64848652":"event","Q64848656":"event","Q64848663":"event","Q64848667":"event","Q64848673":"event","Q64848680":"event","Q64848685":"event","Q64848691":"event","Q64848694":"event","Q64848698":"event","Q64848709":"event","Q64848715":"event","Q64848720":"event","Q64848721":"event","Q64848727":"event","Q64848730":"event","Q64848734":"event","Q64848738":"event","Q64848736":"event","Q64848741":"event","Q64848748":"event","Q64848749":"event","Q64848765":"event","Q64848774":"event","Q64848783":"event","Q64848790":"event","Q64848807":"event","Q64848804":"event","Q64848811":"event","Q64848813":"event","Q64848818":"event","Q64848817":"event","Q64848827":"event","Q64848825":"event","Q64848834":"event","Q64848838":"event","Q64848847":"event","Q64848853":"event","Q64848863":"event","Q64848860":"event","Q64848875":"event","Q64848872":"event","Q64848873":"event","Q64848877":"event","Q64849091":"event","Q64849088":"event","Q64849101":"event","Q64869402":"event","Q64869403":"event","Q64869407":"event","Q64869408":"event","Q64896714":"event","Q64896720":"event","Q64896732":"event","Q64896743":"event","Q64896757":"event","Q64896765":"event","Q64896779":"event","Q64896791":"event","Q64896804":"event","Q64896812":"event","Q64896824":"event","Q64896835":"event","Q64896849":"event","Q64896859":"event","Q64896873":"event","Q64896883":"event","Q64896898":"event","Q64896907":"event","Q64896921":"event","Q64896933":"event","Q64896950":"event","Q64896959":"event","Q64896972":"event","Q64896977":"event","Q64896986":"event","Q64896992":"event","Q64897003":"event","Q64897009":"event","Q64897026":"event","Q64897033":"event","Q64897041":"event","Q64897048":"event","Q64897060":"event","Q64897068":"event","Q64897145":"event","Q64897171":"event","Q64897225":"event","Q64897266":"event","Q64897291":"event","Q64897311":"event","Q64897325":"event","Q64897343":"event","Q64897358":"event","Q64897375":"event","Q64897389":"event","Q64897426":"event","Q64897433":"event","Q64897498":"event","Q64897704":"event","Q64897751":"event","Q64897757":"event","Q64897838":"event","Q64897883":"event","Q64897900":"event","Q64897931":"event","Q64897947":"event","Q64897990":"event","Q64954681":"event","Q64954694":"event","Q64956590":"event","Q64956644":"event","Q64956683":"event","Q64956718":"event","Q64956849":"event","Q64957018":"event","Q64957065":"event","Q64957126":"event","Q64957164":"event","Q64957522":"event","Q64957580":"event","Q64957599":"event","Q64957635":"event","Q64957656":"event","Q64957695":"event","Q64957713":"event","Q64957758":"event","Q64957784":"event","Q65007259":"event","Q65007263":"event","Q65007260":"event","Q65007265":"event","Q65016031":"event","Q65016034":"event","Q65016038":"event","Q65016040":"event","Q65016047":"event","Q65016044":"event","Q65027958":"event","Q65027956":"event","Q65027962":"event","Q65027960":"event","Q65027967":"event","Q65027964":"event","Q65027965":"event","Q65027971":"event","Q65027968":"event","Q65027972":"event","Q65034729":"event","Q65034736":"event","Q65034743":"event","Q65034748":"event","Q65034754":"event","Q65034762":"event","Q65034769":"event","Q65050402":"event","Q65050406":"event","Q65059762":"event","Q65059841":"event","Q65061152":"event","Q65061185":"event","Q65061240":"event","Q65061327":"event","Q65096026":"event","Q65096028":"event","Q65096039":"event","Q65096041":"event","Q65096046":"event","Q65096051":"event","Q65096048":"event","Q65096049":"event","Q65096058":"event","Q65096056":"event","Q65111009":"event","Q65111021":"event","Q65111116":"event","Q65111144":"event","Q65111190":"event","Q65111215":"event","Q65111264":"event","Q65111286":"event","Q65111346":"event","Q65111376":"event","Q65111434":"event","Q65111459":"event","Q65111505":"event","Q65111515":"event","Q65111533":"event","Q65111542":"event","Q65111559":"event","Q65111568":"event","Q65111584":"event","Q65111594":"event","Q65111609":"event","Q65111618":"event","Q65111631":"event","Q65111640":"event","Q65111657":"event","Q65111663":"event","Q65152097":"event","Q65178259":"event","Q65178281":"event","Q65178346":"event","Q65178365":"event","Q65178401":"event","Q65178404":"event","Q65179447":"event","Q65179486":"event","Q65179572":"event","Q65179616":"event","Q65179632":"event","Q65179661":"event","Q65179674":"event","Q65179702":"event","Q65179715":"event","Q65179740":"event","Q65179751":"event","Q65179787":"event","Q65179803":"event","Q65179831":"event","Q65179851":"event","Q65179894":"event","Q65179914":"event","Q65179957":"event","Q65179978":"event","Q65371835":"event","Q65372007":"event","Q65964600":"event","Q65964601":"event","Q65965631":"event","Q65965633":"event","Q65970777":"event","Q65970841":"event","Q65970859":"event","Q65970856":"event","Q65970915":"event","Q65970917":"event","Q65970922":"event","Q65970927":"event","Q65970924":"event","Q65970931":"event","Q65970928":"event","Q65970933":"event","Q65970939":"event","Q65970940":"event","Q65971306":"event","Q65971310":"event","Q65971316":"event","Q65971321":"event","Q65971327":"event","Q65971342":"event","Q65971344":"event","Q65971563":"event","Q65971566":"event","Q65971568":"event","Q65971576":"event","Q65971582":"event","Q65971585":"event","Q65971592":"event","Q65971597":"event","Q66082384":"event","Q66082905":"event","Q66152137":"event","Q66152161":"event","Q66152212":"event","Q66152245":"event","Q66152306":"event","Q66152338":"event","Q66152402":"event","Q66152432":"event","Q66152457":"event","Q66152470":"event","Q66152493":"event","Q66152506":"event","Q66152532":"event","Q66152543":"event","Q66250756":"event","Q66362617":"event","Q66370867":"event","Q66370873":"event","Q66370910":"event","Q66370911":"event","Q66370914":"event","Q66370912":"event","Q66370919":"event","Q66370916":"event","Q66370917":"event","Q66370922":"event","Q66370926":"event","Q66370928":"event","Q66370934":"event","Q66370933":"event","Q66370937":"event","Q66370940":"event","Q66380104":"event","Q66427071":"event","Q66427152":"event","Q66427158":"event","Q66427166":"event","Q66427172":"event","Q66427178":"event","Q66427185":"event","Q66427191":"event","Q66427198":"event","Q66427204":"event","Q66427212":"event","Q66427217":"event","Q66427226":"event","Q66427232":"event","Q66427240":"event","Q66427248":"event","Q66427255":"event","Q66427263":"event","Q66427271":"event","Q66427278":"event","Q66427286":"event","Q66427293":"event","Q66427302":"event","Q66427311":"event","Q66427318":"event","Q66427325":"event","Q66427332":"event","Q66498425":"event","Q66498528":"event","Q66498883":"event","Q66498881":"event","Q66498891":"event","Q66498898":"event","Q66498902":"event","Q66498900":"event","Q66498905":"event","Q66498910":"event","Q66498927":"event","Q66498928":"event","Q66498934":"event","Q66498932":"event","Q66498938":"event","Q66498936":"event","Q66565514":"event","Q66565582":"event","Q66566082":"event","Q66566377":"event","Q66566388":"event","Q66566408":"event","Q66566420":"event","Q66566441":"event","Q66566452":"event","Q66566473":"event","Q66566487":"event","Q66566508":"event","Q66566520":"event","Q66566557":"event","Q66566572":"event","Q66566594":"event","Q66566609":"event","Q66715409":"event","Q66715424":"event","Q66715450":"event","Q66715465":"event","Q66715496":"event","Q66715504":"event","Q66715519":"event","Q66715527":"event","Q66715542":"event","Q66715549":"event","Q66736271":"event","Q66762475":"event","Q66762491":"event","Q66762500":"event","Q66762511":"event","Q66762521":"event","Q66762524":"event","Q66762534":"event","Q66762540":"event","Q66762546":"event","Q66762562":"event","Q66762569":"event","Q66762578":"event","Q66762584":"event","Q66762592":"event","Q66762597":"event","Q66762604":"event","Q66762614":"event","Q66762631":"event","Q66812887":"event","Q66812889":"event","Q66812895":"event","Q66812893":"event","Q66812907":"event","Q66812904":"event","Q66812911":"event","Q66812912":"event","Q66812918":"event","Q66812921":"event","Q66812931":"event","Q66812929":"event","Q66812932":"event","Q66812945":"event","Q66812958":"event","Q66812962":"event","Q66812967":"event","Q66812964":"event","Q66812971":"event","Q66989571":"event","Q66989580":"event","Q66989617":"event","Q66989629":"event","Q66989655":"event","Q66989709":"event","Q67029602":"event","Q67029619":"event","Q67029769":"event","Q67029810":"event","Q67029861":"event","Q67403269":"event","Q67403335":"event","Q67403362":"event","Q67403401":"event","Q67403427":"event","Q67403589":"event","Q67403596":"event","Q67403618":"event","Q67403638":"event","Q67403659":"event","Q67403680":"event","Q67403744":"event","Q67403774":"event","Q67403828":"event","Q67403847":"event","Q67403923":"event","Q67403947":"event","Q70008153":"event","Q70008310":"event","Q70655305":"event","Q70737162":"event","Q70737192":"event","Q70737255":"event","Q70737285":"event","Q70737353":"event","Q70737396":"event","Q70737649":"event","Q70737784":"event","Q70737849":"event","Q70737980":"event","Q70738053":"event","Q70738188":"event","Q70738264":"event","Q70738342":"event","Q70738388":"event","Q70739096":"event","Q70739127":"event","Q70739188":"event","Q70739230":"event","Q70739298":"event","Q70739339":"event","Q70739417":"event","Q70739455":"event","Q70739525":"event","Q70739571":"event","Q70740170":"event","Q70750527":"event","Q70750641":"event","Q70750677":"event","Q70750730":"event","Q70750758":"event","Q70750828":"event","Q70750868":"event","Q70750940":"event","Q70750984":"event","Q70751045":"event","Q70751093":"event","Q70751161":"event","Q70751195":"event","Q70751262":"event","Q70751301":"event","Q70751377":"event","Q70751423":"event","Q70751523":"event","Q70771309":"event","Q71014194":"event","Q71014269":"event","Q71859272":"event","Q71859280":"event","Q71859368":"event","Q71859410":"event","Q71859562":"event","Q71859641":"event","Q71859775":"event","Q71859853":"event","Q71859955":"event","Q71859992":"event","Q71860053":"event","Q71860084":"event","Q71860132":"event","Q71860165":"event","Q71860221":"event","Q71860253":"event","Q72092965":"event","Q72092993":"event","Q72093039":"event","Q72093069":"event","Q72093115":"event","Q72093135":"event","Q72093144":"event","Q72093159":"event","Q72093166":"event","Q72093193":"event","Q72093209":"event","Q72093235":"event","Q72093255":"event","Q72093275":"event","Q72093286":"event","Q72093311":"event","Q72093329":"event","Q72093344":"event","Q72093354":"event","Q72093371":"event","Q72093379":"event","Q72093386":"event","Q72093392":"event","Q72093402":"event","Q72093405":"event","Q72093417":"event","Q72093425":"event","Q74728035":"event","Q74728136":"event","Q74728162":"event","Q74728216":"event","Q74728309":"event","Q74728363":"event","Q74728422":"event","Q74728458":"event","Q74728524":"event","Q74728642":"event","Q74728708":"event","Q74728816":"event","Q74728873":"event","Q74728971":"event","Q74729032":"event","Q74729143":"event","Q74729207":"event","Q74729319":"event","Q74729378":"event","Q74729484":"event","Q74729545":"event","Q74729629":"event","Q74729682":"event","Q74729730":"event","Q74729773":"event","Q74729832":"event","Q74729864":"event","Q74729893":"event","Q74729932":"event","Q74729989":"event","Q74730024":"event","Q74730086":"event","Q74730119":"event","Q74730179":"event","Q74730213":"event","Q74730274":"event","Q74730299":"event","Q74730350":"event","Q74730381":"event","Q74730416":"event","Q74730438":"event","Q74730465":"event","Q74730513":"event","Q74730545":"event","Q74730609":"event","Q74730648":"event","Q74730683":"event","Q74730712":"event","Q74730745":"event","Q74730793":"event","Q74730830":"event","Q74730885":"event","Q74730923":"event","Q74730980":"event","Q74731012":"event","Q74731071":"event","Q74731104":"event","Q74731157":"event","Q74731190":"event","Q74731238":"event","Q74731260":"event","Q74731315":"event","Q74731345":"event","Q74731390":"event","Q74731421":"event","Q74731461":"event","Q74731492":"event","Q74731707":"event","Q74731741":"event","Q74731797":"event","Q74731830":"event","Q74731886":"event","Q74731915":"event","Q74731971":"event","Q74732003":"event","Q74732059":"event","Q74732088":"event","Q74732147":"event","Q74732180":"event","Q74732248":"event","Q74732282":"event","Q74732347":"event","Q74732383":"event","Q74732438":"event","Q74732475":"event","Q74732529":"event","Q74732566":"event","Q74732618":"event","Q74732652":"event","Q74732709":"event","Q74732743":"event","Q74732787":"event","Q74732813":"event","Q74732861":"event","Q74732889":"event","Q74732949":"event","Q74732987":"event","Q74733034":"event","Q74733065":"event","Q74733118":"event","Q74733148":"event","Q74733198":"event","Q74733228":"event","Q74733271":"event","Q74733302":"event","Q74733358":"event","Q74733390":"event","Q74733418":"event","Q74733439":"event","Q74733472":"event","Q74733518":"event","Q74733543":"event","Q74733592":"event","Q74733623":"event","Q74733676":"event","Q74733714":"event","Q74733770":"event","Q74733815":"event","Q74733883":"event","Q74733917":"event","Q74733948":"event","Q74733968":"event","Q74734002":"event","Q74734053":"event","Q74734093":"event","Q74734138":"event","Q74734164":"event","Q74734208":"event","Q74734237":"event","Q74734265":"event","Q74734284":"event","Q74734307":"event","Q74734332":"event","Q74734354":"event","Q74734394":"event","Q74734443":"event","Q74734472":"event","Q74734515":"event","Q74734540":"event","Q74734589":"event","Q74734623":"event","Q74734676":"event","Q74734706":"event","Q74734754":"event","Q74734784":"event","Q74734843":"event","Q74734878":"event","Q74734937":"event","Q74734963":"event","Q74735117":"event","Q74735168":"event","Q74735216":"event","Q74735275":"event","Q74735309":"event","Q74735381":"event","Q74735438":"event","Q74735489":"event","Q74735550":"event","Q74735603":"event","Q74735664":"event","Q74735721":"event","Q74735781":"event","Q74735841":"event","Q74735885":"event","Q74735947":"event","Q74736017":"event","Q74736088":"event","Q74736137":"event","Q74736186":"event","Q74736240":"event","Q74736290":"event","Q74736329":"event","Q74736388":"event","Q74736437":"event","Q74736495":"event","Q74736553":"event","Q74736615":"event","Q74736669":"event","Q74736708":"event","Q74736736":"event","Q74736787":"event","Q74736817":"event","Q74736848":"event","Q74736870":"event","Q74736895":"event","Q74736920":"event","Q74736956":"event","Q74736980":"event","Q74737009":"event","Q74737036":"event","Q74737070":"event","Q74737101":"event","Q74737144":"event","Q74737170":"event","Q74737205":"event","Q74737238":"event","Q74737260":"event","Q74737282":"event","Q74737314":"event","Q74737343":"event","Q74737371":"event","Q74737391":"event","Q74737427":"event","Q74737456":"event","Q74737494":"event","Q74737516":"event","Q74737561":"event","Q74737588":"event","Q74737618":"event","Q74737639":"event","Q74737671":"event","Q74737700":"event","Q74737741":"event","Q74737775":"event","Q74737820":"event","Q74737854":"event","Q74737900":"event","Q74737926":"event","Q74737966":"event","Q74737992":"event","Q74738033":"event","Q74738059":"event","Q74738100":"event","Q74738127":"event","Q74738157":"event","Q74738184":"event","Q74738222":"event","Q74738248":"event","Q74738292":"event","Q74738322":"event","Q74738357":"event","Q74738393":"event","Q74738427":"event","Q74738455":"event","Q74738492":"event","Q74738518":"event","Q74738566":"event","Q74738596":"event","Q74738637":"event","Q74738661":"event","Q74738703":"event","Q74738733":"event","Q74738773":"event","Q74738803":"event","Q74738838":"event","Q74738866":"event","Q74738918":"event","Q74738952":"event","Q74738985":"event","Q74739010":"event","Q74739052":"event","Q74739081":"event","Q74739118":"event","Q74739150":"event","Q74739208":"event","Q74739240":"event","Q74739279":"event","Q74739304":"event","Q74739342":"event","Q74739375":"event","Q74739415":"event","Q74739440":"event","Q78466304":"event","Q78466572":"event","Q81695106":"event","Q81696640":"event","Q81929272":"event","Q81929280":"event","Q83462120":"event","Q83462491":"event","Q85305160":"event","Q85801617":"event","Q86668896":"event","Q86676813":"event","Q86684173":"event","Q86754632":"event","Q97368382":"event","Q99208936":"event","Q99209058":"event","Q99642086":"event","Q99642262":"event","Q99642299":"event","Q99642302":"event","Q99646088":"event","Q99659454":"event","Q99659459":"event","Q104308582":"event","Q104308604":"event","Q104308684":"event","Q104308735":"event","Q104308757":"event","Q104308781":"event","Q104308866":"event","Q104308916":"event","Q104308940":"event","Q104309051":"event","Q104309066":"event","Q104309123":"event","Q104309205":"event","Q104309236":"event","Q104309259":"event","Q104309367":"event","Q104309390":"event","Q104309420":"event","Q104309496":"event","Q104309534":"event","Q104309546":"event","Q104309623":"event","Q104309656":"event","Q104309680":"event","Q104309692":"event","Q104309801":"event","Q104309824":"event","Q104309933":"event","Q104309949":"event","Q104309984":"event","Q104310002":"event","Q104310096":"event","Q104310119":"event","Q104310152":"event","Q104310235":"event","Q104310268":"event","Q104310293":"event","Q104310388":"event","Q104310396":"event","Q104310417":"event","Q104310489":"event","Q104310519":"event","Q104310541":"event","Q104310640":"event","Q104310664":"event","Q104310695":"event","Q104310749":"event","Q104310814":"event","Q104310830":"event","Q104310863":"event","Q104310944":"event","Q104310970":"event","Q104310990":"event","Q104311060":"event","Q104311084":"event","Q104311101":"event","Q104311117":"event","Q104311197":"event","Q104311248":"event","Q104311263":"event","Q104311311":"event","Q104311384":"event","Q104311424":"event","Q104311441":"event","Q104311556":"event","Q104311572":"event","Q104311605":"event","Q104311642":"event","Q104311706":"event","Q104311712":"event","Q104311747":"event","Q104311779":"event","Q104311819":"event","Q104311838":"event","Q104311900":"event","Q104311946":"event","Q104311961":"event","Q104311995":"event","Q104312038":"event","Q104312072":"event","Q104312091":"event","Q104312150":"event","Q104312179":"event","Q104312227":"event","Q104312266":"event","Q104312281":"event","Q104312286":"event","Q104312319":"event","Q104312351":"event","Q104312379":"event","Q104312390":"event","Q104312437":"event","Q104312478":"event","Q104312506":"event","Q104312542":"event","Q104312611":"event","Q104312639":"event","Q104313632":"event","Q104313674":"event","Q104313684":"event","Q104327399":"event","Q104327444":"event","Q104327503":"event","Q104327543":"event","Q104327608":"event","Q104327639":"event","Q104327680":"event","Q104327724":"event","Q104327777":"event","Q104327796":"event","Q104327855":"event","Q104327913":"event","Q104327924":"event","Q104327963":"event","Q104328012":"event","Q104328059":"event","Q104328093":"event","Q104328180":"event","Q104328243":"event","Q104328285":"event","Q104328390":"event","Q104328438":"event","Q104328474":"event","Q104328506":"event","Q104328618":"event","Q104328752":"event","Q104328859":"event","Q104328901":"event","Q104328934":"event","Q104328986":"event","Q104329077":"event","Q104329106":"event","Q104329134":"event","Q104329225":"event","Q104329281":"event","Q104329333":"event","Q104329405":"event","Q104329502":"event","Q104329538":"event","Q104329574":"event","Q104329651":"event","Q104329732":"event","Q104329765":"event","Q104329830":"event","Q104329938":"event","Q104329980":"event","Q104330017":"event","Q104330075":"event","Q104330177":"event","Q104330217":"event","Q104330249":"event","Q104330316":"event","Q104330410":"event","Q104330451":"event","Q104330488":"event","Q104330556":"event","Q104330649":"event","Q104330686":"event","Q104330715":"event","Q104330838":"event","Q104330879":"event","Q104330923":"event","Q104330966":"event","Q104331083":"event","Q104331121":"event","Q104331161":"event","Q104331191":"event","Q104331293":"event","Q104331343":"event","Q104331386":"event","Q104331437":"event","Q104331545":"event","Q104331587":"event","Q104331628":"event","Q104331693":"event","Q104331781":"event","Q104331812":"event","Q104331852":"event","Q104331895":"event","Q104332016":"event","Q104332049":"event","Q104332095":"event","Q104332181":"event","Q104332244":"event","Q104332276":"event","Q104332334":"event","Q104332430":"event","Q104332469":"event","Q104332497":"event","Q104332605":"event","Q104332649":"event","Q104332688":"event","Q104332713":"event","Q104332836":"event","Q104332867":"event","Q104332906":"event","Q104332960":"event","Q104333064":"event","Q104333095":"event","Q104333132":"event","Q104033210":"event","Q104033242":"event","Q104033300":"event","Q104033342":"event","Q104151222":"event","Q104151370":"event","Q104157696":"event","Q104158309":"event","Q104247861":"event","Q104247892":"event","Q104247957":"event","Q104247983":"event","Q104249872":"event","Q104249911":"event","Q104249978":"event","Q104250055":"event","Q104250190":"event","Q104250268":"event","Q104303043":"event","Q104304845":"event","Q104305086":"event","Q104306235":"event","Q104306250":"event","Q104306305":"event","Q104306376":"event","Q104306397":"event","Q104306466":"event","Q104306516":"event","Q104306548":"event","Q104306570":"event","Q104306646":"event","Q104306688":"event","Q104306703":"event","Q104306774":"event","Q104306828":"event","Q104306859":"event","Q104306880":"event","Q104306980":"event","Q104306999":"event","Q104307021":"event","Q104307040":"event","Q104307130":"event","Q104307166":"event","Q104307190":"event","Q104307262":"event","Q104307306":"event","Q104307321":"event","Q104307444":"event","Q104307466":"event","Q104307503":"event","Q104307526":"event","Q104307627":"event","Q104307642":"event","Q104307677":"event","Q104307774":"event","Q104307795":"event","Q104307811":"event","Q104307828":"event","Q104307935":"event","Q104307955":"event","Q104308010":"event","Q104308092":"event","Q104308115":"event","Q104308131":"event","Q104308178":"event","Q104308403":"event","Q104308421":"event","Q104308456":"event","Q104308496":"event","Q99659462":"event","Q99660123":"event","Q99661843":"event","Q99661905":"event","Q99661957":"event","Q99662085":"event","Q99693531":"event","Q99693711":"event","Q100601300":"event","Q100604476":"event","Q100694784":"event","Q100696222":"event","Q100699737":"event","Q100707521":"event","Q100742472":"event","Q101252474":"event","Q101252489":"event","Q101252538":"event","Q101252546":"event","Q102416725":"event","Q102417096":"event","Q102417861":"event","Q102418245":"event","Q102421588":"event","Q102421874":"event","Q102422658":"event","Q102423055":"event","Q102425043":"event","Q102425312":"event","Q102427383":"event","Q102427791":"event","Q104333180":"event","Q104333305":"event","Q104333333":"event","Q104333426":"event","Q104333492":"event","Q104333519":"event","Q104333545":"event","Q104333647":"event","Q104333658":"event","Q104333749":"event","Q104333773":"event","Q104336741":"event","Q104336764":"event","Q104336786":"event","Q104336870":"event","Q104336907":"event","Q104336929":"event","Q104336952":"event","Q104337051":"event","Q104337068":"event","Q104337102":"event","Q104530936":"event","Q104531088":"event","Q104531161":"event","Q104531840":"event","Q104543284":"event","Q104586822":"event","Q104587608":"event","Q104588560":"event","Q104589396":"event","Q104589879":"event","Q104590729":"event","Q104590939":"event","Q104590986":"event","Q104591182":"event","Q104591393":"event","Q104591532":"event","Q104592604":"event","Q104593610":"event","Q104594511":"event","Q104594544":"event","Q104600115":"event","Q104630039":"event","Q104630234":"event","Q104758899":"event","Q104758909":"event","Q104758927":"event","Q104758935":"event","Q104762672":"event","Q104763708":"event","Q104764153":"event","Q104764362":"event","Q104850758":"event","Q104854072":"event","Q104855298":"event","Q105397574":"event","Q105398648":"event","Q105398735":"event","Q105528138":"event","Q105528139":"event","Q105528137":"event","Q105528146":"event","Q105528147":"event","Q105528145":"event","Q105528148":"event","Q105528179":"event","Q105528180":"event","Q105531482":"event","Q105531483":"event","Q105531481":"event","Q105531513":"event","Q105531522":"event","Q105531523":"event","Q105531521":"event","Q105531526":"event","Q105531527":"event","Q105531530":"event","Q105531529":"event","Q105531532":"event","Q105531533":"event","Q105544142":"event","Q105544143":"event","Q105544144":"event","Q105544145":"event","Q105544218":"event","Q105544219":"event","Q105544222":"event","Q105544223":"event","Q105544220":"event","Q105544221":"event","Q105544226":"event","Q105544227":"event","Q105544224":"event","Q105544225":"event","Q105544230":"event","Q105544231":"event","Q105544228":"event","Q105544234":"event","Q105544232":"event","Q105544233":"event","Q105544235":"event","Q105544236":"event","Q105544307":"event","Q105544304":"event","Q105544311":"event","Q105544309":"event","Q105544314":"event","Q105544318":"event","Q105544316":"event","Q105544322":"event","Q105544320":"event","Q105544327":"event","Q105544325":"event","Q105544330":"event","Q105544335":"event","Q105544333":"event","Q105544339":"event","Q105544341":"event","Q105544347":"event","Q105544350":"event","Q105544351":"event","Q105544348":"event","Q105544349":"event","Q105544354":"event","Q105550570":"event","Q105550571":"event","Q105550599":"event","Q105550597":"event","Q105550602":"event","Q105550603":"event","Q105550600":"event","Q105550601":"event","Q105550607":"event","Q105550604":"event","Q105550609":"event","Q105550635":"event","Q105550638":"event","Q105550639":"event","Q105550636":"event","Q105550637":"event","Q105550642":"event","Q105550643":"event","Q105550640":"event","Q105550641":"event","Q105550646":"event","Q105550647":"event","Q105550644":"event","Q105550645":"event","Q105550650":"event","Q105550651":"event","Q105550648":"event","Q105550649":"event","Q105550654":"event","Q105550655":"event","Q105550652":"event","Q105550653":"event","Q105550658":"event","Q105550659":"event","Q105550656":"event","Q105550657":"event","Q105550662":"event","Q105550663":"event","Q105550660":"event","Q105550661":"event","Q105550666":"event","Q105550664":"event","Q105550665":"event","Q105552374":"event","Q105552375":"event","Q105552376":"event","Q105552377":"event","Q105552475":"event","Q105552473":"event","Q105552479":"event","Q105552476":"event","Q105552477":"event","Q105552482":"event","Q105552483":"event","Q105552480":"event","Q105552486":"event","Q105552487":"event","Q105552484":"event","Q105552490":"event","Q105552488":"event","Q105552494":"event","Q105552495":"event","Q105552492":"event","Q105552493":"event","Q105552498":"event","Q105552499":"event","Q105552496":"event","Q105552502":"event","Q105552500":"event","Q105552501":"event","Q105552506":"event","Q105552507":"event","Q105552504":"event","Q105552505":"event","Q105552510":"event","Q105552509":"event","Q105552511":"event","Q105552514":"event","Q105552515":"event","Q105552513":"event","Q105552518":"event","Q105552516":"event","Q105552517":"event","Q105552522":"event","Q105552523":"event","Q105552520":"event","Q105552521":"event","Q105552526":"event","Q105552527":"event","Q105552525":"event","Q105552531":"event","Q105552528":"event","Q105552529":"event","Q105552534":"event","Q105552532":"event","Q105552533":"event","Q105552539":"event","Q105552536":"event","Q105552537":"event","Q105552543":"event","Q105552540":"event","Q105552541":"event","Q105552546":"event","Q105552545":"event","Q105552550":"event","Q105552551":"event","Q105552548":"event","Q105552555":"event","Q105552552":"event","Q105552553":"event","Q105552558":"event","Q105552559":"event","Q105552556":"event","Q105552562":"event","Q105552563":"event","Q105552561":"event","Q105552566":"event","Q105552564":"event","Q105552570":"event","Q105552571":"event","Q105552568":"event","Q105552574":"event","Q105552575":"event","Q105552572":"event","Q105552579":"event","Q105552576":"event","Q105552580":"event","Q105552581":"event","Q105552586":"event","Q105552584":"event","Q105552590":"event","Q105552591":"event","Q105552589":"event","Q105552594":"event","Q105552595":"event","Q105552599":"event","Q105552596":"event","Q105552602":"event","Q105552600":"event","Q105552607":"event","Q105552604":"event","Q105552605":"event","Q105581141":"event","Q105581242":"event","Q105581243":"event","Q105581241":"event","Q105581246":"event","Q105581247":"event","Q105581244":"event","Q105581245":"event","Q105581250":"event","Q105581251":"event","Q105581248":"event","Q105581249":"event","Q105581255":"event","Q105581252":"event","Q105581253":"event","Q105581258":"event","Q105581259":"event","Q105581256":"event","Q105581257":"event","Q105581262":"event","Q105581263":"event","Q105581260":"event","Q105581261":"event","Q105581266":"event","Q105581267":"event","Q105581264":"event","Q105581265":"event","Q105581270":"event","Q105581268":"event","Q105581269":"event","Q105581274":"event","Q105581272":"event","Q105581278":"event","Q105581276":"event","Q105581283":"event","Q105581281":"event","Q105581287":"event","Q105581290":"event","Q105581289":"event","Q105581294":"event","Q105581295":"event","Q105581292":"event","Q105581299":"event","Q105581297":"event","Q105581301":"event","Q105581306":"event","Q105581304":"event","Q105581311":"event","Q105581308":"event","Q105581309":"event","Q105581314":"event","Q105581315":"event","Q105581313":"event","Q105581318":"event","Q105581319":"event","Q105581317":"event","Q105581322":"event","Q105581323":"event","Q105581320":"event","Q105581321":"event","Q105581327":"event","Q105581324":"event","Q105581330":"event","Q105581331":"event","Q105581328":"event","Q105581329":"event","Q105581334":"event","Q105581335":"event","Q105581332":"event","Q105581333":"event","Q105581338":"event","Q105581339":"event","Q105581336":"event","Q105581337":"event","Q105581340":"event","Q105581341":"event","Q105600664":"event","Q105601230":"event","Q105601229":"event","Q105601233":"event","Q105601238":"event","Q105601242":"event","Q105601241":"event","Q105601246":"event","Q105601244":"event","Q105601251":"event","Q105601248":"event","Q105601254":"event","Q105601256":"event","Q105601257":"event","Q105601263":"event","Q105601261":"event","Q105601265":"event","Q105601271":"event","Q105601268":"event","Q105601269":"event","Q105601279":"event","Q105601276":"event","Q105601283":"event","Q105601284":"event","Q105601285":"event","Q105601288":"event","Q105601295":"event","Q105601292":"event","Q105601298":"event","Q105601299":"event","Q105601300":"event","Q105601307":"event","Q105601304":"event","Q105601310":"event","Q105601311":"event","Q105601313":"event","Q105601319":"event","Q105601316":"event","Q105601322":"event","Q105601326":"event","Q105601324":"event","Q105601329":"event","Q105601333":"event","Q105601338":"event","Q105601339":"event","Q105601336":"event","Q105601342":"event","Q105601340":"event","Q105601346":"event","Q105601344":"event","Q105601350":"event","Q105601351":"event","Q105601349":"event","Q105601354":"event","Q105601359":"event","Q105601356":"event","Q105601362":"event","Q105601364":"event","Q105601365":"event","Q105601370":"event","Q105601368":"event","Q105601373":"event","Q105601378":"event","Q105601379":"event","Q105601377":"event","Q105601382":"event","Q105601384":"event","Q105601391":"event","Q105601388":"event","Q105601393":"event","Q105601482":"event","Q105736878":"event","Q105736879":"event","Q105736883":"event","Q105736881":"event","Q105736886":"event","Q105736884":"event","Q105736888":"event","Q105762263":"event","Q105762260":"event","Q105762447":"event","Q105762451":"event","Q105762449":"event","Q105762455":"event","Q105762453":"event","Q105762458":"event","Q105762456":"event","Q105762462":"event","Q105762460":"event","Q105762466":"event","Q105762464":"event","Q105762470":"event","Q105762468":"event","Q105762475":"event","Q105762472":"event","Q105762478":"event","Q105762476":"event","Q105762482":"event","Q105762480":"event","Q105762487":"event","Q105762484":"event","Q105762490":"event","Q105762489":"event","Q105762494":"event","Q105762492":"event","Q105762498":"event","Q105762496":"event","Q105762500":"event","Q105762501":"event","Q105762509":"event","Q105775922":"event","Q105775920":"event","Q105775926":"event","Q105775927":"event","Q105775924":"event","Q105775929":"event","Q105775934":"event","Q105775932":"event","Q105775939":"event","Q105775937":"event","Q105775943":"event","Q105775940":"event","Q105775946":"event","Q105775945":"event","Q105775948":"event","Q105775954":"event","Q105775953":"event","Q105775958":"event","Q105775959":"event","Q105775956":"event","Q105775961":"event","Q105776009":"event","Q105776014":"event","Q105776013":"event","Q105776016":"event","Q105809822":"event","Q105809826":"event","Q105809824":"event","Q105809830":"event","Q105809828":"event","Q105809835":"event","Q105809832":"event","Q105809833":"event","Q105809998":"event","Q105809999":"event","Q105810014":"event","Q105810015":"event","Q105810018":"event","Q105810019":"event","Q105810016":"event","Q105810017":"event","Q105810022":"event","Q105810023":"event","Q105810021":"event","Q105810026":"event","Q105810027":"event","Q105810024":"event","Q105810025":"event","Q105810029":"event","Q105946476":"event","Q105946489":"event","Q105946531":"event","Q105946568":"event","Q105946644":"event","Q105946652":"event","Q105946704":"event","Q105946715":"event","Q105946725":"event","Q105946749":"event","Q105954513":"event","Q105954522":"event","Q105955274":"event","Q105955315":"event","Q105955327":"event","Q105955338":"event","Q105955351":"event","Q105955368":"event","Q105955384":"event","Q105955399":"event","Q105955407":"event","Q105955417":"event","Q105955423":"event","Q105955432":"event","Q105955437":"event","Q105955447":"event","Q105955444":"event","Q105955450":"event","Q105955914":"event","Q105955919":"event","Q105955923":"event","Q105955921":"event","Q105955927":"event","Q105955925":"event","Q105955929":"event","Q105955935":"event","Q105955933":"event","Q105955938":"event","Q105955942":"event","Q105955940":"event","Q105955947":"event","Q105955949":"event","Q105955954":"event","Q105955955":"event","Q105955956":"event","Q105955957":"event","Q105955963":"event","Q105955960":"event","Q105955966":"event","Q105955967":"event","Q105955964":"event","Q105955971":"event","Q105955969":"event","Q105955974":"event","Q105955972":"event","Q106298694":"event","Q106298889":"event","Q106362744":"event","Q106362784":"event","Q106489764":"event","Q106489779":"event","Q106592102":"event","Q106592101":"event","Q106824813":"event","Q106824847":"event","Q106831083":"event","Q106858458":"event","Q106858459":"event","Q106858462":"event","Q106858463":"event","Q106858460":"event","Q106858461":"event","Q106872475":"event","Q106872473":"event","Q106872478":"event","Q106872477":"event","Q106872482":"event","Q106872483":"event","Q106872480":"event","Q106872481":"event","Q106872487":"event","Q106872484":"event","Q106872485":"event","Q106872491":"event","Q106872489":"event","Q106872495":"event","Q106872492":"event","Q106872493":"event","Q106872499":"event","Q106872496":"event","Q106872497":"event","Q106872502":"event","Q106872500":"event","Q106872501":"event","Q106872506":"event","Q106872507":"event","Q106872504":"event","Q106872505":"event","Q106872509":"event","Q106872511":"event","Q106872512":"event","Q106872513":"event","Q106872787":"event","Q106872790":"event","Q106872791":"event","Q106872788":"event","Q106872789":"event","Q106872794":"event","Q106872795":"event","Q106872792":"event","Q106872793":"event","Q106872798":"event","Q106872799":"event","Q106872796":"event","Q106872797":"event","Q106872803":"event","Q106872800":"event","Q106872801":"event","Q106872806":"event","Q106872807":"event","Q106872804":"event","Q106872805":"event","Q106872810":"event","Q106872811":"event","Q106872808":"event","Q106872809":"event","Q106872814":"event","Q106872812":"event","Q106872813":"event","Q106872818":"event","Q106872816":"event","Q106872817":"event","Q106873230":"event","Q106873231":"event","Q106873235":"event","Q106873232":"event","Q106873233":"event","Q106873238":"event","Q106873239":"event","Q106873237":"event","Q106873243":"event","Q106873240":"event","Q106873241":"event","Q106873246":"event","Q106873247":"event","Q106873245":"event","Q106873250":"event","Q106873251":"event","Q106873248":"event","Q106873254":"event","Q106873255":"event","Q106873253":"event","Q106873258":"event","Q106873257":"event","Q106873262":"event","Q106873263":"event","Q106873260":"event","Q106873261":"event","Q106873266":"event","Q106873267":"event","Q106873264":"event","Q106873269":"event","Q106873459":"event","Q106873462":"event","Q106873463":"event","Q106873460":"event","Q106873461":"event","Q106873466":"event","Q106873467":"event","Q106873464":"event","Q106873465":"event","Q106873470":"event","Q106873468":"event","Q106873469":"event","Q106873474":"event","Q106873475":"event","Q106873472":"event","Q106873473":"event","Q106873478":"event","Q106873479":"event","Q106873476":"event","Q106873477":"event","Q106873482":"event","Q106873483":"event","Q106873480":"event","Q106873481":"event","Q106873486":"event","Q106873484":"event","Q106873485":"event","Q106873490":"event","Q106873488":"event","Q106873489":"event","Q106873563":"event","Q106873566":"event","Q106873567":"event","Q106873564":"event","Q106873565":"event","Q106873568":"event","Q106873569":"event","Q106873574":"event","Q106873572":"event","Q106873578":"event","Q106873577":"event","Q106873583":"event","Q106873581":"event","Q106873586":"event","Q106873587":"event","Q106873585":"event","Q106873588":"event","Q106873589":"event","Q106873611":"event","Q106873614":"event","Q106873615":"event","Q106873612":"event","Q106873613":"event","Q106873618":"event","Q106873619":"event","Q106873617":"event","Q106873622":"event","Q106873623":"event","Q106873620":"event","Q106873626":"event","Q106873627":"event","Q106873624":"event","Q106873625":"event","Q106873630":"event","Q106873628":"event","Q106873629":"event","Q107277589":"event","Q107286662":"event","Q107286686":"event","Q107288797":"event","Q107288812":"event","Q107288930":"event","Q107289180":"event","Q107289187":"event","Q107289328":"event","Q107289868":"event","Q107293835":"event","Q107293865":"event","Q107294093":"event","Q107294877":"event","Q107296460":"event","Q107299111":"event","Q107299123":"event","Q107309926":"event","Q107309932":"event","Q107309954":"event","Q107309985":"event","Q107310009":"event","Q107310015":"event","Q107310064":"event","Q107310068":"event","Q107310073":"event","Q107310076":"event","Q107310082":"event","Q107310080":"event","Q107310086":"event","Q107310088":"event","Q107310093":"event","Q107310096":"event","Q107316497":"event","Q107316503":"event","Q107316500":"event","Q107316507":"event","Q107316505":"event","Q107316511":"event","Q107316515":"event","Q107316517":"event","Q107316520":"event","Q107316521":"event","Q107382723":"event","Q107382728":"event","Q107382899":"event","Q107382902":"event","Q107382904":"event","Q107382905":"event","Q107382910":"event","Q107382911":"event","Q107382914":"event","Q107382917":"event","Q107382922":"event","Q107382921":"event","Q107382927":"event","Q107382925":"event","Q107382931":"event","Q107382932":"event","Q107382945":"event","Q107382949":"event","Q107382957":"event","Q107382960":"event","Q107382965":"event","Q107382968":"event","Q107382974":"event","Q107382979":"event","Q107382983":"event","Q107382985":"event","Q107382989":"event","Q107382992":"event","Q108525161":"event","Q108791814":"event","Q108791815":"event","Q108791813":"event","Q108791819":"event","Q108791816":"event","Q108791817":"event","Q108791822":"event","Q108791823":"event","Q108791820":"event","Q108791821":"event","Q108791826":"event","Q108791827":"event","Q108791824":"event","Q108791825":"event","Q108791830":"event","Q108791831":"event","Q108791828":"event","Q108791829":"event","Q108791862":"event","Q108791863":"event","Q108791879":"event","Q108791882":"event","Q108791883":"event","Q108791880":"event","Q108791881":"event","Q108791886":"event","Q108791887":"event","Q108791884":"event","Q108791885":"event","Q108791890":"event","Q108791888":"event","Q108791889":"event","Q108791894":"event","Q108791895":"event","Q108791892":"event","Q108791893":"event","Q108791898":"event","Q108791899":"event","Q108791896":"event","Q108791897":"event","Q108791902":"event","Q108791903":"event","Q108791900":"event","Q108791901":"event","Q108791906":"event","Q108791907":"event","Q108791904":"event","Q108791905":"event","Q108791910":"event","Q108791911":"event","Q108791908":"event","Q108791909":"event","Q108791914":"event","Q108791915":"event","Q108791912":"event","Q108791913":"event","Q108791918":"event","Q108791919":"event","Q108791916":"event","Q108791917":"event","Q108859322":"event","Q108859323":"event","Q108859320":"event","Q108859321":"event","Q108859326":"event","Q108859327":"event","Q108859324":"event","Q108859325":"event","Q108859329":"event","Q108861923":"event","Q108861926":"event","Q108861927":"event","Q108861924":"event","Q108861925":"event","Q108861930":"event","Q108861931":"event","Q108861928":"event","Q108861929":"event","Q108861934":"event","Q108861935":"event","Q108861932":"event","Q108861933":"event","Q108861938":"event","Q108861939":"event","Q108861936":"event","Q108861937":"event","Q108861942":"event","Q108861940":"event","Q108861941":"event","Q108861946":"event","Q108861944":"event","Q108861945":"event","Q108861950":"event","Q108861951":"event","Q108861949":"event","Q108861954":"event","Q108861955":"event","Q108861952":"event","Q108861953":"event","Q107382999":"event","Q107382996":"event","Q107594981":"event","Q107594992":"event","Q107595328":"event","Q107595341":"event","Q107610882":"event","Q107610889":"event","Q107610892":"event","Q107610909":"event","Q108286236":"event","Q108372326":"event","Q108372327":"event","Q108372325":"event","Q108372328":"event","Q108372438":"event","Q108372442":"event","Q108372443":"event","Q108372440":"event","Q108372441":"event","Q108372446":"event","Q108372447":"event","Q108372444":"event","Q108372451":"event","Q108372448":"event","Q108372449":"event","Q108372455":"event","Q108372453":"event","Q108372459":"event","Q108372457":"event","Q108372461":"event","Q108372466":"event","Q108372464":"event","Q108372470":"event","Q108372471":"event","Q108372468":"event","Q108372474":"event","Q108372472":"event","Q108372478":"event","Q108372479":"event","Q108372476":"event","Q108372477":"event","Q108420079":"event","Q108420082":"event","Q108420083":"event","Q108420081":"event","Q108420086":"event","Q108420087":"event","Q108420084":"event","Q108420085":"event","Q108420090":"event","Q108420088":"event","Q108420089":"event","Q108420094":"event","Q108420092":"event","Q108420093":"event","Q108420098":"event","Q108420099":"event","Q108420096":"event","Q108420097":"event","Q108420102":"event","Q108420101":"event","Q108420990":"event","Q108420989":"event","Q108420994":"event","Q108421135":"event","Q108421139":"event","Q108421136":"event","Q108421137":"event","Q108421142":"event","Q108421147":"event","Q108421144":"event","Q108421150":"event","Q108421154":"event","Q108421152":"event","Q108421159":"event","Q108421156":"event","Q108421163":"event","Q108421161":"event","Q108421166":"event","Q108421169":"event","Q108421172":"event","Q108421173":"event","Q108421179":"event","Q108421176":"event","Q108421182":"event","Q108421181":"event","Q108421186":"event","Q108421185":"event","Q108421191":"event","Q108421188":"event","Q108421196":"event","Q108421201":"event","Q108421204":"event","Q108421211":"event","Q108421214":"event","Q108421215":"event","Q108421217":"event","Q108421220":"event","Q108525148":"event","Q108861958":"event","Q108861959":"event","Q108861956":"event","Q108861957":"event","Q108861962":"event","Q108861963":"event","Q108861960":"event","Q108861961":"event","Q108861966":"event","Q108861967":"event","Q108861964":"event","Q108861965":"event","Q108861971":"event","Q108861969":"event","Q108861973":"event","Q108876404":"event","Q108876530":"event","Q108876573":"event","Q108876583":"event","Q108876595":"event","Q108876668":"event","Q108876703":"event","Q108885102":"event","Q109540395":"event","Q109540629":"event","Q109937510":"event","Q109937511":"event","Q109937514":"event","Q109937515":"event","Q109937512":"event","Q109937513":"event","Q109937570":"event","Q109937571":"event","Q109937568":"event","Q109937569":"event","Q109937682":"event","Q109937683":"event","Q109937686":"event","Q109937687":"event","Q109937684":"event","Q109937685":"event","Q109937690":"event","Q109937691":"event","Q109937689":"event","Q109937694":"event","Q109937695":"event","Q109937692":"event","Q109937693":"event","Q109937696":"event","Q110306858":"event","Q110306859":"event","Q110306863":"event","Q110306860":"event","Q110306861":"event","Q110306866":"event","Q110306867":"event","Q110306864":"event","Q110306865":"event","Q110306868":"event","Q110306869":"event","Q110307074":"event","Q110307075":"event","Q110307073":"event","Q110307076":"event","Q110307114":"event","Q110307115":"event","Q110307113":"event","Q110307118":"event","Q110307119":"event","Q110307116":"event","Q110307117":"event","Q110307122":"event","Q110307123":"event","Q110307120":"event","Q110307121":"event","Q110307127":"event","Q110307124":"event","Q110307130":"event","Q110307131":"event","Q110307128":"event","Q110307129":"event","Q110307134":"event","Q110307135":"event","Q110307132":"event","Q110307133":"event","Q110307138":"event","Q110307139":"event","Q110307136":"event","Q110307137":"event","Q110307142":"event","Q110307143":"event","Q110307140":"event","Q110307141":"event","Q110307146":"event","Q110307147":"event","Q110307145":"event","Q110307148":"event","Q110307149":"event","Q110529858":"event","Q110529885":"event","Q110532956":"event","Q110535765":"event","Q110548915":"event","Q110548919":"event","Q110548916":"event","Q110548917":"event","Q110548922":"event","Q110548921":"event","Q110559908":"event","Q110582680":"event","Q110582755":"event","Q110717451":"event","Q110717448":"event","Q110721655":"event","Q110721658":"event","Q110721659":"event","Q110721656":"event","Q110721657":"event","Q110721662":"event","Q110721663":"event","Q110721661":"event","Q110721666":"event","Q110721664":"event","Q110721665":"event","Q110721695":"event","Q110721698":"event","Q110721699":"event","Q110721696":"event","Q110721697":"event","Q110721702":"event","Q110721700":"event","Q110721701":"event","Q110721706":"event","Q110721707":"event","Q110721704":"event","Q110721705":"event","Q110721710":"event","Q110721711":"event","Q110721708":"event","Q110721709":"event","Q110721714":"event","Q110721715":"event","Q110721712":"event","Q110721713":"event","Q110721716":"event","Q110721717":"event","Q110728243":"event","Q110728247":"event","Q110728244":"event","Q110781937":"event","Q110781945":"event","Q110781951":"event","Q110781966":"event","Q110781974":"event","Q110782003":"event","Q110782033":"event","Q110782047":"event","Q110782056":"event","Q110782069":"event","Q110782079":"event","Q110782291":"event","Q110782316":"event","Q110782356":"event","Q110782365":"event","Q110782377":"event","Q110782391":"event","Q110782456":"event","Q110782463":"event","Q110782478":"event","Q110782507":"event","Q110782511":"event","Q110782520":"event","Q110782526":"event","Q110782542":"event","Q110782554":"event","Q110782579":"event","Q110782643":"event","Q110782658":"event","Q110782669":"event","Q110782675":"event","Q110782690":"event","Q110782696":"event","Q110782706":"event","Q110782716":"event","Q110782756":"event","Q110782785":"event","Q110782793":"event","Q110782797":"event","Q110782802":"event","Q110782816":"event","Q110782822":"event","Q110782835":"event","Q110782839":"event","Q110782851":"event","Q110782856":"event","Q110782869":"event","Q110782874":"event","Q110782882":"event","Q110782905":"event","Q110782916":"event","Q110782936":"event","Q110782942":"event","Q110782957":"event","Q110782962":"event","Q110782978":"event","Q110782985":"event","Q110782990":"event","Q110783009":"event","Q110783019":"event","Q110783085":"event","Q110783093":"event","Q110783108":"event","Q110783119":"event","Q110783135":"event","Q110783140":"event","Q110783155":"event","Q110783163":"event","Q110783178":"event","Q110783188":"event","Q110783207":"event","Q110783214":"event","Q110783234":"event","Q110783242":"event","Q110783263":"event","Q110783271":"event","Q110783292":"event","Q110783305":"event","Q110786128":"event","Q110786429":"event","Q110786465":"event","Q110786489":"event","Q110786504":"event","Q110786531":"event","Q110786551":"event","Q110786572":"event","Q110786586":"event","Q110786689":"event","Q110786704":"event","Q110786732":"event","Q110786752":"event","Q110786867":"event","Q110787015":"event","Q110787123":"event","Q110787153":"event","Q110787261":"event","Q110787358":"event","Q110787400":"event","Q110787460":"event","Q110787570":"event","Q110787604":"event","Q110787636":"event","Q110787657":"event","Q110787700":"event","Q110787732":"event","Q110787765":"event","Q110787782":"event","Q110787800":"event","Q110787814":"event","Q110787834":"event","Q110787849":"event","Q110787877":"event","Q110787889":"event","Q110787928":"event","Q110787957":"event","Q110787971":"event","Q110788005":"event","Q110788019":"event","Q110788066":"event","Q110788098":"event","Q110788145":"event","Q110788172":"event","Q110788235":"event","Q110788250":"event","Q110788268":"event","Q110788280":"event","Q110788299":"event","Q110788316":"event","Q110788335":"event","Q110788349":"event","Q110788368":"event","Q110788380":"event","Q110788401":"event","Q110788420":"event","Q110788432":"event","Q110788440":"event","Q110788452":"event","Q110788471":"event","Q110788485":"event","Q110788509":"event","Q110788517":"event","Q110788571":"event","Q110788596":"event","Q110788626":"event","Q110788637":"event","Q110788648":"event","Q110788660":"event","Q110788667":"event","Q110788680":"event","Q110788697":"event","Q110788706":"event","Q110788720":"event","Q110788728":"event","Q110788750":"event","Q110788761":"event","Q110788796":"event","Q110788807":"event","Q110788824":"event","Q110788833":"event","Q110788855":"event","Q110788864":"event","Q110788878":"event","Q110788890":"event","Q110788946":"event","Q110788983":"event","Q110788998":"event","Q110789051":"event","Q110789067":"event","Q110789100":"event","Q110789123":"event","Q110789161":"event","Q110789194":"event","Q110789206":"event","Q110789219":"event","Q110789237":"event","Q110789251":"event","Q110789267":"event","Q110789285":"event","Q110789299":"event","Q110789311":"event","Q110789323":"event","Q110789336":"event","Q110789347":"event","Q110789358":"event","Q110789366":"event","Q110789377":"event","Q110789386":"event","Q110789423":"event","Q110789442":"event","Q110789558":"event","Q110789708":"event","Q110789826":"event","Q110789854":"event","Q110789950":"event","Q110790114":"event","Q110790147":"event","Q110790169":"event","Q110790176":"event","Q110790195":"event","Q110790320":"event","Q110790330":"event","Q110790338":"event","Q110790346":"event","Q110790352":"event","Q110790359":"event","Q110790374":"event","Q110790381":"event","Q110790394":"event","Q110790411":"event","Q110790562":"event","Q110790717":"event","Q110790839":"event","Q110790984":"event","Q110791121":"event","Q110791234":"event","Q110791385":"event","Q110791538":"event","Q110791664":"event","Q110791691":"event","Q110791705":"event","Q110791716":"event","Q110791745":"event","Q110791773":"event","Q110791791":"event","Q110791804":"event","Q110791825":"event","Q110791832":"event","Q110791845":"event","Q110791856":"event","Q110791868":"event","Q110791892":"event","Q110791918":"event","Q110791946":"event","Q110791972":"event","Q110792075":"event","Q110792205":"event","Q110792312":"event","Q110792450":"event","Q110792474":"event","Q110792483":"event","Q110792493":"event","Q110792502":"event","Q110792515":"event","Q110792524":"event","Q110792528":"event","Q110792539":"event","Q110792547":"event","Q110792557":"event","Q110792568":"event","Q110792585":"event","Q110792591":"event","Q110792614":"event","Q110792637":"event","Q110792664":"event","Q110792671":"event","Q110792698":"event","Q110792836":"event","Q110792846":"event","Q110792872":"event","Q110792878":"event","Q110792886":"event","Q110792894":"event","Q110792902":"event","Q110792911":"event","Q110792924":"event","Q110792935":"event","Q110792944":"event","Q110792966":"event","Q110792975":"event","Q110792984":"event","Q110792999":"event","Q110793007":"event","Q110793016":"event","Q110793026":"event","Q110793032":"event","Q110793046":"event","Q110793054":"event","Q110793064":"event","Q110793101":"event","Q110793163":"event","Q110793177":"event","Q110793206":"event","Q110793238":"event","Q110793273":"event","Q110809672":"event","Q110809673":"event","Q110814086":"event","Q110814084":"event","Q110814155":"event","Q110814158":"event","Q110814159":"event","Q110814156":"event","Q110814157":"event","Q110814163":"event","Q110814160":"event","Q110814161":"event","Q110814166":"event","Q110814167":"event","Q110814165":"event","Q110814170":"event","Q110814171":"event","Q110814168":"event","Q110814419":"event","Q110814422":"event","Q110814423":"event","Q110814420":"event","Q110814421":"event","Q110814426":"event","Q110814427":"event","Q110814424":"event","Q110814425":"event","Q110814430":"event","Q110814431":"event","Q110814428":"event","Q110814429":"event","Q110814434":"event","Q110814432":"event","Q110814433":"event","Q110814438":"event","Q110814439":"event","Q110814436":"event","Q110814437":"event","Q110814443":"event","Q110814440":"event","Q110814441":"event","Q110814446":"event","Q110814447":"event","Q110814445":"event","Q110814448":"event","Q110963701":"event","Q111072877":"event","Q111072883":"event","Q111072880":"event","Q111072886":"event","Q111072892":"event","Q111072897":"event","Q111072901":"event","Q111072906":"event","Q111072915":"event","Q111072919":"event","Q111072924":"event","Q111072939":"event","Q111072962":"event","Q111073722":"event","Q111073721":"event","Q111073727":"event","Q111073725":"event","Q111073729":"event","Q111073734":"event","Q111073732":"event","Q111073737":"event","Q111073743":"event","Q111073740":"event","Q111073745":"event","Q111073751":"event","Q111073748":"event","Q111073754":"event","Q111073759":"event","Q111073757":"event","Q111149450":"event","Q111203104":"event","Q111336146":"event","Q111490768":"event","Q111490778":"event","Q111748187":"event","Q111748281":"event","Q111748431":"event","Q111748437":"event","Q111831703":"event","Q111831706":"event","Q111831707":"event","Q111831705":"event","Q111831711":"event","Q111831708":"event","Q111831709":"event","Q111831714":"event","Q111831715":"event","Q111831712":"event","Q111831719":"event","Q111831717":"event","Q111831723":"event","Q111831721":"event","Q111832095":"event","Q111832099":"event","Q111832096":"event","Q111832097":"event","Q111832102":"event","Q111832100":"event","Q111832101":"event","Q111832534":"event","Q111832535":"event","Q111832532":"event","Q111832538":"event","Q111832539":"event","Q111832537":"event","Q111832542":"event","Q111832543":"event","Q111832540":"event","Q111832541":"event","Q111832546":"event","Q111832544":"event","Q111832545":"event","Q111832551":"event","Q111956031":"event","Q111956029":"event","Q111956034":"event","Q111956035":"event","Q111956032":"event","Q111956033":"event","Q111956038":"event","Q111956036":"event","Q111956037":"event","Q111956042":"event","Q111956040":"event","Q111956041":"event","Q111956046":"event","Q111956044":"event","Q111956714":"event","Q111956715":"event","Q111956718":"event","Q111956716":"event","Q111956722":"event","Q111956723":"event","Q111956720":"event","Q111956721":"event","Q111956724":"event","Q111988138":"event","Q111988137":"event","Q111988142":"event","Q111988143":"event","Q111988140":"event","Q111988141":"event","Q111988146":"event","Q111988144":"event","Q111988145":"event","Q111988166":"event","Q111988167":"event","Q111988170":"event","Q111988171":"event","Q111988168":"event","Q111988169":"event","Q111988174":"event","Q111988175":"event","Q111988172":"event","Q111988173":"event","Q111988178":"event","Q111988179":"event","Q111988176":"event","Q111988177":"event","Q111988180":"event","Q111988181":"event","Q111988182":"event","Q111988183":"event","Q111988186":"event","Q111988187":"event","Q111988184":"event","Q111988185":"event","Q111988188":"event","Q111988189":"event","Q111988450":"event","Q111988451":"event","Q111988448":"event","Q111988449":"event","Q111988454":"event","Q111988455":"event","Q111988452":"event","Q111988453":"event","Q111988456":"event","Q111988457":"event","Q111993030":"event","Q111993031":"event","Q111993034":"event","Q111993035":"event","Q111993032":"event","Q111993033":"event","Q111993039":"event","Q111993036":"event","Q111993037":"event","Q111993040":"event","Q111993041":"event","Q111995978":"event","Q111995979":"event","Q111995982":"event","Q111995983":"event","Q111995980":"event","Q111995981":"event","Q111995986":"event","Q111995984":"event","Q111995985":"event","Q111995988":"event","Q112109776":"event","Q112109783":"event","Q112109824":"event","Q112109836":"event","Q112109873":"event","Q112109894":"event","Q112169283":"event","Q112169281":"event","Q112169286":"event","Q112169287":"event","Q112169284":"event","Q112169285":"event","Q112169288":"event","Q112169463":"event","Q112169460":"event","Q112169466":"event","Q112169467":"event","Q112169464":"event","Q112169471":"event","Q112169468":"event","Q112169469":"event","Q112169474":"event","Q112169475":"event","Q112169472":"event","Q112169473":"event","Q112170450":"event","Q112170454":"event","Q112170452":"event","Q112170459":"event","Q112170456":"event","Q112170463":"event","Q112170461":"event","Q112170466":"event","Q112174254":"event","Q112174255":"event","Q112174258":"event","Q112174259":"event","Q112174256":"event","Q112174257":"event","Q112174260":"event","Q112174261":"event","Q112180402":"event","Q112180403":"event","Q112180401":"event","Q112180406":"event","Q112180407":"event","Q112180404":"event","Q112180405":"event","Q112180410":"event","Q112180411":"event","Q112180408":"event","Q112180409":"event","Q112180414":"event","Q112180415":"event","Q112180412":"event","Q112180413":"event","Q112180418":"event","Q112180416":"event","Q112180417":"event","Q112180422":"event","Q112180421":"event","Q112219747":"event","Q112219745":"event","Q112219750":"event","Q112219751":"event","Q112219748":"event","Q112219749":"event","Q112219754":"event","Q112219755":"event","Q112219752":"event","Q112219753":"event","Q112219758":"event","Q112219756":"event","Q112219757":"event","Q112222067":"event","Q112222070":"event","Q112222071":"event","Q112222068":"event","Q112222069":"event","Q112222075":"event","Q112222072":"event","Q112222073":"event","Q112222078":"event","Q112222079":"event","Q112222076":"event","Q112222077":"event","Q112222080":"event","Q112222081":"event","Q112224179":"event","Q112224182":"event","Q112224183":"event","Q112224180":"event","Q112224186":"event","Q112224187":"event","Q112224185":"event","Q112224190":"event","Q112224191":"event","Q112224188":"event","Q112224189":"event","Q112224194":"event","Q112224195":"event","Q112224192":"event","Q112270578":"event","Q112270579":"event","Q112270577":"event","Q112270582":"event","Q112270583":"event","Q112270580":"event","Q112270581":"event","Q112270586":"event","Q112270584":"event","Q112270585":"event","Q112270590":"event","Q112270591":"event","Q112270588":"event","Q112270589":"event","Q112270614":"event","Q112270615":"event","Q112270613":"event","Q112270618":"event","Q112270619":"event","Q112270616":"event","Q112270617":"event","Q112270622":"event","Q112270623":"event","Q112270620":"event","Q112270621":"event","Q112270626":"event","Q112270624":"event","Q112270625":"event","Q112270646":"event","Q112270647":"event","Q112270645":"event","Q112270650":"event","Q112270651":"event","Q112270648":"event","Q112270649":"event","Q112270666":"event","Q112270667":"event","Q112270664":"event","Q112270665":"event","Q112270670":"event","Q112270668":"event","Q112270669":"event","Q112270694":"event","Q112270695":"event","Q112270693":"event","Q112270698":"event","Q112270699":"event","Q112270696":"event","Q112270697":"event","Q112270702":"event","Q112270703":"event","Q112270700":"event","Q112270701":"event","Q112270706":"event","Q112270704":"event","Q112270705":"event","Q112280922":"event","Q112280923":"event","Q112280921":"event","Q112180423":"event","Q112180426":"event","Q112180427":"event","Q112180424":"event","Q112180425":"event","Q112180430":"event","Q112180431":"event","Q112180429":"event","Q112180434":"event","Q112180432":"event","Q112206222":"event","Q112206223":"event","Q112206220":"event","Q112206221":"event","Q112206226":"event","Q112206227":"event","Q112206224":"event","Q112206230":"event","Q112206231":"event","Q112206228":"event","Q112206229":"event","Q112208014":"event","Q112208012":"event","Q112208013":"event","Q112208018":"event","Q112208019":"event","Q112208016":"event","Q112208022":"event","Q112208023":"event","Q112208020":"event","Q112208021":"event","Q112208026":"event","Q112208024":"event","Q112208025":"event","Q112208028":"event","Q112208087":"event","Q112208090":"event","Q112208091":"event","Q112208088":"event","Q112208089":"event","Q112208094":"event","Q112208095":"event","Q112208092":"event","Q112208093":"event","Q112208098":"event","Q112208099":"event","Q112208096":"event","Q112208102":"event","Q112208101":"event","Q112208170":"event","Q112208171":"event","Q112208174":"event","Q112208175":"event","Q112208172":"event","Q112208173":"event","Q112208178":"event","Q112208179":"event","Q112208176":"event","Q112208177":"event","Q112208183":"event","Q112208180":"event","Q112208181":"event","Q112208184":"event","Q112210938":"event","Q112210939":"event","Q112210942":"event","Q112210943":"event","Q112210940":"event","Q112210941":"event","Q112210944":"event","Q112210945":"event","Q112215807":"event","Q112215810":"event","Q112215809":"event","Q112215815":"event","Q112215813":"event","Q112215819":"event","Q112215817":"event","Q112215823":"event","Q112215820":"event","Q112215825":"event","Q112215831":"event","Q112215828":"event","Q112215829":"event","Q112215835":"event","Q112218767":"event","Q112218771":"event","Q112218769":"event","Q112218775":"event","Q112218773":"event","Q112218777":"event","Q112218782":"event","Q112218783":"event","Q112218780":"event","Q112218787":"event","Q112218784":"event","Q112218785":"event","Q112218789":"event","Q112218792":"event","Q112219743":"event","Q112280926":"event","Q112280924":"event","Q112280928":"event","Q112280929":"event","Q112286258":"event","Q112286259":"event","Q112286262":"event","Q112286260":"event","Q112286261":"event","Q112286267":"event","Q112286264":"event","Q112286270":"event","Q112286271":"event","Q112286268":"event","Q112286269":"event","Q112286273":"event","Q112286574":"event","Q112286575":"event","Q112286578":"event","Q112286579":"event","Q112286576":"event","Q112286577":"event","Q112286582":"event","Q112286583":"event","Q112286580":"event","Q112286581":"event","Q112286586":"event","Q112286587":"event","Q112286584":"event","Q112286585":"event","Q112286910":"event","Q112286911":"event","Q112286908":"event","Q112286909":"event","Q112286914":"event","Q112286915":"event","Q112286918":"event","Q112286919":"event","Q112286916":"event","Q112286917":"event","Q112286922":"event","Q112286920":"event","Q112293550":"event","Q112293551":"event","Q112293548":"event","Q112293549":"event","Q112293554":"event","Q112293555":"event","Q112293552":"event","Q112293558":"event","Q112293559":"event","Q112293562":"event","Q112293560":"event","Q112293561":"event","Q112303370":"event","Q112303371":"event","Q112303368":"event","Q112303374":"event","Q112303372":"event","Q112303373":"event","Q112303378":"event","Q112303379":"event","Q112303376":"event","Q112303383":"event","Q112303380":"event","Q112303381":"event","Q112303384":"event","Q112303385":"event","Q112303523":"event","Q112303521":"event","Q112303526":"event","Q112303527":"event","Q112303524":"event","Q112303530":"event","Q112303528":"event","Q112303529":"event","Q112303534":"event","Q112303535":"event","Q112303532":"event","Q112303533":"event","Q112303536":"event","Q112303537":"event","Q112303638":"event","Q112303639":"event","Q112303642":"event","Q112303643":"event","Q112303640":"event","Q112303641":"event","Q112303646":"event","Q112303647":"event","Q112303645":"event","Q112303650":"event","Q112303651":"event","Q112303648":"event","Q112303649":"event","Q112303652":"event","Q112303679":"event","Q112303750":"event","Q112303748":"event","Q112303749":"event","Q112303751":"event","Q112303754":"event","Q112303755":"event","Q112303753":"event","Q112303759":"event","Q112303756":"event","Q112303757":"event","Q112303762":"event","Q112303763":"event","Q112303760":"event","Q112303761":"event","Q112304254":"event","Q112304252":"event","Q112304253":"event","Q112304259":"event","Q112304256":"event","Q112304257":"event","Q112304262":"event","Q112304263":"event","Q112304260":"event","Q112304261":"event","Q112304266":"event","Q112304267":"event","Q112304265":"event","Q112304268":"event","Q112304451":"event","Q112304454":"event","Q112304452":"event","Q112304453":"event","Q112304458":"event","Q112304459":"event","Q112304456":"event","Q112304462":"event","Q112304460":"event","Q112304461":"event","Q112304466":"event","Q112304467":"event","Q112304465":"event","Q112304468":"event","Q112304570":"event","Q112304568":"event","Q112304569":"event","Q112304574":"event","Q112304575":"event","Q112304572":"event","Q112304573":"event","Q112304578":"event","Q112304579":"event","Q112304576":"event","Q112304577":"event","Q112304583":"event","Q112304580":"event","Q112304581":"event","Q112305538":"event","Q112305539":"event","Q112305537":"event","Q112305543":"event","Q112305540":"event","Q112305541":"event","Q112305547":"event","Q112305544":"event","Q112305545":"event","Q112305548":"event","Q112305549":"event","Q112306066":"event","Q112306070":"event","Q112306068":"event","Q112306069":"event","Q112306075":"event","Q112306072":"event","Q112306073":"event","Q112306078":"event","Q112306079":"event","Q112306076":"event","Q112306077":"event","Q112306082":"event","Q112306080":"event","Q112306081":"event","Q112306231":"event","Q112306234":"event","Q112306235":"event","Q112306232":"event","Q112306233":"event","Q112306238":"event","Q112306239":"event","Q112306236":"event","Q112306237":"event","Q112306240":"event","Q112306241":"event","Q112306246":"event","Q112306244":"event","Q112306245":"event","Q112306295":"event","Q112306298":"event","Q112306299":"event","Q112306296":"event","Q112306297":"event","Q112306302":"event","Q112306300":"event","Q112306301":"event","Q112306303":"event","Q112306306":"event","Q112306307":"event","Q112306304":"event","Q112306305":"event","Q112306308":"event","Q112306366":"event","Q112306367":"event","Q112306364":"event","Q112306365":"event","Q112306370":"event","Q112306371":"event","Q112306369":"event","Q112306374":"event","Q112306375":"event","Q112306372":"event","Q112306373":"event","Q112306378":"event","Q112306379":"event","Q112306376":"event","Q112306434":"event","Q112306433":"event","Q112306438":"event","Q112306439":"event","Q112306436":"event","Q112306437":"event","Q112306442":"event","Q112306443":"event","Q112306440":"event","Q112306447":"event","Q112306444":"event","Q112306445":"event","Q112306448":"event","Q112306449":"event","Q112306875":"event","Q112306878":"event","Q112306879":"event","Q112306876":"event","Q112306877":"event","Q112306882":"event","Q112306883":"event","Q112306880":"event","Q112306881":"event","Q112306886":"event","Q112306884":"event","Q112306885":"event","Q112306983":"event","Q112306980":"event","Q112306986":"event","Q112306984":"event","Q112306985":"event","Q112306990":"event","Q112306991":"event","Q112306988":"event","Q112306989":"event","Q112306992":"event","Q112307134":"event","Q112307135":"event","Q112307133":"event","Q112307138":"event","Q112307139":"event","Q112307136":"event","Q112307137":"event","Q112307143":"event","Q112307146":"event","Q112307144":"event","Q112307145":"event","Q112307431":"event","Q112307434":"event","Q112307435":"event","Q112307432":"event","Q112307433":"event","Q112307436":"event","Q112307437":"event","Q112307878":"event","Q112307879":"event","Q112307882":"event","Q112307883":"event","Q112307880":"event","Q112307881":"event","Q112307886":"event","Q112307887":"event","Q112307884":"event","Q112307885":"event","Q112309039":"event","Q112309042":"event","Q112309043":"event","Q112309040":"event","Q112309041":"event","Q112309046":"event","Q112309045":"event","Q112309050":"event","Q112309051":"event","Q112309048":"event","Q112309052":"event","Q112309053":"event","Q112341558":"event","Q112341559":"event","Q112341560":"event","Q112341561":"event","Q112341562":"event","Q112341566":"event","Q112341567":"event","Q112341564":"event","Q112341570":"event","Q112341571":"event","Q112341568":"event","Q112341569":"event","Q112341572":"event","Q112341573":"event","Q112341867":"event","Q112341864":"event","Q112341865":"event","Q112341870":"event","Q112341871":"event","Q112341868":"event","Q112341869":"event","Q112341874":"event","Q112341875":"event","Q112341872":"event","Q112341873":"event","Q112342082":"event","Q112342083":"event","Q112342081":"event","Q112342086":"event","Q112342087":"event","Q112342084":"event","Q112342085":"event","Q112342090":"event","Q112342091":"event","Q112342088":"event","Q112342089":"event","Q112342093":"event","Q112342258":"event","Q112342262":"event","Q112342263":"event","Q112342260":"event","Q112342261":"event","Q112342266":"event","Q112342267":"event","Q112342264":"event","Q112342265":"event","Q112342270":"event","Q112342268":"event","Q112342269":"event","Q112347199":"event","Q112347197":"event","Q112347203":"event","Q112347201":"event","Q112347206":"event","Q112347204":"event","Q112347211":"event","Q112347208":"event","Q112347215":"event","Q112347213":"event","Q112348250":"event","Q112348248":"event","Q112348255":"event","Q112348252":"event","Q112348253":"event","Q112348258":"event","Q112348257":"event","Q112348261":"event","Q112348264":"event","Q112348265":"event","Q112348270":"event","Q112348268":"event","Q112348274":"event","Q112348272":"event","Q112350074":"event","Q112350075":"event","Q112350079":"event","Q112350077":"event","Q112350083":"event","Q112350081":"event","Q112350085":"event","Q112350090":"event","Q112350091":"event","Q112350088":"event","Q112350094":"event","Q112350093":"event","Q112350098":"event","Q112350096":"event","Q112484487":"event","Q112484484":"event","Q112484485":"event","Q112484490":"event","Q112484488":"event","Q112484495":"event","Q112484492":"event","Q112484493":"event","Q112485466":"event","Q112485464":"event","Q112485470":"event","Q112485468":"event","Q112485474":"event","Q112485472":"event","Q112485479":"event","Q112485476":"event","Q112485477":"event","Q112485482":"event","Q112485480":"event","Q112485484":"event","Q112486138":"event","Q112486137":"event","Q112486140":"event","Q112486141":"event","Q112486144":"event","Q112486151":"event","Q112486148":"event","Q112486155":"event","Q112486153":"event","Q112486159":"event","Q112486157":"event","Q112486161":"event","Q112486166":"event","Q112486164":"event","Q112486895":"event","Q112486899":"event","Q112486897":"event","Q112486903":"event","Q112486901":"event","Q112486906":"event","Q112486904":"event","Q112486911":"event","Q112486908":"event","Q112486909":"event","Q112486914":"event","Q112486912":"event","Q112487755":"event","Q112487753":"event","Q112487758":"event","Q112487757":"event","Q112487762":"event","Q112487763":"event","Q112487760":"event","Q112487766":"event","Q112487771":"event","Q112487768":"event","Q112487769":"event","Q112487774":"event","Q112487772":"event","Q112487776":"event","Q112490324":"event","Q112494430":"event","Q112494429":"event","Q112494434":"event","Q112494432":"event","Q112494436":"event","Q112494443":"event","Q112494440":"event","Q112494447":"event","Q112494451":"event","Q112494455":"event","Q112494453":"event","Q112494459":"event","Q112494462":"event","Q112494467":"event","Q112504583":"event","Q112504585":"event","Q112504591":"event","Q112504588":"event","Q112504589":"event","Q112504593":"event","Q112504598":"event","Q112504600":"event","Q112507018":"event","Q112507016":"event","Q112507023":"event","Q112507020":"event","Q112507027":"event","Q112507025":"event","Q112507031":"event","Q112507035":"event","Q112509160":"event","Q112509383":"event","Q112509387":"event","Q112509385":"event","Q112509390":"event","Q112509388":"event","Q112509395":"event","Q112509392":"event","Q112509393":"event","Q112509399":"event","Q112509397":"event","Q112509402":"event","Q112509401":"event","Q112509406":"event","Q112509404":"event","Q112513366":"event","Q112513370":"event","Q112513368":"event","Q112513373":"event","Q112513377":"event","Q112513383":"event","Q112513380":"event","Q112513386":"event","Q112513387":"event","Q112513385":"event","Q112514401":"event","Q112514407":"event","Q112514415":"event","Q112514412":"event","Q112514418":"event","Q112514422":"event","Q112514420":"event","Q112514426":"event","Q112514424":"event","Q112514428":"event","Q112515410":"event","Q112515414":"event","Q112515412":"event","Q112515419":"event","Q112515416":"event","Q112515417":"event","Q112515423":"event","Q112515420":"event","Q112515421":"event","Q112515427":"event","Q112515430":"event","Q112515435":"event","Q112515433":"event","Q112515437":"event","Q112516730":"event","Q112516734":"event","Q112516732":"event","Q112516739":"event","Q112516736":"event","Q112516743":"event","Q112516746":"event","Q112516749":"event","Q112517337":"event","Q112517343":"event","Q112517340":"event","Q112517346":"event","Q112517345":"event","Q112517351":"event","Q112517348":"event","Q112517354":"event","Q112517352":"event","Q112517358":"event","Q112517356":"event","Q112517362":"event","Q112517360":"event","Q112517364":"event","Q112518818":"event","Q112518816":"event","Q112518823":"event","Q112518821":"event","Q112518827":"event","Q112518825":"event","Q112518828":"event","Q112524149":"event","Q112524155":"event","Q112524152":"event","Q112524157":"event","Q112524162":"event","Q112524160":"event","Q112524164":"event","Q112525158":"event","Q112525161":"event","Q112525166":"event","Q112525164":"event","Q112525169":"event","Q112525175":"event","Q112525172":"event","Q112525173":"event","Q112525179":"event","Q112525177":"event","Q112525183":"event","Q112525181":"event","Q112525187":"event","Q112525192":"event","Q112567962":"event","Q112567963":"event","Q112567961":"event","Q112567966":"event","Q112567967":"event","Q112567964":"event","Q112567965":"event","Q112568047":"event","Q112568050":"event","Q112568051":"event","Q112568048":"event","Q112568049":"event","Q112568054":"event","Q112568055":"event","Q112568052":"event","Q112568053":"event","Q112568058":"event","Q112568059":"event","Q112568056":"event","Q112568067":"event","Q112568130":"event","Q112568128":"event","Q112568129":"event","Q112568134":"event","Q112568135":"event","Q112568132":"event","Q112568133":"event","Q112568138":"event","Q112568139":"event","Q112568136":"event","Q112568137":"event","Q112568142":"event","Q112568140":"event","Q112568141":"event","Q112568582":"event","Q112568583":"event","Q112568581":"event","Q112568586":"event","Q112568587":"event","Q112568584":"event","Q112568585":"event","Q112568639":"event","Q112568642":"event","Q112568643":"event","Q112568640":"event","Q112568641":"event","Q112568646":"event","Q112568647":"event","Q112568644":"event","Q112568645":"event","Q112568650":"event","Q112568648":"event","Q112568649":"event","Q112568722":"event","Q112568723":"event","Q112568721":"event","Q112568727":"event","Q112568724":"event","Q112568725":"event","Q112568731":"event","Q112568728":"event","Q112568729":"event","Q112568734":"event","Q112568735":"event","Q112568732":"event","Q112568733":"event","Q112568736":"event","Q112571950":"event","Q112571951":"event","Q112571954":"event","Q112571955":"event","Q112571952":"event","Q112571953":"event","Q112571958":"event","Q112571959":"event","Q112571956":"event","Q112571957":"event","Q112571962":"event","Q112571960":"event","Q112571961":"event","Q112571964":"event","Q112574471":"event","Q112574474":"event","Q112574475":"event","Q112574472":"event","Q112574478":"event","Q112574479":"event","Q112574476":"event","Q112574477":"event","Q112574482":"event","Q112574483":"event","Q112574481":"event","Q112574484":"event","Q112650500":"event","Q112653563":"event","Q112654012":"event","Q112659558":"event","Q112660976":"event","Q112670783":"event","Q112670786":"event","Q112670787":"event","Q112670784":"event","Q112670785":"event","Q112670790":"event","Q112670791":"event","Q112670788":"event","Q112670789":"event","Q112670794":"event","Q112670795":"event","Q112670792":"event","Q112670793":"event","Q112670796":"event","Q112670935":"event","Q112670938":"event","Q112670939":"event","Q112670936":"event","Q112670937":"event","Q112670942":"event","Q112670943":"event","Q112670940":"event","Q112670941":"event","Q112670946":"event","Q112670944":"event","Q112670945":"event","Q112670948":"event","Q112670949":"event","Q112670990":"event","Q112670991":"event","Q112670994":"event","Q112670995":"event","Q112670992":"event","Q112670993":"event","Q112670998":"event","Q112670999":"event","Q112670996":"event","Q112670997":"event","Q112671002":"event","Q112671003":"event","Q112671000":"event","Q112671001":"event","Q112671046":"event","Q112671047":"event","Q112671045":"event","Q112671050":"event","Q112671051":"event","Q112671048":"event","Q112671049":"event","Q112671054":"event","Q112671055":"event","Q112671052":"event","Q112671053":"event","Q112671059":"event","Q112671056":"event","Q112671060":"event","Q112671103":"event","Q112671106":"event","Q112671107":"event","Q112671104":"event","Q112671105":"event","Q112671110":"event","Q112671111":"event","Q112671108":"event","Q112671109":"event","Q112671112":"event","Q112671113":"event","Q112678650":"event","Q112678651":"event","Q112678649":"event","Q112678654":"event","Q112678655":"event","Q112678652":"event","Q112678653":"event","Q112678658":"event","Q112678659":"event","Q112678656":"event","Q112678662":"event","Q112678663":"event","Q112678660":"event","Q112678661":"event","Q112678715":"event","Q112678712":"event","Q112678713":"event","Q112678718":"event","Q112678719":"event","Q112678716":"event","Q112678717":"event","Q112678722":"event","Q112678723":"event","Q112678720":"event","Q112678721":"event","Q112678726":"event","Q112678724":"event","Q112678725":"event","Q112678750":"event","Q112678791":"event","Q112678795":"event","Q112678792":"event","Q112678793":"event","Q112678798":"event","Q112678799":"event","Q112678796":"event","Q112678797":"event","Q112678802":"event","Q112678803":"event","Q112678801":"event","Q112678806":"event","Q112678804":"event","Q112678805":"event","Q112678882":"event","Q112678883":"event","Q112678880":"event","Q112678881":"event","Q112678886":"event","Q112678884":"event","Q112678885":"event","Q112678890":"event","Q112678891":"event","Q112678888":"event","Q112678889":"event","Q112678895":"event","Q112678892":"event","Q112678893":"event","Q112678994":"event","Q112678995":"event","Q112678993":"event","Q112678996":"event","Q112678997":"event","Q112678998":"event","Q112678999":"event","Q112679002":"event","Q112679003":"event","Q112679000":"event","Q112679001":"event","Q112679006":"event","Q112679004":"event","Q112679005":"event","Q112679071":"event","Q112679074":"event","Q112679075":"event","Q112679072":"event","Q112679073":"event","Q112679078":"event","Q112679079":"event","Q112679076":"event","Q112679077":"event","Q112679082":"event","Q112679083":"event","Q112679080":"event","Q112679081":"event","Q112679084":"event","Q112679162":"event","Q112679163":"event","Q112679161":"event","Q112679166":"event","Q112679167":"event","Q112679164":"event","Q112679165":"event","Q112679170":"event","Q112679171":"event","Q112679168":"event","Q112679169":"event","Q112679174":"event","Q112679172":"event","Q112679173":"event","Q112704287":"event","Q112704290":"event","Q112704291":"event","Q112704288":"event","Q112704289":"event","Q112704294":"event","Q112704295":"event","Q112704293":"event","Q112704298":"event","Q112704299":"event","Q112704296":"event","Q112704302":"event","Q112704300":"event","Q112704301":"event","Q112725663":"event","Q112725666":"event","Q112725664":"event","Q112725665":"event","Q112725671":"event","Q112725668":"event","Q112725669":"event","Q112725674":"event","Q112725672":"event","Q112725673":"event","Q112725946":"event","Q112725947":"event","Q112725944":"event","Q112725945":"event","Q112725950":"event","Q112725951":"event","Q112725948":"event","Q112725949":"event","Q112725954":"event","Q112725955":"event","Q112725952":"event","Q112725953":"event","Q112727158":"event","Q112727162":"event","Q112727160":"event","Q112727161":"event","Q112727166":"event","Q112727167":"event","Q112727164":"event","Q112727165":"event","Q112727171":"event","Q112727169":"event","Q112727174":"event","Q112727175":"event","Q112727172":"event","Q112727173":"event","Q112727311":"event","Q112727314":"event","Q112727312":"event","Q112727313":"event","Q112727318":"event","Q112727319":"event","Q112727316":"event","Q112727317":"event","Q112727322":"event","Q112727323":"event","Q112727320":"event","Q112727321":"event","Q112730509":"event","Q112730510":"event","Q112730511":"event","Q112730514":"event","Q112730513":"event","Q112730518":"event","Q112730519":"event","Q112730517":"event","Q112730522":"event","Q112730520":"event","Q112730521":"event","Q112730529":"event","Q112748174":"event","Q112748175":"event","Q112748178":"event","Q112748176":"event","Q112748177":"event","Q112748182":"event","Q112748183":"event","Q112748180":"event","Q112748181":"event","Q112748187":"event","Q112748184":"event","Q112748185":"event","Q112748574":"event","Q112748575":"event","Q112748578":"event","Q112748579":"event","Q112748576":"event","Q112748582":"event","Q112748583":"event","Q112748580":"event","Q112748581":"event","Q112748586":"event","Q112748587":"event","Q112748584":"event","Q112748798":"event","Q112748799":"event","Q112748797":"event","Q112748802":"event","Q112748803":"event","Q112748800":"event","Q112748801":"event","Q112748806":"event","Q112748807":"event","Q112748804":"event","Q112748808":"event","Q112751082":"event","Q112751083":"event","Q112751080":"event","Q112751086":"event","Q112751087":"event","Q112751084":"event","Q112751085":"event","Q112751090":"event","Q112751088":"event","Q112751089":"event","Q112751970":"event","Q112751975":"event","Q112751972":"event","Q112751973":"event","Q112751978":"event","Q112751979":"event","Q112751976":"event","Q112751981":"event","Q112760766":"event","Q112762330":"event","Q112792449":"event","Q112792659":"event","Q112792880":"event","Q112793043":"event","Q112793235":"event","Q112793423":"event","Q112793562":"event","Q112793784":"event","Q112793981":"event","Q112794155":"event","Q112794346":"event","Q112794842":"event","Q112794949":"event","Q112795083":"event","Q112795358":"event","Q112812628":"event","Q112812666":"event","Q112913362":"event","Q112913363":"event","Q112913360":"event","Q112913361":"event","Q112913366":"event","Q112913367":"event","Q112913364":"event","Q112913365":"event","Q112913402":"event","Q112913403":"event","Q112913406":"event","Q112913407":"event","Q112913404":"event","Q112913405":"event","Q112913410":"event","Q112913408":"event","Q112913409":"event","Q112913411":"event","Q112913523":"event","Q112913526":"event","Q112913527":"event","Q112913524":"event","Q112913525":"event","Q112913528":"event","Q112913529":"event","Q112915154":"event","Q112915155":"event","Q112915153":"event","Q112915158":"event","Q112915156":"event","Q112915157":"event","Q112915160":"event","Q112915366":"event","Q112915367":"event","Q112915364":"event","Q112915365":"event","Q112915370":"event","Q112915371":"event","Q112915369":"event","Q112915518":"event","Q112915519":"event","Q112915522":"event","Q112915523":"event","Q112915520":"event","Q112915526":"event","Q112915524":"event","Q112915525":"event","Q112916618":"event","Q112916619":"event","Q112916616":"event","Q112916617":"event","Q112916622":"event","Q112916620":"event","Q112916621":"event","Q112916754":"event","Q112916755":"event","Q112916758":"event","Q112916759":"event","Q112916756":"event","Q112916757":"event","Q112916762":"event","Q112916760":"event","Q112916761":"event","Q112918839":"event","Q112918842":"event","Q112918846":"event","Q112918844":"event","Q112918850":"event","Q112918848":"event","Q112918849":"event","Q112921070":"event","Q112921071":"event","Q112921074":"event","Q112921075":"event","Q112921072":"event","Q112921073":"event","Q112921076":"event","Q112922531":"event","Q112922529":"event","Q112922532":"event","Q112922533":"event","Q112922539":"event","Q112922540":"event","Q112922541":"event","Q112943346":"event","Q112943347":"event","Q112943345":"event","Q112943350":"event","Q112943351":"event","Q112943348":"event","Q112943349":"event","Q112943352":"event","Q112943523":"event","Q112943526":"event","Q112943527":"event","Q112943524":"event","Q112943525":"event","Q112943530":"event","Q112943528":"event","Q112943529":"event","Q112943694":"event","Q112943695":"event","Q112943693":"event","Q112943698":"event","Q112943699":"event","Q112943696":"event","Q112943697":"event","Q112943702":"event","Q112943700":"event","Q112943701":"event","Q112943771":"event","Q112943774":"event","Q112943775":"event","Q112943772":"event","Q112943773":"event","Q112943776":"event","Q112943777":"event","Q112943778":"event","Q112947099":"event","Q112947102":"event","Q112947103":"event","Q112947100":"event","Q112947101":"event","Q112947104":"event","Q112947105":"event","Q112948730":"event","Q112948734":"event","Q112948732":"event","Q112948739":"event","Q112948737":"event","Q112948746":"event","Q112948745":"event","Q112949454":"event","Q112949455":"event","Q112949453":"event","Q112949459":"event","Q112949457":"event","Q112949462":"event","Q112949461":"event","Q112959346":"event","Q112959347":"event","Q112959344":"event","Q112959345":"event","Q112959350":"event","Q112959351":"event","Q112959348":"event","Q112959349":"event","Q112959354":"event","Q112959355":"event","Q112959352":"event","Q112959353":"event","Q112959975":"event","Q112959978":"event","Q112959979":"event","Q112959976":"event","Q112959977":"event","Q112959982":"event","Q112959983":"event","Q112959980":"event","Q112959981":"event","Q112959986":"event","Q112959987":"event","Q112959984":"event","Q112959985":"event","Q112959988":"event","Q112960202":"event","Q112960201":"event","Q112960206":"event","Q112960204":"event","Q112960205":"event","Q112960210":"event","Q112960211":"event","Q112960208":"event","Q112960214":"event","Q112960215":"event","Q112960212":"event","Q112960213":"event","Q112960282":"event","Q112960283":"event","Q112960281":"event","Q112960286":"event","Q112960287":"event","Q112960284":"event","Q112960285":"event","Q112960290":"event","Q112960291":"event","Q112960288":"event","Q112960289":"event","Q112960294":"event","Q112960292":"event","Q112960293":"event","Q112960442":"event","Q112960443":"event","Q112960441":"event","Q112960446":"event","Q112960447":"event","Q112960444":"event","Q112960445":"event","Q112960450":"event","Q112960451":"event","Q112960448":"event","Q112960449":"event","Q112960454":"event","Q112960452":"event","Q112960453":"event","Q112981047":"event","Q112981050":"event","Q112981051":"event","Q112981048":"event","Q112981049":"event","Q112981055":"event","Q112981052":"event","Q112981053":"event","Q112981058":"event","Q112981059":"event","Q112981056":"event","Q112981057":"event","Q112981060":"event","Q112981061":"event","Q112981166":"event","Q112981167":"event","Q112981170":"event","Q112981171":"event","Q112981168":"event","Q112981169":"event","Q112981174":"event","Q112981175":"event","Q112981172":"event","Q112981173":"event","Q112981178":"event","Q112981179":"event","Q112981176":"event","Q112981177":"event","Q112981632":"event","Q112981637":"event","Q112981641":"event","Q112981646":"event","Q112981652":"event","Q112981656":"event","Q112981661":"event","Q112981665":"event","Q112981671":"event","Q112981679":"event","Q112981676":"event","Q112986174":"event","Q112986178":"event","Q112986176":"event","Q112986180":"event","Q112986181":"event","Q112986187":"event","Q112986184":"event","Q112986185":"event","Q112986189":"event","Q112986194":"event","Q112986192":"event","Q112986197":"event","Q112986201":"event","Q112987174":"event","Q112987178":"event","Q112987176":"event","Q112987182":"event","Q112987183":"event","Q112987180":"event","Q112987187":"event","Q112987185":"event","Q112987191":"event","Q112987189":"event","Q112987193":"event","Q112993498":"event","Q112993502":"event","Q112993500":"event","Q112993506":"event","Q112993504":"event","Q112993511":"event","Q112993508":"event","Q112993509":"event","Q112994481":"event","Q112994486":"event","Q112994484":"event","Q112994491":"event","Q112994488":"event","Q112994489":"event","Q112994495":"event","Q112994493":"event","Q112995203":"event","Q112995201":"event","Q112995206":"event","Q112995204":"event","Q112995211":"event","Q112995209":"event","Q112995214":"event","Q112995213":"event","Q112995218":"event","Q112995216":"event","Q112995903":"event","Q112995907":"event","Q112995905":"event","Q112995910":"event","Q112995914":"event","Q112995912":"event","Q112995919":"event","Q112995916":"event","Q112995917":"event","Q113004227":"event","Q113004230":"event","Q113004228":"event","Q113004229":"event","Q113004234":"event","Q113004232":"event","Q113004238":"event","Q113004239":"event","Q113004236":"event","Q113004240":"event","Q113004307":"event","Q113004310":"event","Q113004308":"event","Q113004309":"event","Q113004311":"event","Q113004312":"event","Q113004313":"event","Q113004398":"event","Q113004399":"event","Q113004402":"event","Q113004403":"event","Q113004401":"event","Q113004404":"event","Q113004405":"event","Q113004562":"event","Q113004563":"event","Q113004566":"event","Q113004564":"event","Q113004565":"event","Q113004568":"event","Q113004569":"event","Q113004618":"event","Q113004619":"event","Q113004622":"event","Q113004623":"event","Q113004620":"event","Q113004621":"event","Q113004624":"event","Q113004698":"event","Q113004699":"event","Q113004696":"event","Q113004697":"event","Q113004702":"event","Q113004700":"event","Q113004701":"event","Q113004754":"event","Q113004755":"event","Q113004758":"event","Q113004759":"event","Q113004756":"event","Q113004757":"event","Q113004760":"event","Q113004962":"event","Q113004963":"event","Q113004961":"event","Q113004966":"event","Q113004967":"event","Q113004964":"event","Q113004965":"event","Q113005195":"event","Q113005198":"event","Q113005199":"event","Q113005196":"event","Q113005197":"event","Q113005200":"event","Q113005201":"event","Q113006470":"event","Q113006471":"event","Q113006474":"event","Q113006475":"event","Q113006472":"event","Q113006473":"event","Q113006478":"event","Q113006476":"event","Q113006477":"event","Q113006506":"event","Q113006507":"event","Q113006505":"event","Q113006510":"event","Q113006511":"event","Q113006508":"event","Q113006509":"event","Q113006614":"event","Q113006615":"event","Q113006612":"event","Q113006613":"event","Q113006618":"event","Q113006616":"event","Q113006617":"event","Q113007462":"event","Q113007463":"event","Q113008275":"event","Q113008273":"event","Q113008279":"event","Q113008277":"event","Q113008283":"event","Q113008281":"event","Q113008285":"event","Q113009026":"event","Q113009027":"event","Q113009024":"event","Q113009025":"event","Q113009030":"event","Q113009028":"event","Q113009029":"event","Q113027355":"event","Q113027358":"event","Q113027359":"event","Q113027356":"event","Q113027362":"event","Q113027360":"event","Q113027361":"event","Q113027666":"event","Q113027665":"event","Q113027667":"event","Q113027670":"event","Q113027671":"event","Q113027668":"event","Q113027669":"event","Q113046266":"event","Q113046267":"event","Q113046264":"event","Q113046265":"event","Q113046270":"event","Q113046268":"event","Q113046269":"event","Q113046522":"event","Q113046520":"event","Q113046527":"event","Q113046525":"event","Q113046531":"event","Q113046535":"event","Q113046532":"event","Q113078966":"event","Q113078965":"event","Q113078970":"event","Q113078971":"event","Q113078968":"event","Q113078972":"event","Q113078973":"event","Q113080058":"event","Q113080059":"event","Q113080057":"event","Q113080062":"event","Q113080063":"event","Q113080061":"event","Q113080064":"event","Q113085578":"event","Q113085579":"event","Q113085576":"event","Q113085577":"event","Q113085582":"event","Q113085580":"event","Q113085581":"event","Q113107051":"event","Q113107054":"event","Q113107055":"event","Q113107052":"event","Q113107053":"event","Q113107058":"event","Q113107057":"event","Q113107654":"event","Q113107655":"event","Q113107658":"event","Q113107659":"event","Q113107656":"event","Q113107657":"event","Q113107660":"event","Q113108394":"event","Q113108395":"event","Q113108392":"event","Q113108398":"event","Q113108399":"event","Q113108396":"event","Q113108400":"event","Q113110203":"event","Q113110207":"event","Q113110204":"event","Q113110205":"event","Q113110210":"event","Q113110208":"event","Q113110209":"event","Q113110534":"event","Q113110535":"event","Q113110532":"event","Q113110533":"event","Q113110538":"event","Q113110537":"event","Q113110542":"event","Q113110540":"event","Q113110541":"event","Q113110590":"event","Q113110591":"event","Q113110588":"event","Q113110589":"event","Q113110595":"event","Q113110592":"event","Q113110593":"event","Q113130423":"event","Q113130426":"event","Q113130427":"event","Q113130424":"event","Q113130425":"event","Q113130428":"event","Q113130429":"event","Q113130551":"event","Q113130554":"event","Q113130555":"event","Q113130552":"event","Q113130553":"event","Q113130558":"event","Q113130556":"event","Q113130557":"event","Q113148014":"event","Q113148015":"event","Q113148018":"event","Q113148019":"event","Q113148016":"event","Q113148017":"event","Q113148022":"event","Q113148023":"event","Q113148021":"event","Q113148026":"event","Q113148024":"event","Q113148025":"event","Q113148138":"event","Q113148139":"event","Q113148142":"event","Q113148143":"event","Q113148141":"event","Q113148146":"event","Q113148144":"event","Q113148145":"event","Q113152738":"event","Q113152739":"event","Q113152737":"event","Q113152742":"event","Q113152743":"event","Q113152740":"event","Q113152741":"event","Q113154691":"event","Q113154689":"event","Q113154694":"event","Q113154695":"event","Q113154692":"event","Q113154693":"event","Q113154698":"event","Q113154699":"event","Q113154696":"event","Q113154702":"event","Q113154700":"event","Q113155110":"event","Q113155111":"event","Q113155109":"event","Q113155112":"event","Q113155113":"event","Q113163566":"event","Q113163567":"event","Q113163565":"event","Q113163570":"event","Q113163571":"event","Q113163568":"event","Q113163569":"event","Q113163574":"event","Q113163575":"event","Q113163572":"event","Q113163573":"event","Q113163576":"event","Q113163775":"event","Q113163778":"event","Q113163779":"event","Q113163776":"event","Q113163777":"event","Q113163782":"event","Q113163780":"event","Q113163781":"event","Q113163786":"event","Q113163787":"event","Q113163784":"event","Q113163785":"event","Q113163790":"event","Q113163789":"event","Q113163934":"event","Q113163935":"event","Q113163933":"event","Q113163938":"event","Q113163939":"event","Q113163936":"event","Q113163937":"event","Q113163942":"event","Q113163943":"event","Q113163940":"event","Q113163941":"event","Q113163950":"event","Q113164062":"event","Q113164063":"event","Q113164060":"event","Q113164061":"event","Q113164066":"event","Q113164067":"event","Q113164064":"event","Q113164065":"event","Q113164071":"event","Q113164068":"event","Q113164069":"event","Q113164154":"event","Q113164155":"event","Q113164158":"event","Q113164159":"event","Q113164156":"event","Q113164157":"event","Q113164162":"event","Q113164160":"event","Q113164161":"event","Q113164163":"event","Q113164166":"event","Q113164167":"event","Q113164164":"event","Q113164165":"event","Q113164200":"event","Q113164262":"event","Q113164263":"event","Q113164260":"event","Q113164261":"event","Q113164266":"event","Q113164267":"event","Q113164264":"event","Q113164265":"event","Q113164270":"event","Q113164271":"event","Q113164268":"event","Q113164269":"event","Q113164272":"event","Q113164273":"event","Q113309354":"event","Q113309355":"event","Q113309358":"event","Q113309356":"event","Q113309357":"event","Q113309360":"event","Q113446088":"event","Q113446106":"event","Q113459778":"event","Q113536868":"event","Q113688034":"event","Q113688803":"event","Q113834313":"event","Q113838120":"event","Q113952555":"event","Q113952558":"event","Q113952559":"event","Q113952556":"event","Q113952557":"event","Q113952560":"event","Q113952690":"event","Q113952695":"event","Q113952692":"event","Q113952693":"event","Q113952698":"event","Q113952697":"event","Q113952700":"event","Q113988559":"event","Q113993939":"event","Q113993943":"event","Q114173546":"event","Q114173846":"event","Q114182810":"event","Q114182812":"event","Q114182813":"event","Q114183488":"event","Q114183489":"event","Q114192814":"event","Q114192815":"event","Q114192812":"event","Q114192818":"event","Q114192816":"event","Q114194046":"event","Q114194047":"event","Q114194045":"event","Q114194051":"event","Q114194049":"event","Q114210094":"event","Q114210093":"event","Q114210098":"event","Q114210096":"event","Q114216998":"event","Q114216999":"event","Q114216997":"event","Q114217002":"event","Q114217003":"event","Q114217000":"event","Q114217007":"event","Q114217004":"event","Q114217005":"event","Q114217011":"event","Q114217008":"event","Q114217495":"event","Q114217497":"event","Q114219046":"event","Q114219051":"event","Q114219048":"event","Q114219049":"event","Q114219052":"event","Q114232543":"event","Q114232540":"event","Q114232541":"event","Q114232546":"event","Q114232547":"event","Q114232544":"event","Q114232545":"event","Q114232550":"event","Q114232551":"event","Q114232548":"event","Q114232549":"event","Q114232554":"event","Q114232552":"event","Q114232553":"event","Q114232558":"event","Q114232559":"event","Q114232556":"event","Q114232557":"event","Q114232560":"event","Q114232561":"event","Q114232627":"event","Q114232630":"event","Q114232631":"event","Q114232628":"event","Q114232629":"event","Q114232634":"event","Q114232635":"event","Q114232632":"event","Q114232633":"event","Q114232638":"event","Q114232639":"event","Q114232636":"event","Q114232637":"event","Q114232642":"event","Q114232643":"event","Q114232640":"event","Q114232641":"event","Q114232646":"event","Q114232647":"event","Q114232644":"event","Q114232645":"event","Q114237599":"event","Q114237596":"event","Q114237597":"event","Q114237600":"event","Q114237731":"event","Q114237732":"event","Q114237733":"event","Q114237738":"event","Q114237739":"event","Q114237736":"event","Q114237737":"event","Q114237743":"event","Q114237740":"event","Q114237747":"event","Q114237744":"event","Q114237745":"event","Q114237751":"event","Q114237748":"event","Q114237749":"event","Q114237754":"event","Q114237755":"event","Q114237752":"event","Q114237758":"event","Q114237759":"event","Q114237756":"event","Q114237757":"event","Q114237763":"event","Q114237760":"event","Q114237761":"event","Q114237766":"event","Q114237764":"event","Q114237765":"event","Q114237768":"event","Q114237769":"event","Q114238831":"event","Q114238834":"event","Q114238835":"event","Q114238832":"event","Q114238838":"event","Q114238836":"event","Q114238837":"event","Q114238840":"event","Q114239159":"event","Q114239160":"event","Q114239161":"event","Q114322003":"event","Q114322247":"event","Q114322686":"event","Q114338576":"event","Q114354736":"event","Q114354776":"event","Q114354852":"event","Q114436940":"event","Q114437252":"event","Q114437270":"event","Q114437292":"event","Q114948706":"event","Q114948704":"event","Q114948710":"event","Q114948708":"event","Q114948714":"event","Q114948712":"event","Q114948719":"event","Q114948716":"event","Q114948717":"event","Q114948723":"event","Q114948721":"event","Q114948726":"event","Q114948724":"event","Q114948725":"event","Q114948727":"event","Q114948730":"event","Q114948731":"event","Q114948728":"event","Q114948729":"event","Q114948734":"event","Q114948735":"event","Q114948732":"event","Q114948733":"event","Q114948738":"event","Q114948739":"event","Q114948736":"event","Q114948737":"event","Q114948742":"event","Q114948743":"event","Q114948740":"event","Q114948741":"event","Q114948746":"event","Q114948747":"event","Q114948744":"event","Q114948745":"event","Q114948750":"event","Q114948748":"event","Q114948749":"event","Q114948890":"event","Q114948891":"event","Q114948889":"event","Q114948894":"event","Q114948895":"event","Q114948892":"event","Q114948893":"event","Q114948898":"event","Q114948899":"event","Q114948896":"event","Q114948897":"event","Q114948902":"event","Q114948903":"event","Q114948900":"event","Q114948901":"event","Q114948906":"event","Q114948907":"event","Q114948904":"event","Q114948905":"event","Q114948910":"event","Q114948908":"event","Q114948914":"event","Q114948915":"event","Q114948912":"event","Q114948913":"event","Q114948918":"event","Q114948919":"event","Q114948916":"event","Q114948922":"event","Q114948923":"event","Q114948920":"event","Q114948921":"event","Q114948926":"event","Q114948927":"event","Q114948924":"event","Q114948925":"event","Q114948930":"event","Q114948931":"event","Q114948928":"event","Q114948929":"event","Q114948934":"event","Q114948935":"event","Q114948932":"event","Q114948933":"event","Q115242905":"event","Q115243218":"event","Q115243231":"event","Q115243235":"event","Q115243241":"event","Q115255973":"event","Q115256076":"event","Q115256081":"event","Q115256087":"event","Q115727460":"event","Q115835770":"event","Q115836252":"event","Q115846584":"event","Q115908967":"event","Q115973871":"event","Q115973874":"event","Q115973872":"event","Q115973873":"event","Q115973878":"event","Q115973879":"event","Q115973876":"event","Q115973877":"event","Q115973882":"event","Q115973883":"event","Q115973880":"event","Q115973881":"event","Q115973886":"event","Q115973887":"event","Q115973884":"event","Q115973885":"event","Q115973890":"event","Q115973888":"event","Q115973891":"event","Q115973892":"event","Q115973893":"event","Q116170553":"event","Q116170794":"event","Q116170838":"event","Q116173116":"event","Q116185873":"event","Q116185921":"event","Q116193784":"event","Q116206613":"event","Q116212845":"event","Q116212900":"event","Q116215171":"event","Q116215177":"event","Q116215192":"event","Q116215200":"event","Q116215211":"event","Q116216037":"event","Q116216057":"event","Q116217232":"event","Q116217303":"event","Q116217342":"event","Q116217380":"event","Q116217414":"event","Q116217472":"event","Q116217807":"event","Q116218044":"event","Q116218049":"event","Q116218055":"event","Q116218059":"event","Q116218070":"event","Q116218086":"event","Q116218101":"event","Q116218106":"event","Q116218112":"event","Q116218116":"event","Q116218122":"event","Q116218132":"event","Q116218160":"event","Q116218230":"event","Q116218263":"event","Q116218294":"event","Q116218352":"event","Q116218414":"event","Q116218547":"event","Q116218667":"event","Q116218882":"event","Q116219027":"event","Q116219165":"event","Q116219304":"event","Q116219440":"event","Q116219541":"event","Q116219698":"event","Q116219825":"event","Q116219943":"event","Q116220038":"event","Q116220060":"event","Q116220113":"event","Q116220146":"event","Q116220206":"event","Q116220240":"event","Q116220272":"event","Q116220298":"event","Q116220348":"event","Q116220472":"event","Q116220509":"event","Q116220538":"event","Q116220569":"event","Q116220601":"event","Q116220629":"event","Q116220959":"event","Q116221007":"event","Q116221047":"event","Q116221084":"event","Q116221118":"event","Q116221173":"event","Q116221207":"event","Q116221271":"event","Q116221317":"event","Q116221352":"event","Q116221385":"event","Q116221436":"event","Q116221471":"event","Q116221510":"event","Q116221549":"event","Q116221627":"event","Q116221678":"event","Q116221718":"event","Q116221752":"event","Q116221809":"event","Q116221851":"event","Q116221886":"event","Q116221919":"event","Q116221950":"event","Q116221969":"event","Q116222007":"event","Q116222036":"event","Q116222067":"event","Q116222118":"event","Q116222152":"event","Q116222185":"event","Q116222212":"event","Q116222259":"event","Q116222295":"event","Q116222328":"event","Q116222356":"event","Q116222401":"event","Q116222436":"event","Q116222493":"event","Q116222527":"event","Q116222558":"event","Q116222587":"event","Q116222637":"event","Q116222671":"event","Q116222711":"event","Q116222741":"event","Q116222809":"event","Q116222842":"event","Q116222869":"event","Q116222897":"event","Q116222966":"event","Q116222998":"event","Q116223029":"event","Q116223057":"event","Q116223108":"event","Q116223138":"event","Q116223175":"event","Q116223203":"event","Q116223244":"event","Q116223274":"event","Q116223307":"event","Q116233202":"event","Q116233262":"event","Q116233289":"event","Q116233298":"event","Q116233306":"event","Q116233323":"event","Q116233320":"event","Q116233332":"event","Q116233344":"event","Q116233359":"event","Q116233364":"event","Q116233375":"event","Q116233381":"event","Q116233398":"event","Q116233407":"event","Q116233424":"event","Q116233428":"event","Q116233443":"event","Q116233562":"event","Q116233571":"event","Q116233579":"event","Q116233592":"event","Q116233601":"event","Q116233612":"event","Q116233624":"event","Q116233639":"event","Q116233643":"event","Q116233652":"event","Q116233660":"event","Q116233668":"event","Q116233675":"event","Q116233691":"event","Q116233710":"event","Q116233717":"event","Q116233724":"event","Q116233731":"event","Q116233741":"event","Q116233745":"event","Q116233748":"event","Q116233758":"event","Q116233766":"event","Q116233772":"event","Q116233779":"event","Q116233787":"event","Q116233792":"event","Q116233800":"event","Q116233804":"event","Q116233809":"event","Q116233826":"event","Q116233835":"event","Q116233879":"event","Q116233896":"event","Q116233911":"event","Q116233909":"event","Q116233918":"event","Q116233926":"event","Q116233941":"event","Q116233949":"event","Q116233958":"event","Q116233963":"event","Q116233977":"event","Q116233984":"event","Q116233990":"event","Q116234002":"event","Q116234022":"event","Q116234032":"event","Q116234044":"event","Q116234056":"event","Q116234065":"event","Q116234074":"event","Q116234091":"event","Q116234103":"event","Q116234114":"event","Q116234125":"event","Q116234136":"event","Q116234142":"event","Q116234150":"event","Q116234151":"event","Q116234158":"event","Q116234161":"event","Q116234174":"event","Q116234172":"event","Q116234181":"event","Q116234189":"event","Q116234200":"event","Q116234208":"event","Q116234216":"event","Q116234227":"event","Q116234234":"event","Q116234240":"event","Q116234245":"event","Q116234250":"event","Q116234255":"event","Q116234262":"event","Q116234268":"event","Q116234277":"event","Q116234285":"event","Q116234297":"event","Q116234310":"event","Q116234326":"event","Q116234337":"event","Q116234346":"event","Q116234353":"event","Q116234362":"event","Q116234368":"event","Q116234374":"event","Q116234385":"event","Q116234396":"event","Q116234407":"event","Q116234421":"event","Q116234425":"event","Q116234434":"event","Q116234440":"event","Q116234458":"event","Q116234456":"event","Q116234461":"event","Q116234467":"event","Q116234486":"event","Q116234488":"event","Q116234493":"event","Q116234501":"event","Q116234506":"event","Q116234508":"event","Q116234513":"event","Q116234516":"event","Q116234520":"event","Q116234533":"event","Q116234540":"event","Q116234548":"event","Q116234555":"event","Q116234567":"event","Q116234574":"event","Q116234587":"event","Q116234593":"event","Q116234601":"event","Q116234609":"event","Q116234619":"event","Q116234625":"event","Q116234633":"event","Q116234642":"event","Q116234655":"event","Q116234665":"event","Q116234674":"event","Q116234684":"event","Q116234691":"event","Q116234696":"event","Q116234710":"event","Q116234720":"event","Q116234729":"event","Q116234737":"event","Q116234760":"event","Q116234774":"event","Q116234787":"event","Q116234784":"event","Q116234794":"event","Q116234802":"event","Q116234820":"event","Q116234836":"event","Q116234882":"event","Q116234903":"event","Q116234928":"event","Q116234945":"event","Q116234974":"event","Q116234995":"event","Q116235015":"event","Q116235040":"event","Q116235090":"event","Q116235116":"event","Q116235141":"event","Q116235166":"event","Q116235201":"event","Q116235234":"event","Q116235275":"event","Q116235303":"event","Q116235331":"event","Q116235353":"event","Q116235390":"event","Q116235417":"event","Q116235437":"event","Q116235462":"event","Q116284322":"event","Q116284323":"event","Q116284321":"event","Q116284326":"event","Q116284327":"event","Q116284324":"event","Q116284330":"event","Q116284331":"event","Q116284328":"event","Q116284329":"event","Q116284334":"event","Q116284332":"event","Q116284333":"event","Q116284338":"event","Q116284336":"event","Q116287198":"event","Q116287199":"event","Q116287203":"event","Q116287200":"event","Q116287201":"event","Q116287206":"event","Q116287207":"event","Q116287204":"event","Q116287205":"event","Q116287210":"event","Q116287211":"event","Q116287209":"event","Q116287214":"event","Q116287212":"event","Q116287213":"event","Q116287218":"event","Q116287219":"event","Q116287216":"event","Q116287217":"event","Q116287222":"event","Q116287223":"event","Q116287220":"event","Q116287227":"event","Q116287224":"event","Q116287225":"event","Q116287230":"event","Q116287231":"event","Q116287228":"event","Q116287229":"event","Q116287234":"event","Q116287235":"event","Q116287233":"event","Q116287239":"event","Q116287236":"event","Q116287237":"event","Q116287242":"event","Q116287243":"event","Q116287240":"event","Q116287241":"event","Q116287246":"event","Q116287247":"event","Q116287245":"event","Q116287250":"event","Q116287251":"event","Q116287248":"event","Q116287252":"event","Q116287253":"event","Q116287258":"event","Q116287259":"event","Q116287256":"event","Q116287257":"event","Q116287262":"event","Q116287263":"event","Q116287260":"event","Q116287264":"event","Q116287265":"event","Q116287542":"event","Q116287540":"event","Q116287546":"event","Q116287544":"event","Q116287550":"event","Q116287548":"event","Q116287554":"event","Q116287552":"event","Q116287559":"event","Q116287557":"event","Q116287562":"event","Q116287565":"event","Q116287568":"event","Q116287573":"event","Q116287579":"event","Q116287576":"event","Q116287582":"event","Q116287585":"event","Q116287588":"event","Q116287595":"event","Q116287592":"event","Q116287598":"event","Q116287602":"event","Q116287605":"event","Q116287609":"event","Q116287612":"event","Q116287619":"event","Q116287616":"event","Q116287622":"event","Q116287623":"event","Q116287620":"event","Q116287626":"event","Q116287627":"event","Q116287624":"event","Q116287625":"event","Q116287630":"event","Q116287631":"event","Q116287629":"event","Q116287635":"event","Q116287632":"event","Q116287633":"event","Q116287638":"event","Q116287639":"event","Q116287636":"event","Q116287637":"event","Q116287642":"event","Q116287643":"event","Q116287640":"event","Q116287646":"event","Q116287644":"event","Q116287645":"event","Q116287650":"event","Q116287651":"event","Q116287648":"event","Q116287649":"event","Q116287654":"event","Q116287655":"event","Q116287652":"event","Q116287658":"event","Q116287656":"event","Q116287657":"event","Q116370752":"event","Q116371581":"event","Q116391082":"event","Q116504057":"event","Q116535301":"event","Q116592390":"event","Q116592590":"event","Q116592861":"event","Q116875454":"event","Q116875455":"event","Q116875456":"event","Q116875457":"event","Q117223610":"event","Q117278822":"event","Q117288820":"event","Q117288840":"event","Q117288859":"event","Q117288869":"event","Q117288880":"event","Q117288897":"event","Q117306630":"event","Q117312802":"event","Q117312816":"event","Q117312829":"event","Q117312836":"event","Q117312849":"event","Q117312864":"event","Q117337505":"event","Q117337516":"event","Q117449007":"event","Q117449011":"event","Q117449008":"event","Q117449009":"event","Q117449014":"event","Q117449015":"event","Q117449012":"event","Q117449013":"event","Q117449018":"event","Q117449019":"event","Q117449016":"event","Q117449017":"event","Q117449022":"event","Q117449023":"event","Q117449021":"event","Q117449026":"event","Q117449027":"event","Q117449024":"event","Q117449025":"event","Q117449028":"event","Q117449029":"event","Q117449115":"event","Q117449118":"event","Q117449119":"event","Q117449116":"event","Q117449117":"event","Q117449120":"event","Q117449122":"event","Q117449121":"event","Q117449126":"event","Q117449127":"event","Q117449124":"event","Q117449125":"event","Q117449130":"event","Q117449131":"event","Q117449128":"event","Q117449129":"event","Q117449134":"event","Q117449135":"event","Q117449132":"event","Q117449133":"event","Q117449138":"event","Q117449139":"event","Q117449136":"event","Q117449137":"event","Q117449143":"event","Q117449140":"event","Q117449141":"event","Q117449146":"event","Q117449147":"event","Q117449145":"event","Q117449150":"event","Q117449151":"event","Q117449148":"event","Q117449149":"event","Q117449154":"event","Q117449155":"event","Q117449152":"event","Q117449153":"event","Q117449158":"event","Q117449156":"event","Q117449157":"event","Q117449447":"event","Q117449451":"event","Q117449448":"event","Q117449449":"event","Q117449454":"event","Q117449455":"event","Q117449452":"event","Q117449453":"event","Q117449459":"event","Q117449456":"event","Q117449457":"event","Q117449462":"event","Q117449463":"event","Q117449461":"event","Q117449467":"event","Q117449464":"event","Q117449465":"event","Q117449470":"event","Q117449471":"event","Q117449468":"event","Q117449469":"event","Q117449474":"event","Q117449475":"event","Q117449472":"event","Q117449473":"event","Q117449479":"event","Q117449476":"event","Q117449477":"event","Q117449482":"event","Q117449483":"event","Q117449480":"event","Q117449481":"event","Q117449486":"event","Q117449487":"event","Q117449484":"event","Q117449485":"event","Q117449490":"event","Q117449491":"event","Q117449488":"event","Q117449489":"event","Q117468682":"event","Q117468683":"event","Q117468680":"event","Q117468681":"event","Q117468686":"event","Q117468687":"event","Q117468684":"event","Q117468685":"event","Q117468690":"event","Q117468691":"event","Q117468688":"event","Q117468689":"event","Q117468694":"event","Q117468695":"event","Q117468692":"event","Q117468693":"event","Q117468698":"event","Q117468699":"event","Q117468697":"event","Q117468702":"event","Q117468703":"event","Q117468700":"event","Q117468701":"event","Q117468704":"event","Q117468705":"event","Q117468706":"event","Q117468707":"event","Q117468711":"event","Q117468708":"event","Q117468709":"event","Q117468714":"event","Q117468715":"event","Q117468712":"event","Q117468719":"event","Q117468717":"event","Q117468722":"event","Q117468720":"event","Q117468721":"event","Q117468726":"event","Q117468727":"event","Q117468724":"event","Q117468725":"event","Q117468730":"event","Q117468731":"event","Q117468728":"event","Q117468729":"event","Q117468734":"event","Q117468735":"event","Q117468732":"event","Q117468733":"event","Q117468738":"event","Q117468739":"event","Q117468736":"event","Q117468737":"event","Q117468742":"event","Q117468743":"event","Q117468740":"event","Q117468741":"event","Q117468746":"event","Q117468747":"event","Q117468744":"event","Q117468745":"event","Q117468994":"event","Q117469218":"event","Q117469219":"event","Q117469216":"event","Q117469222":"event","Q117469223":"event","Q117469220":"event","Q117469226":"event","Q117469224":"event","Q117469225":"event","Q117469230":"event","Q117469231":"event","Q117469228":"event","Q117469229":"event","Q117469234":"event","Q117469235":"event","Q117469232":"event","Q117469233":"event","Q117469238":"event","Q117469239":"event","Q117469236":"event","Q117469237":"event","Q117469240":"event","Q117469786":"event","Q117469790":"event","Q117469791":"event","Q117469788":"event","Q117469789":"event","Q117469795":"event","Q117469792":"event","Q117469793":"event","Q117469799":"event","Q117469797":"event","Q117469802":"event","Q117469800":"event","Q117469801":"event","Q117469806":"event","Q117469807":"event","Q117469804":"event","Q117469805":"event","Q117469810":"event","Q117469811":"event","Q117469808":"event","Q117469809":"event","Q117469814":"event","Q117469815":"event","Q117469812":"event","Q117469813":"event","Q117469818":"event","Q117469816":"event","Q117469822":"event","Q117469823":"event","Q117469820":"event","Q117469821":"event","Q117469826":"event","Q117469827":"event","Q117469825":"event","Q117469830":"event","Q117469831":"event","Q117469828":"event","Q117469829":"event","Q117469832":"event","Q117469833":"event","Q117469834":"event","Q117469835":"event","Q117469838":"event","Q117469839":"event","Q117469836":"event","Q117469837":"event","Q117469843":"event","Q117469840":"event","Q117469841":"event","Q117469846":"event","Q117469847":"event","Q117469844":"event","Q117469845":"event","Q117469850":"event","Q117469851":"event","Q117469848":"event","Q117469849":"event","Q117469854":"event","Q117469855":"event","Q117469852":"event","Q117469853":"event","Q117469858":"event","Q117469859":"event","Q117469856":"event","Q117469862":"event","Q117469863":"event","Q117469860":"event","Q117469861":"event","Q117469866":"event","Q117469864":"event","Q117469865":"event","Q117469870":"event","Q117469871":"event","Q117469868":"event","Q117469874":"event","Q117469875":"event","Q117469872":"event","Q117469873":"event","Q117469878":"event","Q117469876":"event","Q117469877":"event","Q117469882":"event","Q117469883":"event","Q117469880":"event","Q117469886":"event","Q117469887":"event","Q117469884":"event","Q117469885":"event","Q117469890":"event","Q117469891":"event","Q117469888":"event","Q117469889":"event","Q117469894":"event","Q117469895":"event","Q117469892":"event","Q117469893":"event","Q117469896":"event","Q117488226":"event","Q117488227":"event","Q117488225":"event","Q117488230":"event","Q117488231":"event","Q117488228":"event","Q117488229":"event","Q117488234":"event","Q117488235":"event","Q117488232":"event","Q117488233":"event","Q117488238":"event","Q117488239":"event","Q117488236":"event","Q117488237":"event","Q117488242":"event","Q117488243":"event","Q117488240":"event","Q117488241":"event","Q117488246":"event","Q117488247":"event","Q117488244":"event","Q117488245":"event","Q117488250":"event","Q117488251":"event","Q117488248":"event","Q117488249":"event","Q117488254":"event","Q117488255":"event","Q117488252":"event","Q117488253":"event","Q117488259":"event","Q117488256":"event","Q117488257":"event","Q117488262":"event","Q117488263":"event","Q117488260":"event","Q117488261":"event","Q117488266":"event","Q117488264":"event","Q117488265":"event","Q117503818":"event","Q117503820":"event","Q117503822":"event","Q117503821":"event","Q117503826":"event","Q117503824":"event","Q117503829":"event","Q117503833":"event","Q117503838":"event","Q117503836":"event","Q117503843":"event","Q117503840":"event","Q117503846":"event","Q117503851":"event","Q117503849":"event","Q117503855":"event","Q117503853":"event","Q117503859":"event","Q117503857":"event","Q117503863":"event","Q117503861":"event","Q117531326":"event","Q117531327":"event","Q117531331":"event","Q117531329":"event","Q117531334":"event","Q117531333":"event","Q117531338":"event","Q117531336":"event","Q117531343":"event","Q117531340":"event","Q117531341":"event","Q117531346":"event","Q117531345":"event","Q117531350":"event","Q117531348":"event","Q117531355":"event","Q117531352":"event","Q117531353":"event","Q117531359":"event","Q117531357":"event","Q117531362":"event","Q117531360":"event","Q117531367":"event","Q117531364":"event","Q117531365":"event","Q117531371":"event","Q117531369":"event","Q117531374":"event","Q117531372":"event","Q117531376":"event","Q117531377":"event","Q117531380":"event","Q117531387":"event","Q117531384":"event","Q117531391":"event","Q117531389":"event","Q117531394":"event","Q117531399":"event","Q117531397":"event","Q117531403":"event","Q117531401":"event","Q117531406":"event","Q117531404":"event","Q117531410":"event","Q117531411":"event","Q117531408":"event","Q117531415":"event","Q117531413":"event","Q117531419":"event","Q117531417":"event","Q117531423":"event","Q117531421":"event","Q117531426":"event","Q117531424":"event","Q117531430":"event","Q117531431":"event","Q117531428":"event","Q117531435":"event","Q117531433":"event","Q117531438":"event","Q117531436":"event","Q117531443":"event","Q117531440":"event","Q117531446":"event","Q117531444":"event","Q117531450":"event","Q117531448":"event","Q117531455":"event","Q117531453":"event","Q117531458":"event","Q117531462":"event","Q117531460":"event","Q117531466":"event","Q117531464":"event","Q117531468":"event","Q117531469":"event","Q117625720":"event","Q117625987":"event","Q117682659":"event","Q117682899":"event","Q117682900":"event","Q117682902":"event","Q117682903":"event","Q117682901":"event","Q117682907":"event","Q117682904":"event","Q117682913":"event","Q117682918":"event","Q117682922":"event","Q117682921":"event","Q117682924":"event","Q117682930":"event","Q117682935":"event","Q117706289":"event","Q117706418":"event","Q117706434":"event","Q117706462":"event","Q117706481":"event","Q117711139":"event","Q117711137":"event","Q117711142":"event","Q117711140":"event","Q117711147":"event","Q117711144":"event","Q117711145":"event","Q117711150":"event","Q117711152":"event","Q117711156":"event","Q117711162":"event","Q117711160":"event","Q117711166":"event","Q117711169":"event","Q117711175":"event","Q117711172":"event","Q117712050":"event","Q117712051":"event","Q117712048":"event","Q117712049":"event","Q117712054":"event","Q117712055":"event","Q117712052":"event","Q117712053":"event","Q117712058":"event","Q117712059":"event","Q117712056":"event","Q117712057":"event","Q117712062":"event","Q117712063":"event","Q117712061":"event","Q117712066":"event","Q117712067":"event","Q117712064":"event","Q117712065":"event","Q117712070":"event","Q117712071":"event","Q117712068":"event","Q117712069":"event","Q117712074":"event","Q117712075":"event","Q117712072":"event","Q117712073":"event","Q117712078":"event","Q117712079":"event","Q117712076":"event","Q117712077":"event","Q117712082":"event","Q117712083":"event","Q117712081":"event","Q117712086":"event","Q117712087":"event","Q117712084":"event","Q117712085":"event","Q117712090":"event","Q117712091":"event","Q117712088":"event","Q117712089":"event","Q117712094":"event","Q117712095":"event","Q117712092":"event","Q117712093":"event","Q117712098":"event","Q117712099":"event","Q117712096":"event","Q117712097":"event","Q117712102":"event","Q117712103":"event","Q117712100":"event","Q117712101":"event","Q117712106":"event","Q117712107":"event","Q117712104":"event","Q117712105":"event","Q117712110":"event","Q117712108":"event","Q117712109":"event","Q117712114":"event","Q117712112":"event","Q117712113":"event","Q117726476":"event","Q117726605":"event","Q117726775":"event","Q117726893":"event","Q117727630":"event","Q117727767":"event","Q117813114":"event","Q117813115":"event","Q117813113":"event","Q117838613":"event","Q117850007":"event","Q117850010":"event","Q117850011":"event","Q117850008":"event","Q117850009":"event","Q117850015":"event","Q117850013":"event","Q117850018":"event","Q117850017":"event","Q117850022":"event","Q117850020":"event","Q117850027":"event","Q117850024":"event","Q117850030":"event","Q117850029":"event","Q117850034":"event","Q117850032":"event","Q117850038":"event","Q117850036":"event","Q117850042":"event","Q117850043":"event","Q117850040":"event","Q117850047":"event","Q117850045":"event","Q117850049":"event","Q117850055":"event","Q117850052":"event","Q117850053":"event","Q117850057":"event","Q117850062":"event","Q117850063":"event","Q117850060":"event","Q117850067":"event","Q117850065":"event","Q117850071":"event","Q117850069":"event","Q117850075":"event","Q117850072":"event","Q117850078":"event","Q117850076":"event","Q117850082":"event","Q117850083":"event","Q117850080":"event","Q117850081":"event","Q117850085":"event","Q117850090":"event","Q117850088":"event","Q117850094":"event","Q117850092":"event","Q117850098":"event","Q117850096":"event","Q117850103":"event","Q117850100":"event","Q117850107":"event","Q117850105":"event","Q117850110":"event","Q117850113":"event","Q117853843":"event","Q117853840":"event","Q117853844":"event","Q117853845":"event","Q117853851":"event","Q117853848":"event","Q117853854":"event","Q117853853":"event","Q117853858":"event","Q117853857":"event","Q117853862":"event","Q117853863":"event","Q117853861":"event","Q117853866":"event","Q117853867":"event","Q117853871":"event","Q117853868":"event","Q117853872":"event","Q117853873":"event","Q117853878":"event","Q117853876":"event","Q117853877":"event","Q117853882":"event","Q117853883":"event","Q117853881":"event","Q117853887":"event","Q117853890":"event","Q117853891":"event","Q117853895":"event","Q117853892":"event","Q117853896":"event","Q117853897":"event","Q117853902":"event","Q117853900":"event","Q117853901":"event","Q117853905":"event","Q117853906":"event","Q117853907":"event","Q117853911":"event","Q117853912":"event","Q117853913":"event","Q117853919":"event","Q117853916":"event","Q117853917":"event","Q117853922":"event","Q117853923":"event","Q117853926":"event","Q117853927":"event","Q117853928":"event","Q117853929":"event","Q117853934":"event","Q117853932":"event","Q117853933":"event","Q117853938":"event","Q117853937":"event","Q117853942":"event","Q117853943":"event","Q117853941":"event","Q118124650":"event","Q118124651":"event","Q118124648":"event","Q118124649":"event","Q118124654":"event","Q118124655":"event","Q118124652":"event","Q118124653":"event","Q118124656":"event","Q118130476":"event","Q118190318":"event","Q118190317":"event","Q118190590":"event","Q118190589":"event","Q118192418":"event","Q118192419":"event","Q118192417":"event","Q118192422":"event","Q118192421":"event","Q118192847":"event","Q118192850":"event","Q118192851":"event","Q118192848":"event","Q118192849":"event","Q118192852":"event","Q118193110":"event","Q118193111":"event","Q118193405":"event","Q118193411":"event","Q118193414":"event","Q118193415":"event","Q118193416":"event","Q118193417":"event","Q118197563":"event","Q118197565":"event","Q118197570":"event","Q118197568":"event","Q118197573":"event","Q118197578":"event","Q118197583":"event","Q118197584":"event","Q118203094":"event","Q118203095":"event","Q118203092":"event","Q118203093":"event","Q118203098":"event","Q118203096":"event","Q118203097":"event","Q118203102":"event","Q118203100":"event","Q118203101":"event","Q118212207":"event","Q118212211":"event","Q118212208":"event","Q118212209":"event","Q118212214":"event","Q118212212":"event","Q118212213":"event","Q118212218":"event","Q118212216":"event","Q118212217":"event","Q118212220":"event","Q118212221":"event","Q118212847":"event","Q118212850":"event","Q118212851":"event","Q118212848":"event","Q118212849":"event","Q118212854":"event","Q118212855":"event","Q118212852":"event","Q118212853":"event","Q118212856":"event","Q118212857":"event","Q118527416":"event","Q118527712":"event","Q118745428":"event","Q118745429":"event","Q120031235":"event","Q120031282":"event","Q120031326":"event","Q120031370":"event","Q120031416":"event","Q120031479":"event","Q120031606":"event","Q120059898":"event","Q120059930":"event","Q120059958":"event","Q120059984":"event","Q120060011":"event","Q120060047":"event","Q120060077":"event","Q120060107":"event","Q120060142":"event","Q120060169":"event","Q120060200":"event","Q120060231":"event","Q120060260":"event","Q120060290":"event","Q120060324":"event","Q120060358":"event","Q120060392":"event","Q120060420":"event","Q120060461":"event","Q120060499":"event","Q120060548":"event","Q120060614":"event","Q120060703":"event","Q120060780":"event","Q120060838":"event","Q120060864":"event","Q120060900":"event","Q120060931":"event","Q120060963":"event","Q120060990":"event","Q120061009":"event","Q120061029":"event","Q120061060":"event","Q120061087":"event","Q120061121":"event","Q120061151":"event","Q120061171":"event","Q120061180":"event","Q120061187":"event","Q120061193":"event","Q120061205":"event","Q120061215":"event","Q120061229":"event","Q120061236":"event","Q120061251":"event","Q120061260":"event","Q120061265":"event","Q120061273":"event","Q120061283":"event","Q120061294":"event","Q120061302":"event","Q120061313":"event","Q120061327":"event","Q120061337":"event","Q120061347":"event","Q120061358":"event","Q120061373":"event","Q120061386":"event","Q120061404":"event","Q120061422":"event","Q120061423":"event","Q120061433":"event","Q120061439":"event","Q120061444":"event","Q120061455":"event","Q120061467":"event","Q120061479":"event","Q120061495":"event","Q120061508":"event","Q120061517":"event","Q120061525":"event","Q120061535":"event","Q120061541":"event","Q120061549":"event","Q120061564":"event","Q120061571":"event","Q120061582":"event","Q120061595":"event","Q120061606":"event","Q120061612":"event","Q120061617":"event","Q120061629":"event","Q120061647":"event","Q120061677":"event","Q120061691":"event","Q120061700":"event","Q120061713":"event","Q120061726":"event","Q120061738":"event","Q120061751":"event","Q120061772":"event","Q120061784":"event","Q120061798":"event","Q120061808":"event","Q120061818":"event","Q120061832":"event","Q120061851":"event","Q120061863":"event","Q120061877":"event","Q120061890":"event","Q120061900":"event","Q120061915":"event","Q120061926":"event","Q120061937":"event","Q120061948":"event","Q120061960":"event","Q120061975":"event","Q120061991":"event","Q120062005":"event","Q120062080":"event","Q120062154":"event","Q120062222":"event","Q120062323":"event","Q120062404":"event","Q120062468":"event","Q120062560":"event","Q120062640":"event","Q120062715":"event","Q120062788":"event","Q120062877":"event","Q120062954":"event","Q120063029":"event","Q120063118":"event","Q120063190":"event","Q120063270":"event","Q120063365":"event","Q120063435":"event","Q120063531":"event","Q120063611":"event","Q120063680":"event","Q120063777":"event","Q120063851":"event","Q120063933":"event","Q120063968":"event","Q120069615":"event","Q120069735":"event","Q120069768":"event","Q120069787":"event","Q120069784":"event","Q120069860":"event","Q120069920":"event","Q120069938":"event","Q120069949":"event","Q120070029":"event","Q120070087":"event","Q120070151":"event","Q120070219":"event","Q120070228":"event","Q120070233":"event","Q120070240":"event","Q120070249":"event","Q120070253":"event","Q120070258":"event","Q120070266":"event","Q120070270":"event","Q120070275":"event","Q120070273":"event","Q120070277":"event","Q120070281":"event","Q120070284":"event","Q120070288":"event","Q120070292":"event","Q120070300":"event","Q120070306":"event","Q120070309":"event","Q120070315":"event","Q120070319":"event","Q120070323":"event","Q120070325":"event","Q120070330":"event","Q120070335":"event","Q120070342":"event","Q120070346":"event","Q120070355":"event","Q120070352":"event","Q120070359":"event","Q120070369":"event","Q120070374":"event","Q120070376":"event","Q120070384":"event","Q120070392":"event","Q120070401":"event","Q120070408":"event","Q120070415":"event","Q120070424":"event","Q120070433":"event","Q120070443":"event","Q120070451":"event","Q120070467":"event","Q120070474":"event","Q120070484":"event","Q120070585":"event","Q120070594":"event","Q120070599":"event","Q120070606":"event","Q120070625":"event","Q120070629":"event","Q120070635":"event","Q120070642":"event","Q120070651":"event","Q120070658":"event","Q120070665":"event","Q120070674":"event","Q120070680":"event","Q120070686":"event","Q120070691":"event","Q120070696":"event","Q120070724":"event","Q120070870":"event","Q120070991":"event","Q120071122":"event","Q120071271":"event","Q120071403":"event","Q120071548":"event","Q120071681":"event","Q120071833":"event","Q120071974":"event","Q120072111":"event","Q120072235":"event","Q120072379":"event","Q120072529":"event","Q120072668":"event","Q120072811":"event","Q120072949":"event","Q120073096":"event","Q120073238":"event","Q120073390":"event","Q120073542":"event","Q120073620":"event","Q120073643":"event","Q120073666":"event","Q120073684":"event","Q120073704":"event","Q120073715":"event","Q120073724":"event","Q120073738":"event","Q120073761":"event","Q120073780":"event","Q120073800":"event","Q120073808":"event","Q120073828":"event","Q120073836":"event","Q120073851":"event","Q120073848":"event","Q120073873":"event","Q120073895":"event","Q120073905":"event","Q120073913":"event","Q120073928":"event","Q120073943":"event","Q120073963":"event","Q120073976":"event","Q120073997":"event","Q120074007":"event","Q120074028":"event","Q120074041":"event","Q120074053":"event","Q120074062":"event","Q120074073":"event","Q120074080":"event","Q120074090":"event","Q120074093":"event","Q120074098":"event","Q120074105":"event","Q120074109":"event","Q120074147":"event","Q120074296":"event","Q120074424":"event","Q120074588":"event","Q120074718":"event","Q120074871":"event","Q120075003":"event","Q120075136":"event","Q120075277":"event","Q120075371":"event","Q120075368":"event","Q120075502":"event","Q120075651":"event","Q120075777":"event","Q120075899":"event","Q120075901":"event","Q120075906":"event","Q120075910":"event","Q120075911":"event","Q120075915":"event","Q120075913":"event","Q120084899":"event","Q120085015":"event","Q120085668":"event","Q120085835":"event","Q120086488":"event","Q120086661":"event","Q120086858":"event","Q120087058":"event","Q120087359":"event","Q120087664":"event","Q120087836":"event","Q120088019":"event","Q120088219":"event","Q120088417":"event","Q120088604":"event","Q120088782":"event","Q120088969":"event","Q120089166":"event","Q120089365":"event","Q120089547":"event","Q120089611":"event","Q120089633":"event","Q120091680":"event","Q120091848":"event","Q120092038":"event","Q120092249":"event","Q120092465":"event","Q120092670":"event","Q120092874":"event","Q120092902":"event","Q120093376":"event","Q120093539":"event","Q120093537":"event","Q120093730":"event","Q120093917":"event","Q120094081":"event","Q120094117":"event","Q120094250":"event","Q120094463":"event","Q120094642":"event","Q120094641":"event","Q120094813":"event","Q120094832":"event","Q120094929":"event","Q120095295":"event","Q120122842":"event","Q120122848":"event","Q120122869":"event","Q120122879":"event","Q120122920":"event","Q120123012":"event","Q120123031":"event","Q120127316":"event","Q120127485":"event","Q120127681":"event","Q120127890":"event","Q120128066":"event","Q120128291":"event","Q120128480":"event","Q120128700":"event","Q120128821":"event","Q120128838":"event","Q120128851":"event","Q120128889":"event","Q120128929":"event","Q120128975":"event","Q120129031":"event","Q120129178":"event","Q120129397":"event","Q120129579":"event","Q120129773":"event","Q120143483":"event","Q120143497":"event","Q120143537":"event","Q120143551":"event","Q120143577":"event","Q120143597":"event","Q120143632":"event","Q120143648":"event","Q120143673":"event","Q120143698":"event","Q120143736":"event","Q120143745":"event","Q120143763":"event","Q120143774":"event","Q120143803":"event","Q120143800":"event","Q120143812":"event","Q120143912":"event","Q120143921":"event","Q120143949":"event","Q120144189":"event","Q120144364":"event","Q120144695":"event","Q120145116":"event","Q120145262":"event","Q120145312":"event","Q120145550":"event","Q120145737":"event","Q120145765":"event","Q120145773":"event","Q120198185":"event","Q120198191":"event","Q120198208":"event","Q120198216":"event","Q120198231":"event","Q120198237":"event","Q120198247":"event","Q120198366":"event","Q120198392":"event","Q120198419":"event","Q120198431":"event","Q120198446":"event","Q120198460":"event","Q120198475":"event","Q120198485":"event","Q120198495":"event","Q120198510":"event","Q120198517":"event","Q120198531":"event","Q120198548":"event","Q120198557":"event","Q120198568":"event","Q120198726":"event","Q120198776":"event","Q120198784":"event","Q120198840":"event","Q120198895":"event","Q120198980":"event","Q120199026":"event","Q120199058":"event","Q120199077":"event","Q120199088":"event","Q120199099":"event","Q120199115":"event","Q120199126":"event","Q120199140":"event","Q120199163":"event","Q120199178":"event","Q120199191":"event","Q120199204":"event","Q120199215":"event","Q120199226":"event","Q120199238":"event","Q120199272":"event","Q120199287":"event","Q120199302":"event","Q120199317":"event","Q120199344":"event","Q120199370":"event","Q120199378":"event","Q120199393":"event","Q120199409":"event","Q120199428":"event","Q120199453":"event","Q120199480":"event","Q120199500":"event","Q120199615":"event","Q120199722":"event","Q120199838":"event","Q120199976":"event","Q120200103":"event","Q120200215":"event","Q120200331":"event","Q120201513":"event","Q120218704":"event","Q120220237":"event","Q120220645":"event","Q120272623":"event","Q120355874":"event","Q120355886":"event","Q120750517":"event","Q120750777":"event","Q120967732":"event","Q121107826":"event","Q121117749":"event","Q121120092":"event","Q121335704":"event","Q121734228":"event","Q121734443":"event","Q121739025":"event","Q121739799":"event","Q122171257":"event","Q122363066":"event","Q122363067":"event","Q122363065":"event","Q122363322":"event","Q122363323":"event","Q122363320":"event","Q122363321":"event","Q122363326":"event","Q122363327":"event","Q122363324":"event","Q122363325":"event","Q122363330":"event","Q122363331":"event","Q122363328":"event","Q122363329":"event","Q122363334":"event","Q122363335":"event","Q122363332":"event","Q122363333":"event","Q122363338":"event","Q122363336":"event","Q122363337":"event","Q122363340":"event","Q122363341":"event","Q122363342":"event","Q122363343":"event","Q122363346":"event","Q122363347":"event","Q122363344":"event","Q122363345":"event","Q122363351":"event","Q122363348":"event","Q122363349":"event","Q122363354":"event","Q122363355":"event","Q122363352":"event","Q122363353":"event","Q122363359":"event","Q122363356":"event","Q122363357":"event","Q122363360":"event","Q122459626":"event","Q122459751":"event","Q122587160":"event","Q122938702":"event","Q122938720":"event","Q122938748":"event","Q122938769":"event","Q123134905":"event","Q123135253":"event","Q123218810":"event","Q123218811":"event","Q123218809":"event","Q123218814":"event","Q123218815":"event","Q123218812":"event","Q123218813":"event","Q123218816":"event","Q123218817":"event","Q123218834":"event","Q123218835":"event","Q123218838":"event","Q123218839":"event","Q123218836":"event","Q123218837":"event","Q123218842":"event","Q123218843":"event","Q123218840":"event","Q123218841":"event","Q123218846":"event","Q123218847":"event","Q123218844":"event","Q123218845":"event","Q123218848":"event","Q123218849":"event","Q123284313":"event","Q123284344":"event","Q123284558":"event","Q123286092":"event","Q123523688":"event","Q123524128":"event","Q123524144":"event","Q123524334":"event","Q123524463":"event","Q123579450":"event","Q123859654":"event","Q123859696":"event","Q123859697":"event","Q124091522":"event","Q124091591":"event","Q124091697":"event","Q124091787":"event","Q124101078":"event","Q124101079":"event","Q124101077":"event","Q124101082":"event","Q124101083":"event","Q124101080":"event","Q124101081":"event","Q124101086":"event","Q124101087":"event","Q124101084":"event","Q124101085":"event","Q124101090":"event","Q124101091":"event","Q124101088":"event","Q124101089":"event","Q124101094":"event","Q124101095":"event","Q124101092":"event","Q124101093":"event","Q124101098":"event","Q124101099":"event","Q124101102":"event","Q124101103":"event","Q124101100":"event","Q124101101":"event","Q124101106":"event","Q124101107":"event","Q124101104":"event","Q124101105":"event","Q124101110":"event","Q124101108":"event","Q124101109":"event","Q124101111":"event","Q124101114":"event","Q124101115":"event","Q124101112":"event","Q124101113":"event","Q124101118":"event","Q124101116":"event","Q124101117":"event","Q124101134":"event","Q124101135":"event","Q124101138":"event","Q124101139":"event","Q124101136":"event","Q124101137":"event","Q124101142":"event","Q124101140":"event","Q124101141":"event","Q124101146":"event","Q124101147":"event","Q124101144":"event","Q124101145":"event","Q124101150":"event","Q124101151":"event","Q124101148":"event","Q124101149":"event","Q124101154":"event","Q124101152":"event","Q124101153":"event","Q124101158":"event","Q124101157":"event","Q124101162":"event","Q124101163":"event","Q124101160":"event","Q124101161":"event","Q124101166":"event","Q124101167":"event","Q124101164":"event","Q124101170":"event","Q124101171":"event","Q124101168":"event","Q124101169":"event","Q124101175":"event","Q124101172":"event","Q124101173":"event","Q124101179":"event","Q124101176":"event","Q124101177":"event","Q124101182":"event","Q124101183":"event","Q124101180":"event","Q124101181":"event","Q124101187":"event","Q124101190":"event","Q124101191":"event","Q124101189":"event","Q124101194":"event","Q124101192":"event","Q124101193":"event","Q124101198":"event","Q124101199":"event","Q124101196":"event","Q124101197":"event","Q124101202":"event","Q124101200":"event","Q124101201":"event","Q124130816":"event","Q124130829":"event","Q124143072":"event","Q124167838":"event","Q124167916":"event","Q124215003":"event","Q124215011":"event","Q124215024":"event","Q124215028":"event","Q124215040":"event","Q124215046":"event","Q124215054":"event","Q124215060":"event","Q124215073":"event","Q124215082":"event","Q124215089":"event","Q124215108":"event","Q124215126":"event","Q124215134":"event","Q124215148":"event","Q124215160":"event","Q124215170":"event","Q124215184":"event","Q124215224":"event","Q124215232":"event","Q124215243":"event","Q124215251":"event","Q124215259":"event","Q124215263":"event","Q124215269":"event","Q124215274":"event","Q124215290":"event","Q124215307":"event","Q124215316":"event","Q124215323":"event","Q118745430":"event","Q118745431":"event","Q118745432":"event","Q118745782":"event","Q118745783":"event","Q118745780":"event","Q118745781":"event","Q118745786":"event","Q118745787":"event","Q118745784":"event","Q118745785":"event","Q118745790":"event","Q118745791":"event","Q118745788":"event","Q118745792":"event","Q118745793":"event","Q118746623":"event","Q118746624":"event","Q118746625":"event","Q118954968":"event","Q118954988":"event","Q119153965":"event","Q119412596":"event","Q120004465":"event","Q120004524":"event","Q120004583":"event","Q120004642":"event","Q120004687":"event","Q120004762":"event","Q120004823":"event","Q120004896":"event","Q120004988":"event","Q120005070":"event","Q120005136":"event","Q120005202":"event","Q120005263":"event","Q120005391":"event","Q120005491":"event","Q120005548":"event","Q120005610":"event","Q120005701":"event","Q120005780":"event","Q120005852":"event","Q120005912":"event","Q120005984":"event","Q120006089":"event","Q120006154":"event","Q120006218":"event","Q120006346":"event","Q120006447":"event","Q120006530":"event","Q120006595":"event","Q120006667":"event","Q120006748":"event","Q120006835":"event","Q120006903":"event","Q120006977":"event","Q120007060":"event","Q120007129":"event","Q120007215":"event","Q120007284":"event","Q120007371":"event","Q120007460":"event","Q120007564":"event","Q120007709":"event","Q120007868":"event","Q120008010":"event","Q120008162":"event","Q120008275":"event","Q120008406":"event","Q120008570":"event","Q120008741":"event","Q120008871":"event","Q120008999":"event","Q120009172":"event","Q120009339":"event","Q120009439":"event","Q120009521":"event","Q120009616":"event","Q120009698":"event","Q120009774":"event","Q120009837":"event","Q120009926":"event","Q120010011":"event","Q120010080":"event","Q120010150":"event","Q120010230":"event","Q120030538":"event","Q120030573":"event","Q120030675":"event","Q120030757":"event","Q120030799":"event","Q120030849":"event","Q120030894":"event","Q120030933":"event","Q120030981":"event","Q120031036":"event","Q120031091":"event","Q120031139":"event","Q120031188":"event","Q124215337":"event","Q124215350":"event","Q124215363":"event","Q124215370":"event","Q124215375":"event","Q124215384":"event","Q124215405":"event","Q124215415":"event","Q124215439":"event","Q124215446":"event","Q124215457":"event","Q124215464":"event","Q124215471":"event","Q124215476":"event","Q124215489":"event","Q124215495":"event","Q124215503":"event","Q124215510":"event","Q124215531":"event","Q124215541":"event","Q124215553":"event","Q124215568":"event","Q124215577":"event","Q124215582":"event","Q124215591":"event","Q124215601":"event","Q124215605":"event","Q124215641":"event","Q124215652":"event","Q124215659":"event","Q124215684":"event","Q124215710":"event","Q124215726":"event","Q124215738":"event","Q124215744":"event","Q124215752":"event","Q124215758":"event","Q124215768":"event","Q124215775":"event","Q124215782":"event","Q124215790":"event","Q124215800":"event","Q124215806":"event","Q124215815":"event","Q124215824":"event","Q124215838":"event","Q124215843":"event","Q124215849":"event","Q124215857":"event","Q124215868":"event","Q124215873":"event","Q124215881":"event","Q124215885":"event","Q124215892":"event","Q124215902":"event","Q124215908":"event","Q124215913":"event","Q124215923":"event","Q124215930":"event","Q124215936":"event","Q124215942":"event","Q124215951":"event","Q124215962":"event","Q124216003":"event","Q124216013":"event","Q124216023":"event","Q124216038":"event","Q124216053":"event","Q124216059":"event","Q124216070":"event","Q124216075":"event","Q124216091":"event","Q124216102":"event","Q124216111":"event","Q124216113":"event","Q124216124":"event","Q124216144":"event","Q124216170":"event","Q124216176":"event","Q124216183":"event","Q124216203":"event","Q124216206":"event","Q124216215":"event","Q124216218":"event","Q124216217":"event","Q124216221":"event","Q124216224":"event","Q124216231":"event","Q124216259":"event","Q124216286":"event","Q124216292":"event","Q124216298":"event","Q124216302":"event","Q124216300":"event","Q124216305":"event","Q124216310":"event","Q124216308":"event","Q124216314":"event","Q124216316":"event","Q124216328":"event","Q124216351":"event","Q124216383":"event","Q124216391":"event","Q124216389":"event","Q124216393":"event","Q124216406":"event","Q124216404":"event","Q124216411":"event","Q124216412":"event","Q124216423":"event","Q124216420":"event","Q124216430":"event","Q124216434":"event","Q124216454":"event","Q124216458":"event","Q124216456":"event","Q124216463":"event","Q124216465":"event","Q124216470":"event","Q124216469":"event","Q124216473":"event","Q124216481":"event","Q124216486":"event","Q124216490":"event","Q124216532":"event","Q124216543":"event","Q124216552":"event","Q124216561":"event","Q124216566":"event","Q124216574":"event","Q124216594":"event","Q124216600":"event","Q124216604":"event","Q124216609":"event","Q124216614":"event","Q124216622":"event","Q124216626":"event","Q124216624":"event","Q124216628":"event","Q124216632":"event","Q124216637":"event","Q124216640":"event","Q124216647":"event","Q124216644":"event","Q124216655":"event","Q124216659":"event","Q124216666":"event","Q124216670":"event","Q124216674":"event","Q124216690":"event","Q124216705":"event","Q124216710":"event","Q124216722":"event","Q124216730":"event","Q124216737":"event","Q124216742":"event","Q124216751":"event","Q124216748":"event","Q124216756":"event","Q124216760":"event","Q124216766":"event","Q124216772":"event","Q124216813":"event","Q124216831":"event","Q124216835":"event","Q124216844":"event","Q124216854":"event","Q124216860":"event","Q124216868":"event","Q124216874":"event","Q124216887":"event","Q124216896":"event","Q124216903":"event","Q124216911":"event","Q124216955":"event","Q124216967":"event","Q124216990":"event","Q124217006":"event","Q124217022":"event","Q124217032":"event","Q124217053":"event","Q124217062":"event","Q124217080":"event","Q124217089":"event","Q124217108":"event","Q124217117":"event","Q124217125":"event","Q124217133":"event","Q124217153":"event","Q124217167":"event","Q124217179":"event","Q124217203":"event","Q124217216":"event","Q124217224":"event","Q124217243":"event","Q124217249":"event","Q124217257":"event","Q124217286":"event","Q124217309":"event","Q124217324":"event","Q124217335":"event","Q124217349":"event","Q124217370":"event","Q124217384":"event","Q124217395":"event","Q124217406":"event","Q124217430":"event","Q124217441":"event","Q124217453":"event","Q124217465":"event","Q124217480":"event","Q124217492":"event","Q124217501":"event","Q124217514":"event","Q124217537":"event","Q124217555":"event","Q124217580":"event","Q124217589":"event","Q124217597":"event","Q124217602":"event","Q124217616":"event","Q124217621":"event","Q124217629":"event","Q124217643":"event","Q124217648":"event","Q124217669":"event","Q124217679":"event","Q124217689":"event","Q124217703":"event","Q124217726":"event","Q124217736":"event","Q124217749":"event","Q124217763":"event","Q124217782":"event","Q124217788":"event","Q124217800":"event","Q124217810":"event","Q124217822":"event","Q124217828":"event","Q124217839":"event","Q124217866":"event","Q124217888":"event","Q124217900":"event","Q124217915":"event","Q124217922":"event","Q124217928":"event","Q124217932":"event","Q124217938":"event","Q124217936":"event","Q124217944":"event","Q124217966":"event","Q124217998":"event","Q124218003":"event","Q124218006":"event","Q124218014":"event","Q124218022":"event","Q124218032":"event","Q124218039":"event","Q124218057":"event","Q124218066":"event","Q124218075":"event","Q124218082":"event","Q124218089":"event","Q124218107":"event","Q124247303":"event","Q124289100":"event","Q124289105":"event","Q124308326":"event","Q124308327":"event","Q124308330":"event","Q124308331":"event","Q124308328":"event","Q124308329":"event","Q124308334":"event","Q124308335":"event","Q124308332":"event","Q124308333":"event","Q124308338":"event","Q124308339":"event","Q124308336":"event","Q124308337":"event","Q124308342":"event","Q124308343":"event","Q124308340":"event","Q124308341":"event","Q124308346":"event","Q124308347":"event","Q124308344":"event","Q124308345":"event","Q124308350":"event","Q124308351":"event","Q124308348":"event","Q124308349":"event","Q124308354":"event","Q124308355":"event","Q124308352":"event","Q124308353":"event","Q124308358":"event","Q124308356":"event","Q124308357":"event","Q124308359":"event","Q124308362":"event","Q124308363":"event","Q124308360":"event","Q124308361":"event","Q124308366":"event","Q124308367":"event","Q124308364":"event","Q124308365":"event","Q124308368":"event","Q124308546":"event","Q124308547":"event","Q124308558":"event","Q124308559":"event","Q124308556":"event","Q124308557":"event","Q124308562":"event","Q124308563":"event","Q124308560":"event","Q124308561":"event","Q124308566":"event","Q124308567":"event","Q124308564":"event","Q124308565":"event","Q124308570":"event","Q124308571":"event","Q124308568":"event","Q124308569":"event","Q124308574":"event","Q124308572":"event","Q124308573":"event","Q124308578":"event","Q124308579":"event","Q124308576":"event","Q124308577":"event","Q124308582":"event","Q124308583":"event","Q124308580":"event","Q124308581":"event","Q124308586":"event","Q124308587":"event","Q124308584":"event","Q124308585":"event","Q124308590":"event","Q124308591":"event","Q124308588":"event","Q124308589":"event","Q124308594":"event","Q124308595":"event","Q124308592":"event","Q124308593":"event","Q124308598":"event","Q124308599":"event","Q124308596":"event","Q124308597":"event","Q124308602":"event","Q124308603":"event","Q124308600":"event","Q124308601":"event","Q124308606":"event","Q124308607":"event","Q124308604":"event","Q124308605":"event","Q124308610":"event","Q124308611":"event","Q124308608":"event","Q124308609":"event","Q124308614":"event","Q124308615":"event","Q124308612":"event","Q124308613":"event","Q124308618":"event","Q124308619":"event","Q124308616":"event","Q124308617":"event","Q124308622":"event","Q124308623":"event","Q124308620":"event","Q124308621":"event","Q124308626":"event","Q124308627":"event","Q124308624":"event","Q124308625":"event","Q124308630":"event","Q124308631":"event","Q124308628":"event","Q124308629":"event","Q124308634":"event","Q124308635":"event","Q124308632":"event","Q124308633":"event","Q124308638":"event","Q124308639":"event","Q124308636":"event","Q124308637":"event","Q124308642":"event","Q124308643":"event","Q124308640":"event","Q124308641":"event","Q124308644":"event","Q124308646":"event","Q124308647":"event","Q124308650":"event","Q124308651":"event","Q124308648":"event","Q124308649":"event","Q124308654":"event","Q124308655":"event","Q124308652":"event","Q124308653":"event","Q124308658":"event","Q124308659":"event","Q124308656":"event","Q124308657":"event","Q124308660":"event","Q124308661":"event","Q124331459":"event","Q124331472":"event","Q124331479":"event","Q124331489":"event","Q124331713":"event","Q124331720":"event","Q124331726":"event","Q124331729":"event","Q124331740":"event","Q124331745":"event","Q124331749":"event","Q124331753":"event","Q124331771":"event","Q124331781":"event","Q124331787":"event","Q124331785":"event","Q124392817":"event","Q124392920":"event","Q124428124":"event","Q124428136":"event","Q124455386":"event","Q124455401":"event","Q124455410":"event","Q124455426":"event","Q124569275":"event","Q124569294":"event","Q124569315":"event","Q124587447":"event","Q124587633":"event","Q124587985":"event","Q124588237":"event","Q124589471":"event","Q124589607":"event","Q124654339":"event","Q124665054":"event","Q124665055":"event","Q124665058":"event","Q124665059":"event","Q124665056":"event","Q124665057":"event","Q124665062":"event","Q124665063":"event","Q124665060":"event","Q124665061":"event","Q124665067":"event","Q124665064":"event","Q124665065":"event","Q124665071":"event","Q124665068":"event","Q124665069":"event","Q124665074":"event","Q124665075":"event","Q124665072":"event","Q124665073":"event","Q124665078":"event","Q124665079":"event","Q124665076":"event","Q124665077":"event","Q124665082":"event","Q124665083":"event","Q124665080":"event","Q124665081":"event","Q124665086":"event","Q124665087":"event","Q124665084":"event","Q124665085":"event","Q124665090":"event","Q124665088":"event","Q124665089":"event","Q124665094":"event","Q124665095":"event","Q124665092":"event","Q124665093":"event","Q124665098":"event","Q124665099":"event","Q124665096":"event","Q124665097":"event","Q124665102":"event","Q124665100":"event","Q124665101":"event","Q124665106":"event","Q124665107":"event","Q124665104":"event","Q124665105":"event","Q124665110":"event","Q124665108":"event","Q124665109":"event","Q124665114":"event","Q124665115":"event","Q124665112":"event","Q124665113":"event","Q124665119":"event","Q124665116":"event","Q124665117":"event","Q124665122":"event","Q124665123":"event","Q124665120":"event","Q124665121":"event","Q124665126":"event","Q124665127":"event","Q124665124":"event","Q124665125":"event","Q124665131":"event","Q124665128":"event","Q124665129":"event","Q124665134":"event","Q124665135":"event","Q124665132":"event","Q124665133":"event","Q124665138":"event","Q124665137":"event","Q124665142":"event","Q124665143":"event","Q124665140":"event","Q124665141":"event","Q124665146":"event","Q124665147":"event","Q124665144":"event","Q124665145":"event","Q124667091":"event","Q124667214":"event","Q124667215":"event","Q124667218":"event","Q124667219":"event","Q124667216":"event","Q124667217":"event","Q124667222":"event","Q124667223":"event","Q124667220":"event","Q124667221":"event","Q124667226":"event","Q124667227":"event","Q124667224":"event","Q124667225":"event","Q124667230":"event","Q124667231":"event","Q124667228":"event","Q124667229":"event","Q124667234":"event","Q124667235":"event","Q124667232":"event","Q124667233":"event","Q124667238":"event","Q124667236":"event","Q124667237":"event","Q124667715":"event","Q124667718":"event","Q124667719":"event","Q124667716":"event","Q124667717":"event","Q124667722":"event","Q124667723":"event","Q124667720":"event","Q124667721":"event","Q124667726":"event","Q124667727":"event","Q124667724":"event","Q124667725":"event","Q124667730":"event","Q124667731":"event","Q124667728":"event","Q124667729":"event","Q124667734":"event","Q124667735":"event","Q124667732":"event","Q124667733":"event","Q124667738":"event","Q124667739":"event","Q124667736":"event","Q124667737":"event","Q124667742":"event","Q124667743":"event","Q124667740":"event","Q124667746":"event","Q124667747":"event","Q124667744":"event","Q124667745":"event","Q124667750":"event","Q124667751":"event","Q124667748":"event","Q124667749":"event","Q124667754":"event","Q124667752":"event","Q124667753":"event","Q124667755":"event","Q124667758":"event","Q124667759":"event","Q124667756":"event","Q124667757":"event","Q124667762":"event","Q124667763":"event","Q124667760":"event","Q124667761":"event","Q124667766":"event","Q124667767":"event","Q124667764":"event","Q124667765":"event","Q124667770":"event","Q124667771":"event","Q124667768":"event","Q124667769":"event","Q124667774":"event","Q124667775":"event","Q124667772":"event","Q124667773":"event","Q124667778":"event","Q124667779":"event","Q124667776":"event","Q124667777":"event","Q124667782":"event","Q124667783":"event","Q124667780":"event","Q124667781":"event","Q124667786":"event","Q124667787":"event","Q124667784":"event","Q124667785":"event","Q124667790":"event","Q124667791":"event","Q124667788":"event","Q124667789":"event","Q124667794":"event","Q124667795":"event","Q124667792":"event","Q124667793":"event","Q124667798":"event","Q124667799":"event","Q124667796":"event","Q124667797":"event","Q124667802":"event","Q124667803":"event","Q124667800":"event","Q124667801":"event","Q124667806":"event","Q124667807":"event","Q124667804":"event","Q124667805":"event","Q124667810":"event","Q124667811":"event","Q124667808":"event","Q124667809":"event","Q124667814":"event","Q124667815":"event","Q124667812":"event","Q124667813":"event","Q124667818":"event","Q124667819":"event","Q124667816":"event","Q124667817":"event","Q124667822":"event","Q124667823":"event","Q124667820":"event","Q124667821":"event","Q124667826":"event","Q124667827":"event","Q124667824":"event","Q124667825":"event","Q124667830":"event","Q124667828":"event","Q124667829":"event","Q124667834":"event","Q124667835":"event","Q124667832":"event","Q124667833":"event","Q124667838":"event","Q124667836":"event","Q124667837":"event","Q124685518":"event","Q124685519":"event","Q124688794":"event","Q124688795":"event","Q124688799":"event","Q124688797":"event","Q124688803":"event","Q124688801":"event","Q124688807":"event","Q124688805":"event","Q124688810":"event","Q124688808":"event","Q124688814":"event","Q124688812":"event","Q124688819":"event","Q124688816":"event","Q124688822":"event","Q124688826":"event","Q124688827":"event","Q124688824":"event","Q124688831":"event","Q124688828":"event","Q124688835":"event","Q124688833":"event","Q124688839":"event","Q124688837":"event","Q124688842":"event","Q124688840":"event","Q124688846":"event","Q124688844":"event","Q124688848":"event","Q124688849":"event","Q124688855":"event","Q124688852":"event","Q124688853":"event","Q124688859":"event","Q124688856":"event","Q124688857":"event","Q124688863":"event","Q124688861":"event","Q124688866":"event","Q124688867":"event","Q124688871":"event","Q124688869":"event","Q124688876":"event","Q124688883":"event","Q124688880":"event","Q124688886":"event","Q124688891":"event","Q124688889":"event","Q124688894":"event","Q124688898":"event","Q124688903":"event","Q124688901":"event","Q124688906":"event","Q124688911":"event","Q124688908":"event","Q124688914":"event","Q124688917":"event","Q124688923":"event","Q124688920":"event","Q124688926":"event","Q124688931":"event","Q124688928":"event","Q124688935":"event","Q124688933":"event","Q124688939":"event","Q124688942":"event","Q124688945":"event","Q124688951":"event","Q124688948":"event","Q124688954":"event","Q124688959":"event","Q124688957":"event","Q124688962":"event","Q124688966":"event","Q124688970":"event","Q124688968":"event","Q124688975":"event","Q124688972":"event","Q124688977":"event","Q124688982":"event","Q124688980":"event","Q124688985":"event","Q124688991":"event","Q124688988":"event","Q124688994":"event","Q124688997":"event","Q124689003":"event","Q124689000":"event","Q124689005":"event","Q124689010":"event","Q124689008":"event","Q124689014":"event","Q124689012":"event","Q124689018":"event","Q124689016":"event","Q124689022":"event","Q124689020":"event","Q124689026":"event","Q124689024":"event","Q124689031":"event","Q124689029":"event","Q124689034":"event","Q124689037":"event","Q124689043":"event","Q124689040":"event","Q124689046":"event","Q124689051":"event","Q124689054":"event","Q124689057":"event","Q124689063":"event","Q124689060":"event","Q124689066":"event","Q124689071":"event","Q124689069":"event","Q124690411":"event","Q124690414":"event","Q124690415":"event","Q124690412":"event","Q124690413":"event","Q124690418":"event","Q124690419":"event","Q124690416":"event","Q124690417":"event","Q124690422":"event","Q124690423":"event","Q124690420":"event","Q124690421":"event","Q124690426":"event","Q124690427":"event","Q124690424":"event","Q124690425":"event","Q124690430":"event","Q124690431":"event","Q124690428":"event","Q124690429":"event","Q124690434":"event","Q124690435":"event","Q124690432":"event","Q124690433":"event","Q124690436":"event","Q124690530":"event","Q124690531":"event","Q124690529":"event","Q124690535":"event","Q124690532":"event","Q124690533":"event","Q124690539":"event","Q124690536":"event","Q124690537":"event","Q124690542":"event","Q124690543":"event","Q124690540":"event","Q124690541":"event","Q124690546":"event","Q124690547":"event","Q124690544":"event","Q124690545":"event","Q124690550":"event","Q124690551":"event","Q124690548":"event","Q124690549":"event","Q124690554":"event","Q124690555":"event","Q124690552":"event","Q124690553":"event","Q124690559":"event","Q124690556":"event","Q124690557":"event","Q124690562":"event","Q124690563":"event","Q124690560":"event","Q124690561":"event","Q124690566":"event","Q124690567":"event","Q124690564":"event","Q124690565":"event","Q124690570":"event","Q124690568":"event","Q124690574":"event","Q124690575":"event","Q124690572":"event","Q124690573":"event","Q124690578":"event","Q124690579":"event","Q124690576":"event","Q124690577":"event","Q124690583":"event","Q124690580":"event","Q124690581":"event","Q124690586":"event","Q124690587":"event","Q124690584":"event","Q124690585":"event","Q124690590":"event","Q124690591":"event","Q124690588":"event","Q124690589":"event","Q124690594":"event","Q124690592":"event","Q124690593":"event","Q124690598":"event","Q124690599":"event","Q124690596":"event","Q124690597":"event","Q124690602":"event","Q124690603":"event","Q124690600":"event","Q124690601":"event","Q124690606":"event","Q124690607":"event","Q124690604":"event","Q124690605":"event","Q124690610":"event","Q124690608":"event","Q124690609":"event","Q124690611":"event","Q124690614":"event","Q124690615":"event","Q124690613":"event","Q124690618":"event","Q124690619":"event","Q124690616":"event","Q124690617":"event","Q124690622":"event","Q124690623":"event","Q124690620":"event","Q124690621":"event","Q124690626":"event","Q124690627":"event","Q124690624":"event","Q124690625":"event","Q124690630":"event","Q124690631":"event","Q124690628":"event","Q124690629":"event","Q124690634":"event","Q124690635":"event","Q124690632":"event","Q124690633":"event","Q124690638":"event","Q124690639":"event","Q124690636":"event","Q124690637":"event","Q124690642":"event","Q124690643":"event","Q124690641":"event","Q124690646":"event","Q124690647":"event","Q124690644":"event","Q124690645":"event","Q124690650":"event","Q124690651":"event","Q124690648":"event","Q124690649":"event","Q124690654":"event","Q124690655":"event","Q124690652":"event","Q124690658":"event","Q124690659":"event","Q124690656":"event","Q124690660":"event","Q124692035":"event","Q124692036":"event","Q124692146":"event","Q124692147":"event","Q124692144":"event","Q124692145":"event","Q124692150":"event","Q124692151":"event","Q124692148":"event","Q124692149":"event","Q124692152":"event","Q124692153":"event","Q124692206":"event","Q124692207":"event","Q124692205":"event","Q124692210":"event","Q124692211":"event","Q124692208":"event","Q124692209":"event","Q124692214":"event","Q124692215":"event","Q124692212":"event","Q124692213":"event","Q124692219":"event","Q124692216":"event","Q124692217":"event","Q124692222":"event","Q124692220":"event","Q124692221":"event","Q124745396":"event","Q124745397":"event","Q124745406":"event","Q124745407":"event","Q124745405":"event","Q124745410":"event","Q124745411":"event","Q124745408":"event","Q124745409":"event","Q124745414":"event","Q124745415":"event","Q124745412":"event","Q124745413":"event","Q124745418":"event","Q124745416":"event","Q124745417":"event","Q124745422":"event","Q124745423":"event","Q124745420":"event","Q124745421":"event","Q124745426":"event","Q124745427":"event","Q124745424":"event","Q124745425":"event","Q124745428":"event","Q124745430":"event","Q124745431":"event","Q124745429":"event","Q124745434":"event","Q124745435":"event","Q124745432":"event","Q124745433":"event","Q124745438":"event","Q124745439":"event","Q124745436":"event","Q124745437":"event","Q124745442":"event","Q124745443":"event","Q124745441":"event","Q124745444":"event","Q124745506":"event","Q124745507":"event","Q124745504":"event","Q124745505":"event","Q124745510":"event","Q124745511":"event","Q124745508":"event","Q124745514":"event","Q124745515":"event","Q124745512":"event","Q124745518":"event","Q124745519":"event","Q124745516":"event","Q124745517":"event","Q124745522":"event","Q124745523":"event","Q124745520":"event","Q124745521":"event","Q124745526":"event","Q124745527":"event","Q124745524":"event","Q124745525":"event","Q124745530":"event","Q124745531":"event","Q124745528":"event","Q124745529":"event","Q124745534":"event","Q124745535":"event","Q124745532":"event","Q124745533":"event","Q124745538":"event","Q124745539":"event","Q124745536":"event","Q124745537":"event","Q124745543":"event","Q124745541":"event","Q124745546":"event","Q124745544":"event","Q124806403":"event","Q124807950":"event","Q124807951":"event","Q124807987":"event","Q124807990":"event","Q124807988":"event","Q124807989":"event","Q124807994":"event","Q124807995":"event","Q124807992":"event","Q124807993":"event","Q124807998":"event","Q124807996":"event","Q124808002":"event","Q124808003":"event","Q124808001":"event","Q124808006":"event","Q124808007":"event","Q124808004":"event","Q124808005":"event","Q124808010":"event","Q124808011":"event","Q124808008":"event","Q124808014":"event","Q124808015":"event","Q124808012":"event","Q124808018":"event","Q124808016":"event","Q124808017":"event","Q124808022":"event","Q124808023":"event","Q124808020":"event","Q124808026":"event","Q124808027":"event","Q124808024":"event","Q124808025":"event","Q124808030":"event","Q124808031":"event","Q124808028":"event","Q124808029":"event","Q124808034":"event","Q124808032":"event","Q124808039":"event","Q124808036":"event","Q124808037":"event","Q124808040":"event","Q124808041":"event","Q104771478":"event","Q108861450":"event","Q123353696":"event","Q124808042":"event","Q124808043":"event","Q124808046":"event","Q124808047":"event","Q124808044":"event","Q124808045":"event","Q124808050":"event","Q124808049":"event","Q124808054":"event","Q124808055":"event","Q124808052":"event","Q124808053":"event","Q124808094":"event","Q124808095":"event","Q124808093":"event","Q124808098":"event","Q124808099":"event","Q124808096":"event","Q124808102":"event","Q124808103":"event","Q124808100":"event","Q124808101":"event","Q124808107":"event","Q124808104":"event","Q124808105":"event","Q124808110":"event","Q124808111":"event","Q124808108":"event","Q124808109":"event","Q124808114":"event","Q124808115":"event","Q124808112":"event","Q124808113":"event","Q124808118":"event","Q124808119":"event","Q124808116":"event","Q124808117":"event","Q124808122":"event","Q124808123":"event","Q124808120":"event","Q124808121":"event","Q124808126":"event","Q124808124":"event","Q124808125":"event","Q124808131":"event","Q124808128":"event","Q124808129":"event","Q124808134":"event","Q124808132":"event","Q124808139":"event","Q124808136":"event","Q124808137":"event","Q124808143":"event","Q124808140":"event","Q124808144":"event","Q124808150":"event","Q124808148":"event","Q124808154":"event","Q124808152":"event","Q124808159":"event","Q124808156":"event","Q124808157":"event","Q124808163":"event","Q124808160":"event","Q124808161":"event","Q124846390":"event","Q124846477":"event","Q124846549":"event","Q124846598":"event","Q124846673":"event","Q124846795":"event","Q124846861":"event","Q124846964":"event","Q1485307":"event","Q2568422":"event","Q2585212":"event","Q2633735":"event","Q2690707":"event","Q3496797":"event","Q3496803":"event","Q3556429":"event","Q3563383":"event","Q3563436":"event","Q3563446":"event","Q3566196":"event","Q4724094":"event","Q28502259":"software","Q20153194":"event","Q20948997":"event","Q23058296":"event","Q61910908":"event","Q65057098":"event","Q106712577":"report","Q108883056":"report","Q84081457":"event","Q91399957":"event","Q91399971":"event","Q103982908":"event","Q104129401":"event","Q104130706":"event","Q104145277":"event","Q104145314":"event","Q104145451":"event","Q104145583":"event","Q104165630":"event","Q104165740":"event","Q104165898":"event","Q113232044":"event","Q508838":"event","Q1110856":"event","Q1637189":"event","Q3614690":"event","Q7455897":"event","Q21856726":"event","Q22969620":"event","Q23005628":"event","Q23015336":"event","Q23015479":"event","Q23306987":"event","Q23471102":"event","Q24068707":"event","Q24278787":"event","Q26143122":"event","Q26143413":"event","Q26266059":"event","Q26266060":"event","Q26454139":"event","Q26703526":"event","Q26849092":"event","Q27480997":"event","Q27481015":"event","Q27481022":"event","Q27481045":"event","Q27481057":"event","Q27481896":"event","Q27516394":"event","Q27538382":"event","Q27538420":"event","Q27538455":"event","Q27538461":"event","Q27555275":"event","Q27555299":"event","Q27555311":"event","Q27555353":"event","Q27556018":"event","Q27556044":"event","Q41955488":"event","Q41955755":"event","Q42052367":"event","Q42052559":"event","Q42052673":"event","Q42052792":"event","Q42052959":"event","Q42053105":"event","Q42116865":"event","Q42116955":"event","Q42398578":"event","Q42398839":"event","Q42399125":"event","Q42399163":"event","Q42402377":"event","Q42404189":"event","Q55741302":"event","Q55743607":"event","Q57277508":"event","Q57277512":"event","Q57277516":"event","Q57277520":"event","Q57277525":"event","Q57277533":"event","Q57277539":"event","Q57277545":"event","Q57277583":"event","Q57277588":"event","Q57277592":"event","Q57277603":"event","Q57277617":"event","Q57277825":"event","Q57277860":"event","Q65956705":"event","Q78489637":"event","Q78661075":"event","Q78661264":"event","Q78661408":"event","Q78661480":"event","Q78661713":"event","Q78661983":"event","Q78663198":"event","Q78663445":"event","Q79137881":"event","Q79137983":"event","Q79138012":"event","Q79138405":"event","Q79138429":"event","Q79138700":"event","Q96053083":"event","Q96053132":"event","Q104165946":"event","Q104166487":"event","Q104167356":"event","Q104167542":"event","Q104176125":"event","Q104176730":"event","Q104176784":"event","Q104176809":"event","Q104176880":"event","Q104176930":"event","Q104176968":"event","Q104177014":"event","Q104622294":"event","Q107565335":"event","Q110381925":"event","Q110765449":"event","Q110769371":"event","Q110769418":"event","Q110769452":"event","Q110769471":"event","Q110769468":"event","Q110773413":"event","Q110773486":"event","Q110773516":"event","Q110773591":"event","Q110773634":"event","Q110774005":"event","Q110774085":"event","Q110774148":"event","Q110774736":"event","Q110774751":"event","Q110774870":"event","Q110775428":"event","Q114006714":"event","Q115443011":"event","Q116297669":"event","Q116302599":"event","Q116303392":"event","Q116303407":"event","Q116303411":"event","Q116303432":"event","Q116303609":"event","Q116303680":"event","Q116303708":"event","Q116303760":"event","Q116312240":"event","Q116313009":"event","Q116313022":"event","Q116313069":"event","Q116313493":"event","Q123815780":"event","Q123816544":"event","Q123999057":"event","Q123999104":"event","Q123999126":"event","Q123999146":"event","Q124008023":"event","Q124008282":"event","Q124008592":"event","Q124008916":"event","Q124009222":"event","Q124009598":"event","Q124010039":"event","Q124010407":"event","Q124016970":"event","Q124017085":"event","Q1542952":"event","Q23042007":"event","Q23662651":"event","Q24025254":"event","Q24031534":"event","Q27538481":"event","Q27555212":"event","Q27555285":"event","Q27555293":"event","Q27556011":"event","Q27556034":"event","Q42117028":"event","Q42117133":"event","Q42117214":"event","Q42158370":"event","Q42158490":"event","Q42401836":"event","Q42404082":"event","Q42404137":"event","Q57277547":"event","Q57277557":"event","Q57277562":"event","Q57277570":"event","Q57277577":"event","Q57277596":"event","Q57277611":"event","Q57277615":"event","Q78485549":"event","Q78662407":"event","Q78663025":"event","Q78663418":"event","Q78663583":"event","Q78663671":"event","Q101426092":"event","Q110774449":"event","Q110774778":"event","Q110774902":"event","Q110774961":"event","Q110775370":"event","Q110775400":"event","Q110775666":"event","Q111732273":"event","Q113164755":"event","Q113514944":"event","Q116203516":"event","Q116282971":"event","Q116302534":"event","Q116303847":"event","Q116303948":"event","Q116304081":"event","Q116304222":"event","Q116312787":"event","Q116312820":"event","Q116313088":"event","Q116313212":"event","Q116313425":"event","Q116458529":"event","Q120500534":"event","Q123425723":"event","Q123784809":"event","Q123999041":"event","Q123999074":"event","Q124010705":"event","Q124011117":"event","Q124011526":"event","Q124011771":"event","Q124012053":"event","Q124016998":"event","Q124017011":"event","Q124017031":"event","Q124040414":"event","Q160683":"event","Q326558":"event","Q478174":"event","Q523370":"event","Q585542":"event","Q668653":"event","Q681108":"event","Q781338":"event","Q965337":"event","Q1573104":"event","Q2074899":"event","Q2458032":"event","Q2462495":"event","Q3124842":"event","Q3257370":"event","Q3365225":"event","Q3533386":"event","Q3696178":"event","Q3768819":"event","Q3774383":"event","Q3775279":"event","Q3820849":"event","Q3883590":"event","Q3999210":"event","Q3999208":"event","Q4005965":"event","Q4606555":"event","Q4611712":"event","Q4614542":"event","Q4618106":"event","Q4618109":"event","Q4618606":"event","Q4622092":"event","Q4626445":"event","Q4626990":"event","Q7845722":"event","Q15091432":"event","Q16154207":"event","Q16274704":"event","Q16274890":"event","Q16274906":"event","Q16274911":"event","Q16970127":"event","Q17000988":"event","Q17008904":"event","Q17008911":"event","Q17008920":"event","Q17010500":"event","Q17014243":"event","Q17014475":"event","Q17068505":"event","Q17514220":"event","Q17635698":"event","Q17988757":"event","Q18124859":"event","Q18127156":"event","Q19832752":"event","Q20648065":"event","Q20648324":"event","Q33951":"event","Q33970":"event","Q33992":"event","Q34009":"event","Q20648638":"event","Q21856727":"event","Q21856731":"event","Q21856728":"event","Q21856729":"event","Q21856734":"event","Q21856735":"event","Q21856732":"event","Q21856733":"event","Q21856738":"event","Q21856739":"event","Q21856736":"event","Q21856737":"event","Q21856740":"event","Q22024750":"event","Q23044678":"event","Q23044679":"event","Q23701735":"event","Q23701733":"event","Q23701739":"event","Q23701736":"event","Q23701768":"event","Q23701775":"event","Q23701776":"event","Q24016079":"event","Q24907722":"event","Q24907734":"event","Q24910037":"event","Q25894872":"event","Q25896252":"event","Q25932775":"event","Q25933073":"event","Q25991569":"event","Q26006853":"event","Q26011215":"event","Q26207209":"event","Q26207313":"event","Q26207331":"event","Q26396528":"event","Q26459775":"event","Q26678687":"event","Q26772531":"event","Q27481596":"event","Q27674489":"event","Q27681327":"event","Q27681608":"event","Q27681800":"event","Q27698036":"event","Q27921877":"event","Q27921880":"event","Q28549451":"event","Q28549454":"event","Q48994098":"event","Q48994616":"event","Q50143442":"event","Q50196190":"event","Q50196251":"event","Q50877798":"event","Q50877800":"event","Q51325534":"event","Q51325535":"event","Q51325536":"event","Q61727859":"event","Q61727857":"event","Q61727860":"event","Q61727861":"event","Q75693022":"event","Q75693025":"event","Q75693081":"event","Q75693086":"event","Q75693090":"event","Q75693095":"event","Q75693099":"event","Q75693107":"event","Q75693104":"event","Q75693114":"event","Q75693123":"event","Q75693120":"event","Q75693131":"event","Q75693128":"event","Q75693137":"event","Q75693142":"event","Q75693147":"event","Q75693153":"event","Q75693157":"event","Q75693165":"event","Q75693168":"event","Q75693174":"event","Q75693179":"event","Q75693184":"event","Q75693189":"event","Q75693194":"event","Q75693198":"event","Q75693203":"event","Q75693208":"event","Q75693212":"event","Q75693217":"event","Q75693223":"event","Q75693228":"event","Q75693233":"event","Q108384535":"event","Q124711794":"event","Q93441":"event","Q117827":"event","Q127780":"event","Q129921":"event","Q130122":"event","Q133440":"event","Q431394":"event","Q476642":"event","Q499650":"event","Q522071":"event","Q577739":"event","Q578715":"event","Q582959":"event","Q584160":"event","Q604756":"event","Q631254":"event","Q645677":"event","Q645688":"event","Q654150":"event","Q660559":"event","Q663317":"event","Q673767":"event","Q715044":"event","Q715992":"event","Q720605":"event","Q733352":"event","Q745444":"event","Q748627":"event","Q748643":"event","Q748741":"event","Q751518":"event","Q751527":"event","Q754496":"event","Q755148":"event","Q756053":"event","Q756057":"event","Q756744":"event","Q826703":"event","Q827016":"event","Q830686":"event","Q832177":"event","Q833790":"event","Q837886":"event","Q838067":"event","Q893182":"event","Q1115093":"event","Q1318139":"event","Q1804248":"event","Q1845840":"event","Q2080804":"event","Q2565953":"event","Q2882396":"event","Q3122656":"event","Q3440758":"event","Q3816474":"event","Q3866328":"event","Q3892267":"event","Q3967057":"event","Q4745466":"event","Q5281223":"event","Q5985530":"event","Q7378334":"event","Q9322742":"event","Q26329648":"standard","Q16184518":"event","Q16677062":"event","Q26228228":"book","Q21088077":"event","Q23041530":"event","Q25289192":"event","Q26241551":"event","Q26832970":"event","Q28446493":"event","Q32635006":"event","Q39052122":"event","Q48832833":"event","Q60836663":"event","Q65231449":"event","Q39399":"event","Q76451129":"event","Q76451133":"event","Q76451318":"event","Q76451353":"event","Q76451412":"event","Q76496620":"event","Q76496621":"event","Q76496910":"event","Q76496914":"event","Q76496912":"event","Q76496916":"event","Q77304585":"event","Q77305023":"event","Q77305474":"event","Q83952275":"event","Q84017620":"event","Q84402060":"event","Q97201329":"event","Q110098625":"standard","Q107299280":"event","Q112727414":"event","Q115243228":"event","Q117391269":"event","Q270285":"software","Q114581":"event","Q120290":"event","Q188317":"event","Q208137":"event","Q262650":"event","Q270163":"event","Q282770":"event","Q429887":"event","Q6618808":"event","Q8035864":"event","Q14326700":"event","Q17994847":"event","Q27186004":"event","Q28222094":"event","Q67174214":"event","Q6876":"event","Q29762":"event","Q75693247":"event","Q75693253":"event","Q75693263":"event","Q75693266":"event","Q75693271":"event","Q75693275":"event","Q75693276":"event","Q75693282":"event","Q75693280":"event","Q75693284":"event","Q75693290":"event","Q75693288":"event","Q75693293":"event","Q75693296":"event","Q75693317":"event","Q75693323":"event","Q75693320":"event","Q75693325":"event","Q75693385":"event","Q75693392":"event","Q75693398":"event","Q75693404":"event","Q75693410":"event","Q75693416":"event","Q75693421":"event","Q75693425":"event","Q75693430":"event","Q75693436":"event","Q75693440":"event","Q91267365":"software","Q91931245":"event","Q180570":"event","Q194537":"event","Q202744":"event","Q220347":"event","Q223010":"event","Q238982":"event","Q276682":"event","Q279861":"event","Q311783":"event","Q313414":"event","Q327798":"event","Q368461":"event","Q368860":"event","Q392385":"event","Q479411":"event","Q479901":"event","Q495101":"event","Q529927":"event","Q534426":"event","Q539784":"event","Q544710":"event","Q558225":"event","Q579569":"event","Q592389":"event","Q603001":"event","Q609695":"event","Q616375":"event","Q660558":"event","Q667092":"event","Q668065":"event","Q674440":"event","Q691907":"event","Q702215":"event","Q732973":"event","Q739723":"event","Q739888":"event","Q748995":"event","Q755314":"event","Q783137":"event","Q785389":"event","Q789097":"event","Q790341":"event","Q838761":"event","Q842047":"event","Q844700":"event","Q847573":"event","Q850990":"event","Q886519":"event","Q890528":"event","Q903576":"event","Q905666":"event","Q906441":"event","Q910967":"event","Q916897":"event","Q926869":"event","Q955298":"event","Q961537":"event","Q979943":"event","Q1032130":"event","Q1129634":"event","Q1134740":"event","Q1297867":"event","Q1322351":"event","Q1322369":"event","Q1322377":"event","Q1329312":"event","Q1421241":"event","Q1463396":"event","Q1499294":"event","Q1510835":"event","Q1520460":"event","Q1528578":"event","Q1568497":"event","Q1612985":"event","Q1625214":"event","Q1629934":"event","Q1644925":"event","Q1651460":"event","Q1762314":"event","Q1764600":"event","Q1765681":"event","Q1767214":"event","Q1783405":"event","Q1815771":"event","Q1816217":"event","Q1822089":"event","Q1851900":"event","Q1852401":"event","Q1888987":"event","Q1940040":"event","Q1991081":"event","Q2000678":"event","Q2015574":"event","Q2065854":"event","Q2066031":"event","Q2072432":"event","Q2199668":"event","Q2298847":"event","Q2329596":"event","Q2410764":"event","Q2472221":"event","Q2537745":"event","Q2537751":"event","Q2537760":"event","Q2537767":"event","Q2537764":"event","Q2537774":"event","Q2537776":"event","Q2537783":"event","Q2537791":"event","Q2537799":"event","Q2537821":"event","Q2537831":"event","Q2537855":"event","Q2537860":"event","Q2537874":"event","Q2537886":"event","Q2537892":"event","Q2537936":"event","Q2537975":"event","Q2603172":"event","Q2622340":"event","Q2856354":"event","Q2951930":"event","Q2976277":"event","Q2976348":"event","Q2976466":"event","Q2976477":"event","Q2999579":"event","Q3083746":"event","Q3353231":"event","Q3353358":"event","Q3353513":"event","Q3353596":"event","Q3353689":"event","Q3353695":"event","Q3353750":"event","Q3353787":"event","Q3534238":"event","Q3534294":"event","Q3534350":"event","Q3534352":"event","Q3534543":"event","Q3534619":"event","Q3534664":"event","Q3534726":"event","Q3534800":"event","Q3534887":"event","Q3534943":"event","Q3534966":"event","Q3534980":"event","Q3535032":"event","Q3535045":"event","Q3535052":"event","Q3535084":"event","Q3535094":"event","Q3535245":"event","Q3535302":"event","Q3535331":"event","Q3547462":"event","Q3547479":"event","Q3547494":"event","Q3800397":"event","Q3877108":"event","Q3882927":"event","Q3883247":"event","Q4014176":"event","Q4017080":"event","Q4017086":"event","Q4017175":"event","Q4017348":"event","Q4742639":"event","Q4766524":"event","Q5132181":"event","Q5270792":"event","Q6431149":"event","Q7956071":"event","Q7956074":"event","Q7956075":"event","Q9170626":"event","Q9369429":"event","Q13222936":"event","Q13360739":"event","Q13528369":"event","Q13534286":"event","Q14238758":"event","Q14512078":"event","Q14517131":"event","Q14551987":"event","Q15055625":"event","Q15056459":"event","Q15077346":"event","Q15263377":"event","Q15502567":"event","Q15504389":"event","Q15650921":"event","Q15710001":"event","Q15853308":"event","Q15853309":"event","Q15853312":"event","Q104550106":"event","Q106382469":"event","Q106421279":"event","Q106834409":"event","Q106840313":"event","Q107556491":"event","Q107573051":"event","Q107905053":"event","Q108083554":"event","Q108378153":"event","Q108597200":"event","Q108597207":"event","Q108691989":"event","Q108783123":"event","Q109234967":"event","Q109570548":"event","Q109681671":"event","Q111211936":"event","Q113445196":"event","Q113563185":"event","Q113637895":"event","Q113841303":"event","Q113841300":"event","Q113997814":"event","Q114535408":"event","Q114676749":"event","Q114893437":"event","Q115482666":"event","Q115484530":"event","Q115801410":"event","Q116486578":"event","Q117381958":"event","Q117476258":"event","Q117826699":"event","Q124071330":"event","Q156097":"event","Q265586":"event","Q270907":"event","Q299147":"event","Q299144":"event","Q299159":"event","Q299174":"event","Q299176":"event","Q299193":"event","Q299197":"event","Q15853315":"event","Q15853318":"event","Q15853316":"event","Q16064794":"event","Q16064795":"event","Q16064793":"event","Q16079746":"event","Q16680689":"event","Q17021287":"event","Q17311580":"event","Q17493146":"event","Q17561018":"event","Q17561114":"event","Q17620008":"event","Q18088938":"event","Q18285495":"event","Q18413542":"event","Q18413540":"event","Q18413541":"event","Q18415533":"event","Q20656604":"event","Q20710122":"event","Q20970324":"event","Q20982704":"event","Q22079747":"event","Q23854141":"event","Q24289601":"event","Q25379073":"event","Q25385301":"event","Q26874537":"event","Q27276247":"event","Q27901751":"event","Q29397293":"event","Q29411134":"event","Q39058982":"event","Q47487929":"event","Q47508845":"event","Q47763511":"event","Q50321171":"event","Q52739176":"event","Q59555059":"event","Q61062132":"event","Q64830643":"event","Q65059671":"event","Q65746965":"event","Q65934295":"event","Q8496":"event","Q48644":"event","Q64827":"event","Q74110205":"event","Q74127622":"event","Q85859665":"event","Q86678859":"event","Q98228191":"event","Q100375171":"event","Q106847234":"event","Q107296532":"event","Q108783909":"event","Q108840819":"event","Q110822753":"event","Q299220":"event","Q299236":"event","Q299402":"event","Q299406":"event","Q299415":"event","Q299454":"event","Q299475":"event","Q299517":"event","Q299560":"event","Q299561":"event","Q299617":"event","Q299622":"event","Q299685":"event","Q299707":"event","Q299712":"event","Q299719":"event","Q299720":"event","Q299791":"event","Q299795":"event","Q299951":"event","Q300007":"event","Q300028":"event","Q558266":"event","Q558672":"event","Q597169":"event","Q597452":"event","Q728085":"event","Q954772":"event","Q1109657":"event","Q1230166":"event","Q1364943":"event","Q1393477":"event","Q1633700":"event","Q1770729":"event","Q1993182":"event","Q2317197":"event","Q2531614":"event","Q2632544":"event","Q2792159":"event","Q2869380":"event","Q3353878":"event","Q3601563":"event","Q3601604":"event","Q3601630":"event","Q3602047":"event","Q3602052":"event","Q3602162":"event","Q3602172":"event","Q3603465":"event","Q3649351":"event","Q3665808":"event","Q3683622":"event","Q3860590":"event","Q3886561":"event","Q3979068":"event","Q5109325":"event","Q5764200":"event","Q7505806":"event","Q7699221":"event","Q7787114":"event","Q12012406":"event","Q13221816":"event","Q13221953":"event","Q13222012":"event","Q13222030":"event","Q13360692":"event","Q13360713":"event","Q13360724":"event","Q13427619":"event","Q13427623":"event","Q14342744":"event","Q14922727":"event","Q15043913":"event","Q15062154":"event","Q15116774":"event","Q15149863":"event","Q15218836":"event","Q15391365":"event","Q15781252":"event","Q16465941":"event","Q17485677":"event","Q18926536":"event","Q19787652":"event","Q19799848":"event","Q20008620":"event","Q20182662":"event","Q25378680":"event","Q25380589":"event","Q26844937":"event","Q47511180":"event","Q48868616":"event","Q50321276":"event","Q60190867":"event","Q65078216":"event","Q96418391":"event","Q114444644":"software","Q1188480":"webpage","Q116236799":"software","Q116236822":"software","Q123198231":"software","Q112727378":"event","Q112727376":"event","Q112727408":"event","Q112727413":"event","Q112727424":"event","Q124365333":"software","Q113638005":"event","Q113950895":"event","Q117348097":"event","Q117360486":"event","Q117450495":"event","Q123992145":"event","Q6822269":"software","Q1568346":"review","Q756721":"event","Q960739":"event","Q5653192":"review","Q4588858":"event","Q4589798":"event","Q4590271":"event","Q4590743":"event","Q4594081":"event","Q4595226":"event","Q4597951":"event","Q4599214":"event","Q4600619":"event","Q4601970":"event","Q4603437":"event","Q27203100":"standard","Q27203404":"standard","Q27203601":"standard","Q27203692":"standard","Q27203722":"standard","Q27203789":"standard","Q27203907":"standard","Q27203973":"standard","Q27204002":"standard","Q27225795":"standard","Q27225797":"standard","Q27225803":"standard","Q27225801":"standard","Q27225806":"standard","Q27225813":"standard","Q22949126":"event","Q24928262":"event","Q28941872":"review","Q27491613":"event","Q27491654":"event","Q27491766":"event","Q27491798":"event","Q28221916":"event","Q28221923":"event","Q28222066":"event","Q28222087":"event","Q28222142":"event","Q29838658":"event","Q29839131":"event","Q29839135":"event","Q29839132":"event","Q29839136":"event","Q29839137":"event","Q33127966":"event","Q33127965":"event","Q33127986":"event","Q59156760":"dataset","Q54314590":"software","Q54323360":"software","Q44606775":"event","Q95947378":"webpage","Q75597003":"standard","Q75597419":"standard","Q75597761":"standard","Q75598901":"standard","Q75710135":"standard","Q75710254":"standard","Q63995437":"event","Q116867857":"webpage","Q116867869":"webpage","Q102259548":"software","Q92320908":"event","Q92321112":"event","Q107542272":"software","Q122418385":"dataset","Q109656536":"software","Q114059139":"standard","Q114059231":"standard","Q114059857":"standard","Q114061472":"standard","Q114074169":"standard","Q114444703":"software","Q114444727":"software","Q114444802":"software","Q114444816":"software","Q115520001":"software","Q106433751":"event","Q107350374":"event","Q107350376":"event","Q107441846":"event","Q107441847":"event","Q107441863":"event","Q107441861":"event","Q107560015":"event","Q107560013":"event","Q107560016":"event","Q108827323":"event","Q108827321":"event","Q112727434":"event","Q124365545":"software","Q113329646":"event","Q113329647":"event","Q113329644":"event","Q113329645":"event","Q113329648":"event","Q115045950":"event","Q120867901":"event","Q11197442":"software","Q194052":"event","Q484028":"event","Q646823":"event","Q670053":"event","Q677053":"event","Q725960":"event","Q1083915":"event","Q3138495":"event","Q3138502":"event","Q3876946":"event","Q11223691":"book","Q8463186":"event","Q117707974":"webpage","Q15980635":"event","Q28222191":"event","Q68803719":"dataset","Q48804432":"event","Q48804468":"event","Q48804475":"event","Q48804479":"event","Q48804477":"event","Q48804481":"event","Q48804487":"event","Q48804484":"event","Q48804485":"event","Q60168059":"event","Q63995438":"event","Q63995443":"event","Q63995440":"event","Q63995441":"event","Q63995446":"event","Q83254963":"event","Q83854786":"event","Q83854787":"event","Q83854790":"event","Q83854788":"event","Q83854789":"event","Q83854795":"event","Q83854792":"event","Q83854793":"event","Q83855491":"event","Q83855494":"event","Q83855498":"event","Q83855497":"event","Q83855502":"event","Q83855500":"event","Q83855505":"event","Q84348027":"event","Q84349090":"event","Q84349091":"event","Q84349092":"event","Q84729515":"event","Q84729513":"event","Q84729518":"event","Q84965783":"event","Q84986954":"event","Q84986955":"event","Q84986952":"event","Q84986953":"event","Q84986957":"event","Q31839826":"periodical","Q99229543":"event","Q99229546":"event","Q99229547":"event","Q99229544":"event","Q99229545":"event","Q99229548":"event","Q99485722":"event","Q111184276":"software","Q112616215":"software","Q106838922":"event","Q107185688":"event","Q114446496":"event","Q115858000":"event","Q117462170":"event","Q118291985":"event","Q119778647":"event","Q121313127":"event","Q123856553":"event","Q124208911":"event","Q279800":"event","Q282576":"event","Q426564":"event","Q489120":"event","Q527512":"event","Q550430":"event","Q786414":"event","Q850347":"event","Q1326196":"event","Q1478093":"event","Q2603751":"event","Q2869122":"event","Q2886695":"event","Q3607252":"event","Q3628923":"event","Q3963775":"event","Q3965460":"event","Q4200760":"event","Q4690035":"event","Q4925844":"event","Q5402049":"event","Q5466190":"event","Q5839622":"event","Q6463413":"event","Q7053528":"event","Q7076194":"event","Q7565981":"event","Q10289844":"event","Q22907871":"software","Q11642810":"event","Q11818941":"event","Q12581010":"event","Q12584583":"event","Q12603684":"event","Q12778744":"event","Q13221792":"event","Q13515630":"event","Q15669812":"event","Q16470174":"event","Q16575578":"event","Q16647802":"event","Q17165333":"event","Q17639483":"event","Q18124297":"event","Q18127058":"event","Q18414336":"event","Q20950097":"event","Q21130129":"event","Q23002817":"event","Q24199684":"event","Q24887764":"event","Q25063983":"event","Q25315517":"event","Q25377391":"event","Q26213387":"event","Q27925538":"event","Q27925644":"event","Q28453851":"event","Q30056164":"event","Q30609014":"event","Q30926925":"event","Q35823051":"event","Q51675393":"software","Q44404737":"event","Q51155374":"event","Q51155420":"event","Q51155488":"event","Q51155519":"event","Q51155608":"event","Q51155665":"event","Q51155862":"event","Q51155973":"event","Q51156130":"event","Q51156169":"event","Q51156241":"event","Q51156281":"event","Q51156342":"event","Q51156393":"event","Q51156444":"event","Q51156478":"event","Q51156540":"event","Q51156587":"event","Q51156682":"event","Q56282050":"event","Q60742209":"event","Q109676651":"event","Q112727397":"event","Q1609504":"dataset","Q115715684":"event","Q116077043":"event","Q124735557":"event","Q11895072":"song","Q160145":"event","Q285656":"event","Q301872":"event","Q478286":"event","Q492871":"event","Q552835":"event","Q912726":"event","Q1654923":"event","Q1851026":"event","Q1853265":"event","Q1860997":"event","Q1861055":"event","Q2031947":"event","Q2032961":"event","Q2033735":"event","Q2036577":"event","Q2038692":"event","Q2039892":"event","Q2066537":"event","Q2088133":"event","Q2089180":"event","Q2295425":"event","Q2330100":"event","Q2334043":"event","Q2337854":"event","Q2338781":"event","Q2339404":"event","Q2340578":"event","Q2349249":"event","Q2397410":"event","Q2403630":"event","Q2473917":"event","Q2571739":"event","Q2582020":"event","Q2634964":"event","Q2658271":"event","Q3232779":"event","Q3561078":"event","Q3587589":"event","Q4508889":"event","Q4508925":"event","Q4508980":"event","Q4508986":"event","Q4509068":"event","Q4509073":"event","Q4509323":"event","Q4509385":"event","Q4509389":"event","Q4509401":"event","Q4509412":"event","Q4509421":"event","Q4509491":"event","Q4510975":"event","Q4510984":"event","Q4511004":"event","Q4511159":"event","Q5115542":"event","Q30325611":"dataset","Q5412482":"event","Q5827419":"event","Q5827491":"event","Q6348103":"event","Q8774346":"event","Q8774419":"event","Q11918772":"event","Q18324679":"event","Q21640805":"event","Q23688019":"event","Q61033232":"dataset","Q61033736":"dataset","Q28222017":"event","Q66680750":"dataset","Q59156179":"dataset","Q59156199":"dataset","Q59156242":"dataset","Q65770536":"dataset","Q56255056":"standard","Q47069668":"event","Q47711758":"event","Q48782035":"event","Q56318100":"event","Q56318101":"event","Q56318106":"event","Q68319658":"event","Q31691":"event","Q60314":"event","Q69953293":"event","Q109689777":"dataset","Q80781545":"book","Q80220485":"event","Q84082272":"event","Q2669680":"speech","Q7598190":"speech","Q9259968":"speech","Q11358776":"speech","Q115917335":"event","Q115917341":"event","Q116220515":"event","Q122909457":"event","Q123923823":"event","Q24708245":"speech","Q72437":"event","Q478128":"event","Q1530610":"event","Q1626805":"event","Q1684400":"event","Q1851458":"event","Q1892229":"event","Q1922740":"event","Q2077118":"event","Q2105399":"event","Q2304297":"event","Q2336347":"event","Q2781213":"event","Q2884788":"event","Q2980457":"event","Q2980464":"event","Q2980468":"event","Q3035612":"event","Q3114206":"event","Q3405554":"event","Q3444048":"event","Q3533235":"event","Q3533233":"event","Q3533236":"event","Q3533272":"event","Q3533303":"event","Q3533391":"event","Q3533573":"event","Q3533584":"event","Q3540524":"event","Q3614691":"event","Q3614692":"event","Q4351856":"event","Q4598591":"event","Q4599875":"event","Q4602643":"event","Q4604131":"event","Q4605979":"event","Q4608228":"event","Q4613583":"event","Q4624735":"event","Q4810677":"event","Q5187118":"event","Q5775283":"event","Q5775350":"event","Q6089378":"event","Q7863428":"event","Q9678843":"event","Q9679146":"event","Q9679952":"event","Q9679971":"event","Q9679977":"event","Q9685135":"event","Q9874937":"event","Q10287246":"event","Q10289933":"event","Q10969960":"event","Q15131419":"event","Q16484002":"event","Q16540564":"event","Q16652402":"event","Q16980767":"event","Q17640076":"event","Q17988707":"event","Q18326641":"event","Q18397450":"event","Q18465615":"event","Q18470144":"event","Q18474363":"event","Q18474367":"event","Q18474868":"event","Q18479963":"event","Q18480778":"event","Q18655104":"event","Q18913913":"event","Q20052936":"event","Q20053011":"event","Q20724222":"event","Q20803729":"event","Q21056466":"event","Q21061146":"event","Q21492959":"event","Q21710658":"event","Q21856730":"event","Q23498346":"event","Q23498345":"event","Q23718906":"event","Q25428540":"event","Q30715562":"event","Q67576909":"speech","Q23718911":"event","Q23718913":"event","Q23718918":"event","Q23718923":"event","Q23718921":"event","Q23718926":"event","Q23718927":"event","Q23718924":"event","Q23718928":"event","Q23718934":"event","Q23718935":"event","Q23718933":"event","Q23719775":"event","Q23719785":"event","Q23719789":"event","Q23719806":"event","Q23719808":"event","Q23720099":"event","Q23920511":"event","Q24259219":"event","Q24259240":"event","Q24260020":"event","Q26215394":"event","Q26215426":"event","Q26215461":"event","Q26913528":"event","Q27681680":"event","Q27698588":"event","Q28056685":"event","Q28493655":"event","Q28493703":"event","Q28536778":"event","Q28940318":"event","Q28940343":"event","Q28940427":"event","Q28940478":"event","Q30753236":"event","Q40609238":"event","Q47545738":"event","Q48990587":"event","Q48992461":"event","Q48992745":"event","Q48993340":"event","Q50048640":"event","Q50048889":"event","Q50048919":"event","Q50048944":"event","Q50048995":"event","Q50049022":"event","Q50049069":"event","Q50049092":"event","Q50049132":"event","Q50066181":"event","Q50066185":"event","Q51193566":"event","Q51193564":"event","Q51293658":"event","Q51293659":"event","Q51293662":"event","Q51293663":"event","Q51293661":"event","Q51293666":"event","Q51293670":"event","Q51293668":"event","Q51293672":"event","Q51325482":"event","Q51325481":"event","Q51325487":"event","Q51325485":"event","Q51325490":"event","Q51325491":"event","Q51325488":"event","Q51325489":"event","Q51325494":"event","Q51325495":"event","Q51325493":"event","Q51325498":"event","Q51325497":"event","Q51325502":"event","Q51325503":"event","Q51325507":"event","Q51325504":"event","Q51325510":"event","Q51325514":"event","Q51325515":"event","Q51325512":"event","Q51325513":"event","Q51325518":"event","Q51325516":"event","Q51325522":"event","Q51325520":"event","Q51325521":"event","Q51325526":"event","Q51325524":"event","Q51325525":"event","Q51325531":"event","Q51325528":"event","Q51325529":"event","Q51513987":"event","Q51513984":"event","Q51513990":"event","Q51513991":"event","Q51513995":"event","Q51513998":"event","Q51513996":"event","Q51514003":"event","Q51514000":"event","Q51601810":"event","Q51601811":"event","Q51601808":"event","Q51601814":"event","Q51770775":"event","Q51770776":"event","Q51770777":"event","Q51770782":"event","Q51770783":"event","Q51770780":"event","Q51770781":"event","Q51770784":"event","Q51770785":"event","Q52073143":"event","Q52073147":"event","Q52073145":"event","Q52073150":"event","Q52073151":"event","Q52073148":"event","Q52073154":"event","Q52073153":"event","Q52073158":"event","Q52073156":"event","Q52073190":"event","Q52073188":"event","Q52073194":"event","Q52073192":"event","Q52073198":"event","Q52073196":"event","Q52073202":"event","Q52073201":"event","Q52073205":"event","Q52073211":"event","Q52073208":"event","Q52073209":"event","Q52073214":"event","Q52073218":"event","Q52073216":"event","Q52073223":"event","Q52073226":"event","Q52251410":"event","Q52251411":"event","Q52251408":"event","Q52251412":"event","Q52588715":"event","Q52588719":"event","Q52588716":"event","Q52588723":"event","Q52588720":"event","Q52588725":"event","Q52588730":"event","Q52588729":"event","Q54670667":"event","Q55223586":"event","Q55223785":"event","Q55383333":"event","Q55714397":"event","Q55714472":"event","Q55714495":"event","Q55739555":"event","Q55739558":"event","Q55739556":"event","Q55739557":"event","Q55739562":"event","Q55739563":"event","Q55739560":"event","Q55739561":"event","Q55739566":"event","Q55739567":"event","Q55739564":"event","Q55739565":"event","Q55739570":"event","Q55739571":"event","Q55739568":"event","Q55739569":"event","Q55739572":"event","Q56451810":"event","Q58069612":"event","Q58069660":"event","Q58071794":"event","Q58071795":"event","Q58213898":"event","Q58213901":"event","Q58213905":"event","Q58213909":"event","Q58213913":"event","Q58213919":"event","Q58213916":"event","Q58213922":"event","Q58213927":"event","Q58213930":"event","Q58213935":"event","Q58495049":"event","Q58495050":"event","Q60847161":"event","Q60851885":"event","Q61523379":"event","Q61523384":"event","Q61523388":"event","Q61523389":"event","Q61523395":"event","Q61523392":"event","Q61523393":"event","Q61523397":"event","Q61727822":"event","Q61727823":"event","Q61727826":"event","Q61727827":"event","Q61727824":"event","Q61727825":"event","Q61727830":"event","Q61727828":"event","Q61727829":"event","Q61727834":"event","Q61727835":"event","Q61727833":"event","Q61727838":"event","Q61727839":"event","Q61727836":"event","Q61727837":"event","Q61727842":"event","Q61727840":"event","Q61727844":"event","Q61727862":"event","Q61727866":"event","Q61727864":"event","Q61727870":"event","Q61727868":"event","Q61727874":"event","Q61727872":"event","Q61727876":"event","Q61985886":"event","Q61985887":"event","Q61985885":"event","Q61985890":"event","Q61985891":"event","Q61985888":"event","Q61985889":"event","Q61985894":"event","Q61985895":"event","Q61985892":"event","Q61985893":"event","Q61985898":"event","Q61985896":"event","Q61985897":"event","Q62760042":"event","Q62760041":"event","Q62762666":"event","Q62762667":"event","Q62762670":"event","Q62762668":"event","Q62762669":"event","Q62762674":"event","Q62762675":"event","Q62762672":"event","Q62762676":"event","Q62762677":"event","Q62776627":"event","Q62776625":"event","Q62776631":"event","Q62776629":"event","Q62776634":"event","Q62776635":"event","Q62776632":"event","Q62776633":"event","Q62776640":"event","Q63694692":"event","Q63871474":"event","Q63871475":"event","Q63871472":"event","Q63871473":"event","Q65153399":"event","Q66907919":"event","Q75693047":"event","Q75693055":"event","Q75693053":"event","Q75693057":"event","Q75693111":"event","Q75693236":"event","Q75693242":"event","Q75693298":"event","Q75693302":"event","Q75693306":"event","Q75693312":"event","Q82111155":"event","Q83255227":"event","Q83255225":"event","Q83255237":"event","Q83255255":"event","Q83255263":"event","Q83255265":"event","Q83854754":"event","Q83854763":"event","Q104640128":"event","Q106424911":"event","Q106433746":"event","Q106433747":"event","Q106433744":"event","Q106433748":"event","Q106433749":"event","Q106484339":"event","Q83854766":"event","Q83854764":"event","Q83854807":"event","Q83854885":"event","Q83854890":"event","Q83854942":"event","Q83854946":"event","Q83854947":"event","Q83854944":"event","Q83854950":"event","Q83854948":"event","Q83854953":"event","Q83854959":"event","Q83854956":"event","Q83854966":"event","Q83854970":"event","Q83854975":"event","Q83854979":"event","Q83854981":"event","Q83854986":"event","Q83854996":"event","Q83855001":"event","Q83855004":"event","Q83855009":"event","Q83855014":"event","Q83855019":"event","Q83855027":"event","Q83855035":"event","Q83855032":"event","Q83855039":"event","Q83855043":"event","Q83855045":"event","Q83855048":"event","Q83855053":"event","Q83855057":"event","Q83855060":"event","Q83855064":"event","Q83855219":"event","Q83855223":"event","Q83855226":"event","Q83855238":"event","Q83855374":"event","Q83855379":"event","Q83855376":"event","Q83855381":"event","Q83855387":"event","Q83855384":"event","Q83855391":"event","Q83855394":"event","Q83855534":"event","Q83855538":"event","Q83855537":"event","Q83855542":"event","Q83855540":"event","Q83855547":"event","Q83855548":"event","Q83855697":"event","Q83855703":"event","Q83855708":"event","Q83855712":"event","Q83855718":"event","Q83855723":"event","Q83855730":"event","Q83855735":"event","Q84349093":"event","Q84536083":"event","Q84726459":"event","Q84726460":"event","Q84729545":"event","Q84856963":"event","Q84856964":"event","Q84856968":"event","Q85083274":"event","Q85083280":"event","Q85083285":"event","Q85083289":"event","Q85118287":"event","Q85118284":"event","Q85118290":"event","Q85118295":"event","Q85118292":"event","Q85197265":"event","Q85337549":"event","Q86666589":"event","Q97126787":"event","Q98792672":"event","Q99383547":"event","Q99520739":"event","Q99662464":"event","Q100272033":"event","Q100352196":"event","Q102341472":"event","Q106618618":"event","Q106627020":"event","Q106627383":"event","Q106627386":"event","Q106627387":"event","Q106627384":"event","Q106627385":"event","Q106627391":"event","Q106627388":"event","Q106627389":"event","Q106627392":"event","Q106627393":"event","Q106627726":"event","Q106922291":"event","Q106922292":"event","Q106922293":"event","Q107182990":"event","Q107410838":"event","Q107410839":"event","Q107410836":"event","Q107410837":"event","Q107410842":"event","Q107410843":"event","Q107410840":"event","Q107410841":"event","Q107410846":"event","Q107410847":"event","Q107410844":"event","Q107410845":"event","Q107410850":"event","Q107410848":"event","Q107410849":"event","Q107410854":"event","Q107410855":"event","Q107410852":"event","Q107410853":"event","Q107410858":"event","Q107410859":"event","Q107410856":"event","Q107410857":"event","Q107410862":"event","Q107410863":"event","Q107410860":"event","Q107410861":"event","Q107410864":"event","Q107421473":"event","Q107421563":"event","Q107421561":"event","Q107421567":"event","Q107421564":"event","Q107421568":"event","Q107421569":"event","Q107550067":"event","Q107550064":"event","Q107550065":"event","Q107550070":"event","Q107550071":"event","Q107550068":"event","Q107550069":"event","Q107550075":"event","Q107550072":"event","Q107550073":"event","Q107550078":"event","Q107550079":"event","Q107550076":"event","Q107550077":"event","Q108142583":"event","Q108142584":"event","Q108147918":"event","Q108147919":"event","Q108147916":"event","Q108147917":"event","Q108147920":"event","Q108147921":"event","Q108171919":"event","Q108171922":"event","Q108171923":"event","Q108171920":"event","Q108171921":"event","Q108171926":"event","Q108171927":"event","Q108171924":"event","Q108171925":"event","Q108171928":"event","Q108180786":"event","Q108180785":"event","Q108180790":"event","Q108180791":"event","Q108180788":"event","Q108180789":"event","Q108180792":"event","Q108380947":"event","Q108380950":"event","Q108380951":"event","Q108380948":"event","Q108380949":"event","Q108380954":"event","Q108380955":"event","Q108380953":"event","Q108380956":"event","Q110750035":"event","Q110750038":"event","Q110750039":"event","Q110750036":"event","Q110750037":"event","Q110750042":"event","Q110750040":"event","Q110750041":"event","Q110750054":"event","Q110789082":"event","Q110789083":"event","Q110789087":"event","Q110789085":"event","Q110789090":"event","Q110789091":"event","Q110789088":"event","Q110789094":"event","Q110789095":"event","Q110789092":"event","Q110789093":"event","Q110789098":"event","Q110789096":"event","Q110789097":"event","Q110808942":"event","Q110831766":"event","Q110855630":"event","Q110855631":"event","Q110855634":"event","Q110855635":"event","Q110855632":"event","Q110855633":"event","Q110855638":"event","Q110855639":"event","Q110855636":"event","Q110855637":"event","Q110855642":"event","Q110855643":"event","Q110855640":"event","Q110855641":"event","Q110859291":"event","Q110866146":"event","Q110866147":"event","Q110866144":"event","Q110866145":"event","Q110866148":"event","Q110866149":"event","Q110866155":"event","Q110866152":"event","Q110866153":"event","Q110866158":"event","Q110866156":"event","Q110866157":"event","Q110866160":"event","Q110866161":"event","Q110866166":"event","Q110866167":"event","Q110866164":"event","Q110866171":"event","Q110866169":"event","Q110866174":"event","Q110866172":"event","Q110866179":"event","Q110866176":"event","Q110866182":"event","Q110866183":"event","Q110866181":"event","Q110866186":"event","Q110866184":"event","Q110900722":"event","Q110900723":"event","Q110900726":"event","Q110900727":"event","Q110900724":"event","Q110900725":"event","Q110900730":"event","Q110900731":"event","Q110900728":"event","Q110900734":"event","Q110900732":"event","Q110900738":"event","Q110900739":"event","Q110900736":"event","Q110900737":"event","Q110900742":"event","Q110900740":"event","Q110900741":"event","Q110900746":"event","Q110900747":"event","Q110900744":"event","Q110900745":"event","Q110900750":"event","Q110900751":"event","Q110900748":"event","Q110900749":"event","Q110900754":"event","Q110900755":"event","Q110900753":"event","Q110900758":"event","Q110900759":"event","Q110900756":"event","Q108380958":"event","Q108380959":"event","Q108380957":"event","Q108380962":"event","Q108380963":"event","Q108380960":"event","Q108380966":"event","Q108380967":"event","Q108380964":"event","Q108380965":"event","Q108380970":"event","Q108380971":"event","Q108380968":"event","Q108380969":"event","Q108380974":"event","Q108380975":"event","Q108380972":"event","Q108380978":"event","Q108380976":"event","Q108380977":"event","Q108380982":"event","Q108380983":"event","Q108380980":"event","Q108380986":"event","Q108380987":"event","Q108380984":"event","Q108380985":"event","Q108380991":"event","Q108380988":"event","Q108380989":"event","Q108380994":"event","Q108380995":"event","Q108380992":"event","Q108380993":"event","Q108380996":"event","Q108380997":"event","Q108429226":"event","Q108429230":"event","Q108429231":"event","Q108429228":"event","Q108429229":"event","Q108429234":"event","Q108429235":"event","Q108429232":"event","Q108429233":"event","Q108429238":"event","Q108429239":"event","Q108429236":"event","Q108429237":"event","Q108429243":"event","Q108429240":"event","Q108429241":"event","Q108429244":"event","Q108540347":"event","Q108540350":"event","Q108540351":"event","Q108540348":"event","Q108540349":"event","Q108540354":"event","Q108540355":"event","Q108540352":"event","Q108540353":"event","Q108540358":"event","Q108540359":"event","Q108540357":"event","Q108827306":"event","Q108827311":"event","Q108827308":"event","Q108827315":"event","Q108827312":"event","Q108827318":"event","Q109346704":"event","Q109367318":"event","Q109570851":"event","Q109570848":"event","Q109570849":"event","Q109570854":"event","Q109570855":"event","Q109570852":"event","Q109570858":"event","Q109570856":"event","Q109570857":"event","Q109588471":"event","Q109588474":"event","Q109588475":"event","Q109588472":"event","Q109588473":"event","Q109588479":"event","Q109588476":"event","Q109588477":"event","Q109588482":"event","Q109588480":"event","Q109588481":"event","Q110397238":"event","Q110397239":"event","Q110397240":"event","Q110510353":"event","Q110750031":"event","Q110750032":"event","Q110750033":"event","Q110900762":"event","Q110900763":"event","Q110900760":"event","Q110900766":"event","Q110900767":"event","Q110900764":"event","Q110900765":"event","Q110900770":"event","Q110900771":"event","Q110900768":"event","Q110900769":"event","Q110900774":"event","Q110900775":"event","Q110900772":"event","Q110900773":"event","Q110900778":"event","Q110900779":"event","Q110900776":"event","Q110900777":"event","Q110900780":"event","Q110923479":"event","Q111208466":"event","Q111497406":"event","Q111519814":"event","Q111520729":"event","Q111568391":"event","Q111568498":"event","Q111568499":"event","Q111568496":"event","Q111568497":"event","Q111568502":"event","Q111568503":"event","Q111568500":"event","Q111568501":"event","Q111568506":"event","Q111568507":"event","Q111568504":"event","Q111568505":"event","Q111568510":"event","Q111568508":"event","Q111568509":"event","Q111568519":"event","Q111568520":"event","Q111584848":"event","Q111584849":"event","Q111591286":"event","Q111591287":"event","Q111591285":"event","Q111591290":"event","Q111591288":"event","Q111591289":"event","Q112184744":"event","Q113407671":"event","Q113407674":"event","Q113407675":"event","Q113407672":"event","Q113407673":"event","Q113407678":"event","Q113407679":"event","Q113407676":"event","Q113407677":"event","Q113407682":"event","Q113407683":"event","Q113407680":"event","Q113407681":"event","Q113407686":"event","Q113407684":"event","Q113407685":"event","Q113407690":"event","Q113407688":"event","Q113407689":"event","Q113407694":"event","Q113407695":"event","Q113407692":"event","Q113407693":"event","Q113507689":"event","Q113623089":"event","Q113714415":"event","Q113956794":"event","Q113956793":"event","Q114173545":"event","Q114210100":"event","Q114678131":"event","Q114986117":"event","Q114986122":"event","Q114986120":"event","Q114986121":"event","Q114986126":"event","Q114986127":"event","Q114986124":"event","Q114986131":"event","Q114986128":"event","Q114986129":"event","Q114986132":"event","Q115002310":"event","Q115002311":"event","Q115002309":"event","Q115033583":"event","Q115033584":"event","Q115033585":"event","Q115033586":"event","Q115033587":"event","Q115033590":"event","Q115033591":"event","Q115033588":"event","Q115033589":"event","Q115033595":"event","Q115033592":"event","Q115033598":"event","Q115033599":"event","Q115033596":"event","Q115033597":"event","Q115033602":"event","Q115033603":"event","Q115033600":"event","Q115033601":"event","Q115033606":"event","Q115033607":"event","Q115033604":"event","Q115033608":"event","Q115056506":"event","Q115056510":"event","Q115056511":"event","Q115056508":"event","Q115056509":"event","Q115056512":"event","Q115056513":"event","Q115087617":"event","Q115091970":"event","Q115091971":"event","Q115091975":"event","Q115091972":"event","Q115091973":"event","Q115091978":"event","Q115091979":"event","Q115091976":"event","Q115091977":"event","Q115091982":"event","Q115091983":"event","Q115091980":"event","Q115091981":"event","Q115091984":"event","Q115091985":"event","Q115091990":"event","Q115091991":"event","Q115091988":"event","Q115091989":"event","Q115091994":"event","Q115091995":"event","Q115091992":"event","Q115091993":"event","Q115091998":"event","Q115091999":"event","Q115091996":"event","Q115091997":"event","Q115092002":"event","Q115092003":"event","Q115092000":"event","Q115092001":"event","Q115092006":"event","Q115092007":"event","Q115092004":"event","Q115092010":"event","Q115092008":"event","Q115092009":"event","Q115092014":"event","Q115092015":"event","Q115092012":"event","Q115092013":"event","Q115092016":"event","Q115092017":"event","Q115101126":"event","Q115101127":"event","Q115101124":"event","Q115101125":"event","Q115101130":"event","Q115101131":"event","Q115101128":"event","Q115101129":"event","Q115101134":"event","Q115101135":"event","Q115101133":"event","Q115101138":"event","Q115101139":"event","Q115101136":"event","Q115101137":"event","Q115110641":"event","Q115114318":"event","Q115114319":"event","Q115114330":"event","Q115114331":"event","Q115114334":"event","Q115114335":"event","Q115114332":"event","Q115114333":"event","Q115114338":"event","Q115114339":"event","Q115114336":"event","Q115114337":"event","Q115114340":"event","Q115114341":"event","Q115119150":"event","Q115119151":"event","Q115119154":"event","Q115119155":"event","Q115119152":"event","Q115119159":"event","Q115119157":"event","Q115119162":"event","Q115119163":"event","Q115119160":"event","Q115119161":"event","Q115119166":"event","Q115119167":"event","Q115119165":"event","Q115119170":"event","Q115119171":"event","Q115119168":"event","Q115119169":"event","Q115119174":"event","Q115119175":"event","Q115119172":"event","Q115119173":"event","Q115119176":"event","Q115120598":"event","Q115120599":"event","Q115120597":"event","Q115125286":"event","Q115125287":"event","Q115125290":"event","Q115125291":"event","Q115125288":"event","Q115125289":"event","Q115125294":"event","Q115125295":"event","Q115125292":"event","Q115125293":"event","Q115125298":"event","Q115125299":"event","Q115125297":"event","Q115136186":"event","Q115136188":"event","Q115136218":"event","Q115136219":"event","Q115136222":"event","Q115136223":"event","Q115136220":"event","Q115136221":"event","Q115136226":"event","Q115136227":"event","Q115136224":"event","Q115136225":"event","Q115136230":"event","Q115136231":"event","Q115136228":"event","Q115136229":"event","Q115136234":"event","Q115136232":"event","Q115136233":"event","Q115139839":"event","Q115139836":"event","Q115139837":"event","Q115152838":"event","Q115152839":"event","Q115152842":"event","Q115152843":"event","Q115152840":"event","Q115152841":"event","Q115152846":"event","Q115152847":"event","Q115152844":"event","Q115152845":"event","Q115152850":"event","Q115152851":"event","Q115152848":"event","Q115152849":"event","Q115152854":"event","Q115152855":"event","Q115152852":"event","Q115152853":"event","Q115170737":"event","Q115170791":"event","Q115170792":"event","Q115178318":"event","Q115178323":"event","Q115178320":"event","Q115243242":"event","Q115256071":"event","Q115256074":"event","Q115256075":"event","Q115256072":"event","Q115256073":"event","Q115256077":"event","Q115256082":"event","Q115256083":"event","Q115256084":"event","Q115256088":"event","Q115288399":"event","Q115300690":"event","Q115300691":"event","Q115300694":"event","Q115300695":"event","Q115300692":"event","Q115300693":"event","Q115300698":"event","Q115300699":"event","Q115300696":"event","Q115300697":"event","Q115300700":"event","Q115307843":"event","Q115307846":"event","Q115307847":"event","Q115307844":"event","Q115340610":"event","Q115340611":"event","Q115340619":"event","Q115482446":"event","Q115482447":"event","Q115482450":"event","Q115482451":"event","Q115482448":"event","Q115482454":"event","Q115482452":"event","Q115482453":"event","Q115482458":"event","Q115482459":"event","Q115482456":"event","Q115482457":"event","Q115482462":"event","Q115482461":"event","Q115482467":"event","Q115482464":"event","Q115482465":"event","Q115482470":"event","Q115482468":"event","Q115482469":"event","Q115482474":"event","Q115482475":"event","Q115482472":"event","Q115482478":"event","Q115482479":"event","Q115482476":"event","Q115482477":"event","Q115482482":"event","Q115482480":"event","Q115482487":"event","Q115482485":"event","Q115482490":"event","Q115482495":"event","Q115482492":"event","Q115482493":"event","Q115482498":"event","Q115482497":"event","Q115482500":"event","Q115482501":"event","Q115565422":"event","Q115565420":"event","Q115565421":"event","Q115621066":"event","Q115621067":"event","Q115627383":"event","Q115627381":"event","Q115689292":"event","Q115691039":"event","Q115691042":"event","Q115691043":"event","Q115691040":"event","Q115691041":"event","Q115691046":"event","Q115691047":"event","Q115691044":"event","Q115691045":"event","Q115691051":"event","Q115691049":"event","Q115691054":"event","Q115691055":"event","Q115691053":"event","Q115691056":"event","Q115691062":"event","Q115702607":"event","Q115703133":"event","Q115718270":"event","Q115718268":"event","Q115732547":"event","Q115780330":"event","Q115780331":"event","Q115869250":"event","Q115902206":"event","Q115902207":"event","Q115902208":"event","Q115902214":"event","Q115902215":"event","Q115902212":"event","Q115902213":"event","Q115902216":"event","Q115903527":"event","Q115903528":"event","Q116026848":"event","Q116026849":"event","Q116027025":"event","Q116027026":"event","Q116027027":"event","Q116053246":"event","Q116053247":"event","Q116053244":"event","Q116053245":"event","Q116053250":"event","Q116053251":"event","Q116053248":"event","Q116053249":"event","Q116152153":"event","Q116152168":"event","Q116155026":"event","Q116155027":"event","Q116155025":"event","Q116155030":"event","Q116155028":"event","Q116155034":"event","Q116155035":"event","Q116155032":"event","Q116155033":"event","Q116155036":"event","Q116199704":"event","Q116199705":"event","Q116202120":"event","Q116213290":"event","Q116213291":"event","Q116213292":"event","Q116213299":"event","Q116254998":"event","Q116254999":"event","Q116254997":"event","Q116255002":"event","Q116255003":"event","Q116255000":"event","Q116255001":"event","Q116255004":"event","Q116368884":"event","Q116685222":"event","Q116685223":"event","Q116685220":"event","Q116685221":"event","Q116685226":"event","Q116685224":"event","Q116685225":"event","Q116685230":"event","Q116685231":"event","Q116685234":"event","Q116685235":"event","Q116685232":"event","Q116685233":"event","Q116689630":"event","Q116689631":"event","Q116689629":"event","Q116689634":"event","Q116689635":"event","Q116689632":"event","Q116689633":"event","Q116689638":"event","Q116689639":"event","Q116689636":"event","Q116689637":"event","Q116689642":"event","Q116689643":"event","Q116689640":"event","Q116689641":"event","Q116689646":"event","Q116689644":"event","Q116691015":"event","Q116691013":"event","Q116691019":"event","Q116691023":"event","Q116694702":"event","Q116694703":"event","Q116694700":"event","Q116694701":"event","Q116694706":"event","Q116694707":"event","Q116694704":"event","Q116694705":"event","Q116694710":"event","Q116694711":"event","Q116694709":"event","Q116694715":"event","Q116694712":"event","Q116694713":"event","Q116694718":"event","Q116694719":"event","Q116694717":"event","Q116694722":"event","Q116694723":"event","Q116694720":"event","Q116694721":"event","Q116753418":"event","Q116753429":"event","Q116757036":"event","Q116757037":"event","Q116765762":"event","Q116765763":"event","Q116765764":"event","Q116765766":"event","Q116765767":"event","Q116765765":"event","Q116765770":"event","Q116765771":"event","Q116765768":"event","Q116765769":"event","Q116766114":"event","Q116766115":"event","Q116766113":"event","Q116766118":"event","Q116766119":"event","Q116766117":"event","Q116766122":"event","Q116766123":"event","Q116766120":"event","Q116766121":"event","Q116766127":"event","Q116766124":"event","Q116766125":"event","Q116766668":"event","Q117314930":"event","Q117314928":"event","Q117314929":"event","Q117316200":"event","Q117828762":"event","Q117828761":"event","Q118765475":"event","Q119065902":"event","Q119065991":"event","Q119065989":"event","Q119173846":"event","Q119841825":"event","Q120146850":"event","Q120146851":"event","Q120146854":"event","Q120146855":"event","Q120146852":"event","Q120146853":"event","Q120146857":"event","Q120146866":"event","Q120146867":"event","Q120146868":"event","Q120146869":"event","Q120149744":"event","Q120170766":"event","Q120170767":"event","Q120170764":"event","Q120170765":"event","Q120170771":"event","Q120196286":"event","Q120196284":"event","Q120196290":"event","Q120198658":"event","Q120198659":"event","Q120198662":"event","Q120198663":"event","Q120198660":"event","Q120198661":"event","Q120198666":"event","Q120198667":"event","Q120198665":"event","Q120198670":"event","Q120198671":"event","Q120198668":"event","Q120198669":"event","Q120198674":"event","Q120198675":"event","Q120198673":"event","Q120198678":"event","Q120198679":"event","Q120198676":"event","Q120198677":"event","Q120198682":"event","Q120198683":"event","Q120198680":"event","Q120198681":"event","Q120198686":"event","Q120198687":"event","Q120198684":"event","Q120198685":"event","Q120198690":"event","Q120198688":"event","Q120198689":"event","Q120198694":"event","Q120198695":"event","Q120198692":"event","Q120198698":"event","Q120198699":"event","Q120198696":"event","Q120198700":"event","Q120229766":"event","Q120229771":"event","Q120229769":"event","Q120229775":"event","Q120229772":"event","Q120229778":"event","Q120229779":"event","Q120229776":"event","Q120229781":"event","Q120229782":"event","Q120229786":"event","Q120229784":"event","Q120229790":"event","Q120229788":"event","Q120229789":"event","Q120229792":"event","Q120229796":"event","Q120229806":"event","Q120229804":"event","Q120229810":"event","Q120229808":"event","Q120229809":"event","Q120229812":"event","Q120229818":"event","Q120229816":"event","Q120229821":"event","Q120229826":"event","Q120229827":"event","Q120229824":"event","Q120229825":"event","Q120229831":"event","Q120229829":"event","Q120229835":"event","Q120229833":"event","Q120229837":"event","Q120236357":"event","Q120236364":"event","Q120236370":"event","Q120236374":"event","Q120236372":"event","Q120236376":"event","Q120546062":"event","Q120546067":"event","Q120546064":"event","Q120546065":"event","Q120546071":"event","Q120546068":"event","Q120546069":"event","Q120546075":"event","Q120546072":"event","Q120546073":"event","Q120546078":"event","Q120546079":"event","Q120546076":"event","Q120546077":"event","Q120546082":"event","Q120546080":"event","Q120546087":"event","Q120546091":"event","Q120546093":"event","Q120546099":"event","Q120546096":"event","Q120546102":"event","Q120546103":"event","Q120546101":"event","Q120546104":"event","Q120555687":"event","Q120555684":"event","Q120555685":"event","Q120555690":"event","Q120555691":"event","Q120555688":"event","Q120555694":"event","Q120555695":"event","Q120555692":"event","Q120555693":"event","Q120555698":"event","Q120555696":"event","Q120555697":"event","Q120555702":"event","Q120555703":"event","Q120555700":"event","Q120555701":"event","Q120555706":"event","Q120555707":"event","Q120555704":"event","Q120555705":"event","Q120555710":"event","Q120555711":"event","Q120555708":"event","Q120555709":"event","Q120555715":"event","Q120555712":"event","Q120555713":"event","Q120555716":"event","Q120581410":"event","Q120585162":"event","Q120585166":"event","Q120585167":"event","Q122401455":"event","Q122401452":"event","Q122527530":"event","Q122527535":"event","Q122527533":"event","Q122609231":"event","Q122609234":"event","Q122609232":"event","Q122609233":"event","Q122750591":"event","Q120373221":"software","Q116884555":"event","Q120355815":"event","Q123039387":"event","Q123055589":"event","Q123083939":"event","Q123141152":"event","Q123158077":"event","Q123184870":"event","Q123184871":"event","Q123184868":"event","Q123184869":"event","Q123184874":"event","Q123184875":"event","Q123184872":"event","Q123184873":"event","Q123184879":"event","Q123184876":"event","Q123184877":"event","Q123184882":"event","Q123184883":"event","Q123184880":"event","Q123184881":"event","Q123184887":"event","Q123184884":"event","Q123184885":"event","Q123184890":"event","Q123184891":"event","Q123184888":"event","Q123184889":"event","Q123184894":"event","Q123184895":"event","Q123184892":"event","Q123184893":"event","Q123184896":"event","Q123286432":"event","Q123286562":"event","Q123286563":"event","Q123286566":"event","Q123286567":"event","Q123286564":"event","Q123286565":"event","Q123286570":"event","Q123286568":"event","Q123286569":"event","Q123958249":"event","Q124101493":"event","Q124101497":"event","Q124101501":"event","Q124101504":"event","Q124296682":"event","Q124296683":"event","Q124296687":"event","Q124296684":"event","Q124296685":"event","Q124296688":"event","Q124296696":"event","Q124351898":"event","Q124538135":"event","Q124664965":"event","Q124664989":"event","Q124665017":"event","Q124665028":"event","Q124665034":"event","Q124818284":"event","Q1201679":"software","Q1443965":"software","Q4280348":"software","Q612709":"event","Q1790846":"event","Q15824526":"event","Q15835244":"event","Q20639925":"event","Q20726358":"event","Q20726359":"event","Q20726362":"event","Q20726363":"event","Q20726360":"event","Q20726361":"event","Q20726366":"event","Q20726364":"event","Q20726365":"event","Q20803330":"event","Q20803331":"event","Q20803329":"event","Q20803334":"event","Q20803335":"event","Q20803332":"event","Q20803333":"event","Q20803338":"event","Q20803336":"event","Q20803337":"event","Q20803355":"event","Q20803358":"event","Q20803359":"event","Q20803356":"event","Q20803357":"event","Q64827016":"event","Q103842351":"software","Q110068411":"software","Q20803362":"event","Q20803363":"event","Q20803360":"event","Q20803361":"event","Q20803364":"event","Q20803710":"event","Q20803711":"event","Q20803709":"event","Q20803714":"event","Q20803712":"event","Q20803713":"event","Q21714502":"event","Q33127929":"event","Q33127935":"event","Q33127932":"event","Q33127938":"event","Q33127939":"event","Q33127936":"event","Q33127937":"event","Q33127942":"event","Q33127943":"event","Q33127941":"event","Q33127946":"event","Q33127947":"event","Q33127944":"event","Q33127945":"event","Q33127950":"event","Q33127951":"event","Q33127948":"event","Q33127949":"event","Q33127954":"event","Q33127955":"event","Q33127952":"event","Q33127953":"event","Q33127958":"event","Q33127956":"event","Q33127957":"event","Q33127962":"event","Q33127963":"event","Q33127961":"event","Q60668783":"event","Q83855372":"event","Q83855463":"event","Q83855466":"event","Q83855470":"event","Q83855473":"event","Q83855479":"event","Q83855476":"event","Q83855482":"event","Q83855483":"event","Q83855487":"event","Q83855485":"event","Q83855489":"event","Q83855686":"event","Q83855689":"event","Q83855694":"event","Q84720290":"event","Q84720288":"event","Q84727761":"event","Q84729468":"event","Q84729469":"event","Q84729472":"event","Q84729479":"event","Q84729476":"event","Q84729482":"event","Q84729486":"event","Q84729490":"event","Q84729494":"event","Q84729497":"event","Q84729502":"event","Q84729500":"event","Q84729506":"event","Q84729511":"event","Q84729509":"event","Q84729552":"event","Q84929990":"event","Q84965791":"event","Q84986918":"event","Q84986919":"event","Q84986923":"event","Q84986921":"event","Q84986927":"event","Q84986924":"event","Q84986925":"event","Q84986930":"event","Q84986931":"event","Q84986929":"event","Q84986934":"event","Q84986932":"event","Q84986933":"event","Q84986938":"event","Q84986939":"event","Q84986936":"event","Q84986940":"event","Q84986947":"event","Q84986944":"event","Q84986945":"event","Q84986950":"event","Q84986951":"event","Q85118096":"event","Q106433743":"event","Q107010087":"event","Q107010114":"event","Q107010113":"event","Q107010118":"event","Q107010119":"event","Q107010116":"event","Q107010117":"event","Q107010122":"event","Q107010123":"event","Q107010120":"event","Q107010121":"event","Q107010126":"event","Q107010127":"event","Q107010124":"event","Q107010125":"event","Q107010130":"event","Q107010131":"event","Q107010128":"event","Q107010129":"event","Q107010134":"event","Q107010132":"event","Q107010133":"event","Q107350358":"event","Q107350359":"event","Q107350362":"event","Q107350363":"event","Q107350360":"event","Q107350361":"event","Q107350366":"event","Q107350367":"event","Q107350364":"event","Q107350365":"event","Q109601335":"event","Q109601338":"event","Q109601336":"event","Q109601337":"event","Q109601340":"event","Q85118098":"event","Q85118102":"event","Q85118100":"event","Q85118106":"event","Q85118104":"event","Q85118111":"event","Q85118108":"event","Q85118114":"event","Q85118117":"event","Q85118123":"event","Q85118120":"event","Q85118126":"event","Q85118129":"event","Q85118135":"event","Q85118132":"event","Q85118138":"event","Q85118143":"event","Q85118141":"event","Q85118146":"event","Q85118149":"event","Q85118155":"event","Q85118152":"event","Q85118158":"event","Q85118163":"event","Q85118160":"event","Q85118166":"event","Q85118169":"event","Q85118174":"event","Q85118172":"event","Q85118177":"event","Q85118183":"event","Q85118180":"event","Q85118185":"event","Q85118189":"event","Q85118194":"event","Q85118199":"event","Q85118197":"event","Q85118202":"event","Q85118205":"event","Q85118211":"event","Q85118208":"event","Q85118214":"event","Q85118217":"event","Q85118223":"event","Q85118220":"event","Q85118227":"event","Q85118230":"event","Q85118233":"event","Q85118238":"event","Q85118236":"event","Q85118241":"event","Q85118247":"event","Q85118244":"event","Q85118250":"event","Q85118253":"event","Q85118259":"event","Q85118256":"event","Q85118267":"event","Q85118264":"event","Q85147470":"event","Q85147472":"event","Q85197262":"event","Q109601342":"event","Q109601341":"event","Q109601347":"event","Q109601344":"event","Q109601351":"event","Q109601354":"event","Q109601358":"event","Q109601361":"event","Q109601367":"event","Q109601364":"event","Q109601371":"event","Q109601369":"event","Q109601374":"event","Q109601373":"event","Q109601379":"event","Q109601376":"event","Q109601377":"event","Q109601383":"event","Q109601381":"event","Q109601387":"event","Q109601384":"event","Q109601390":"event","Q109601395":"event","Q109601392":"event","Q109601393":"event","Q109601399":"event","Q109601397":"event","Q109601403":"event","Q109601401":"event","Q109601407":"event","Q109601405":"event","Q109601411":"event","Q109601409":"event","Q109601415":"event","Q109601413":"event","Q109601417":"event","Q113329602":"event","Q113329603":"event","Q113329601":"event","Q113329606":"event","Q113329607":"event","Q113329604":"event","Q113329605":"event","Q113329610":"event","Q113329608":"event","Q113329609":"event","Q113329614":"event","Q113329615":"event","Q113329612":"event","Q113329613":"event","Q113329618":"event","Q113329619":"event","Q113329616":"event","Q113329617":"event","Q113329622":"event","Q113329623":"event","Q113329620":"event","Q113329621":"event","Q113329626":"event","Q113329627":"event","Q113329624":"event","Q113329625":"event","Q113329630":"event","Q113329631":"event","Q113329628":"event","Q113329629":"event","Q113329634":"event","Q113329635":"event","Q113329632":"event","Q113329633":"event","Q113329638":"event","Q113329639":"event","Q113329636":"event","Q113329637":"event","Q113329642":"event","Q113329643":"event","Q113329640":"event","Q113329641":"event","Q115164464":"event","Q188374":"event","Q209521":"event","Q298779":"event","Q304795":"event","Q520388":"event","Q630921":"event","Q1132436":"event","Q5248689":"event","Q25616583":"event","Q62019097":"software","Q63243980":"software","Q71441946":"software","Q60668786":"event","Q60668787":"event","Q60668784":"event","Q60668785":"event","Q60668788":"event","Q60668789":"event","Q58884":"event","Q86681276":"event","Q108099928":"software","Q108743617":"event","Q110930241":"event","Q111981154":"event","Q116039549":"event","Q118288794":"event","Q123596820":"event","Q3177953":"software","Q1243583":"event","Q1252082":"event","Q1408581":"event","Q1418057":"event","Q1430576":"event","Q1813619":"event","Q1882465":"event","Q1924371":"event","Q1925193":"event","Q1995629":"event","Q2081003":"event","Q2118685":"event","Q2154197":"event","Q2200822":"event","Q2410671":"event","Q2468711":"event","Q2591970":"event","Q2672940":"event","Q2919296":"event","Q4261412":"event","Q5874005":"event","Q7536289":"event","Q7773023":"event","Q8056624":"event","Q9030081":"event","Q12652151":"event","Q12765549":"event","Q13626210":"event","Q13626315":"event","Q15283528":"event","Q15875625":"event","Q16355244":"event","Q16523578":"event","Q16858639":"event","Q16919200":"event","Q17770217":"event","Q17770223":"event","Q19508432":"event","Q25230353":"event","Q28554188":"event","Q64473030":"speech","Q30965709":"event","Q59152282":"dataset","Q61745129":"software","Q63645022":"software","Q63645039":"software","Q63645079":"software","Q71474750":"software","Q65217965":"event","Q66208461":"event","Q66809353":"event","Q102336992":"dataset","Q102337068":"dataset","Q96583353":"software","Q96678034":"software","Q86665892":"event","Q92320983":"event","Q92321117":"event","Q92402259":"event","Q92475919":"event","Q92480586":"event","Q92480584":"event","Q92480588":"event","Q92480589":"event","Q92482708":"event","Q92482719":"event","Q92482728":"event","Q92482736":"event","Q106529593":"software","Q107139679":"software","Q97163161":"event","Q97174727":"event","Q112341127":"software","Q112341154":"software","Q112341165":"software","Q112341384":"software","Q112341410":"software","Q112341454":"software","Q112342644":"software","Q112345292":"software","Q112345960":"software","Q112351279":"software","Q112351757":"software","Q112352553":"software","Q112352945":"software","Q112400919":"software","Q112402372":"software","Q116763062":"software","Q117085242":"software","Q107637129":"event","Q123129704":"software","Q124368261":"dataset","Q113671098":"event","Q113671358":"event","Q113671568":"event","Q113671616":"event","Q113672080":"event","Q113673789":"event","Q113673861":"event","Q113673900":"event","Q113673914":"event","Q113673971":"event","Q113674113":"event","Q113674126":"event","Q113674173":"event","Q113674231":"event","Q113680613":"event","Q113680666":"event","Q113680679":"event","Q113680693":"event","Q113680699":"event","Q113680707":"event","Q113686053":"event","Q113686091":"event","Q113686152":"event","Q113686212":"event","Q113686218":"event","Q113686320":"event","Q113726628":"event","Q113727414":"event","Q113827812":"event","Q113848673":"event","Q113848897":"event","Q113963006":"event","Q113963546":"event","Q113987185":"event","Q113987212":"event","Q113993283":"event","Q113993550":"event","Q114051407":"event","Q114299189":"event","Q114299351":"event","Q114316143":"event","Q114316300":"event","Q114316378":"event","Q114316385":"event","Q114316729":"event","Q114316895":"event","Q114316916":"event","Q114318141":"event","Q114318296":"event","Q114318451":"event","Q114318549":"event","Q114318881":"event","Q7548531":"software","Q583208":"event","Q662062":"event","Q1092832":"event","Q1526855":"event","Q1536607":"event","Q2426029":"event","Q2733412":"event","Q16935625":"software","Q11337314":"event","Q11337312":"event","Q11389977":"event","Q30314076":"software","Q28105774":"event","Q67184216":"webpage","Q67187625":"webpage","Q67200518":"webpage","Q67202353":"webpage","Q81706896":"webpage","Q48214343":"event","Q61793874":"software","Q63914602":"software","Q71467370":"software","Q71477585":"software","Q71683262":"software","Q98851381":"webpage","Q99903892":"webpage","Q73712633":"event","Q73800026":"event","Q78661198":"event","Q78663279":"event","Q78663384":"event","Q104018626":"dataset","Q114395980":"report","Q92602121":"software","Q111196346":"software","Q112424780":"software","Q113126797":"software","Q113360642":"software","Q103483471":"event","Q103923143":"event","Q103936957":"event","Q103940787":"event","Q103950409":"event","Q103962224":"event","Q103963527":"event","Q103982585":"event","Q104006643":"event","Q104007511":"event","Q104008092":"event","Q104008779":"event","Q104053993":"event","Q104054110":"event","Q104054280":"event","Q104064391":"event","Q104065502":"event","Q104066770":"event","Q104068679":"event","Q104070055":"event","Q104071036":"event","Q104075005":"event","Q104076979":"event","Q104122684":"event","Q104639844":"event","Q104640158":"event","Q105565104":"event","Q106070339":"event","Q106070408":"event","Q106070423":"event","Q107116815":"event","Q108688295":"event","Q110598018":"event","Q110608419":"event","Q110625293":"event","Q110634149":"event","Q110769324":"event","Q110769435":"event","Q110773381":"event","Q110773501":"event","Q110775311":"event","Q110973441":"event","Q110985132":"event","Q110985145":"event","Q110985158":"event","Q110985177":"event","Q110985200":"event","Q111155927":"event","Q111170880":"event","Q111273912":"event","Q111539787":"event","Q111539847":"event","Q111540145":"event","Q111540245":"event","Q111540289":"event","Q112174940":"event","Q112174956":"event","Q113565348":"event","Q113589277":"event","Q113589395":"event","Q113589574":"event","Q113589761":"event","Q113590079":"event","Q113590302":"event","Q113590426":"event","Q113590676":"event","Q113590751":"event","Q116133315":"event","Q116134678":"event","Q116178383":"event","Q116184845":"event","Q116303185":"event","Q116303416":"event","Q116303673":"event","Q116303938":"event","Q116313269":"event","Q78663705":"event","Q78663730":"event","Q80580812":"event","Q81730470":"event","Q81731238":"event","Q86736843":"event","Q86822651":"event","Q86835240":"event","Q87576269":"event","Q87576521":"event","Q87577087":"event","Q87670356":"event","Q97144001":"event","Q98060253":"event","Q98114588":"event","Q98445850":"event","Q98497337":"event","Q98526009":"event","Q99469811":"event","Q99469819":"event","Q99469817":"event","Q101552342":"event","Q101769390":"event","Q102071849":"event","Q103097200":"event","Q103943865":"event","Q103956370":"event","Q103966898":"event","Q104128703":"event","Q104145162":"event","Q104145752":"event","Q104156892":"event","Q104157232":"event","Q104157398":"event","Q116463387":"event","Q116850372":"event","Q116875197":"event","Q116875277":"event","Q116875323":"event","Q116875369":"event","Q116875439":"event","Q117036915":"event","Q117078207":"event","Q117190432":"event","Q117306705":"event","Q117419753":"event","Q117448358":"event","Q118395633":"event","Q119439655":"event","Q121298423":"event","Q121338096":"event","Q121344862":"event","Q121769686":"event","Q122335284":"event","Q122661307":"event","Q122759837":"event","Q122759869":"event","Q122760130":"event","Q122760353":"event","Q122760591":"event","Q122760633":"event","Q122760672":"event","Q122760729":"event","Q124094325":"event","Q124094386":"event","Q124094473":"event","Q124094652":"event","Q124094746":"event","Q124094949":"event","Q124095027":"event","Q124095032":"event","Q124169464":"event","Q124208148":"event","Q124211152":"event","Q124211202":"event","Q124211353":"event","Q124211414":"event","Q124211471":"event","Q124211497":"event","Q124211506":"event","Q124211515":"event","Q124211525":"event","Q124211536":"event","Q124216907":"event","Q124217002":"event","Q124217226":"event","Q124217338":"event","Q124217361":"event","Q124217378":"event","Q124217397":"event","Q124217420":"event","Q124217457":"event","Q124217471":"event","Q124217509":"event","Q124217531":"event","Q124217712":"event","Q124218180":"event","Q124218185":"event","Q124218275":"event","Q124218282":"event","Q124218296":"event","Q124218306":"event","Q124218311":"event","Q124218347":"event","Q918091":"event","Q1264773":"event","Q61629091":"event","Q74284367":"event","Q76859341":"event","Q78486081":"event","Q78662818":"event","Q79138155":"event","Q81535750":"event","Q81656901":"event","Q81657612":"event","Q81658683":"event","Q81724987":"event","Q82295113":"event","Q87848343":"event","Q97654417":"event","Q98423717":"event","Q99353507":"event","Q99519611":"event","Q101085154":"event","Q104183710":"event","Q104185009":"event","Q104195002":"event","Q104205887":"event","Q104208303":"event","Q104211057":"event","Q104211366":"event","Q104211520":"event","Q104211540":"event","Q104211567":"event","Q104386369":"event","Q104586703":"event","Q104640047":"event","Q106063742":"event","Q106413522":"event","Q107116686":"event","Q108551678":"event","Q108933774":"event","Q109606615":"event","Q109967748":"event","Q110401171":"event","Q110462295":"event","Q110626402":"event","Q110769338":"event","Q110773721":"event","Q110773969":"event","Q110774135":"event","Q110774311":"event","Q110921852":"event","Q111346623":"event","Q111540293":"event","Q111540335":"event","Q111540372":"event","Q111540429":"event","Q111540474":"event","Q111540497":"event","Q111540521":"event","Q111540550":"event","Q111540603":"event","Q111540622":"event","Q112066622":"event","Q112174916":"event","Q112174924":"event","Q112304546":"event","Q113590563":"event","Q114960520":"event","Q115405046":"event","Q115756707":"event","Q115802224":"event","Q115956711":"event","Q115988643":"event","Q116029080":"event","Q116302569":"event","Q116312837":"event","Q116457819":"event","Q116457821":"event","Q116701815":"event","Q116738193":"event","Q116778096":"event","Q116875396":"event","Q117018083":"event","Q117599439":"event","Q117660528":"event","Q117661310":"event","Q117769558":"event","Q117789812":"event","Q117790137":"event","Q117971279":"event","Q118395837":"event","Q118397271":"event","Q118869347":"event","Q119439839":"event","Q121140335":"event","Q121769709":"event","Q122335328":"event","Q123377664":"event","Q123597136":"event","Q123614868":"event","Q124038014":"event","Q124038042":"event","Q124078424":"event","Q124093002":"event","Q124094839":"event","Q124169326":"event","Q124199351":"event","Q124199711":"event","Q124201473":"event","Q124208015":"event","Q124211282":"event","Q124216873":"event","Q124216886":"event","Q124216946":"event","Q124217488":"event","Q124217560":"event","Q124217675":"event","Q124218194":"event","Q124218200":"event","Q124218256":"event","Q124218266":"event","Q124218322":"event","Q114769542":"software","Q104850774":"event","Q106201842":"event","Q106946690":"event","Q107366029":"event","Q107366160":"event","Q107418089":"event","Q107969818":"event","Q109522070":"event","Q111948134":"event","Q112339940":"event","Q112339961":"event","Q112429058":"event","Q112623188":"event","Q116457987":"event","Q120692980":"event","Q124218335":"event","Q164848":"event","Q164885":"event","Q187579":"event","Q216323":"event","Q216331":"event","Q378806":"event","Q471757":"event","Q1001620":"event","Q1649046":"event","Q1935482":"event","Q2076801":"event","Q2807389":"event","Q2818079":"event","Q3153583":"event","Q4038992":"event","Q4546048":"event","Q4546049":"event","Q4642512":"event","Q4642516":"event","Q4731611":"event","Q5393774":"event","Q5532947":"event","Q6696254":"event","Q6952504":"event","Q7237930":"event","Q7570013":"event","Q7680005":"event","Q7814142":"event","Q10876397":"event","Q12062078":"event","Q15812736":"event","Q16852243":"event","Q16987422":"event","Q21282560":"event","Q28229160":"event","Q28448109":"event","Q39050643":"event","Q39050716":"event","Q39060995":"event","Q42264013":"event","Q42377041":"event","Q84826485":"regulation","Q50291818":"event","Q54933268":"event","Q63860191":"event","Q89668331":"dataset","Q64569595":"event","Q65742449":"event","Q67438344":"event","Q29613":"event","Q74685863":"event","Q74686741":"event","Q87267448":"event","Q87268198":"event","Q87292806":"event","Q87292877":"event","Q87344584":"event","Q87592754":"event","Q87776830":"event","Q87776839":"event","Q87776842":"event","Q88007175":"event","Q92282907":"event","Q92282909":"event","Q92312582":"event","Q93154810":"event","Q93306595":"event","Q93395449":"event","Q93455943":"event","Q93462300":"event","Q93557741":"event","Q93558289":"event","Q96371234":"event","Q96377164":"event","Q96379154":"event","Q96379152":"event","Q96379153":"event","Q96393054":"event","Q96393074":"event","Q97667346":"event","Q97768050":"event","Q97769737":"event","Q106958128":"event","Q107211053":"event","Q1204811":"event","Q1204823":"event","Q3664502":"event","Q3664508":"event","Q3827270":"event","Q4376957":"event","Q4376998":"event","Q4887636":"event","Q5449102":"event","Q5449103":"event","Q5449104":"event","Q5449105":"event","Q6364027":"event","Q18759108":"software","Q7423198":"event","Q7589630":"event","Q15465716":"event","Q16058278":"event","Q18654238":"event","Q18657941":"event","Q23055095":"event","Q24838614":"event","Q48842194":"event","Q52358585":"event","Q52362037":"event","Q95124560":"software","Q85870490":"event","Q92313829":"event","Q93155836":"event","Q93306847":"event","Q93395542":"event","Q93455815":"event","Q93462304":"event","Q93558099":"event","Q93558491":"event","Q93559180":"event","Q93559266":"event","Q93559482":"event","Q93559484":"event","Q94175988":"event","Q94176089":"event","Q94179568":"event","Q94179811":"event","Q94184446":"event","Q94184448":"event","Q94328268":"event","Q94330804":"event","Q94334991":"event","Q94340605":"event","Q94343868":"event","Q94343874":"event","Q94440678":"event","Q94440695":"event","Q94449970":"event","Q94450051":"event","Q94456115":"event","Q94456180":"event","Q94461968":"event","Q94462023":"event","Q94464365":"event","Q94464422":"event","Q94466676":"event","Q94466778":"event","Q94553391":"event","Q94553400":"event","Q94566760":"event","Q94566909":"event","Q94572595":"event","Q94572597":"event","Q94602741":"event","Q94602898":"event","Q94606984":"event","Q94607074":"event","Q94609398":"event","Q94609435":"event","Q94614602":"event","Q94614685":"event","Q94620942":"event","Q94620977":"event","Q94635295":"event","Q94635434":"event","Q94674229":"event","Q94674325":"event","Q94679811":"event","Q94679999":"event","Q94683284":"event","Q94683604":"event","Q94684262":"event","Q94684504":"event","Q94694462":"event","Q94694487":"event","Q94694551":"event","Q94694569":"event","Q94694792":"event","Q94694933":"event","Q97579482":"event","Q97581349":"event","Q104864731":"event","Q105967793":"event","Q106623590":"event","Q108196863":"event","Q109022403":"event","Q109172450":"event","Q109322393":"event","Q109535776":"event","Q112727394":"event","Q112727401":"event","Q112727407":"event","Q1204815":"event","Q1204813":"event","Q2332435":"event","Q2332459":"event","Q2575326":"event","Q3394364":"event","Q4887639":"event","Q4887640":"event","Q4896558":"event","Q4896567":"event","Q4921543":"event","Q4921548":"event","Q5461348":"event","Q5569251":"event","Q6359110":"event","Q6359124":"event","Q6359166":"event","Q6963264":"event","Q7423197":"event","Q7438990":"event","Q7438991":"event","Q7929107":"event","Q16058282":"event","Q17001884":"event","Q17011291":"event","Q17011296":"event","Q17162317":"event","Q17500617":"event","Q18204260":"event","Q18654241":"event","Q18657945":"event","Q18760021":"event","Q20019002":"event","Q21050208":"event","Q22773457":"event","Q24057108":"event","Q24838077":"event","Q24838841":"event","Q27958270":"event","Q27959453":"event","Q28222008":"event","Q28222030":"event","Q28222060":"event","Q28417679":"event","Q28417682":"event","Q28417685":"event","Q43401538":"event","Q50890163":"event","Q52358547":"event","Q55474574":"event","Q55639517":"event","Q59511589":"event","Q65121886":"event","Q106925271":"software","Q97273737":"event","Q97365604":"event","Q97579415":"event","Q97579418":"event","Q97579484":"event","Q97581369":"event","Q97671312":"event","Q97728938":"event","Q100458400":"event","Q100458525":"event","Q100458691":"event","Q100458780":"event","Q100458838":"event","Q100458931":"event","Q100459125":"event","Q100459319":"event","Q100459495":"event","Q101442571":"event","Q101464718":"event","Q101464937":"event","Q101465135":"event","Q101465286":"event","Q101465464":"event","Q101465641":"event","Q101465816":"event","Q101466018":"event","Q101466197":"event","Q101466371":"event","Q101466540":"event","Q101552796":"event","Q101558899":"event","Q101559306":"event","Q101559475":"event","Q101833672":"event","Q106433750":"event","Q107350370":"event","Q107350371":"event","Q107441844":"event","Q107441860":"event","Q107487610":"event","Q107560008":"event","Q110425407":"event","Q110425405":"event","Q110425409":"event","Q110426038":"event","Q110426036":"event","Q110426037":"event","Q110426043":"event","Q110426040":"event","Q110426045":"event","Q110426048":"event","Q110426052":"event","Q110426059":"event","Q110435114":"event","Q110435115":"event","Q110435113":"event","Q110435116":"event","Q112727411":"event","Q112727423":"event","Q112727421":"event","Q17099416":"webpage","Q2108852":"software","Q4587998":"event","Q4591288":"event","Q4591796":"event","Q4592308":"event","Q4592891":"event","Q4601247":"event","Q4602662":"event","Q4861057":"event","Q4861618":"event","Q4899805":"event","Q4961598":"event","Q4973708":"event","Q5025826":"event","Q5189716":"event","Q5325494":"event","Q5377332":"event","Q5637384":"event","Q5645760":"event","Q5657629":"event","Q5666613":"event","Q5683838":"event","Q5763312":"event","Q5913321":"event","Q6084407":"event","Q6391510":"event","Q6481463":"event","Q6537337":"event","Q6820741":"event","Q7305510":"event","Q7331066":"event","Q7571176":"event","Q7650353":"event","Q7829682":"event","Q7966607":"event","Q7967318":"event","Q7989235":"event","Q16993367":"event","Q16995693":"event","Q16998864":"event","Q18129485":"event","Q18395406":"event","Q18395411":"event","Q18395413":"event","Q18395420":"event","Q22909824":"event","Q25052881":"event","Q28222080":"event","Q28222124":"event","Q28222136":"event","Q61005756":"software","Q99913142":"webpage","Q100775361":"webpage","Q100775856":"webpage","Q105635705":"webpage","Q105690751":"webpage","Q105729294":"webpage","Q107428796":"webpage","Q119717888":"webpage","Q85118261":"event","Q98686791":"event","Q98686792":"event","Q98770211":"event","Q98821837":"event","Q101244796":"event","Q101244806":"event","Q101244829":"event","Q101244851":"event","Q101244866":"event","Q862765":"regulation","Q115454555":"software","Q105710677":"event","Q106287278":"event","Q106293035":"event","Q106381097":"event","Q106433752":"event","Q106433770":"event","Q106586972":"event","Q106595399":"event","Q106595409":"event","Q106686051":"event","Q106689662":"event","Q106768512":"event","Q106864037":"event","Q106869479":"event","Q106921240":"event","Q107003291":"event","Q108134073":"event","Q108827326":"event","Q108827325":"event","Q108827331":"event","Q108827328":"event","Q110651752":"event","Q111487761":"event","Q111520672":"event","Q112265285":"event","Q112265333":"event","Q112269034":"event","Q112269157":"event","Q124041478":"software","Q115556219":"event","Q115556989":"event","Q115623702":"event","Q117356204":"event","Q117356409":"event","Q117357705":"event","Q118868769":"event","Q118868792":"event","Q118868806":"event","Q118868831":"event","Q123692930":"event","Q123692940":"event","Q124329214":"event","Q124329215":"event","Q124329212":"event","Q124329213":"event","Q124329218":"event","Q124329219":"event","Q124329216":"event","Q124329217":"event","Q124329222":"event","Q124329223":"event","Q124329220":"event","Q124329221":"event","Q124329226":"event","Q124329224":"event","Q124329225":"event","Q1143132":"software","Q12311300":"broadcast","Q7855619":"software","Q9318902":"software","Q574499":"event","Q606581":"event","Q656591":"event","Q670258":"event","Q674540":"event","Q675378":"event","Q675507":"event","Q810265":"event","Q810268":"event","Q822432":"event","Q844196":"event","Q1275348":"event","Q1516229":"event","Q4593458":"event","Q4594591":"event","Q4597275":"event","Q4598577":"event","Q4599857":"event","Q4601230":"event","Q19272838":"software","Q20803731":"event","Q33127964":"event","Q56302508":"event","Q61106897":"event","Q63995448":"event","Q99973598":"webpage","Q33861":"event","Q33881":"event","Q33937":"event","Q117037768":"webpage","Q117038109":"webpage","Q103842826":"broadcast","Q106845483":"broadcast","Q106845592":"broadcast","Q105222072":"software","Q124329227":"event","Q124329230":"event","Q124329231":"event","Q124329228":"event","Q124329229":"event","Q124329234":"event","Q124329235":"event","Q124329232":"event","Q124329233":"event","Q124329238":"event","Q124329236":"event","Q124329237":"event","Q124329242":"event","Q124329243":"event","Q124329240":"event","Q124329241":"event","Q124329246":"event","Q124329247":"event","Q124329244":"event","Q124329245":"event","Q124329250":"event","Q124329251":"event","Q124329248":"event","Q124329249":"event","Q124493033":"event","Q124493378":"event","Q124493697":"event","Q124493749":"event","Q124493950":"event","Q124497616":"event","Q124497636":"event","Q124497842":"event","Q124497880":"event","Q124497892":"event","Q124504835":"event","Q124504867":"event","Q124518758":"event","Q124519395":"event","Q124519431":"event","Q124556928":"event","Q124557169":"event","Q124655982":"event","Q124657513":"event","Q124658058":"event","Q124658086":"event","Q124658286":"event","Q124658796":"event","Q124659025":"event","Q124661052":"event","Q124661215":"event","Q124661227":"event","Q124661419":"event","Q124661548":"event","Q124661564":"event","Q124661583":"event","Q124665396":"event","Q124665420":"event","Q124666016":"event","Q124668741":"event","Q124668762":"event","Q124668792":"event","Q2181639":"event","Q2681907":"event","Q2838286":"event","Q3768638":"event","Q3768637":"event","Q7828991":"event","Q23718937":"event","Q23718942":"event","Q23718943":"event","Q23718940":"event","Q23718941":"event","Q23718946":"event","Q23718944":"event","Q23720095":"event","Q23720092":"event","Q51193571":"event","Q51193569":"event","Q51193575":"event","Q51193578":"event","Q51193576":"event","Q51193577":"event","Q51193582":"event","Q51193584":"event","Q51293682":"event","Q51293681":"event","Q51770787":"event","Q51770790":"event","Q51770788":"event","Q51770794":"event","Q51770795":"event","Q51770792":"event","Q51770796":"event","Q52588732":"event","Q52588738":"event","Q52588736":"event","Q52588743":"event","Q52588740":"event","Q52588741":"event","Q51631":"book","Q111568511":"event","Q111568514":"event","Q111568515":"event","Q111568512":"event","Q111568513":"event","Q111568518":"event","Q111568516":"event","Q111568517":"event","Q115110634":"event","Q115110635":"event","Q115110633":"event","Q115315963":"event","Q115315966":"event","Q115315967":"event","Q115315964":"event","Q115315965":"event","Q115315968":"event","Q115315969":"event","Q115544747":"event","Q115544750":"event","Q115544748":"event","Q115544754":"event","Q115544752":"event","Q115565414":"event","Q115565415":"event","Q116753423":"event","Q116753424":"event","Q116766126":"event","Q116766130":"event","Q116766131":"event","Q116766128":"event","Q116766129":"event","Q116766132":"event","Q116766670":"event","Q116766671":"event","Q116766669":"event","Q116766674":"event","Q116766675":"event","Q116766672":"event","Q116766673":"event","Q120149747":"event","Q120149751":"event","Q120149749":"event","Q120229791":"event","Q120229798":"event","Q120236359":"event","Q120236362":"event","Q120236361":"event","Q120236367":"event","Q120236365":"event","Q1850081":"event","Q3313908":"event","Q3399838":"event","Q51036572":"event","Q51036576":"event","Q51036582":"event","Q51036580":"event","Q51036587":"event","Q51036589":"event","Q51036593":"event","Q51036598":"event","Q51036601":"event","Q51036605":"event","Q51193568":"event","Q51293674":"event","Q51293675":"event","Q51293679":"event","Q51293676":"event","Q51293677":"event","Q51293680":"event","Q51770798":"event","Q51770799":"event","Q52588747":"event","Q52588751":"event","Q52588748":"event","Q61523399":"event","Q61523402":"event","Q61523403":"event","Q61523406":"event","Q61523405":"event","Q61523411":"event","Q61523409":"event","Q61523414":"event","Q62760043":"event","Q62760047":"event","Q62760044":"event","Q62760050":"event","Q62760048":"event","Q62760049":"event","Q62760054":"event","Q62760053":"event","Q62760057":"event","Q62776638":"event","Q62776636":"event","Q62776643":"event","Q62776641":"event","Q62776646":"event","Q62776644":"event","Q62776645":"event","Q62776648":"event","Q80395":"event","Q119708":"event","Q162877":"event","Q172708":"event","Q175992":"event","Q178102":"event","Q257105":"event","Q260355":"event","Q268745":"event","Q332560":"event","Q387443":"event","Q423319":"event","Q506424":"event","Q517665":"event","Q556301":"event","Q570377":"event","Q571489":"event","Q572150":"event","Q574029":"event","Q589256":"event","Q598133":"event","Q598249":"event","Q635110":"event","Q638474":"event","Q638482":"event","Q655314":"event","Q658769":"event","Q668106":"event","Q673370":"event","Q676333":"event","Q676530":"event","Q677045":"event","Q684305":"event","Q687236":"event","Q697936":"event","Q698491":"event","Q729619":"event","Q734245":"event","Q770429":"event","Q782520":"event","Q893394":"event","Q909684":"event","Q933373":"event","Q934877":"event","Q949564":"event","Q1147475":"event","Q1165767":"event","Q1318874":"event","Q1329957":"event","Q1385231":"event","Q1392670":"event","Q1393672":"event","Q1407289":"event","Q1457820":"event","Q1503551":"event","Q1534355":"event","Q1565685":"event","Q1571252":"event","Q1584946":"event","Q1585973":"event","Q2014341":"event","Q3365208":"event","Q3854031":"event","Q18920301":"event","Q20803715":"event","Q20803716":"event","Q33127959":"event","Q33127960":"event","Q57778463":"event","Q59588179":"event","Q30602":"event","Q33729":"event","Q36854":"event","Q36969":"event","Q41598":"event","Q46191":"event","Q46517":"event","Q72488741":"event","Q72488783":"event","Q72488792":"event","Q72488799":"event","Q72488805":"event","Q72488814":"event","Q72488822":"event","Q72488830":"event","Q72488835":"event","Q72488845":"event","Q72488853":"event","Q72488860":"event","Q72488866":"event","Q72488873":"event","Q72488879":"event","Q72488886":"event","Q72488892":"event","Q72488900":"event","Q72488905":"event","Q72488914":"event","Q72488918":"event","Q72488923":"event","Q72567164":"event","Q1590315":"event","Q1629947":"event","Q1629964":"event","Q1630074":"event","Q1630087":"event","Q1684276":"event","Q1740815":"event","Q1750743":"event","Q1750741":"event","Q1772771":"event","Q1823555":"event","Q1861451":"event","Q1885715":"event","Q1885737":"event","Q1886693":"event","Q1891291":"event","Q1913190":"event","Q1968157":"event","Q1998435":"event","Q2033011":"event","Q2035361":"event","Q2094698":"event","Q2094712":"event","Q2095740":"event","Q2106915":"event","Q2108532":"event","Q2117932":"event","Q2157107":"event","Q2383287":"event","Q2390797":"event","Q2404958":"event","Q2426512":"event","Q2466560":"event","Q2557477":"event","Q2610391":"event","Q2630733":"event","Q2954097":"event","Q2954100":"event","Q2955303":"event","Q2955306":"event","Q2955328":"event","Q2955383":"event","Q2955385":"event","Q2995915":"event","Q2995928":"event","Q2995948":"event","Q3652330":"event","Q3652329":"event","Q3652334":"event","Q3652355":"event","Q4604978":"event","Q4630313":"event","Q13603535":"event","Q14824688":"event","Q14931664":"event","Q14934133":"event","Q14949671":"event","Q15918580":"event","Q16828012":"event","Q16958968":"event","Q17001064":"event","Q17147490":"event","Q17625171":"event","Q17625182":"event","Q17625382":"event","Q19967265":"event","Q20982230":"event","Q20988061":"event","Q20992281":"event","Q21005367":"event","Q23689683":"event","Q27150066":"event","Q27205185":"event","Q27205194":"event","Q27207822":"event","Q27230869":"event","Q28453943":"event","Q28453947":"event","Q29456648":"event","Q34987792":"event","Q34989095":"event","Q39057964":"event","Q39058042":"event","Q40003384":"event","Q40071449":"event","Q40136680":"event","Q40222960":"event","Q40341655":"event","Q40676664":"event","Q40698652":"event","Q40776030":"event","Q48844675":"event","Q56056085":"event","Q56056127":"event","Q56056162":"event","Q56056175":"event","Q56056192":"event","Q56244811":"event","Q56244911":"event","Q56244965":"event","Q108527067":"event","Q108527199":"event","Q108532844":"event","Q108532869":"event","Q108532894":"event","Q108532905":"event","Q108532910":"event","Q108532911":"event","Q108532908":"event","Q108532912":"event","Q108532913":"event","Q108806827":"event","Q109010975":"event","Q109236938":"event","Q109236939":"event","Q109373980":"event","Q109424007":"event","Q109424008":"event","Q109905457":"event","Q110559899":"event","Q110559900":"event","Q111025908":"event","Q111944520":"event","Q113669902":"event","Q113670690":"event","Q113670917":"event","Q113671251":"event","Q113671566":"event","Q56245181":"event","Q56245251":"event","Q56245297":"event","Q56245390":"event","Q56759846":"event","Q56884632":"event","Q60061449":"event","Q60967395":"event","Q60967591":"event","Q60967592":"event","Q63207895":"event","Q65950286":"event","Q65952767":"event","Q65952775":"event","Q65952797":"event","Q67888338":"event","Q67928873":"event","Q68352610":"event","Q68576443":"event","Q68686605":"event","Q68688505":"event","Q69515955":"event","Q69515953":"event","Q69515959":"event","Q69515956":"event","Q69515961":"event","Q69515967":"event","Q69515965":"event","Q69515971":"event","Q69515969":"event","Q69638699":"event","Q69638697":"event","Q69638701":"event","Q69638704":"event","Q69639167":"event","Q69639169":"event","Q69639191":"event","Q69639194":"event","Q69643283":"event","Q69643281":"event","Q69643286":"event","Q69643285":"event","Q69643290":"event","Q69643289":"event","Q69643294":"event","Q69643296":"event","Q69643297":"event","Q69643303":"event","Q69643301":"event","Q69643306":"event","Q69643310":"event","Q69643314":"event","Q69643313":"event","Q69643318":"event","Q69643316":"event","Q69643321":"event","Q69643327":"event","Q69643331":"event","Q69643333":"event","Q69643339":"event","Q69643336":"event","Q69643342":"event","Q99519480":"event","Q99519529":"event","Q99519567":"event","Q99519600":"event","Q102256667":"event","Q102277744":"event","Q102351400":"event","Q102351610":"event","Q102511820":"event","Q102512929":"event","Q113623090":"event","Q113672391":"event","Q113672768":"event","Q113672879":"event","Q113673327":"event","Q113673436":"event","Q113674373":"event","Q113860809":"event","Q113863742":"event","Q114059466":"event","Q114059549":"event","Q114152601":"event","Q114167555":"event","Q114167628":"event","Q114173129":"event","Q114173160":"event","Q114173492":"event","Q114173606":"event","Q114173736":"event","Q114173812":"event","Q114175657":"event","Q114175862":"event","Q114176376":"event","Q114176524":"event","Q114176614":"event","Q114176833":"event","Q114176947":"event","Q114177069":"event","Q114177289":"event","Q114177467":"event","Q114182399":"event","Q114352718":"event","Q114437480":"event","Q114496041":"event","Q114496053":"event","Q114565683":"event","Q114565745":"event","Q114566842":"event","Q114567080":"event","Q114567144":"event","Q115245433":"event","Q116212760":"event","Q116753422":"event","Q116753420":"event","Q116753421":"event","Q116980431":"event","Q117044495":"event","Q117044541":"event","Q118323749":"event","Q120146856":"event","Q121092383":"event","Q121092381":"event","Q121092387":"event","Q121092389":"event","Q121092392":"event","Q121095643":"event","Q121742098":"event","Q121742160":"event","Q121742191":"event","Q121742295":"event","Q121742349":"event","Q121742400":"event","Q124214634":"event","Q124214733":"event","Q124214911":"event","Q124214927":"event","Q124392781":"event","Q124734135":"event","Q124734136":"event","Q124734137":"event","Q124734158":"event","Q124734159":"event","Q124734157":"event","Q124734162":"event","Q124734163":"event","Q124734160":"event","Q124734161":"event","Q124734164":"event","Q124734165":"event","Q4597492":"event","Q4598753":"event","Q26913411":"event","Q26913415":"event","Q26913420":"event","Q26913431":"event","Q27481323":"event","Q27481377":"event","Q51514007":"event","Q51514005":"event","Q51514010":"event","Q51514014":"event","Q51514012":"event","Q51514017":"event","Q61727850":"event","Q61727848":"event","Q61727854":"event","Q75693258":"event","Q75693330":"event","Q75693334":"event","Q75693340":"event","Q4804976":"event","Q4805016":"event","Q4831377":"event","Q4837784":"event","Q4863857":"event","Q4867320":"event","Q4867535":"event","Q4868097":"event","Q4879219":"event","Q4896023":"event","Q4920022":"event","Q4922741":"event","Q4923288":"event","Q4930867":"event","Q4940076":"event","Q4948241":"event","Q4950303":"event","Q4953732":"event","Q4955950":"event","Q4960051":"event","Q4961802":"event","Q4966909":"event","Q4968847":"event","Q4972212":"event","Q4973773":"event","Q4976945":"event","Q5025632":"event","Q5032731":"event","Q5033715":"event","Q5037606":"event","Q5041413":"event","Q5046152":"event","Q5050186":"event","Q5050233":"event","Q5086586":"event","Q5089977":"event","Q5090248":"event","Q5092666":"event","Q5093425":"event","Q5093783":"event","Q5093842":"event","Q5096023":"event","Q5099214":"event","Q5105173":"event","Q5109107":"event","Q5123664":"event","Q5142121":"event","Q5160482":"event","Q5168382":"event","Q5169827":"event","Q5175497":"event","Q5182757":"event","Q5182988":"event","Q5184838":"event","Q5207728":"event","Q5224019":"event","Q5225620":"event","Q5230306":"event","Q5261535":"event","Q5261698":"event","Q5263366":"event","Q5302538":"event","Q5327527":"event","Q5327986":"event","Q5328228":"event","Q5328244":"event","Q5328537":"event","Q5328578":"event","Q5328841":"event","Q5329053":"event","Q5329427":"event","Q5329832":"event","Q5330764":"event","Q5336965":"event","Q5365263":"event","Q5366435":"event","Q5383887":"event","Q5384012":"event","Q5385735":"event","Q5420150":"event","Q5434971":"event","Q5443506":"event","Q5468895":"event","Q5469167":"event","Q5511221":"event","Q5529711":"event","Q5587449":"event","Q5597930":"event","Q5600313":"event","Q5615855":"event","Q5643673":"event","Q5644235":"event","Q5654743":"event","Q5658992":"event","Q5666435":"event","Q5674285":"event","Q5674834":"event","Q5680473":"event","Q5744884":"event","Q5756073":"event","Q5765799":"event","Q5906330":"event","Q5936038":"event","Q5956948":"event","Q6065673":"event","Q6389767":"event","Q6394406":"event","Q6395482":"event","Q6411002":"event","Q6483290":"event","Q6519254":"event","Q6536143":"event","Q6543284":"event","Q6551208":"event","Q6658347":"event","Q6722945":"event","Q6735513":"event","Q6742885":"event","Q6751712":"event","Q6816652":"event","Q6840929":"event","Q6840950":"event","Q6841015":"event","Q6841023":"event","Q6841880":"event","Q6861270":"event","Q6895916":"event","Q7016808":"event","Q7054918":"event","Q7055129":"event","Q7055145":"event","Q7055190":"event","Q7055593":"event","Q7055784":"event","Q7056197":"event","Q7056730":"event","Q7056789":"event","Q7057275":"event","Q7057402":"event","Q7057657":"event","Q7061564":"event","Q7069814":"event","Q7073397":"event","Q7108258":"event","Q7115568":"event","Q7162449":"event","Q7165382":"event","Q7205780":"event","Q7228631":"event","Q7232516":"event","Q7242032":"event","Q7260890":"event","Q7305543":"event","Q7305658":"event","Q7310088":"event","Q7316257":"event","Q7322247":"event","Q7331070":"event","Q7354086":"event","Q7369795":"event","Q7370415":"event","Q7378326":"event","Q7380093":"event","Q7380780":"event","Q7380856":"event","Q7383515":"event","Q7385007":"event","Q7430326":"event","Q7445235":"event","Q7445246":"event","Q7447568":"event","Q7494580":"event","Q7503708":"event","Q7541495":"event","Q7566487":"event","Q7567032":"event","Q7567424":"event","Q7567618":"event","Q7567780":"event","Q7568034":"event","Q7568036":"event","Q7568096":"event","Q7568303":"event","Q7568461":"event","Q7568522":"event","Q7568542":"event","Q7569184":"event","Q7569532":"event","Q7575923":"event","Q7592288":"event","Q7593008":"event","Q7596675":"event","Q7596702":"event","Q7615445":"event","Q7618216":"event","Q7618434":"event","Q7621927":"event","Q7624890":"event","Q7634541":"event","Q7646811":"event","Q109685328":"event","Q116176606":"event","Q7682506":"event","Q7688785":"event","Q7694995":"event","Q7699664":"event","Q7705742":"event","Q7710268":"event","Q7797773":"event","Q7799385":"event","Q7820779":"event","Q7825451":"event","Q7827123":"event","Q7903446":"event","Q7909498":"event","Q7909562":"event","Q7968074":"event","Q7970744":"event","Q7971126":"event","Q7974635":"event","Q7975390":"event","Q7975447":"event","Q7978014":"event","Q7978128":"event","Q7981288":"event","Q7984469":"event","Q7985706":"event","Q7985764":"event","Q7986134":"event","Q7986556":"event","Q7987001":"event","Q7990392":"event","Q8023873":"event","Q8024744":"event","Q8029339":"event","Q8029358":"event","Q8034237":"event","Q8037234":"event","Q8039547":"event","Q8039654":"event","Q8040466":"event","Q8040465":"event","Q8055615":"event","Q16150755":"event","Q16254485":"event","Q16258377":"event","Q16985514":"event","Q16994465":"event","Q16997113":"event","Q16997251":"event","Q16998731":"event","Q16998845":"event","Q17035426":"event","Q17035706":"event","Q17059228":"event","Q17063120":"event","Q18160497":"event","Q20055575":"event","Q21061461":"event","Q24039182":"event","Q24039181":"event","Q24039246":"event","Q24039247":"event","Q24039245":"event","Q24039250":"event","Q24039251":"event","Q24039248":"event","Q24039249":"event","Q24039254":"event","Q24039255":"event","Q24039252":"event","Q24039253":"event","Q24039258":"event","Q24039256":"event","Q24039257":"event","Q24039262":"event","Q24039263":"event","Q24039260":"event","Q24039261":"event","Q24039266":"event","Q24039267":"event","Q24039264":"event","Q24039265":"event","Q24039270":"event","Q24039271":"event","Q24039268":"event","Q24039269":"event","Q24039274":"event","Q24039275":"event","Q24039272":"event","Q24039273":"event","Q24039278":"event","Q24993739":"event","Q24993740":"event","Q24993744":"event","Q60474521":"software","Q71631512":"software","Q65042246":"event","Q65057522":"event","Q107388279":"book","Q104215654":"event","Q106606189":"event","Q111582946":"event","Q116027030":"event","Q116027031":"event","Q116027028":"event","Q116027029":"event","Q116027032":"event","Q116753419":"event","Q120146858":"event","Q120146859":"event","Q120146862":"event","Q120146863":"event","Q120146860":"event","Q120146861":"event","Q120146864":"event","Q120170730":"event","Q120170729":"event","Q120170770":"event","Q120170768":"event","Q120170769":"event","Q221530":"event","Q832939":"event","Q4685991":"event","Q4732111":"event","Q4734074":"event","Q4741330":"event","Q4802152":"event","Q4861943":"event","Q4916653":"event","Q4940252":"event","Q4954788":"event","Q5001131":"event","Q5019056":"event","Q5179131":"event","Q5295526":"event","Q5312035":"event","Q5421751":"event","Q5527173":"event","Q6415764":"event","Q6423494":"event","Q6516179":"event","Q7017567":"event","Q7057066":"event","Q7085670":"event","Q7353823":"event","Q7370451":"event","Q7404395":"event","Q7417064":"event","Q7446128":"event","Q7492800":"event","Q7558104":"event","Q7568703":"event","Q7593363":"event","Q7618182":"event","Q7639752":"event","Q7681174":"event","Q7832574":"event","Q7961082":"event","Q7963798":"event","Q7999562":"event","Q8027003":"event","Q8030526":"event","Q16152241":"event","Q23894680":"event","Q51514018":"event","Q58494386":"event","Q58494387":"event","Q58494391":"event","Q58494389":"event","Q61727846":"event","Q61727852":"event","Q61985902":"event","Q61985903":"event","Q61985900":"event","Q61985901":"event","Q62762678":"event","Q62762683":"event","Q62762680":"event","Q62762681":"event","Q62762684":"event","Q75693027":"event","Q75693030":"event","Q75693033":"event","Q75693037":"event","Q75693059":"event","Q75693063":"event","Q75693065":"event","Q75693070":"event","Q75693073":"event","Q75693077":"event","Q104822202":"broadcast","Q114907029":"broadcast","Q114907042":"broadcast","Q115404261":"software","Q115623368":"software","Q106616301":"event","Q108570967":"review","Q108570971":"review","Q108939375":"event","Q108939378":"event","Q108939390":"event","Q108939403":"event","Q108939424":"event","Q108939450":"event","Q112114620":"event","Q112811078":"event","Q113101142":"event","Q497957":"song","Q116185444":"event","Q117249541":"event","Q3879286":"song","Q5747907":"song","Q9051102":"song","Q124619201":"event","Q108757333":"performance","Q5283178":"software","Q206599":"event","Q4868967":"event","Q4967755":"event","Q5092952":"event","Q5092982":"event","Q5172025":"event","Q5177666":"event","Q5329264":"event","Q5738104":"event","Q6807436":"event","Q7055958":"event","Q7059834":"event","Q7269933":"event","Q7504290":"event","Q7567368":"event","Q7658459":"event","Q11223998":"event","Q11412524":"event","Q11444891":"event","Q11453226":"event","Q15077890":"event","Q17066503":"event","Q20962139":"event","Q21652934":"event","Q24039276":"event","Q24039277":"event","Q16801007":"performance","Q19978420":"performance","Q85815517":"software","Q110402846":"regulation","Q111264159":"regulation","Q111264182":"regulation","Q111264256":"regulation","Q111264320":"regulation","Q111264399":"regulation","Q87410555":"software","Q116198438":"regulation","Q116277946":"regulation","Q116814111":"regulation","Q116814120":"regulation","Q116814129":"regulation","Q111700733":"dataset","Q111701068":"dataset","Q111702267":"dataset","Q111702706":"dataset","Q111780038":"dataset","Q111781029":"dataset","Q111781495":"dataset","Q111847430":"dataset","Q111848071":"dataset","Q111848226":"dataset","Q111848406":"dataset","Q111890953":"dataset","Q111891597":"dataset","Q111892888":"dataset","Q111892944":"dataset","Q111893316":"dataset","Q96374064":"event","Q110284832":"software","Q110285170":"software","Q111381667":"software","Q451752":"regulation","Q114900460":"software","Q654824":"regulation","Q1565828":"regulation","Q117187723":"software","Q117227392":"software","Q117227444":"software","Q111419440":"event","Q111436305":"event","Q111436315":"event","Q111436312":"event","Q111436804":"event","Q111436812":"event","Q111436826":"event","Q111436832":"event","Q111436919":"event","Q111437360":"event","Q114708375":"event","Q114708378":"event","Q114708379":"event","Q114708376":"event","Q114708377":"event","Q114708382":"event","Q114708383":"event","Q114708380":"event","Q114708381":"event","Q114708386":"event","Q114708387":"event","Q114708384":"event","Q114708385":"event","Q114708390":"event","Q114708391":"event","Q114708388":"event","Q114708389":"event","Q114708394":"event","Q114708395":"event","Q114708392":"event","Q114708393":"event","Q114708398":"event","Q114708399":"event","Q114708396":"event","Q114708397":"event","Q114708402":"event","Q114708400":"event","Q114708401":"event","Q301934":"song","Q115243215":"event","Q115243217":"event","Q643845":"song","Q645505":"song","Q756768":"song","Q1777215":"song","Q118558010":"event","Q118558073":"event","Q118558297":"event","Q118558532":"event","Q119312351":"event","Q119312355":"event","Q119357252":"event","Q119524702":"event","Q119524703":"event","Q119524704":"event","Q119527051":"event","Q119527054":"event","Q119527056":"event","Q119527060":"event","Q119527064":"event","Q119527069":"event","Q119527073":"event","Q119527079":"event","Q119527082":"event","Q119527087":"event","Q119527084":"event","Q119527085":"event","Q119527090":"event","Q119527088":"event","Q119527089":"event","Q523796":"software","Q28197215":"regulation","Q3485625":"event","Q11267647":"event","Q11267645":"event","Q116173022":"webpage","Q116173030":"webpage","Q15838546":"event","Q125101059":"webpage","Q52427602":"event","Q55831882":"event","Q56326818":"event","Q56326816":"event","Q56326824":"event","Q112684111":"map","Q113259205":"software","Q113259233":"software","Q113259250":"software","Q116774927":"software","Q116774997":"software","Q116809654":"software","Q116811570":"software","Q117051105":"software","Q109935395":"event","Q110009802":"event","Q115243219":"event","Q115243216":"event","Q115243222":"event","Q115243223":"event","Q115243220":"event","Q115243221":"event","Q115243226":"event","Q115243227":"event","Q115243224":"event","Q115243229":"event","Q115243234":"event","Q115243232":"event","Q115243233":"event","Q115243238":"event","Q115243239":"event","Q115243236":"event","Q115243237":"event","Q115243243":"event","Q115243240":"event","Q115256070":"event","Q115256079":"event","Q115256080":"event","Q115256086":"event","Q115256085":"event","Q115256089":"event","Q115563474":"event","Q115563505":"event","Q115694592":"event","Q116003638":"event","Q116166893":"event","Q116166914":"event","Q116167033":"event","Q116167042":"event","Q116167447":"event","Q116185319":"event","Q116185476":"event","Q116187411":"event","Q116210387":"event","Q116213013":"event","Q124407166":"event","Q3759600":"software","Q898559":"event","Q1478254":"event","Q2790727":"event","Q4879238":"event","Q4983259":"event","Q5025652":"event","Q5194031":"event","Q5261563":"event","Q5267710":"event","Q5298842":"event","Q5329461":"event","Q5399682":"event","Q5572098":"event","Q5646047":"event","Q6391665":"event","Q6482999":"event","Q6519263":"event","Q6551240":"event","Q7057667":"event","Q7063732":"event","Q7115588":"event","Q7559840":"event","Q7596720":"event","Q7634552":"event","Q7646787":"event","Q7971228":"event","Q7986613":"event","Q16259441":"event","Q16993970":"event","Q17016618":"event","Q24039282":"event","Q24039280":"event","Q24039281":"event","Q65067588":"event","Q115313133":"dataset","Q115313279":"dataset","Q115314144":"dataset","Q100580950":"event","Q104149600":"event","Q105123086":"event","Q118646238":"software","Q118646239":"software","Q118646240":"software","Q121602186":"software","Q122263407":"dataset","Q122382590":"software","Q122740577":"software","Q122924036":"software","Q123050115":"software","Q123050117":"software","Q123050120":"software","Q123050121":"software","Q123155538":"software","Q124435176":"dataset","Q123198338":"book","Q116982202":"event","Q116982778":"event","Q116982779":"event","Q116982777":"event","Q116982782":"event","Q116982783":"event","Q116982781":"event","Q116982784":"event","Q116982785":"event","Q116982862":"event","Q117156494":"event","Q117156493":"event","Q117156496":"event","Q117156497":"event","Q118482702":"event","Q125127404":"dataset","Q125127530":"dataset","Q118906024":"event","Q121432669":"event","Q124726272":"event","Q124788746":"event","Q124788748":"event","Q124788753":"event","Q124788765":"event","Q124788777":"event","Q124788786":"event","Q1036289":"software","Q1198141":"software","Q3775539":"software","Q139859":"event","Q299191":"event","Q750693":"event","Q909759":"event","Q929009":"event","Q964753":"event","Q989473":"event","Q1117085":"event","Q1128406":"event","Q1241195":"event","Q1395834":"event","Q1454771":"event","Q1711389":"event","Q1890908":"event","Q1934170":"event","Q1944352":"event","Q2095579":"event","Q2180601":"event","Q2197904":"event","Q2215371":"event","Q2233678":"event","Q2498303":"event","Q2752188":"event","Q3390558":"event","Q4062925":"event","Q4069739":"event","Q4095712":"event","Q5093314":"event","Q10649623":"event","Q11574728":"event","Q11614282":"event","Q12086773":"event","Q12345476":"event","Q13442062":"event","Q18449665":"event","Q21055024":"event","Q66777837":"event","Q66777840":"event","Q66777844":"event","Q66777849":"event","Q85797695":"software","Q96102031":"software","Q112795563":"dataset","Q124101816":"map","Q124740797":"map","Q94901429":"event","Q112129971":"software","Q108732094":"event","Q112252090":"event","Q117599927":"event","Q119811958":"event","Q4096094":"software","Q9375169":"software","Q10393868":"software","Q10720258":"software","Q96365":"event","Q145634":"event","Q153563":"event","Q214536":"event","Q270148":"event","Q362788":"event","Q497397":"event","Q953223":"event","Q985834":"event","Q1050367":"event","Q1088335":"event","Q1919992":"event","Q1977131":"event","Q2072000":"event","Q2199912":"event","Q2305778":"event","Q2334025":"event","Q2349685":"event","Q2429728":"event","Q2452586":"event","Q2463820":"event","Q2468444":"event","Q2601785":"event","Q2648795":"event","Q3001244":"event","Q3135352":"event","Q3154453":"event","Q3388662":"event","Q3418057":"event","Q4155847":"event","Q4212091":"event","Q4219440":"event","Q4356784":"event","Q4385566":"event","Q4400684":"event","Q4442868":"event","Q4453842":"event","Q4492466":"event","Q4527099":"event","Q4936344":"event","Q5201823":"event","Q5212163":"event","Q5728602":"event","Q6093162":"event","Q6334544":"event","Q6492546":"event","Q6641540":"event","Q7228578":"event","Q7801134":"event","Q9378914":"event","Q10378381":"event","Q10470532":"event","Q10525182":"event","Q10568080":"event","Q10646893":"event","Q10671727":"event","Q10727392":"event","Q10930336":"event","Q11300305":"event","Q12669521":"event","Q13586511":"event","Q14252419":"event","Q15573179":"event","Q15629806":"event","Q15943568":"event","Q16989249":"event","Q17056892":"event","Q18543102":"event","Q25041700":"event","Q25389784":"event","Q28403488":"event","Q32282577":"event","Q65267814":"event","Q79586182":"event","Q86520452":"event","Q97311083":"event","Q97311316":"event","Q109595293":"software","Q115105241":"software","Q105970876":"event","Q106291755":"event","Q123483255":"software","Q112838842":"event","Q113115857":"event","Q124997317":"software","Q2004750":"dataset","Q10429683":"dataset","Q975060":"software","Q991335":"software","Q1163960":"software","Q1190947":"software","Q2007412":"software","Q2401863":"software","Q3827893":"software","Q9626428":"software","Q259776":"event","Q568946":"event","Q901706":"event","Q12606046":"software","Q12606047":"software","Q2086638":"event","Q2520041":"event","Q3153848":"event","Q3272930":"event","Q3275782":"event","Q4597016":"event","Q5413443":"event","Q5442759":"event","Q6650800":"event","Q18245359":"software","Q7523265":"event","Q8030805":"event","Q9313152":"event","Q9326070":"event","Q11559206":"event","Q11597392":"event","Q11644839":"event","Q15898287":"event","Q17215318":"event","Q19580343":"event","Q20970820":"event","Q33468982":"software","Q33469369":"software","Q33469627":"software","Q33470190":"software","Q33471717":"software","Q22050646":"event","Q54420763":"event","Q107104523":"software","Q107693921":"software","Q112180810":"software","Q113654354":"software","Q116278110":"software","Q4848908":"regulation","Q5049703":"regulation","Q5202314":"regulation","Q5422290":"regulation","Q6032934":"regulation","Q6745086":"regulation","Q7911893":"regulation","Q111015177":"event","Q124986412":"software","Q115896485":"event","Q120493441":"event","Q180943":"software","Q240116":"software","Q374230":"software","Q382486":"software","Q682772":"software","Q829915":"software","Q898178":"software","Q956343":"software","Q1044361":"software","Q1107344":"software","Q1766038":"software","Q2454939":"software","Q2916124":"software","Q2995268":"software","Q3631710":"software","Q3696410":"software","Q6713956":"software","Q7671563":"software","Q9760157":"software","Q10364685":"software","Q332814":"event","Q11771157":"software","Q11794350":"software","Q756822":"event","Q756825":"event","Q1059464":"event","Q1401092":"event","Q1517550":"event","Q13222167":"software","Q1975301":"event","Q2751358":"event","Q3250343":"event","Q3310250":"event","Q3310270":"event","Q3587393":"event","Q4554158":"event","Q4554343":"event","Q4554571":"event","Q4903976":"event","Q17067381":"software","Q17084394":"software","Q17084934":"software","Q17144865":"software","Q6484470":"event","Q7096449":"event","Q8078623":"event","Q9085831":"event","Q9086321":"event","Q21122879":"software","Q10718881":"event","Q14192738":"event","Q14192736":"event","Q17146043":"event","Q17839732":"event","Q17839758":"event","Q17839787":"event","Q17839872":"event","Q17839923":"event","Q17839948":"event","Q19896428":"event","Q21075974":"event","Q21091870":"event","Q22248386":"event","Q25316241":"event","Q26885471":"event","Q85770160":"regulation","Q53080577":"event","Q56322771":"event","Q71726635":"software","Q75276527":"software","Q65089983":"event","Q99938173":"speech","Q82309052":"software","Q108380937":"software","Q111149309":"software","Q2388635":"webpage","Q105745212":"event","Q114906339":"event","Q115196134":"event","Q116883119":"event","Q119758082":"event","Q121027043":"event","Q124719094":"event","Q345335":"standard","Q300914":"software","Q821157":"software","Q1037904":"software","Q1670525":"software","Q2127647":"software","Q2315057":"software","Q10269379":"software","Q11235724":"software","Q11312387":"software","Q11496074":"software","Q11573494":"software","Q2881550":"review","Q1470609":"event","Q1730108":"event","Q1730115":"event","Q1783941":"event","Q2021750":"event","Q3072399":"event","Q3349444":"event","Q5337691":"review","Q4244019":"event","Q4244020":"event","Q4482978":"event","Q4835055":"event","Q19798263":"software","Q10572901":"event","Q10660817":"event","Q13222763":"event","Q14134315":"event","Q15116286":"event","Q16481968":"event","Q16668030":"event","Q30347815":"software","Q19910308":"event","Q56232512":"webpage","Q28667131":"event","Q41944312":"event","Q57977677":"software","Q48732666":"event","Q48733007":"event","Q60480500":"software","Q49095233":"event","Q66230650":"software","Q55658306":"event","Q55658305":"event","Q59397587":"event","Q60968417":"event","Q61861546":"event","Q98969716":"webpage","Q65194617":"event","Q65196910":"event","Q99938191":"speech","Q78145485":"software","Q73885232":"event","Q77562458":"event","Q96053277":"software","Q96146284":"software","Q107042005":"broadcast","Q97376601":"standard","Q105098453":"software","Q94660628":"legislation","Q94340627":"event","Q94993531":"event","Q107527031":"software","Q96178258":"event","Q108266484":"software","Q1796282":"regulation","Q106828552":"event","Q109327501":"legislation","Q109043402":"event","Q116832838":"legislation","Q119789522":"event","Q119789564":"event","Q3011118":"software","Q82595":"event","Q86891":"event","Q115821":"event","Q142944":"event","Q145554":"event","Q147780":"event","Q157553":"event","Q162604":"event","Q162944":"event","Q163046":"event","Q163719":"event","Q163786":"event","Q163928":"event","Q167541":"event","Q168018":"event","Q169519":"event","Q170215":"event","Q175762":"event","Q182165":"event","Q182994":"event","Q187304":"event","Q188365":"event","Q194180":"event","Q194641":"event","Q201671":"event","Q202243":"event","Q202699":"event","Q204752":"event","Q206073":"event","Q206813":"event","Q209080":"event","Q209318":"event","Q209970":"event","Q210183":"event","Q210262":"event","Q210587":"event","Q210836":"event","Q211461":"event","Q216022":"event","Q218555":"event","Q219007":"event","Q219586":"event","Q219592":"event","Q220875":"event","Q224724":"event","Q225057":"event","Q235114":"event","Q235307":"event","Q237753":"event","Q239738":"event","Q3586646":"event","Q3586662":"event","Q3586664":"event","Q5591883":"event","Q7395991":"legislation","Q11625215":"event","Q12404730":"legislation","Q12407530":"legislation","Q12138859":"event","Q18448566":"event","Q37063340":"event","Q42132670":"event","Q43505736":"event","Q48507532":"event","Q48946537":"event","Q48946690":"event","Q85310817":"webpage","Q50319112":"event","Q51946289":"event","Q51967293":"event","Q13394":"event","Q40068":"event","Q44763":"event","Q60681":"event","Q65410":"event","Q76761945":"event","Q244464":"event","Q245252":"event","Q246874":"event","Q247767":"event","Q247788":"event","Q247812":"event","Q247829":"event","Q248005":"event","Q248512":"event","Q248844":"event","Q248960":"event","Q250081":"event","Q250638":"event","Q252156":"event","Q255633":"event","Q257282":"event","Q259598":"event","Q260787":"event","Q267785":"event","Q271271":"event","Q275005":"event","Q275189":"event","Q275665":"event","Q276085":"event","Q276445":"event","Q277581":"event","Q277786":"event","Q277945":"event","Q278371":"event","Q278603":"event","Q279617":"event","Q284335":"event","Q285473":"event","Q287453":"event","Q291594":"event","Q295606":"event","Q308798":"event","Q318480":"event","Q322125":"event","Q324867":"event","Q326422":"event","Q326859":"event","Q338121":"event","Q368165":"event","Q370883":"event","Q384073":"event","Q384531":"event","Q387662":"event","Q391006":"event","Q402526":"event","Q450561":"event","Q463663":"event","Q477309":"event","Q480019":"event","Q485568":"event","Q497386":"event","Q511137":"event","Q518802":"event","Q537766":"event","Q548761":"event","Q557588":"event","Q570246":"event","Q581932":"event","Q582860":"event","Q583514":"event","Q585371":"event","Q589722":"event","Q589838":"event","Q592486":"event","Q600302":"event","Q605777":"event","Q606652":"event","Q606832":"event","Q607963":"event","Q608050":"event","Q611955":"event","Q612980":"event","Q614965":"event","Q628797":"event","Q629136":"event","Q630141":"event","Q636853":"event","Q647746":"event","Q654697":"event","Q662851":"event","Q663736":"event","Q667065":"event","Q667209":"event","Q672827":"event","Q672983":"event","Q677397":"event","Q680619":"event","Q687108":"event","Q689789":"event","Q696269":"event","Q728398":"event","Q734803":"event","Q739479":"event","Q747225":"event","Q752442":"event","Q761083":"event","Q761626":"event","Q763090":"event","Q764690":"event","Q769090":"event","Q772266":"event","Q778974":"event","Q785574":"event","Q788588":"event","Q793604":"event","Q793769":"event","Q794235":"event","Q794251":"event","Q794257":"event","Q812098":"event","Q820988":"event","Q821174":"event","Q824641":"event","Q830717":"event","Q831202":"event","Q847239":"event","Q849514":"event","Q849843":"event","Q850132":"event","Q856855":"event","Q863684":"event","Q863688":"event","Q868588":"event","Q874990":"event","Q880029":"event","Q891072":"event","Q902060":"event","Q912116":"event","Q922935":"event","Q923316":"event","Q926330":"event","Q929124":"event","Q932747":"event","Q935872":"event","Q938286":"event","Q954911":"event","Q960171":"event","Q967002":"event","Q971619":"event","Q974058":"event","Q978160":"event","Q980467":"event","Q988084":"event","Q988698":"event","Q990787":"event","Q1007931":"event","Q1023719":"event","Q1031665":"event","Q1033339":"event","Q1033349":"event","Q1041850":"event","Q1054442":"event","Q1063772":"event","Q1076828":"event","Q1087541":"event","Q1090396":"event","Q1090595":"event","Q1090607":"event","Q1090617":"event","Q1090623":"event","Q1090640":"event","Q1090809":"event","Q1090830":"event","Q1090855":"event","Q1090863":"event","Q1090867":"event","Q1093405":"event","Q1104981":"event","Q1110061":"event","Q1118304":"event","Q1129048":"event","Q1129600":"event","Q1137344":"event","Q1139408":"event","Q1139758":"event","Q1152715":"event","Q1157234":"event","Q1160006":"event","Q1179092":"event","Q1187715":"event","Q1187730":"event","Q1188284":"event","Q1202326":"event","Q1202379":"event","Q1203215":"event","Q1203524":"event","Q1203641":"event","Q1203701":"event","Q1203743":"event","Q1203964":"event","Q1225128":"event","Q1305444":"event","Q1311336":"event","Q1320341":"event","Q1324416":"event","Q1328315":"event","Q1330713":"event","Q1342351":"event","Q1370603":"event","Q1385375":"event","Q1405103":"event","Q1418739":"event","Q1421206":"event","Q1421208":"event","Q1423762":"event","Q1429268":"event","Q1436035":"event","Q1437739":"event","Q1470401":"event","Q1487175":"event","Q1491334":"event","Q1520528":"event","Q1520622":"event","Q1522963":"event","Q1530659":"event","Q1532343":"event","Q1536706":"event","Q1546355":"event","Q1546408":"event","Q1567733":"event","Q1588651":"event","Q1622667":"event","Q1626934":"event","Q1627391":"event","Q1635558":"event","Q1644969":"event","Q1660801":"event","Q1675130":"event","Q1685492":"event","Q1687662":"event","Q1725521":"event","Q1774675":"event","Q1779116":"event","Q1812315":"event","Q1816968":"event","Q1824570":"event","Q1861301":"event","Q1874074":"event","Q1892680":"event","Q1963875":"event","Q1988175":"event","Q2009289":"event","Q2047271":"event","Q2054331":"event","Q2060907":"event","Q2066655":"event","Q2072802":"event","Q2082897":"event","Q2083746":"event","Q2083774":"event","Q2088526":"event","Q2102521":"event","Q2105017":"event","Q2120378":"event","Q2120557":"event","Q2164956":"event","Q2180367":"event","Q2198291":"event","Q2248858":"event","Q2253660":"event","Q2256671":"event","Q2261921":"event","Q2288509":"event","Q2289847":"event","Q2290420":"event","Q2292277":"event","Q2297972":"event","Q2299651":"event","Q2304336":"event","Q2306612":"event","Q2308030":"event","Q2310260":"event","Q2315908":"event","Q2331632":"event","Q2333731":"event","Q2334124":"event","Q2357382":"event","Q2358387":"event","Q2375100":"event","Q2386334":"event","Q2397581":"event","Q2409829":"event","Q2465459":"event","Q2467445":"event","Q2468619":"event","Q2494381":"event","Q2537744":"event","Q2538846":"event","Q2615588":"event","Q2621488":"event","Q2625448":"event","Q2629834":"event","Q2630379":"event","Q2660485":"event","Q2677790":"event","Q2701291":"event","Q2735889":"event","Q2739565":"event","Q2740424":"event","Q2855634":"event","Q2909479":"event","Q2930969":"event","Q2948824":"event","Q2948906":"event","Q2948907":"event","Q2948905":"event","Q2948911":"event","Q2948915":"event","Q2948922":"event","Q2949044":"event","Q2949202":"event","Q2949208":"event","Q2949214":"event","Q2949854":"event","Q2949852":"event","Q2949853":"event","Q2949859":"event","Q2949856":"event","Q2949872":"event","Q2949879":"event","Q2949877":"event","Q2949880":"event","Q2949998":"event","Q2949997":"event","Q2950382":"event","Q2950380":"event","Q2950517":"event","Q2950521":"event","Q2950621":"event","Q2950627":"event","Q2950625":"event","Q2950630":"event","Q2950873":"event","Q2951014":"event","Q2951015":"event","Q2951021":"event","Q2951026":"event","Q2951242":"event","Q2951289":"event","Q2951395":"event","Q2951397":"event","Q2951558":"event","Q2951603":"event","Q2951606":"event","Q2951928":"event","Q2951934":"event","Q2952006":"event","Q2952044":"event","Q2952235":"event","Q2952304":"event","Q2952365":"event","Q2952370":"event","Q2952369":"event","Q2952374":"event","Q2952375":"event","Q2952373":"event","Q2952384":"event","Q2952931":"event","Q2952936":"event","Q2953228":"event","Q2953557":"event","Q2954434":"event","Q2954943":"event","Q2954945":"event","Q2955087":"event","Q2955102":"event","Q2955110":"event","Q2955108":"event","Q2955194":"event","Q2955197":"event","Q2955714":"event","Q3087942":"event","Q3179674":"event","Q3181379":"event","Q3247654":"event","Q3292904":"event","Q3297868":"event","Q3323934":"event","Q3324860":"event","Q3392499":"event","Q3392552":"event","Q3402210":"event","Q3428306":"event","Q3437813":"event","Q3494101":"event","Q3510644":"event","Q3564678":"event","Q3639298":"event","Q3652179":"event","Q3652986":"event","Q3652990":"event","Q3652998":"event","Q3652997":"event","Q3653032":"event","Q3653079":"event","Q3654042":"event","Q3654052":"event","Q3654109":"event","Q3654114":"event","Q3654115":"event","Q3654155":"event","Q3654156":"event","Q3654195":"event","Q3654207":"event","Q3654205":"event","Q3654208":"event","Q3654209":"event","Q3654302":"event","Q3654496":"event","Q3654501":"event","Q3663238":"event","Q3774394":"event","Q3775620":"event","Q3817458":"event","Q3820228":"event","Q3823950":"event","Q3930173":"event","Q3944757":"event","Q4116574":"event","Q4509470":"event","Q4509660":"event","Q4582333":"event","Q4584510":"event","Q4652534":"event","Q4654222":"event","Q4701868":"event","Q4709119":"event","Q4740644":"event","Q4823594":"event","Q4823973":"event","Q4824043":"event","Q4824280":"event","Q4824451":"event","Q4824682":"event","Q4824697":"event","Q4824706":"event","Q4824729":"event","Q4825497":"event","Q4855427":"event","Q4882577":"event","Q4893434":"event","Q4947322":"event","Q4952027":"event","Q4970959":"event","Q4971081":"event","Q4971084":"event","Q4971088":"event","Q4978928":"event","Q5028293":"event","Q5098731":"event","Q5147922":"event","Q5147945":"event","Q5174890":"event","Q5201742":"event","Q5219740":"event","Q5317354":"event","Q5334350":"event","Q5348334":"event","Q5408432":"event","Q5431964":"event","Q5448585":"event","Q5450763":"event","Q5450793":"event","Q5548003":"event","Q5551129":"event","Q5614251":"event","Q5680215":"event","Q6020005":"event","Q6045815":"event","Q6048962":"event","Q6070599":"event","Q6082072":"event","Q6087177":"event","Q6127417":"event","Q6156289":"event","Q6270922":"event","Q6417479":"event","Q6417477":"event","Q6452377":"event","Q6497315":"event","Q6545763":"event","Q6545770":"event","Q6553333":"event","Q6648345":"event","Q6648383":"event","Q6664370":"event","Q6678345":"event","Q6744786":"event","Q6825984":"event","Q6953036":"event","Q6972083":"event","Q6972728":"event","Q6978478":"event","Q7004971":"event","Q7015436":"event","Q7015626":"event","Q7034776":"event","Q7061142":"event","Q7072632":"event","Q7119138":"event","Q7125690":"event","Q7133162":"event","Q7134683":"event","Q7209876":"event","Q7209928":"event","Q7209936":"event","Q7232625":"event","Q7232647":"event","Q7232649":"event","Q7232671":"event","Q7232669":"event","Q7240322":"event","Q7401700":"event","Q7437655":"event","Q7458934":"event","Q7523257":"event","Q7541522":"event","Q7541803":"event","Q7565442":"event","Q7565785":"event","Q7691600":"event","Q7855246":"event","Q7863694":"event","Q7864827":"event","Q7865802":"event","Q7865815":"event","Q7865827":"event","Q7875948":"event","Q7890746":"event","Q7890855":"event","Q7892303":"event","Q7901455":"event","Q7901468":"event","Q7904715":"event","Q7981873":"event","Q9252110":"event","Q9298807":"event","Q10495597":"event","Q11389921":"event","Q11389951":"event","Q11509342":"event","Q11782833":"event","Q11782838":"event","Q11782840":"event","Q11782846":"event","Q11782857":"event","Q11868535":"event","Q11870488":"event","Q12169411":"event","Q12443987":"event","Q12837728":"event","Q12876769":"event","Q13027698":"event","Q13135002":"event","Q14377162":"event","Q14892596":"event","Q15027409":"event","Q15042689":"event","Q15101808":"event","Q15231491":"event","Q15844146":"event","Q15879704":"event","Q15917511":"event","Q16056559":"event","Q16087288":"event","Q16382612":"event","Q16382660":"event","Q16383174":"event","Q16383176":"event","Q16481773":"event","Q16537401":"event","Q16537515":"event","Q16537520":"event","Q16537635":"event","Q16538029":"event","Q16538151":"event","Q16716834":"event","Q16716832":"event","Q16826474":"event","Q16960366":"event","Q16972047":"event","Q17019929":"event","Q17068802":"event","Q17078069":"event","Q17098551":"event","Q17111297":"event","Q17156396":"event","Q17513955":"event","Q17513960":"event","Q17514051":"event","Q17514151":"event","Q17632439":"event","Q18156611":"event","Q18167837":"event","Q108873799":"event","Q109657442":"event","Q111323031":"event","Q111324062":"event","Q112161510":"event","Q113379140":"event","Q116203526":"event","Q116877584":"event","Q117040512":"event","Q117073904":"event","Q118944187":"event","Q119439745":"event","Q123484982":"event","Q124014397":"event","Q124477514":"event","Q124477734":"event","Q124856427":"event","Q5308021":"software","Q580396":"event","Q583575":"event","Q605143":"event","Q936274":"event","Q940159":"event","Q960263":"event","Q2381068":"event","Q2420211":"event","Q2646789":"event","Q2883171":"event","Q2886525":"event","Q2919519":"event","Q2949194":"event","Q2949204":"event","Q2950589":"event","Q2952450":"event","Q3038971":"event","Q3038974":"event","Q3038975":"event","Q3038972":"event","Q3038973":"event","Q3038978":"event","Q3038982":"event","Q3038983":"event","Q3038980":"event","Q3038981":"event","Q3038985":"event","Q3038988":"event","Q3038994":"event","Q3038993":"event","Q18351267":"event","Q18352040":"event","Q18357021":"event","Q18357029":"event","Q18391076":"event","Q18680471":"event","Q18701510":"event","Q19332036":"event","Q20252393":"event","Q20311287":"event","Q20472631":"event","Q20804909":"event","Q20873007":"event","Q20920876":"event","Q21208335":"event","Q25662185":"event","Q25712578":"event","Q26198002":"event","Q26806709":"event","Q26836404":"event","Q27492342":"event","Q28062628":"event","Q28226004":"event","Q28417718":"event","Q28653546":"event","Q28679823":"event","Q28679826":"event","Q31086988":"event","Q33414750":"event","Q42170979":"event","Q47019500":"event","Q47543339":"event","Q48861490":"event","Q57496872":"event","Q59877788":"event","Q61396924":"event","Q61679484":"event","Q63891772":"event","Q63980269":"event","Q64500267":"event","Q65392292":"event","Q65392783":"event","Q71829391":"event","Q71831237":"event","Q79356059":"event","Q80370460":"event","Q84497979":"event","Q92292023":"event","Q93018258":"event","Q97228376":"event","Q98918317":"event","Q102016095":"event","Q3038999":"event","Q3038996":"event","Q3039003":"event","Q3039006":"event","Q3039008":"event","Q3039019":"event","Q3039016":"event","Q3039020":"event","Q3039027":"event","Q3039033":"event","Q3039038":"event","Q3039039":"event","Q3039041":"event","Q3039046":"event","Q3039047":"event","Q3039045":"event","Q3039051":"event","Q3039054":"event","Q3039056":"event","Q3039065":"event","Q3039076":"event","Q3066936":"event","Q3066955":"event","Q3066961":"event","Q3113758":"event","Q3114031":"event","Q3114214":"event","Q3114255":"event","Q3540375":"event","Q3540451":"event","Q5547595":"event","Q5550042":"event","Q5637675":"event","Q5718367":"event","Q5718378":"event","Q5718376":"event","Q5718381":"event","Q5718386":"event","Q5718405":"event","Q5718410":"event","Q5718427":"event","Q5718556":"event","Q5718719":"event","Q5718800":"event","Q5718930":"event","Q5810056":"event","Q5976132":"event","Q6103689":"event","Q6103693":"event","Q6103696":"event","Q6153081":"event","Q6153146":"event","Q8241526":"event","Q8241529":"event","Q8241585":"event","Q8241682":"event","Q8241685":"event","Q8241743":"event","Q8241815":"event","Q8257792":"event","Q8261060":"event","Q8350731":"event","Q11168475":"event","Q11220799":"event","Q11680139":"event","Q12253181":"event","Q12253330":"event","Q12253766":"event","Q12253767":"event","Q12253898":"event","Q12254335":"event","Q12254860":"event","Q12255005":"event","Q12255021":"event","Q12255027":"event","Q12255144":"event","Q12255218":"event","Q12255219":"event","Q12255228":"event","Q12255326":"event","Q12255329":"event","Q12255335":"event","Q12255336":"event","Q12256635":"event","Q12256632":"event","Q12256633":"event","Q12256787":"event","Q12256788":"event","Q12256789":"event","Q12258133":"event","Q12258461":"event","Q12258469":"event","Q12258519":"event","Q12258520":"event","Q12259054":"event","Q12259231":"event","Q12259378":"event","Q12259632":"event","Q12259777":"event","Q12259849":"event","Q108268888":"event","Q108445380":"event","Q108489811":"event","Q108565643":"event","Q109331815":"event","Q110892617":"event","Q111224581":"event","Q112333313":"event","Q113509673":"event","Q113632835":"event","Q113665252":"event","Q116864691":"event","Q116908369":"event","Q116919709":"event","Q117011361":"event","Q117019205":"event","Q119932006":"event","Q120070303":"event","Q121347135":"event","Q121367663":"event","Q121409128":"event","Q123916944":"event","Q124253841":"event","Q124419207":"event","Q125124644":"event","Q12261155":"event","Q12261327":"event","Q12261467":"event","Q12261527":"event","Q12261600":"event","Q12261618":"event","Q12261636":"event","Q12261885":"event","Q12262151":"event","Q12262148":"event","Q12263879":"event","Q12263958":"event","Q12265246":"event","Q12265255":"event","Q12265256":"event","Q12265570":"event","Q12265568":"event","Q12265569":"event","Q12266044":"event","Q12266933":"event","Q12267870":"event","Q12267871":"event","Q12268147":"event","Q12268148":"event","Q12268205":"event","Q12268385":"event","Q12268757":"event","Q12269226":"event","Q12269225":"event","Q12269484":"event","Q16516664":"event","Q16516896":"event","Q16517166":"event","Q16517217":"event","Q20492177":"event","Q20492188":"event","Q20492274":"event","Q20492468":"event","Q20492480":"event","Q20492577":"event","Q20549200":"event","Q25473659":"event","Q25473779":"event","Q25474119":"event","Q25476057":"event","Q26695937":"event","Q31188105":"event","Q31188485":"event","Q57319737":"event","Q61069112":"event","Q61069158":"event","Q61069166":"event","Q61069169":"event","Q61069178":"event","Q61070178":"event","Q61070176":"event","Q61070365":"event","Q61070391":"event","Q61365131":"event","Q65215920":"event","Q66425450":"event","Q66425448":"event","Q97152477":"event","Q97502254":"event","Q98593607":"event","Q104245330":"event","Q104630354":"event","Q104664668":"event","Q109729064":"event","Q18170752":"song","Q82614":"event","Q116135":"event","Q203712":"event","Q238602":"event","Q252623":"event","Q280739":"event","Q280750":"event","Q303039":"event","Q380068":"event","Q406699":"event","Q474990":"event","Q611260":"event","Q693661":"event","Q738723":"event","Q743750":"event","Q746918":"event","Q746937":"event","Q746958":"event","Q749941":"event","Q784878":"event","Q806668":"event","Q827572":"event","Q841738":"event","Q913496":"event","Q968233":"event","Q1412276":"event","Q1886213":"event","Q2455683":"event","Q2621784":"event","Q4626151":"event","Q5461326":"event","Q26367719":"software","Q16670792":"event","Q24940151":"event","Q36400095":"software","Q25379510":"event","Q25379508":"event","Q47499504":"event","Q48748555":"event","Q48835554":"event","Q50716248":"event","Q52390813":"event","Q55632127":"event","Q56295376":"event","Q79197177":"event","Q104901744":"event","Q104902941":"event","Q105047089":"event","Q105274163":"event","Q107102173":"event","Q107107237":"event","Q107131233":"event","Q107139226":"event","Q107139306":"event","Q111167865":"event","Q111589558":"event","Q111589687":"event","Q111753251":"event","Q111996315":"event","Q113428446":"event","Q116264858":"event","Q118175069":"event","Q122577316":"event","Q124030122":"event","Q124039584":"event","Q124343291":"event","Q124355722":"event","Q124785286":"event","Q835937":"software","Q840498":"software","Q1102408":"software","Q2100701":"software","Q3708937":"software","Q168343":"event","Q751740":"event","Q1001292":"event","Q1001587":"event","Q1094440":"event","Q1104915":"event","Q1129898":"event","Q1137966":"event","Q1307796":"event","Q1338371":"event","Q1401639":"event","Q1419587":"event","Q1436736":"event","Q1485140":"event","Q1505803":"event","Q1505841":"event","Q1505870":"event","Q1505897":"event","Q1505910":"event","Q1506353":"event","Q1506443":"event","Q1726780":"event","Q1735816":"event","Q1817684":"event","Q1914237":"event","Q2069781":"event","Q2101180":"event","Q2113792":"event","Q2113818":"event","Q2152768":"event","Q2216590":"event","Q2245146":"event","Q2364511":"event","Q2381159":"event","Q2477052":"event","Q14500324":"software","Q3329739":"event","Q3370130":"event","Q4354922":"event","Q5647463":"event","Q6269483":"event","Q6269549":"event","Q6803505":"event","Q7100860":"event","Q7707423":"event","Q9697654":"event","Q11261499":"event","Q11273944":"event","Q11327742":"event","Q11498516":"event","Q11618043":"event","Q11677885":"event","Q12379557":"event","Q13633222":"event","Q24949237":"event","Q28129515":"event","Q28129513":"event","Q30949798":"event","Q48829622":"event","Q56755168":"event","Q56761847":"event","Q56761853":"event","Q56815551":"event","Q67138330":"event","Q111292287":"software","Q110801784":"event","Q111633188":"event","Q115210567":"event","Q11393924":"speech","Q11444007":"speech","Q11481292":"speech","Q11632055":"speech","Q118108730":"event","Q120685036":"event","Q18889701":"dataset","Q798265":"event","Q1134564":"event","Q2265397":"event","Q2476885":"event","Q3053200":"event","Q3217464":"event","Q3329365":"event","Q3375811":"event","Q3386368":"event","Q3459291":"event","Q3526877":"event","Q3538157":"event","Q4120872":"event","Q4331506":"event","Q5361527":"event","Q9578683":"event","Q11235354":"event","Q22686609":"software","Q11300403":"event","Q11300407":"event","Q11398547":"event","Q11442078":"event","Q11458582":"event","Q11501315":"event","Q11511388":"event","Q11527721":"event","Q11554403":"event","Q11594394":"event","Q11603286":"event","Q11613056":"event","Q11629036":"event","Q16680665":"event","Q16680709":"event","Q16680747":"event","Q16680763":"event","Q28502279":"software","Q17214972":"event","Q28659237":"software","Q17640110":"event","Q18720525":"event","Q18923548":"event","Q19945033":"event","Q20723971":"event","Q20723968":"event","Q20723974":"event","Q20723975":"event","Q20723973":"event","Q20723976":"event","Q20723983":"event","Q20723986":"event","Q20723987":"event","Q20723984":"event","Q20723990":"event","Q20723988":"event","Q22130467":"event","Q26877537":"event","Q28232668":"event","Q30936962":"event","Q50966780":"software","Q50966789":"software","Q83790536":"webpage","Q64787790":"software","Q55025820":"event","Q55082037":"event","Q94970136":"broadcast","Q109598322":"software","Q109603400":"software","Q110547060":"software","Q110763412":"software","Q101064321":"event","Q221275":"regulation","Q1068383":"regulation","Q71533077":"webpage","Q3256521":"regulation","Q6592216":"regulation","Q10429773":"regulation","Q10701714":"regulation","Q84597428":"webpage","Q96726072":"webpage","Q104435523":"webpage","Q104637420":"webpage","Q326232":"event","Q392369":"event","Q498661":"event","Q573390":"event","Q674847":"event","Q764681":"event","Q904052":"event","Q937541":"event","Q938073":"event","Q107563839":"webpage","Q3365218":"event","Q15726780":"software","Q4307351":"event","Q115317546":"webpage","Q11619511":"event","Q116690561":"webpage","Q12470609":"event","Q15402106":"event","Q15731706":"event","Q18043296":"event","Q18578160":"event","Q18710416":"event","Q18710420":"event","Q18710421":"event","Q18720386":"event","Q18890149":"event","Q18890259":"event","Q19361204":"event","Q19598850":"event","Q19598856":"event","Q20033471":"event","Q20071027":"event","Q20111975":"event","Q20169711":"event","Q20175097":"event","Q20738971":"event","Q20806392":"event","Q20972301":"event","Q21528764":"event","Q21950739":"event","Q22977069":"event","Q25384504":"event","Q26253614":"event","Q26253612":"event","Q26253613":"event","Q26458300":"event","Q27503392":"event","Q27503706":"event","Q27827587":"event","Q27827637":"event","Q27832215":"event","Q27864124":"event","Q27864150":"event","Q27864166":"event","Q27865325":"event","Q27865328":"event","Q27865341":"event","Q27865357":"event","Q27880179":"event","Q28038931":"event","Q28038934":"event","Q28039229":"event","Q29097577":"event","Q65038211":"regulation","Q29901849":"event","Q18720640":"webpage","Q23841351":"webpage","Q27949687":"webpage","Q27949697":"webpage","Q28858528":"webpage","Q29075123":"webpage","Q29075121":"webpage","Q40218570":"webpage","Q44292661":"webpage","Q54718960":"webpage","Q65932995":"webpage","Q106389880":"event","Q108908796":"event","Q108908826":"event","Q108908835":"event","Q108913874":"event","Q108936524":"event","Q108936543":"event","Q110529940":"event","Q110529958":"event","Q110584334":"event","Q110654378":"event","Q110654423":"event","Q110654436":"event","Q110654733":"event","Q110654904":"event","Q110654999":"event","Q110656654":"event","Q110656671":"event","Q46882417":"event","Q47007925":"event","Q47007990":"event","Q47008000":"event","Q47008032":"event","Q47008047":"event","Q47008063":"event","Q47008075":"event","Q47008078":"event","Q50377630":"event","Q51678681":"event","Q51879254":"event","Q52117030":"event","Q52385947":"event","Q52386025":"event","Q52386106":"event","Q52386127":"event","Q52386151":"event","Q52386172":"event","Q52386201":"event","Q57082791":"event","Q57082817":"event","Q57082832":"event","Q57083466":"event","Q57083523":"event","Q57083619":"event","Q57083957":"event","Q57084200":"event","Q57084526":"event","Q57163156":"event","Q57163391":"event","Q57163630":"event","Q57163987":"event","Q57165824":"event","Q57166039":"event","Q57244872":"event","Q57245045":"event","Q57245236":"event","Q57245306":"event","Q57245454":"event","Q57931817":"event","Q66739327":"event","Q74120930":"event","Q80981314":"event","Q81611887":"event","Q81615143":"event","Q81625380":"event","Q81893660":"event","Q81921743":"event","Q82032696":"event","Q83352003":"event","Q83616331":"event","Q83815024":"event","Q83815115":"event","Q83815117":"event","Q83815236":"event","Q83883139":"event","Q83883151":"event","Q83883648":"event","Q83884464":"event","Q83884680":"event","Q83885548":"event","Q100293161":"event","Q100556022":"event","Q101438496":"event","Q101438858":"event","Q101439148":"event","Q101439394":"event","Q101440073":"event","Q101440430":"event","Q101454800":"event","Q101459067":"event","Q101460321":"event","Q101461246":"event","Q101463555":"event","Q101466280":"event","Q101478196":"event","Q101489713":"event","Q101527605":"event","Q101529337":"event","Q101530310":"event","Q101668589":"event","Q110656683":"event","Q110656705":"event","Q116024946":"event","Q116148731":"event","Q116149770":"event","Q116149827":"event","Q116629876":"event","Q116630268":"event","Q116630721":"event","Q116631077":"event","Q116631391":"event","Q116632165":"event","Q116632456":"event","Q116632697":"event","Q116633029":"event","Q116636355":"event","Q116637096":"event","Q116637409":"event","Q116638269":"event","Q116638530":"event","Q116638546":"event","Q116638555":"event","Q116890041":"event","Q122724053":"event","Q122724355":"event","Q122729230":"event","Q122750178":"event","Q122750236":"event","Q122750265":"event","Q122760794":"event","Q122760810":"event","Q122761425":"event","Q122762036":"event","Q122762089":"event","Q122762713":"event","Q122762743":"event","Q122762768":"event","Q122762809":"event","Q122762837":"event","Q122762849":"event","Q122762929":"event","Q122762948":"event","Q123813138":"event","Q123814888":"event","Q123819357":"event","Q219414":"event","Q641564":"event","Q725576":"event","Q765690":"event","Q833263":"event","Q917124":"event","Q938105":"event","Q1341133":"event","Q2332247":"event","Q2446518":"event","Q3892296":"event","Q13674541":"event","Q14916000":"event","Q15220420":"event","Q15704284":"event","Q16324793":"event","Q17486978":"event","Q18198089":"event","Q18574623":"event","Q18710415":"event","Q18752244":"event","Q19576835":"event","Q19598847":"event","Q20025032":"event","Q20046675":"event","Q20087598":"event","Q20746173":"event","Q20804559":"event","Q20882755":"event","Q21093836":"event","Q21768432":"event","Q21768436":"event","Q21821246":"event","Q22321289":"event","Q22338002":"event","Q22920552":"event","Q23292729":"event","Q23294076":"event","Q26838733":"event","Q26878348":"event","Q27826917":"event","Q27826969":"event","Q27827435":"event","Q27827518":"event","Q27827582":"event","Q27865868":"event","Q27891059":"event","Q27997378":"event","Q28061376":"event","Q28859163":"event","Q28948862":"event","Q29057912":"event","Q29452210":"event","Q30091668":"event","Q40291282":"event","Q106203524":"event","Q108125464":"event","Q108541084":"event","Q108908782":"event","Q108908817":"event","Q108908847":"event","Q108913870":"event","Q108936495":"event","Q109310706":"event","Q110174922":"event","Q110529976":"event","Q110656737":"event","Q110656755":"event","Q110656832":"event","Q110656882":"event","Q110656896":"event","Q114614803":"event","Q115137730":"event","Q115769573":"event","Q116030652":"event","Q116136827":"event","Q116149870":"event","Q116169539":"event","Q116249032":"event","Q116631854":"event","Q116635945":"event","Q116636553":"event","Q116636956":"event","Q116637190":"event","Q116637805":"event","Q116638564":"event","Q120900304":"event","Q120901095":"event","Q122723940":"event","Q122728756":"event","Q122730898":"event","Q122747528":"event","Q122760735":"event","Q43337313":"event","Q47007944":"event","Q47007957":"event","Q47008011":"event","Q47008039":"event","Q47295669":"event","Q47669370":"event","Q50411777":"event","Q50839240":"event","Q51775828":"event","Q51854001":"event","Q51954807":"event","Q52386063":"event","Q52386088":"event","Q52386184":"event","Q52386219":"event","Q56284054":"event","Q56709795":"event","Q57082387":"event","Q57082803":"event","Q57082867":"event","Q57082897":"event","Q57083551":"event","Q57084402":"event","Q57162840":"event","Q57164199":"event","Q57164517":"event","Q57165030":"event","Q57165364":"event","Q57166055":"event","Q57241662":"event","Q57245566":"event","Q57775410":"event","Q60776254":"event","Q61778309":"event","Q63174796":"event","Q63887717":"event","Q74121711":"event","Q81347968":"event","Q81353078":"event","Q81656215":"event","Q82031124":"event","Q82042230":"event","Q83814583":"event","Q83814838":"event","Q83815118":"event","Q83815424":"event","Q83815671":"event","Q83884446":"event","Q98043180":"event","Q100333768":"event","Q101442769":"event","Q101532268":"event","Q101533585":"event","Q101541790":"event","Q101541870":"event","Q101542086":"event","Q101542262":"event","Q101542270":"event","Q101550854":"event","Q101552804":"event","Q101669371":"event","Q106767234":"event","Q107307769":"event","Q107476730":"event","Q107578812":"event","Q108020227":"event","Q123735476":"software","Q112623215":"event","Q113019189":"event","Q113800594":"event","Q809884":"dataset","Q829548":"dataset","Q11654149":"webpage","Q2204919":"dataset","Q115675988":"event","Q116007034":"event","Q117317218":"event","Q122760853":"event","Q122761395":"event","Q122761472":"event","Q122761536":"event","Q122761577":"event","Q122762059":"event","Q122762901":"event","Q123096769":"event","Q603481":"software","Q1996630":"software","Q4740553":"software","Q181336":"event","Q182068":"event","Q387970":"event","Q585333":"event","Q748389":"event","Q2053700":"event","Q2379010":"event","Q2658171":"event","Q3418194":"event","Q3633116":"event","Q6587910":"event","Q7525493":"event","Q11042716":"event","Q22815098":"software","Q16624207":"event","Q18012553":"event","Q18629983":"event","Q19275977":"event","Q19298799":"event","Q19631227":"event","Q19946292":"event","Q19969488":"event","Q20153779":"event","Q20180679":"event","Q20180690":"event","Q20682745":"event","Q23044632":"event","Q23903087":"event","Q25377259":"event","Q27159717":"event","Q27230592":"event","Q27832398":"event","Q36381476":"event","Q42265032":"event","Q13331174":"webpage","Q47538737":"event","Q48814173":"event","Q56017387":"event","Q23894246":"webpage","Q58965890":"event","Q60969183":"event","Q60969695":"event","Q61696314":"event","Q61696978":"event","Q63556891":"event","Q68542705":"event","Q74218661":"event","Q110818806":"webpage","Q102336293":"dataset","Q105360183":"event","Q107092176":"event","Q110300638":"event","Q110323935":"event","Q1630770":"software","Q200734":"event","Q204012":"event","Q205505":"event","Q253309":"event","Q303028":"event","Q371385":"event","Q379159":"event","Q518751":"event","Q581077":"event","Q597387":"event","Q689010":"event","Q749307":"event","Q789760":"event","Q809958":"event","Q820665":"event","Q913964":"event","Q958591":"event","Q958775":"event","Q1000415":"event","Q1031230":"event","Q1031242":"event","Q1035963":"event","Q1071162":"event","Q1134505":"event","Q1182913":"event","Q1208702":"event","Q1235654":"event","Q1235660":"event","Q1280421":"event","Q1350359":"event","Q1355573":"event","Q1401411":"event","Q1435937":"event","Q1436721":"event","Q1451349":"event","Q1566018":"event","Q1608283":"event","Q1626609":"event","Q1634916":"event","Q1789702":"event","Q1789700":"event","Q1827590":"event","Q1881195":"event","Q1894516":"event","Q1917749":"event","Q1935979":"event","Q1939185":"event","Q1965756":"event","Q2080867":"event","Q2088660":"event","Q2090907":"event","Q2328431":"event","Q3113804":"event","Q3113848":"event","Q3113887":"event","Q3113951":"event","Q3114049":"event","Q4035729":"event","Q4036036":"event","Q4044491":"event","Q4046559":"event","Q4048349":"event","Q4048381":"event","Q4578706":"event","Q4815989":"event","Q5370895":"event","Q5451983":"event","Q5451981":"event","Q5451988":"event","Q5594968":"event","Q5594973":"event","Q5975766":"event","Q6349925":"event","Q6803379":"event","Q6905314":"event","Q7206524":"event","Q7779855":"event","Q7863028":"event","Q7936111":"event","Q8042351":"event","Q10259870":"event","Q10264888":"event","Q10298081":"event","Q10322320":"event","Q10534956":"event","Q14935528":"event","Q18351451":"event","Q20805473":"event","Q61449115":"software","Q70344413":"software","Q63868344":"event","Q67181439":"event","Q99528515":"event","Q104846358":"event","Q104847437":"event","Q104854821":"event","Q105038186":"event","Q105044533":"event","Q105082119":"event","Q105555777":"event","Q105905601":"event","Q106696123":"event","Q111169988":"event","Q111170019":"event","Q111947005":"event","Q123152921":"event","Q124455173":"event","Q124705550":"event","Q1000492":"software","Q2608176":"software","Q4418079":"software","Q4686479":"software","Q263803":"event","Q280744":"event","Q463761":"event","Q910531":"event","Q912234":"event","Q922166":"event","Q1003057":"event","Q1031214":"event","Q1031224":"event","Q1031238":"event","Q1071362":"event","Q1436719":"event","Q1444311":"event","Q1486492":"event","Q1526444":"event","Q1726982":"event","Q1744820":"event","Q1789698":"event","Q1789699":"event","Q1873096":"event","Q1873097":"event","Q1950841":"event","Q2000963":"event","Q2043392":"event","Q2043399":"event","Q2043402":"event","Q2219130":"event","Q2261424":"event","Q2341353":"event","Q2362456":"event","Q4639658":"event","Q4743694":"event","Q4743696":"event","Q4835621":"event","Q4883094":"event","Q4997088":"event","Q5089349":"event","Q5148694":"event","Q5583736":"event","Q17048770":"software","Q6023015":"event","Q6948589":"event","Q7071936":"event","Q7196694":"event","Q7206531":"event","Q7394799":"event","Q7685866":"event","Q7823966":"event","Q119025401":"webpage","Q16768882":"event","Q16961295":"event","Q16980789":"event","Q16980923":"event","Q16982317":"event","Q16982445":"event","Q16985526":"event","Q16986585":"event","Q21586294":"event","Q22025348":"event","Q22248507":"event","Q28448398":"event","Q67202224":"webpage","Q84322930":"motion_picture","Q48841214":"event","Q48841253":"event","Q64683336":"event","Q72225695":"book","Q9114":"event","Q97120595":"event","Q109520717":"software","Q100251706":"event","Q109377975":"event","Q110295952":"legislation","Q112160934":"event","Q191342":"dataset","Q113950643":"event","Q116858741":"event","Q124394737":"event","Q295179":"software","Q15590336":"dataset","Q2086463":"software","Q2587354":"software","Q97303176":"webpage","Q171650":"event","Q216330":"event","Q289572":"event","Q751717":"event","Q786646":"event","Q843559":"event","Q843564":"event","Q843570":"event","Q843579":"event","Q843831":"event","Q843836":"event","Q843842":"event","Q909344":"event","Q998170":"event","Q1128437":"event","Q1587816":"event","Q1770395":"event","Q1892098":"event","Q1983921":"event","Q2798871":"event","Q2818080":"event","Q4044246":"event","Q4044501":"event","Q4147738":"event","Q4412527":"event","Q4532940":"event","Q4635078":"event","Q4642515":"event","Q4642513":"event","Q4642518":"event","Q5594961":"event","Q7170805":"event","Q7185707":"event","Q7270880":"event","Q7537626":"event","Q7687408":"event","Q7707420":"event","Q7907065":"event","Q8026605":"event","Q16826251":"event","Q16970173":"event","Q16972009":"event","Q17326251":"event","Q18166188":"event","Q18395423":"event","Q23867898":"event","Q28128142":"event","Q48785303":"event","Q48803181":"event","Q60770328":"event","Q99904240":"webpage","Q99904310":"webpage","Q96313657":"software","Q88007346":"event","Q110546562":"software","Q99485986":"event","Q99485988":"event","Q99525687":"event","Q100460289":"event","Q100460437":"event","Q100460885":"event","Q100461071":"event","Q100461224":"event","Q100461380":"event","Q114900710":"software","Q115217841":"software","Q106453584":"event","Q106824858":"event","Q106824868":"event","Q107654488":"event","Q115159228":"book","Q109669515":"event","Q109935409":"event","Q109935517":"event","Q109935543":"event","Q109935560":"event","Q109935583":"event","Q109935605":"event","Q109935648":"event","Q109935680":"event","Q110647102":"event","Q123990284":"software","Q123990478":"software","Q123990504":"software","Q123990515":"software","Q123990611":"software","Q68685":"dataset","Q114338575":"event","Q5270001":"dataset","Q119983047":"event","Q123081762":"event","Q123262827":"event","Q1188761":"event","Q1200915":"event","Q2236032":"event","Q2300237":"event","Q2483906":"event","Q107285708":"webpage","Q107285856":"webpage","Q2823557":"event","Q2999652":"event","Q5946442":"event","Q7076137":"event","Q56299202":"webpage","Q62694393":"software","Q63106609":"software","Q65049101":"event","Q107079070":"report","Q117038179":"webpage","Q117038177":"webpage","Q111700940":"dataset","Q111700951":"dataset","Q111701052":"dataset","Q111702297":"dataset","Q111702352":"dataset","Q111702456":"dataset","Q111702535":"dataset","Q111702612":"dataset","Q111702644":"dataset","Q111702758":"dataset","Q111702952":"dataset","Q111703053":"dataset","Q111703120":"dataset","Q111780056":"dataset","Q111780071":"dataset","Q111780132":"dataset","Q111780269":"dataset","Q111780295":"dataset","Q111780325":"dataset","Q111780731":"dataset","Q111780960":"dataset","Q111781363":"dataset","Q111781380":"dataset","Q111781396":"dataset","Q111801348":"dataset","Q111847166":"dataset","Q111847167":"dataset","Q111847165":"dataset","Q111847739":"dataset","Q111847737":"dataset","Q111847743":"dataset","Q111847741":"dataset","Q111848431":"dataset","Q111848432":"dataset","Q111890970":"dataset","Q111892255":"dataset","Q111892258":"dataset","Q111892259":"dataset","Q111892256":"dataset","Q107542373":"software","Q111662771":"software","Q103899162":"event","Q2888277":"regulation","Q106861159":"event","Q106861156":"event","Q4663410":"regulation","Q4886725":"regulation","Q4893450":"regulation","Q6744260":"regulation","Q117716418":"event","Q120278940":"event","Q11429522":"dataset","Q11612492":"dataset","Q6659377":"software","Q129483":"event","Q141025":"event","Q1200230":"event","Q1345171":"event","Q1361443":"event","Q1771778":"event","Q1842230":"event","Q1847651":"event","Q1878822":"event","Q1945424":"event","Q2030469":"event","Q2144968":"event","Q2303329":"event","Q2365273":"event","Q2861656":"event","Q2918950":"event","Q4959681":"review","Q5171626":"review","Q4765978":"event","Q4970523":"event","Q7449618":"review","Q6001267":"event","Q7061321":"event","Q7981955":"event","Q11983097":"event","Q11992138":"event","Q11992144":"event","Q11992167":"event","Q11992175":"event","Q12813022":"event","Q12882990":"event","Q12882991":"event","Q12882995":"event","Q12882997":"event","Q12883902":"event","Q12883909":"event","Q12883914":"event","Q12883915":"event","Q12883912":"event","Q12883918":"event","Q12883919":"event","Q12883923":"event","Q12883921":"event","Q12883926":"event","Q12883927":"event","Q12883924":"event","Q12883925":"event","Q12883930":"event","Q12883928":"event","Q15689318":"event","Q16327253":"event","Q16327304":"event","Q16327311":"event","Q16327318":"event","Q16327322":"event","Q16330057":"event","Q16330062":"event","Q16330075":"event","Q16538244":"event","Q18388453":"event","Q30897124":"software","Q19857023":"event","Q25434256":"event","Q28718565":"event","Q57409838":"software","Q56407985":"event","Q64533434":"event","Q67591664":"event","Q73396547":"event","Q103470847":"event","Q108570277":"event","Q108570309":"event","Q120373215":"software","Q120373252":"software","Q109042660":"event","Q110911067":"event","Q110911065":"event","Q110911174":"event","Q122903770":"software","Q123990618":"software","Q124102048":"software","Q124368518":"dataset","Q124418301":"dataset","Q124619014":"software","Q10476086":"regulation","Q125097588":"software","Q125097630":"software","Q680603":"dataset","Q827489":"dataset","Q898489":"dataset","Q901694":"dataset","Q115171351":"event","Q2263094":"dataset","Q115839533":"event","Q3823563":"dataset","Q121568098":"event","Q121620703":"event","Q121620715":"event","Q121625416":"event","Q11410913":"dataset","Q666455":"software","Q1080071":"software","Q1280407":"software","Q4035705":"software","Q4038545":"software","Q4811550":"software","Q229398":"event","Q264099":"event","Q540061":"event","Q643053":"event","Q690264":"event","Q933844":"event","Q1203452":"event","Q1589554":"event","Q1961703":"event","Q2526804":"event","Q3655000":"event","Q4179291":"event","Q4294199":"event","Q4810361":"event","Q5975769":"event","Q7840125":"event","Q19683335":"software","Q10379423":"event","Q11306923":"event","Q11476054":"event","Q25383672":"software","Q25392778":"software","Q15914808":"event","Q16585493":"event","Q17619970":"event","Q18394371":"event","Q123471651":"webpage","Q19598388":"event","Q20120093":"event","Q28454487":"event","Q30947464":"event","Q70696303":"dataset","Q71130435":"dataset","Q55516":"software","Q58785888":"event","Q122766310":"dataset","Q97727365":"event","Q98969121":"event","Q98969230":"event","Q98969263":"event","Q99031511":"event","Q110887639":"software","Q113645065":"software","Q71536540":"webpage","Q106702187":"event","Q108335640":"event","Q108415891":"event","Q115427269":"legislation","Q84271425":"webpage","Q119568226":"event","Q3612956":"software","Q99841874":"webpage","Q2034044":"event","Q2034054":"event","Q2065446":"event","Q2066748":"event","Q2241734":"event","Q107278014":"webpage","Q2626843":"event","Q2639971":"event","Q2856528":"event","Q2954800":"event","Q109659893":"webpage","Q10536762":"event","Q11294483":"event","Q116039348":"webpage","Q11342975":"event","Q11429448":"event","Q11445430":"event","Q11583930":"event","Q11597245":"event","Q11609222":"event","Q11678910":"event","Q11782686":"event","Q12407019":"legislation","Q12038210":"event","Q16345168":"event","Q17084022":"event","Q17134966":"event","Q123741638":"webpage","Q48772221":"event","Q17590740":"webpage","Q52914522":"event","Q60969170":"event","Q29509043":"webpage","Q65054195":"event","Q80370583":"event","Q80708319":"event","Q87798979":"event","Q87849896":"event","Q56062113":"webpage","Q89947880":"event","Q90567362":"event","Q90921908":"event","Q97685728":"event","Q108471352":"event","Q109669593":"event","Q109669620":"event","Q111324105":"event","Q122791012":"software","Q112161395":"event","Q124101822":"software","Q2313592":"dataset","Q21113302":"dataset","Q873325":"event","Q998711":"event","Q1544944":"event","Q1857148":"event","Q1999275":"event","Q2117827":"event","Q2145391":"event","Q2213861":"event","Q2237879":"event","Q2273681":"event","Q2306623":"event","Q2362894":"event","Q2431042":"event","Q2490367":"event","Q107285953":"webpage","Q107285965":"webpage","Q2879531":"event","Q2950611":"event","Q3425916":"event","Q3500894":"event","Q4989541":"event","Q10394203":"event","Q15879714":"event","Q15879715":"event","Q15879712":"event","Q15879719":"event","Q47175589":"dataset","Q69681398":"event","Q69772310":"event","Q69790936":"event","Q69792758":"event","Q69870650":"event","Q69887041":"event","Q70369541":"event","Q70384357":"event","Q70442641":"event","Q71791810":"event","Q108552635":"report","Q74813502":"event","Q109255176":"report","Q76544848":"event","Q76544874":"event","Q76544897":"event","Q76544929":"event","Q81024457":"event","Q81024490":"event","Q81024520":"event","Q81024546":"event","Q81033892":"event","Q81036853":"event","Q81039301":"event","Q81042176":"event","Q85305177":"event","Q91270787":"event","Q101136446":"event","Q2894847":"regulation","Q4138754":"dataset","Q98034328":"webpage","Q98034341":"webpage","Q113446310":"webpage","Q11465615":"event","Q11498068":"event","Q124068215":"webpage","Q74173914":"event","Q93251355":"event","Q63254581":"webpage","Q101136450":"event","Q101136451":"event","Q101136449":"event","Q101136466":"event"}

},{}],121:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parse = parse;
function parse(input) {
  return input.match(/\/(Q\d+)(?:[#?/]|\s*$)/)[1];
}
},{}],122:[function(require,module,exports){
"use strict";

var _core = require("@citation-js/core");

var _output = _interopRequireDefault(require("./output"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_core.plugins.add('@wikipedia', {
  output: _output.default
});
},{"./output":124,"@citation-js/core":"citation-js"}],123:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convert = convert;

var _core = require("@citation-js/core");

var _date = require("@citation-js/date");

var _name = require("@citation-js/name");

const TYPE_MAPPING = {
  article: 'journal',
  'article-journal': 'journal',
  'article-magazine': 'magazine',
  'article-newspaper': 'news',
  book: 'book',
  broadcast: 'serial',
  chapter: 'book',
  dataset: 'web',
  entry: 'encyclopedia',
  'entry-dictionary': 'encyclopedia',
  'entry-encyclopedia': 'encyclopedia',
  figure: 'AV media',
  graphic: 'AV media',
  interview: 'interview',
  map: 'map',
  motion_picture: 'AV media',
  'paper-conference': 'conference',
  periodical: 'magazine',
  post: 'web',
  'post-weblog': 'web',
  report: 'report',
  software: 'web',
  song: 'AV media',
  speech: 'speech',
  standard: 'techreport',
  thesis: 'thesis',
  webpage: 'web'
};

function getType(entry) {
  if (entry.type === 'broadcast' && entry['container-title']) {
    return 'episode';
  }

  return TYPE_MAPPING[entry.type];
}

function formatNameParts(name) {
  if (!name.family) {
    return [undefined, undefined, name.literal];
  }

  let last = name.family;

  if (name['non-dropping-particle']) {
    last = name['non-dropping-particle'] + ' ' + last;
  }

  let first = name.given;

  if (first && name['dropping-particle']) {
    first += ' ' + name['dropping-particle'];
  }

  if (first && name.suffix) {
    first += ', ' + name.suffix;
  }

  return [last, first, undefined];
}

const MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
const CONTRIBUTORS = ['chair', 'compiler', 'composer', 'contributor', 'curator', 'director', 'executive-producer', 'guest', 'host', 'illustrator', 'narrator', 'organizer', 'performer', 'producer', 'recipient', 'script-writer', 'series-creator'];
const CONVERTERS = {
  NAMES: {
    toSource(names) {
      const output = [[], [], []];

      for (const name of names) {
        formatNameParts(name).forEach((part, index) => output[index].push(part));
      }

      return output;
    }

  },
  FLAT_NAMES: {
    toSource(names) {
      return names.map(name => (0, _name.format)(name, false));
    }

  },
  FLAT_NAMES_WITH_ROLES: {
    toSource() {
      const names = [];

      for (const role of CONTRIBUTORS) {
        if (Array.isArray(this[role])) {
          for (const name of this[role]) {
            const formattedName = (0, _name.format)(name, true);
            const formattedRole = role.replace(/[_-]/g, ' ');
            names.push(`${formattedName} (${formattedRole})`);
          }
        }
      }

      if (names.length) {
        return names.join('; ');
      }
    }

  },
  DATE: {
    toSource(date) {
      if (date['date-parts'] && date['date-parts'].length === 2) {
        const [start, end] = date['date-parts'];
        const output = [];

        if (start[2]) {
          output.push(start[2]);
        } else if (start[1]) {
          output.push(MONTHS[start[1] - 1]);
        } else {
          output.push(start[0]);
        }

        if (start[2] && start[1] !== end[1]) {
          output.push(MONTHS[start[1] - 1]);
        }

        if (start[1] && start[0] !== end[0]) {
          output.push(start[0]);
        }

        output.push('\u2013');

        if (end[2]) {
          output.push(end[2]);
        }

        if (end[1]) {
          output.push(MONTHS[end[1] - 1]);
        }

        output.push(end[0]);
        return output.join(' ');
      } else if (date['date-parts'] && date['date-parts'][0] && date['date-parts'][0].length === 2) {
        const [year, month] = date['date-parts'][0];
        return MONTHS[month - 1] + ' ' + year;
      }

      return (0, _date.format)(date);
    }

  },
  TITLE: {
    toSource(title) {
      return title.replace(/<\/?(i|b|sup|sub|span [^>]+])>/g, '');
    }

  },
  GENRE: {
    toSource(genre, medium) {
      return genre || medium;
    }

  },
  ISSUE: {
    toSource(issue, title) {
      return issue && title ? `${issue}, ''${title}''` : issue;
    }

  },
  PAGE: {
    toSource(page) {
      return page.includes('-') ? [undefined, page] : [page, undefined];
    }

  },
  IDENTIFIERS: {
    toSource(custom) {
      return [custom.S2ID, custom.SWHID];
    }

  }
};
const FIELD_MAPPING = [{
  source: ['last', 'first', 'author'],
  target: 'author',
  convert: CONVERTERS.NAMES
}, {
  source: ['last', 'first', 'author'],
  target: 'container-author',
  convert: CONVERTERS.NAMES,
  when: {
    target: {
      author: false
    }
  }
}, {
  source: ['editor-last', 'editor-first', 'editor'],
  target: 'editor',
  convert: CONVERTERS.NAMES
}, {
  source: ['translator-last', 'translator-first', 'translator'],
  target: 'translator',
  convert: CONVERTERS.NAMES
}, {
  source: 'interviewer',
  target: 'interviewer',
  convert: CONVERTERS.FLAT_NAMES
}, {
  source: 'people',
  convert: CONVERTERS.FLAT_NAMES_WITH_ROLES
}, {
  source: 'date',
  target: 'issued',
  convert: CONVERTERS.DATE
}, {
  source: 'orig-date',
  target: 'original-date',
  convert: CONVERTERS.DATE
}, {
  source: 'publication-date',
  target: 'available-date',
  convert: CONVERTERS.DATE
}, {
  source: 'access-date',
  target: 'accessed',
  convert: CONVERTERS.DATE
}, {
  source: 'title',
  target: 'title',
  convert: CONVERTERS.TITLE,
  when: {
    target: {
      type(type) {
        return type !== 'chapter';
      },

      'original-title': false
    }
  }
}, {
  source: 'work',
  target: 'container-title',
  convert: CONVERTERS.TITLE,
  when: {
    target: {
      type(type) {
        return !['broadcast', 'chapter'].includes(type);
      }

    }
  }
}, {
  source: 'series',
  target: 'container-title',
  convert: CONVERTERS.TITLE,
  when: {
    target: {
      type: 'broadcast'
    }
  }
}, {
  source: 'series',
  target: 'collection-title',
  convert: CONVERTERS.TITLE
}, {
  source: 'trans-title',
  target: 'title',
  convert: CONVERTERS.TITLE,
  when: {
    target: {
      'original-title': true
    }
  }
}, {
  source: 'title',
  target: 'original-title',
  convert: CONVERTERS.TITLE
}, {
  source: 'title',
  target: 'container-title',
  convert: CONVERTERS.TITLE,
  when: {
    target: {
      type: 'chapter'
    }
  }
}, {
  source: 'chapter',
  target: 'title',
  convert: CONVERTERS.TITLE,
  when: {
    target: {
      type: 'chapter'
    }
  }
}, {
  source: 'conference',
  target: 'event-title',
  when: {
    target: {
      type: 'paper-conference'
    }
  }
}, {
  source: 'event',
  target: 'event-title',
  when: {
    target: {
      type: 'speech'
    }
  }
}, {
  source: 'url',
  target: 'URL'
}, {
  source: 'department',
  target: 'section'
}, {
  source: 'type',
  target: ['genre', 'medium'],
  convert: CONVERTERS.GENRE
}, 'language', 'edition', 'scale', {
  source: 'publisher',
  target: 'publisher',
  when: {
    target: {
      type(type) {
        return !['broadcast'].includes(type);
      }

    }
  }
}, {
  source: 'network',
  target: 'publisher',
  when: {
    target: {
      type: 'broadcast'
    }
  }
}, {
  source: 'location',
  target: 'publisher-place',
  when: {
    target: {
      'event-place': false
    }
  }
}, {
  source: 'publication-place',
  target: 'publisher-place',
  when: {
    target: {
      'event-place': true
    }
  }
}, {
  source: 'location',
  target: 'event-place'
}, 'volume', {
  source: 'issue',
  target: ['issue', 'volume-title'],
  convert: CONVERTERS.ISSUE
}, 'number', {
  source: ['page', 'pages'],
  target: 'page',
  convert: CONVERTERS.PAGE
}, {
  source: 'at',
  target: 'locator'
}, {
  source: 'doi',
  target: 'DOI'
}, {
  source: 'isbn',
  target: 'ISBN'
}, {
  source: 'issn',
  target: 'ISSN'
}, {
  source: 'pmc',
  target: 'PMCID'
}, {
  source: 'pmid',
  target: 'PMID'
}, {
  source: ['s2cid', 'id'],
  target: 'custom',
  convert: CONVERTERS.IDENTIFIERS
}];
const translator = new _core.util.Translator(FIELD_MAPPING);

function convert(entry) {
  const type = getType(entry);
  const parameters = [];
  const data = translator.convertToSource(entry);

  for (const field in data) {
    if (Array.isArray(data[field])) {
      data[field].forEach((value, index) => {
        if (value === undefined) {
          return;
        }

        parameters.push([field + (index + 1), value]);
      });
    } else {
      parameters.push([field, data[field]]);
    }
  }

  return {
    type,
    parameters
  };
}
},{"@citation-js/core":"citation-js","@citation-js/date":43,"@citation-js/name":46}],124:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mapping = require("./mapping.js");

function formatTemplate(entry, {
  format = 'vertical'
}) {
  const {
    type,
    parameters
  } = (0, _mapping.convert)(entry);
  const template = type ? `cite ${type}` : 'Citation';

  if (format === 'horizontal') {
    const body = parameters.map(([field, value]) => `|${field}=${value}`).join(' ');
    return `{{${template} ${body}}}`;
  }

  const longestField = parameters.reduce((max, [field]) => Math.max(max, field.length), -Infinity);
  const body = parameters.map(([field, value]) => ` | ${field.padEnd(longestField, ' ')} = ${value}`).join('\n');
  return `{{${template}
${body}
}}`;
}

var _default = {
  wikipediaTemplate(csl, options = {}) {
    return csl.map(entry => formatTemplate(entry, options)).join('\n\n');
  }

};
exports.default = _default;
},{"./mapping.js":123}],125:[function(require,module,exports){
"use strict";

var _jsYaml = _interopRequireDefault(require("js-yaml"));

var _core = require("@citation-js/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const timestampTag = 'tag:yaml.org,2002:timestamp';
const timestamp = _jsYaml.default.DEFAULT_SCHEMA.compiledTypeMap.scalar[timestampTag];
const date = new _jsYaml.default.Type(timestampTag, {
  kind: 'scalar',
  resolve: timestamp.resolve,
  construct: timestamp.construct,
  instanceOf: Date,

  represent(object) {
    return object.toISOString().split('T')[0];
  }

});

const CFF_SCHEMA = _jsYaml.default.DEFAULT_SCHEMA.extend({
  implicit: [date],
  explicit: []
});

_core.plugins.add('@else', {
  input: {
    '@else/yaml': {
      parseType: {
        dataType: 'String',
        tokenList: {
          split: /\n(\s{2})*(-\s)?/,
          token: /^[\w-]*: /,
          every: false
        }
      },

      parse(file) {
        return _jsYaml.default.load(file, {
          json: true
        });
      }

    }
  },
  output: {
    yaml(data) {
      return _jsYaml.default.dump(data, {
        schema: CFF_SCHEMA
      });
    }

  }
});
},{"@citation-js/core":"citation-js","js-yaml":133}],126:[function(require,module,exports){
"use strict";

var _core = require("@citation-js/core");

var _name = require("@citation-js/name");

var _date = require("@citation-js/date");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const TYPES_TO_TARGET = {
  poster: 'speech',
  presentation: 'speech',
  dataset: 'dataset',
  video: 'motion_picture',
  software: 'software',
  other: 'document'
};
const PUBLICATION_TYPES_TO_TARGET = {
  book: 'book',
  section: 'chapter',
  conferencepaper: 'paper-conference',
  article: 'article-journal',
  patent: 'patent',
  preprint: 'article',
  report: 'report',
  softwaredocumentation: 'report',
  thesis: 'thesis',
  workingpaper: 'manuscript',
  other: 'article'
};
const IMAGE_TYPES_TO_TARGET = {
  figure: 'figure',
  plot: 'figure',
  drawing: 'graphic',
  diagram: 'figure',
  photo: 'graphic',
  other: 'graphic'
};
const TYPES_TO_SOURCE = {
  article: ['publication', 'article'],
  'article-magazine': ['publication', 'article'],
  'article-newspaper': ['publication', 'article'],
  'article-journal': ['publication', 'article'],
  bill: ['publication', 'other'],
  book: ['publication', 'book'],
  broadcast: ['video'],
  chapter: ['publication', 'section'],
  classic: ['publication', 'other'],
  collection: ['other'],
  dataset: ['dataset'],
  document: ['other'],
  entry: ['publication', 'other'],
  'entry-dictionary': ['publication', 'other'],
  'entry-encyclopedia': ['publication', 'other'],
  event: ['other'],
  figure: ['image', 'figure'],
  graphic: ['image', 'other'],
  hearing: ['publication', 'other'],
  interview: ['publication', 'other'],
  legislation: ['publication', 'other'],
  legal_case: ['publication', 'other'],
  manuscript: ['publication', 'other'],
  map: ['image', 'other'],
  motion_picture: ['video'],
  musical_score: ['video'],
  pamphlet: ['publication', 'other'],
  'paper-conference': ['publication', 'conferencepaper'],
  patent: ['publication', 'patent'],
  post: ['publication', 'other'],
  'post-weblog': ['publication', 'other'],
  performance: ['other'],
  periodical: ['publication', 'other'],
  personal_communication: ['publication', 'other'],
  regulation: ['publication', 'other'],
  report: ['publication', 'report'],
  review: ['publication', 'article'],
  'review-book': ['publication', 'article'],
  song: ['video'],
  software: ['software'],
  speech: ['presentation'],
  standard: ['publication', 'softwaredocumentation'],
  thesis: ['publication', 'thesis'],
  treaty: ['publication', 'other'],
  webpage: ['publication', 'other']
};
const CONVERT = {
  DATE: {
    toTarget(iso) {
      return (0, _date.parse)(iso);
    },

    toSource(date) {
      return (0, _date.format)(date);
    }

  },
  AUTHORS: {
    toTarget(authors) {
      return authors.map(author => _objectSpread(_objectSpread({}, (0, _name.parse)(author.name)), {}, {
        _affiliation: author.affiliation,
        _orcid: author.orcid
      }));
    },

    toSource(authors) {
      return authors.map(author => ({
        name: (0, _name.format)(author, true),
        affiliation: author._affiliation,
        orcid: author._orcid
      }));
    }

  }
};
const WHEN = {
  ARTICLE: {
    source: {
      upload_type: 'publication',
      publication_type: 'article'
    },
    target: {
      type: ['article', 'article-newspaper', 'article-magazine', 'article-journal']
    }
  },
  BOOK: {
    source: {
      upload_type: 'publication',
      publication_type: 'book'
    },
    target: {
      type: 'book'
    }
  },
  CHAPTER: {
    source: {
      upload_type: 'publication',
      publication_type: 'section'
    },
    target: {
      type: 'chapter'
    }
  },
  THESIS: {
    source: {
      upload_type: 'publication',
      publication_type: 'thesis'
    },
    target: {
      type: 'thesis'
    }
  },
  PAPER_CONFERENCE: {
    source: {
      upload_type: 'publication',
      publication_type: 'conferencepaper'
    },
    target: {
      type: 'paper-conference'
    }
  }
};
const METADATA_PROPS = [{
  source: ['upload_type', 'publication_type', 'image_type'],
  target: 'type',
  convert: {
    toTarget(uploadType, publicationType, imageType) {
      if (uploadType === 'publication' && publicationType) {
        return PUBLICATION_TYPES_TO_TARGET[publicationType] || PUBLICATION_TYPES_TO_TARGET.other;
      } else if (uploadType === 'image' && imageType) {
        return IMAGE_TYPES_TO_TARGET[imageType] || IMAGE_TYPES_TO_TARGET.other;
      } else {
        return TYPES_TO_TARGET[uploadType] || TYPES_TO_TARGET.other;
      }
    },

    toSource(type) {
      const [uploadType, secondaryType] = TYPES_TO_SOURCE[type] || ['other'];

      if (uploadType === 'publication') {
        return [uploadType, secondaryType, undefined];
      } else if (uploadType === 'image') {
        return [uploadType, undefined, secondaryType];
      } else {
        return [uploadType, undefined, undefined];
      }
    }

  }
}, {
  source: 'publication_date',
  target: 'issued',
  convert: CONVERT.DATE
}, 'title', {
  source: 'creators',
  target: 'author',
  convert: CONVERT.AUTHORS
}, {
  source: 'description',
  target: 'abstract'
}, {
  source: 'doi',
  target: 'DOI'
}, {
  source: 'keywords',
  target: 'keyword',
  convert: {
    toTarget(keywords) {
      return keywords.map(keyword => keyword.includes(',') ? `"${keyword}"` : keyword).join(',');
    },

    toSource(keywords) {
      return keywords.match(/("(\\[\\"]|[^\\"])"|[^,]+)(?=,|$)/g).map(keyword => keyword.replace(/^"|"$/g, ''));
    }

  }
}, {
  source: 'notes',
  target: 'annote'
}, {
  source: 'contributors',
  target: ['editor', 'producer'],
  convert: {
    toTarget(contributors) {
      const byType = contributors.reduce((byType, contributor) => {
        if (!byType[contributor.type]) byType[contributor.type] = [];
        byType[contributor.type].push(_objectSpread(_objectSpread({}, (0, _name.parse)(contributor.name)), {}, {
          _affiliation: contributor.affiliation,
          _orcid: contributor.orcid
        }));
        return byType;
      }, {});
      return [byType.Editors, byType.Producers];
    },

    toSource(editors, producers) {
      return [...editors.map(name => ['Editors', name]), ...producers.map(name => ['Producers', name])].map(([type, name]) => ({
        type,
        name: (0, _name.format)(name, true),
        affiliation: name._affiliation,
        orcid: name._orcid
      }));
    }

  }
}, 'version', {
  source: 'language',
  target: 'language',
  when: {
    source: true,
    target: {
      language(lang) {
        return lang.length === 2 || lang.length === 3;
      }

    }
  }
}, {
  source: 'journal_title',
  target: 'container-title',
  when: WHEN.ARTICLE
}, {
  source: 'journal_volume',
  target: 'volume',
  when: WHEN.ARTICLE
}, {
  source: 'journal_issue',
  target: 'issue',
  when: WHEN.ARTICLE
}, {
  source: 'journal_pages',
  target: 'page',
  when: WHEN.ARTICLE
}, {
  source: 'conference_title',
  target: 'event-title'
}, {
  source: 'conference_place',
  target: 'event-place'
}, {
  source: 'conference_dates',
  target: 'event-date',
  convert: {
    toTarget: _date.parse,

    toSource(date) {
      return CONVERT.DATE.toSource(date) + ' to ' + CONVERT.DATE.toSource({
        'date-parts': [date['date-parts'][1]]
      });
    }

  }
}, {
  source: 'conference_session',
  target: 'volume',
  when: WHEN.PAPER_CONFERENCE
}, {
  source: 'conference_session_part',
  target: 'issue',
  when: WHEN.PAPER_CONFERENCE
}, {
  source: 'imprint_publisher',
  target: 'publisher',
  when: WHEN.BOOK
}, {
  source: 'imprint_place',
  target: 'publisher-place'
}, {
  source: 'imprint_isbn',
  target: 'ISBN'
}, {
  source: 'partof_title',
  target: 'container-title',
  when: WHEN.SECTION
}, {
  source: 'partof_pages',
  target: 'page',
  when: WHEN.SECTION
}, {
  source: 'thesis_university',
  target: 'publisher',
  when: WHEN.THESIS
}];
const metadataTranslator = new _core.util.Translator(METADATA_PROPS);

_core.plugins.add('@zenodo', {
  input: {
    '@zenodo/metadata+object': {
      parseType: {
        dataType: 'SimpleObject',
        propertyConstraint: {
          props: 'upload_type'
        }
      },

      parse(input) {
        const output = metadataTranslator.convertToTarget(input);
        return output;
      }

    }
  },
  output: {
    '.zenodo.json'(data, options = {}) {
      const output = metadataTranslator.convertToSource(data);

      if (options.type === 'object') {
        return output;
      } else {
        return JSON.stringify(output, null, 2);
      }
    }

  }
});
},{"@citation-js/core":"citation-js","@citation-js/date":43,"@citation-js/name":46}],127:[function(require,module,exports){
"use strict";

require("whatwg-fetch");

var _core = require("@citation-js/core");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const CSL_BASE_URL = 'cdn.jsdelivr.net/gh/citation-style-language';
const CONFIG = document.currentScript.dataset;

async function get(url) {
  return (await fetch(url)).text();
}

function getOpts(options, prefix) {
  return Object.keys(options).reduce((output, key) => {
    if (key.slice(0, prefix.length) === prefix) {
      let option = key.slice(prefix.length);
      option = option[0].toLowerCase() + option.slice(1);
      output[option] = options[key] === 'false' ? false : options[key];
    }

    return output;
  }, {});
}

window.addEventListener('load', function () {
  const inputOptions = getOpts(CONFIG, 'input');
  const pluginConfig = getOpts(CONFIG, 'plugin');

  for (const plugin of _core.plugins.list()) {
    const config = _core.plugins.config.get(plugin);

    if (config) {
      Object.assign(config, getOpts(pluginConfig, plugin.slice(1)));
    }
  }

  const elements = document.getElementsByClassName('citation-js');
  Array.prototype.map.call(elements, async function (element) {
    const format = element.dataset.outputFormat || 'bibliography';

    const options = _objectSpread(_objectSpread({}, getOpts(element.dataset, 'output')), {}, {
      format: 'html'
    });

    try {
      const csl = _core.plugins.config.get('@csl');

      if (options.template && !csl.templates.has(options.template)) {
        csl.templates.add(options.template, await get(`https://${CSL_BASE_URL}/styles@master/${options.template}.csl`));
      }

      if (options.lang && !csl.locales.has(options.lang)) {
        csl.locales.add(options.lang, await get(`https://${CSL_BASE_URL}/locales@master/${options.lang}.csl`));
      }
    } catch (e) {
      console.error(e);
    }

    const data = await _core.Cite.async(element.dataset.input || element, inputOptions);
    const output = data.format(format, options); // Only remove children after all other code has run, so that if there's an error
    // the DOM still has the 'fallback', whatever that is

    while (element.firstChild) {
      element.removeChild(element.firstChild);
    }

    element.insertAdjacentHTML('beforeend', output);
  });
});
},{"@citation-js/core":"citation-js","whatwg-fetch":162}],128:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function isIdBuilder(regex) {
    return (id) => typeof id === 'string' && new RegExp(regex.source, regex.flags).test(id);
}
const isNumericId = isIdBuilder(/^[1-9][0-9]*$/);
const isEntityId = isIdBuilder(/^((Q|P|L|M)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)$/);
const isEntitySchemaId = isIdBuilder(/^E[1-9][0-9]*$/);
const isItemId = isIdBuilder(/^Q[1-9][0-9]*$/);
const isPropertyId = isIdBuilder(/^P[1-9][0-9]*$/);
const isLexemeId = isIdBuilder(/^L[1-9][0-9]*$/);
const isFormId = isIdBuilder(/^L[1-9][0-9]*-F[1-9][0-9]*$/);
const isSenseId = isIdBuilder(/^L[1-9][0-9]*-S[1-9][0-9]*$/);
const isMediaInfoId = isIdBuilder(/^M[1-9][0-9]*$/);
const isGuid = isIdBuilder(/^((Q|P|L|M)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)\$[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i);
const isHash = isIdBuilder(/^[0-9a-f]{40}$/);
const isRevisionId = isIdBuilder(/^\d+$/);
const isNonNestedEntityId = isIdBuilder(/^(Q|P|L|M)[1-9][0-9]*$/);
function isPropertyClaimsId(id) {
    if (typeof id !== 'string')
        return false;
    const [entityId, propertyId] = id.split('#');
    return isEntityId(entityId) && isPropertyId(propertyId);
}
function isEntityPageTitle(title) {
    if (typeof title !== 'string')
        return false;
    if (title.startsWith('Item:')) {
        return isItemId(title.substring(5));
    }
    if (title.startsWith('Lexeme:')) {
        return isLexemeId(title.substring(7));
    }
    if (title.startsWith('Property:')) {
        return isPropertyId(title.substring(9));
    }
    return isItemId(title);
}
function getNumericId(id) {
    if (!isNonNestedEntityId(id))
        throw new Error(`invalid entity id: ${id}`);
    return id.replace(/^(Q|P|L|M)/, '');
}
function getImageUrl(filename, width) {
    let url = `https://commons.wikimedia.org/wiki/Special:FilePath/${filename}`;
    if (typeof width === 'number')
        url += `?width=${width}`;
    return url;
}
function getEntityIdFromGuid(guid) {
    const parts = guid.split(/[$-]/);
    if (parts.length === 6) {
        // Examples:
        // - q520$BCA8D9DE-B467-473B-943C-6FD0C5B3D02C
        // - P6216-a7fd6230-496e-6b47-ca4a-dcec5dbd7f95
        return parts[0].toUpperCase();
    }
    else if (parts.length === 7) {
        // Examples:
        // - L525-S1$66D20252-8CEC-4DB1-8B00-D713CFF42E48
        // - L525-F2-52c9b382-02f5-4413-9923-26ade74f5a0d
        return parts.slice(0, 2).join('-').toUpperCase();
    }
    else {
        throw new Error(`invalid guid: ${guid}`);
    }
}

var helpers = /*#__PURE__*/Object.freeze({
    __proto__: null,
    getEntityIdFromGuid: getEntityIdFromGuid,
    getImageUrl: getImageUrl,
    getNumericId: getNumericId,
    isEntityId: isEntityId,
    isEntityPageTitle: isEntityPageTitle,
    isEntitySchemaId: isEntitySchemaId,
    isFormId: isFormId,
    isGuid: isGuid,
    isHash: isHash,
    isItemId: isItemId,
    isLexemeId: isLexemeId,
    isMediaInfoId: isMediaInfoId,
    isNonNestedEntityId: isNonNestedEntityId,
    isNumericId: isNumericId,
    isPropertyClaimsId: isPropertyClaimsId,
    isPropertyId: isPropertyId,
    isRevisionId: isRevisionId,
    isSenseId: isSenseId
});

/** Example: keep only 'fr' in 'fr_FR' */
/**
 * a polymorphism helper:
 * accept either a string or an array and return an array
 */
function forceArray(array) {
    if (typeof array === 'string') {
        return [array];
    }
    if (Array.isArray(array)) {
        // TODO: return readonly array
        return [...array];
    }
    return [];
}
/** simplistic implementation to filter-out arrays and null */
function isPlainObject(obj) {
    return Boolean(obj) && typeof obj === 'object' && !Array.isArray(obj);
}
// encodeURIComponent ignores !, ', (, ), and *
// cf https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent#Description
const fixedEncodeURIComponent = (str) => {
    return encodeURIComponent(str).replace(/[!'()*]/g, encodeCharacter);
};
const replaceSpaceByUnderscores = (str) => str.replace(/\s/g, '_');
function uniq(array) {
    return Array.from(new Set(array));
}
const encodeCharacter = (char) => '%' + char.charCodeAt(0).toString(16);
function rejectObsoleteInterface(args) {
    if (args.length !== 1 || !isPlainObject(args[0])) {
        throw new Error(`Since wikibase-sdk v9.0.0, this function expects arguments to be passed in an object
    See https://github.com/maxlath/wikibase-sdk/blob/main/CHANGELOG.md`);
    }
}
/**
 * Checks if the `element` is of one of the entries of `all`
 * @example const isSite: site is Site = isOfType(sites, site)
 */
function isOfType(all, element) {
    return typeof element === 'string' && all.includes(element);
}
/** key is a key on the object */
function isAKey(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
}
/** like Object.entries() but with typed keys */
function typedEntries(input) {
    // @ts-expect-error string is not assignable to K as K is more specific
    return Object.entries(input);
}
/** like Object.keys() but with typed keys */
function typedKeys(obj) {
    return Object.keys(obj);
}

function wikibaseTimeToDateObject(wikibaseTime) {
    // Also accept claim datavalue.value objects
    if (typeof wikibaseTime === 'object') {
        wikibaseTime = wikibaseTime.time;
    }
    const sign = wikibaseTime[0];
    let [yearMonthDay, withinDay] = wikibaseTime.slice(1).split('T');
    // Wikidata generates invalid ISO dates to indicate precision
    // ex: +1990-00-00T00:00:00Z to indicate 1990 with year precision
    yearMonthDay = yearMonthDay.replace(/-00/g, '-01');
    const rest = `${yearMonthDay}T${withinDay}`;
    return fullDateData(sign, rest);
}
const fullDateData = (sign, rest) => {
    const year = rest.split('-')[0];
    const needsExpandedYear = sign === '-' || year.length > 4;
    return needsExpandedYear ? expandedYearDate(sign, rest, year) : new Date(rest);
};
const expandedYearDate = (sign, rest, year) => {
    let date;
    // Using ISO8601 expanded notation for negative years or positive
    // years with more than 4 digits: adding up to 2 leading zeros
    // when needed. Can't find the documentation again, but testing
    // with `new Date(date)` gives a good clue of the implementation
    if (year.length === 4) {
        date = `${sign}00${rest}`;
    }
    else if (year.length === 5) {
        date = `${sign}0${rest}`;
    }
    else {
        date = sign + rest;
    }
    return new Date(date);
};
const toEpochTime = (wikibaseTime) => wikibaseTimeToDateObject(wikibaseTime).getTime();
const toISOString = (wikibaseTime) => wikibaseTimeToDateObject(wikibaseTime).toISOString();
// A date format that knows just three precisions:
// 'yyyy', 'yyyy-mm', and 'yyyy-mm-dd' (including negative and non-4 digit years)
// Should be able to handle the old and the new Wikidata time:
// - in the old one, units below the precision where set to 00
// - in the new one, those months and days are set to 01 in those cases,
//   so when we can access the full claim object, we check the precision
//   to recover the old format
const toSimpleDay = (wikibaseTime) => {
    // Also accept claim datavalue.value objects, and actually prefer those,
    // as we can check the precision
    if (typeof wikibaseTime === 'object') {
        const { time, precision } = wikibaseTime;
        // Year precision
        if (precision === 9)
            wikibaseTime = time.replace('-01-01T', '-00-00T');
        // Month precision
        else if (precision === 10)
            wikibaseTime = time.replace('-01T', '-00T');
        else
            wikibaseTime = time;
    }
    return wikibaseTime.split('T')[0]
        // Remove positive years sign
        .replace(/^\+/, '')
        // Remove years padding zeros
        .replace(/^(-?)0+/, '$1')
        // Remove days if not included in the Wikidata date precision
        .replace(/-00$/, '')
        // Remove months if not included in the Wikidata date precision
        .replace(/-00$/, '');
};
const wikibaseTimeToEpochTime = toEpochTime;
const wikibaseTimeToISOString = (value) => {
    try {
        return toISOString(value);
    }
    catch (_a) {
        const { sign, yearMonthDay, withinDay } = recoverDateAfterError(value);
        return `${sign}${yearMonthDay}T${withinDay}`;
    }
};
const wikibaseTimeToSimpleDay = (value) => {
    try {
        return toSimpleDay(value);
    }
    catch (_a) {
        const { sign, yearMonthDay } = recoverDateAfterError(value);
        return `${sign}${yearMonthDay}`;
    }
};
function recoverDateAfterError(value) {
    value = typeof value === 'string' ? value : value.time;
    const sign = value[0];
    let [yearMonthDay, withinDay] = value.slice(1).split('T');
    if (!sign || !yearMonthDay || !withinDay) {
        throw new Error('TimeInput is invalid: ' + JSON.stringify(value));
    }
    yearMonthDay = yearMonthDay.replace(/-00/g, '-01');
    return { sign, yearMonthDay, withinDay };
}

var timeHelpers = /*#__PURE__*/Object.freeze({
    __proto__: null,
    wikibaseTimeToDateObject: wikibaseTimeToDateObject,
    wikibaseTimeToEpochTime: wikibaseTimeToEpochTime,
    wikibaseTimeToISOString: wikibaseTimeToISOString,
    wikibaseTimeToSimpleDay: wikibaseTimeToSimpleDay
});

function stringValue(datavalue) {
    return datavalue.value;
}
function monolingualtext(datavalue, options) {
    return options.keepRichValues ? datavalue.value : datavalue.value.text;
}
function entity(datavalue, options) {
    const { entityPrefix: prefix } = options;
    const { value } = datavalue;
    let id;
    if (value.id) {
        id = value.id;
    }
    else {
        // Legacy
        const letter = entityLetter[value['entity-type']];
        id = `${letter}${value['numeric-id']}`;
    }
    return typeof prefix === 'string' ? `${prefix}:${id}` : id;
}
const entityLetter = {
    item: 'Q',
    'entity-schema': 'E',
    lexeme: 'L',
    property: 'P',
    form: 'F',
    sense: 'S',
};
function quantity(datavalue, options) {
    const { value } = datavalue;
    const amount = parseFloat(value.amount);
    if (options.keepRichValues) {
        const richValue = {
            amount: parseFloat(value.amount),
            // ex: http://www.wikidata.org/entity/
            unit: value.unit.replace(/^https?:\/\/.*\/entity\//, ''),
        };
        if (value.upperBound != null)
            richValue.upperBound = parseFloat(value.upperBound);
        if (value.lowerBound != null)
            richValue.lowerBound = parseFloat(value.lowerBound);
        return richValue;
    }
    else {
        return amount;
    }
}
function coordinate(datavalue, options) {
    if (options.keepRichValues) {
        return datavalue.value;
    }
    else {
        return [datavalue.value.latitude, datavalue.value.longitude];
    }
}
function time(datavalue, options) {
    let timeValue;
    if (typeof options.timeConverter === 'function') {
        timeValue = options.timeConverter(datavalue.value);
    }
    else {
        timeValue = getTimeConverter(options.timeConverter)(datavalue.value);
    }
    if (options.keepRichValues) {
        const { timezone, before, after, precision, calendarmodel } = datavalue.value;
        return { time: timeValue, timezone, before, after, precision, calendarmodel };
    }
    else {
        return timeValue;
    }
}
// Each time converter should be able to accept 2 keys of arguments:
// - either datavalue.value objects (prefered as it gives access to the precision)
// - or the time string (datavalue.value.time)
const timeConverters = {
    iso: wikibaseTimeToISOString,
    epoch: wikibaseTimeToEpochTime,
    'simple-day': wikibaseTimeToSimpleDay,
    none: (wikibaseTime) => typeof wikibaseTime === 'string' ? wikibaseTime : wikibaseTime.time,
};
function getTimeConverter(key = 'iso') {
    const converter = timeConverters[key];
    if (!converter)
        throw new Error(`invalid converter key: ${JSON.stringify(key).substring(0, 100)}`);
    return converter;
}
const parsers = {
    commonsMedia: stringValue,
    'external-id': stringValue,
    'entity-schema': entity,
    'geo-shape': stringValue,
    'globe-coordinate': coordinate,
    math: stringValue,
    monolingualtext,
    'musical-notation': stringValue,
    quantity,
    string: stringValue,
    'tabular-data': stringValue,
    time,
    url: stringValue,
    'wikibase-form': entity,
    'wikibase-item': entity,
    'wikibase-lexeme': entity,
    'wikibase-property': entity,
    'wikibase-sense': entity,
};
const legacyParsers = {
    'musical notation': parsers['musical-notation'],
    // Known case: mediainfo won't have datatype="globe-coordinate", but datavalue.type="globecoordinate"
    globecoordinate: parsers['globe-coordinate'],
};
function parseSnak(datatype, datavalue, options) {
    let parser;
    if (datatype) {
        // @ts-expect-error legacyParsers datatypes aren't in DataValueByDataType
        parser = parsers[datatype] || legacyParsers[datatype];
    }
    else {
        parser = parsers[datavalue.type];
    }
    if (!parser) {
        throw new Error(`${datatype} claim parser isn't implemented. Please report to https://github.com/maxlath/wikibase-sdk/issues`);
    }
    return parser(datavalue, options);
}

function truthyPropertyClaims(propertyClaims) {
    const aggregate = {};
    for (const claim of propertyClaims) {
        const { rank } = claim;
        aggregate[rank] = aggregate[rank] || [];
        aggregate[rank].push(claim);
    }
    // on truthyness: https://www.mediawiki.org/wiki/Wikibase/Indexing/RDF_Dump_Format#Truthy_statements
    return aggregate.preferred || aggregate.normal || [];
}
function nonDeprecatedPropertyClaims(propertyClaims) {
    return propertyClaims.filter(claim => claim.rank !== 'deprecated');
}
function truthyClaims(claims) {
    const truthClaimsOnly = {};
    for (const [property, value] of typedEntries(claims)) {
        truthClaimsOnly[property] = truthyPropertyClaims(value);
    }
    return truthClaimsOnly;
}

var rankHelpers = /*#__PURE__*/Object.freeze({
    __proto__: null,
    nonDeprecatedPropertyClaims: nonDeprecatedPropertyClaims,
    truthyClaims: truthyClaims,
    truthyPropertyClaims: truthyPropertyClaims
});

/**
 * Tries to replace wikidata deep snak object by a simple value
 * e.g. a string, an entity Qid or an epoch time number
 * Expects a single snak object
 * Ex: entity.claims.P369[0]
 */
function simplifySnak(snak, options = {}) {
    const { keepTypes, keepSnaktypes, keepHashes } = parseKeepOptions(options);
    let value;
    const { datatype, datavalue, snaktype, hash } = snak;
    if (datavalue) {
        value = parseSnak(datatype, datavalue, options);
    }
    else {
        if (snaktype === 'somevalue')
            value = options.somevalueValue;
        else if (snaktype === 'novalue')
            value = options.novalueValue;
        else
            throw new Error('no datavalue or special snaktype found');
    }
    // No need to test keepHashes as it has no effect if neither
    // keepQualifiers or keepReferences is true
    if (keepTypes || keepSnaktypes || keepHashes) {
        // When keeping qualifiers or references, the value becomes an object
        // instead of a direct value
        const valueObj = { value };
        if (keepTypes)
            valueObj.type = datatype;
        if (keepSnaktypes)
            valueObj.snaktype = snaktype;
        if (keepHashes)
            valueObj.hash = hash;
        return valueObj;
    }
    else {
        return value;
    }
}
function simplifyClaim(claim, options = {}) {
    const { keepQualifiers, keepReferences, keepIds, keepTypes, keepSnaktypes, keepRanks } = parseKeepOptions(options);
    const { mainsnak, rank } = claim;
    const value = simplifySnak(mainsnak, options);
    // No need to test keepHashes as it has no effect if neither
    // keepQualifiers or keepReferences is true
    if (!(keepQualifiers || keepReferences || keepIds || keepTypes || keepSnaktypes || keepRanks)) {
        return value;
    }
    // When keeping other attributes, the value becomes an object instead of a direct value
    let valueObj = { value };
    if (isPlainObject(value) && 'value' in value) {
        valueObj = value;
    }
    else {
        valueObj = { value };
    }
    if (keepRanks)
        valueObj.rank = rank;
    if (keepQualifiers) {
        valueObj.qualifiers = simplifyQualifiers(claim.qualifiers, options);
    }
    if (keepReferences) {
        claim.references = claim.references || [];
        valueObj.references = simplifyReferences(claim.references, options);
    }
    if (keepIds)
        valueObj.id = claim.id;
    return valueObj;
}
function simplifyClaims(claims, options = {}) {
    const { propertyPrefix } = options;
    const simplified = {};
    for (let [propertyId, propertyArray] of typedEntries(claims)) {
        if (propertyPrefix) {
            propertyId = propertyPrefix + ':' + propertyId;
        }
        simplified[propertyId] = simplifyPropertyClaims(propertyArray, options);
    }
    return simplified;
}
function simplifyPropertyClaims(propertyClaims, options = {}) {
    // Avoid to throw on empty inputs to allow to simplify claims array
    // without having to know if the entity as claims for this property
    // Ex: simplifyPropertyClaims(entity.claims.P124211616)
    if (propertyClaims == null || propertyClaims.length === 0)
        return [];
    const { keepNonTruthy, keepNonDeprecated } = parseKeepOptions(options);
    const { minTimePrecision } = options;
    if (keepNonDeprecated) {
        propertyClaims = nonDeprecatedPropertyClaims(propertyClaims);
    }
    else if (!(keepNonTruthy)) {
        propertyClaims = truthyPropertyClaims(propertyClaims);
    }
    const simplifiedArray = [];
    for (const claim of propertyClaims) {
        const isDroppedClaim = timeSnakPrecisionIsTooLow(claim.mainsnak, minTimePrecision);
        if (!isDroppedClaim) {
            const simplifiedClaim = simplifyClaim(claim, options);
            // Filter-out novalue and somevalue claims,
            // unless a novalueValue or a somevalueValue is passed in options
            // Considers null as defined
            if (simplifiedClaim !== undefined)
                simplifiedArray.push(simplifiedClaim);
        }
    }
    // Deduplicate values unless we return a rich value object
    if (simplifiedArray[0] && typeof simplifiedArray[0] !== 'object') {
        return uniq(simplifiedArray);
    }
    else {
        return simplifiedArray;
    }
}
function simplifySnaks(snaks = {}, options = {}) {
    const { propertyPrefix } = options;
    const simplified = {};
    for (let [propertyId, propertyArray] of typedEntries(snaks)) {
        if (propertyPrefix) {
            propertyId = propertyPrefix + ':' + propertyId;
        }
        simplified[propertyId] = simplifyPropertySnaks(propertyArray, options);
    }
    return simplified;
}
function simplifyPropertySnaks(propertySnaks, options = {}) {
    if (propertySnaks == null || propertySnaks.length === 0)
        return [];
    const { minTimePrecision } = options;
    const simplifiedArray = [];
    for (const snak of propertySnaks) {
        const isDroppedSnak = timeSnakPrecisionIsTooLow(snak, minTimePrecision);
        if (!isDroppedSnak) {
            const simplifiedSnak = simplifySnak(snak, options);
            // Filter-out novalue and somevalue snaks,
            // unless a novalueValue or a somevalueValue is passed in options
            // Considers null as defined
            if (simplifiedSnak !== undefined)
                simplifiedArray.push(simplifiedSnak);
        }
    }
    // Deduplicate values unless we return a rich value object
    if (simplifiedArray[0] && typeof simplifiedArray[0] !== 'object') {
        return uniq(simplifiedArray);
    }
    else {
        return simplifiedArray;
    }
}
function simplifyQualifiers(qualifiers, options = {}) {
    return simplifySnaks(qualifiers, options);
}
function simplifyPropertyQualifiers(propertyQualifiers, options = {}) {
    return simplifyPropertySnaks(propertyQualifiers, options);
}
function simplifyQualifier(qualifier, options = {}) {
    return simplifySnak(qualifier, options);
}
function simplifyReferences(references, options = {}) {
    return references.map(reference => simplifyReference(reference, options));
}
function simplifyReference(reference, options = {}) {
    const snaks = simplifySnaks(reference.snaks, options);
    if (options.keepHashes)
        return { snaks, hash: reference.hash };
    else
        return snaks;
}
const keepOptions = ['keepQualifiers', 'keepReferences', 'keepIds', 'keepHashes', 'keepTypes', 'keepSnaktypes', 'keepRanks', 'keepRichValues'];
const parseKeepOptions = (options = {}) => {
    if (options.keepAll) {
        for (const optionName of keepOptions) {
            if (options[optionName] == null)
                options[optionName] = true;
        }
    }
    return options;
};
function timeSnakPrecisionIsTooLow(snak, minTimePrecision) {
    if (minTimePrecision == null)
        return false;
    if (snak.datatype !== 'time' || snak.snaktype !== 'value')
        return false;
    const { value } = snak.datavalue;
    return value.precision < minTimePrecision;
}

function singleValue(data) {
    const simplified = {};
    for (const [lang, obj] of typedEntries(data)) {
        simplified[lang] = obj != null ? obj.value : null;
    }
    return simplified;
}
function multiValue(data) {
    const simplified = {};
    for (const [lang, obj] of typedEntries(data)) {
        simplified[lang] = obj != null ? obj.map(o => o.value) : [];
    }
    return simplified;
}
function simplifyLabels(labels) {
    return singleValue(labels);
}
function simplifyDescriptions(descriptions) {
    return singleValue(descriptions);
}
function simplifyAliases(aliases) {
    return multiValue(aliases);
}
function simplifyLemmas(lemmas) {
    return singleValue(lemmas);
}
function simplifyRepresentations(representations) {
    return singleValue(representations);
}
function simplifyGlosses(glosses) {
    return singleValue(glosses);
}

const simplifyForm = (form, options = {}) => {
    const { id, representations, grammaticalFeatures, claims } = form;
    if (!isFormId(id))
        throw new Error('invalid form object');
    return {
        id,
        representations: simplifyRepresentations(representations),
        grammaticalFeatures,
        claims: simplifyClaims(claims, options),
    };
};
const simplifyForms = (forms, options = {}) => forms.map(form => simplifyForm(form, options));

const simplifySense = (sense, options = {}) => {
    const { id, glosses, claims } = sense;
    if (!isSenseId(id))
        throw new Error('invalid sense object');
    return {
        id,
        glosses: simplifyGlosses(glosses),
        claims: simplifyClaims(claims, options),
    };
};
function simplifySenses(senses, options = {}) {
    return senses.map(sense => simplifySense(sense, options));
}

// Generated by 'npm run update-wikimedia-constants'
const specialSites = {
    commonswiki: 'commons',
    foundationwiki: 'foundation',
    mediawikiwiki: 'mediawiki',
    metawiki: 'meta',
    outreachwiki: 'outreach',
    sourceswiki: 'sources',
    specieswiki: 'species',
    wikidatawiki: 'wikidata',
    wikifunctionswiki: 'wikifunctions',
    wikimaniawiki: 'wikimania',
};
const sites = [
    'aawiki',
    'aawikibooks',
    'aawiktionary',
    'abwiki',
    'abwiktionary',
    'acewiki',
    'adywiki',
    'afwiki',
    'afwikibooks',
    'afwikiquote',
    'afwiktionary',
    'akwiki',
    'akwikibooks',
    'akwiktionary',
    'alswiki',
    'alswikibooks',
    'alswikiquote',
    'alswiktionary',
    'altwiki',
    'amiwiki',
    'amwiki',
    'amwikiquote',
    'amwiktionary',
    'angwiki',
    'angwikibooks',
    'angwikiquote',
    'angwikisource',
    'angwiktionary',
    'anpwiki',
    'anwiki',
    'anwiktionary',
    'arcwiki',
    'arwiki',
    'arwikibooks',
    'arwikinews',
    'arwikiquote',
    'arwikisource',
    'arwikiversity',
    'arwiktionary',
    'arywiki',
    'arzwiki',
    'astwiki',
    'astwikibooks',
    'astwikiquote',
    'astwiktionary',
    'aswiki',
    'aswikibooks',
    'aswikiquote',
    'aswikisource',
    'aswiktionary',
    'atjwiki',
    'avkwiki',
    'avwiki',
    'avwiktionary',
    'awawiki',
    'aywiki',
    'aywikibooks',
    'aywiktionary',
    'azbwiki',
    'azwiki',
    'azwikibooks',
    'azwikiquote',
    'azwikisource',
    'azwiktionary',
    'banwiki',
    'banwikisource',
    'barwiki',
    'bat_smgwiki',
    'bawiki',
    'bawikibooks',
    'bbcwiki',
    'bclwiki',
    'bclwikiquote',
    'bclwiktionary',
    'bdrwiki',
    'be_x_oldwiki',
    'bewiki',
    'bewikibooks',
    'bewikiquote',
    'bewikisource',
    'bewiktionary',
    'bewwiki',
    'bgwiki',
    'bgwikibooks',
    'bgwikinews',
    'bgwikiquote',
    'bgwikisource',
    'bgwiktionary',
    'bhwiki',
    'bhwiktionary',
    'biwiki',
    'biwikibooks',
    'biwiktionary',
    'bjnwiki',
    'bjnwikiquote',
    'bjnwiktionary',
    'blkwiki',
    'blkwiktionary',
    'bmwiki',
    'bmwikibooks',
    'bmwikiquote',
    'bmwiktionary',
    'bnwiki',
    'bnwikibooks',
    'bnwikiquote',
    'bnwikisource',
    'bnwikivoyage',
    'bnwiktionary',
    'bowiki',
    'bowikibooks',
    'bowiktionary',
    'bpywiki',
    'brwiki',
    'brwikiquote',
    'brwikisource',
    'brwiktionary',
    'bswiki',
    'bswikibooks',
    'bswikinews',
    'bswikiquote',
    'bswikisource',
    'bswiktionary',
    'btmwiki',
    'btmwiktionary',
    'bugwiki',
    'bxrwiki',
    'cawiki',
    'cawikibooks',
    'cawikinews',
    'cawikiquote',
    'cawikisource',
    'cawiktionary',
    'cbk_zamwiki',
    'cdowiki',
    'cebwiki',
    'cewiki',
    'chowiki',
    'chrwiki',
    'chrwiktionary',
    'chwiki',
    'chwikibooks',
    'chwiktionary',
    'chywiki',
    'ckbwiki',
    'ckbwiktionary',
    'commonswiki',
    'cowiki',
    'cowikibooks',
    'cowikiquote',
    'cowiktionary',
    'crhwiki',
    'crwiki',
    'crwikiquote',
    'crwiktionary',
    'csbwiki',
    'csbwiktionary',
    'cswiki',
    'cswikibooks',
    'cswikinews',
    'cswikiquote',
    'cswikisource',
    'cswikiversity',
    'cswikivoyage',
    'cswiktionary',
    'cuwiki',
    'cvwiki',
    'cvwikibooks',
    'cywiki',
    'cywikibooks',
    'cywikiquote',
    'cywikisource',
    'cywiktionary',
    'dagwiki',
    'dawiki',
    'dawikibooks',
    'dawikiquote',
    'dawikisource',
    'dawiktionary',
    'dewiki',
    'dewikibooks',
    'dewikinews',
    'dewikiquote',
    'dewikisource',
    'dewikiversity',
    'dewikivoyage',
    'dewiktionary',
    'dgawiki',
    'dinwiki',
    'diqwiki',
    'diqwiktionary',
    'dsbwiki',
    'dtpwiki',
    'dtywiki',
    'dvwiki',
    'dvwiktionary',
    'dzwiki',
    'dzwiktionary',
    'eewiki',
    'elwiki',
    'elwikibooks',
    'elwikinews',
    'elwikiquote',
    'elwikisource',
    'elwikiversity',
    'elwikivoyage',
    'elwiktionary',
    'emlwiki',
    'enwiki',
    'enwikibooks',
    'enwikinews',
    'enwikiquote',
    'enwikisource',
    'enwikiversity',
    'enwikivoyage',
    'enwiktionary',
    'eowiki',
    'eowikibooks',
    'eowikinews',
    'eowikiquote',
    'eowikisource',
    'eowikivoyage',
    'eowiktionary',
    'eswiki',
    'eswikibooks',
    'eswikinews',
    'eswikiquote',
    'eswikisource',
    'eswikiversity',
    'eswikivoyage',
    'eswiktionary',
    'etwiki',
    'etwikibooks',
    'etwikiquote',
    'etwikisource',
    'etwiktionary',
    'euwiki',
    'euwikibooks',
    'euwikiquote',
    'euwikisource',
    'euwiktionary',
    'extwiki',
    'fatwiki',
    'fawiki',
    'fawikibooks',
    'fawikinews',
    'fawikiquote',
    'fawikisource',
    'fawikivoyage',
    'fawiktionary',
    'ffwiki',
    'fiu_vrowiki',
    'fiwiki',
    'fiwikibooks',
    'fiwikinews',
    'fiwikiquote',
    'fiwikisource',
    'fiwikiversity',
    'fiwikivoyage',
    'fiwiktionary',
    'fjwiki',
    'fjwiktionary',
    'fonwiki',
    'foundationwiki',
    'fowiki',
    'fowikisource',
    'fowiktionary',
    'frpwiki',
    'frrwiki',
    'frwiki',
    'frwikibooks',
    'frwikinews',
    'frwikiquote',
    'frwikisource',
    'frwikiversity',
    'frwikivoyage',
    'frwiktionary',
    'furwiki',
    'fywiki',
    'fywikibooks',
    'fywiktionary',
    'gagwiki',
    'ganwiki',
    'gawiki',
    'gawikibooks',
    'gawikiquote',
    'gawiktionary',
    'gcrwiki',
    'gdwiki',
    'gdwiktionary',
    'glkwiki',
    'glwiki',
    'glwikibooks',
    'glwikiquote',
    'glwikisource',
    'glwiktionary',
    'gnwiki',
    'gnwikibooks',
    'gnwiktionary',
    'gomwiki',
    'gomwiktionary',
    'gorwiki',
    'gorwikiquote',
    'gorwiktionary',
    'gotwiki',
    'gotwikibooks',
    'gpewiki',
    'gucwiki',
    'gurwiki',
    'guwiki',
    'guwikibooks',
    'guwikiquote',
    'guwikisource',
    'guwiktionary',
    'guwwiki',
    'guwwikinews',
    'guwwikiquote',
    'guwwiktionary',
    'gvwiki',
    'gvwiktionary',
    'hakwiki',
    'hawiki',
    'hawiktionary',
    'hawwiki',
    'hewiki',
    'hewikibooks',
    'hewikinews',
    'hewikiquote',
    'hewikisource',
    'hewikivoyage',
    'hewiktionary',
    'hifwiki',
    'hifwiktionary',
    'hiwiki',
    'hiwikibooks',
    'hiwikiquote',
    'hiwikisource',
    'hiwikiversity',
    'hiwikivoyage',
    'hiwiktionary',
    'howiki',
    'hrwiki',
    'hrwikibooks',
    'hrwikiquote',
    'hrwikisource',
    'hrwiktionary',
    'hsbwiki',
    'hsbwiktionary',
    'htwiki',
    'htwikisource',
    'huwiki',
    'huwikibooks',
    'huwikinews',
    'huwikiquote',
    'huwikisource',
    'huwiktionary',
    'hywiki',
    'hywikibooks',
    'hywikiquote',
    'hywikisource',
    'hywiktionary',
    'hywwiki',
    'hzwiki',
    'iawiki',
    'iawikibooks',
    'iawiktionary',
    'idwiki',
    'idwikibooks',
    'idwikiquote',
    'idwikisource',
    'idwiktionary',
    'iewiki',
    'iewikibooks',
    'iewiktionary',
    'iglwiki',
    'igwiki',
    'igwikiquote',
    'igwiktionary',
    'iiwiki',
    'ikwiki',
    'ikwiktionary',
    'ilowiki',
    'inhwiki',
    'iowiki',
    'iowiktionary',
    'iswiki',
    'iswikibooks',
    'iswikiquote',
    'iswikisource',
    'iswiktionary',
    'itwiki',
    'itwikibooks',
    'itwikinews',
    'itwikiquote',
    'itwikisource',
    'itwikiversity',
    'itwikivoyage',
    'itwiktionary',
    'iuwiki',
    'iuwiktionary',
    'jamwiki',
    'jawiki',
    'jawikibooks',
    'jawikinews',
    'jawikiquote',
    'jawikisource',
    'jawikiversity',
    'jawikivoyage',
    'jawiktionary',
    'jbowiki',
    'jbowiktionary',
    'jvwiki',
    'jvwikisource',
    'jvwiktionary',
    'kaawiki',
    'kaawiktionary',
    'kabwiki',
    'kawiki',
    'kawikibooks',
    'kawikiquote',
    'kawikisource',
    'kawiktionary',
    'kbdwiki',
    'kbdwiktionary',
    'kbpwiki',
    'kcgwiki',
    'kcgwiktionary',
    'kgewiki',
    'kgwiki',
    'kiwiki',
    'kjwiki',
    'kkwiki',
    'kkwikibooks',
    'kkwikiquote',
    'kkwiktionary',
    'klwiki',
    'klwiktionary',
    'kmwiki',
    'kmwikibooks',
    'kmwiktionary',
    'knwiki',
    'knwikibooks',
    'knwikiquote',
    'knwikisource',
    'knwiktionary',
    'koiwiki',
    'kowiki',
    'kowikibooks',
    'kowikinews',
    'kowikiquote',
    'kowikisource',
    'kowikiversity',
    'kowiktionary',
    'krcwiki',
    'krwiki',
    'krwikiquote',
    'kshwiki',
    'kswiki',
    'kswikibooks',
    'kswikiquote',
    'kswiktionary',
    'kuswiki',
    'kuwiki',
    'kuwikibooks',
    'kuwikiquote',
    'kuwiktionary',
    'kvwiki',
    'kwwiki',
    'kwwikiquote',
    'kwwiktionary',
    'kywiki',
    'kywikibooks',
    'kywikiquote',
    'kywiktionary',
    'ladwiki',
    'lawiki',
    'lawikibooks',
    'lawikiquote',
    'lawikisource',
    'lawiktionary',
    'lbewiki',
    'lbwiki',
    'lbwikibooks',
    'lbwikiquote',
    'lbwiktionary',
    'lezwiki',
    'lfnwiki',
    'lgwiki',
    'lijwiki',
    'lijwikisource',
    'liwiki',
    'liwikibooks',
    'liwikinews',
    'liwikiquote',
    'liwikisource',
    'liwiktionary',
    'lldwiki',
    'lmowiki',
    'lmowiktionary',
    'lnwiki',
    'lnwikibooks',
    'lnwiktionary',
    'lowiki',
    'lowiktionary',
    'lrcwiki',
    'ltgwiki',
    'ltwiki',
    'ltwikibooks',
    'ltwikiquote',
    'ltwikisource',
    'ltwiktionary',
    'lvwiki',
    'lvwikibooks',
    'lvwiktionary',
    'madwiki',
    'madwiktionary',
    'maiwiki',
    'map_bmswiki',
    'mdfwiki',
    'mediawikiwiki',
    'metawiki',
    'mgwiki',
    'mgwikibooks',
    'mgwiktionary',
    'mhrwiki',
    'mhwiki',
    'mhwiktionary',
    'minwiki',
    'minwiktionary',
    'miwiki',
    'miwikibooks',
    'miwiktionary',
    'mkwiki',
    'mkwikibooks',
    'mkwikisource',
    'mkwiktionary',
    'mlwiki',
    'mlwikibooks',
    'mlwikiquote',
    'mlwikisource',
    'mlwiktionary',
    'mniwiki',
    'mniwiktionary',
    'mnwiki',
    'mnwikibooks',
    'mnwiktionary',
    'mnwwiki',
    'mnwwiktionary',
    'moswiki',
    'mowiki',
    'mowiktionary',
    'mrjwiki',
    'mrwiki',
    'mrwikibooks',
    'mrwikiquote',
    'mrwikisource',
    'mrwiktionary',
    'mswiki',
    'mswikibooks',
    'mswikisource',
    'mswiktionary',
    'mtwiki',
    'mtwiktionary',
    'muswiki',
    'mwlwiki',
    'myvwiki',
    'mywiki',
    'mywikibooks',
    'mywikisource',
    'mywiktionary',
    'mznwiki',
    'nahwiki',
    'nahwikibooks',
    'nahwiktionary',
    'napwiki',
    'napwikisource',
    'nawiki',
    'nawikibooks',
    'nawikiquote',
    'nawiktionary',
    'nds_nlwiki',
    'ndswiki',
    'ndswikibooks',
    'ndswikiquote',
    'ndswiktionary',
    'newiki',
    'newikibooks',
    'newiktionary',
    'newwiki',
    'ngwiki',
    'niawiki',
    'niawiktionary',
    'nlwiki',
    'nlwikibooks',
    'nlwikinews',
    'nlwikiquote',
    'nlwikisource',
    'nlwikivoyage',
    'nlwiktionary',
    'nnwiki',
    'nnwikiquote',
    'nnwiktionary',
    'novwiki',
    'nowiki',
    'nowikibooks',
    'nowikinews',
    'nowikiquote',
    'nowikisource',
    'nowiktionary',
    'nqowiki',
    'nrmwiki',
    'nsowiki',
    'nvwiki',
    'nywiki',
    'ocwiki',
    'ocwikibooks',
    'ocwiktionary',
    'olowiki',
    'omwiki',
    'omwiktionary',
    'orwiki',
    'orwikisource',
    'orwiktionary',
    'oswiki',
    'outreachwiki',
    'pagwiki',
    'pamwiki',
    'papwiki',
    'pawiki',
    'pawikibooks',
    'pawikisource',
    'pawiktionary',
    'pcdwiki',
    'pcmwiki',
    'pdcwiki',
    'pflwiki',
    'pihwiki',
    'piwiki',
    'piwiktionary',
    'plwiki',
    'plwikibooks',
    'plwikinews',
    'plwikiquote',
    'plwikisource',
    'plwikivoyage',
    'plwiktionary',
    'pmswiki',
    'pmswikisource',
    'pnbwiki',
    'pnbwiktionary',
    'pntwiki',
    'pswiki',
    'pswikibooks',
    'pswikivoyage',
    'pswiktionary',
    'ptwiki',
    'ptwikibooks',
    'ptwikinews',
    'ptwikiquote',
    'ptwikisource',
    'ptwikiversity',
    'ptwikivoyage',
    'ptwiktionary',
    'pwnwiki',
    'quwiki',
    'quwikibooks',
    'quwikiquote',
    'quwiktionary',
    'rmwiki',
    'rmwikibooks',
    'rmwiktionary',
    'rmywiki',
    'rnwiki',
    'rnwiktionary',
    'roa_rupwiki',
    'roa_rupwiktionary',
    'roa_tarawiki',
    'rowiki',
    'rowikibooks',
    'rowikinews',
    'rowikiquote',
    'rowikisource',
    'rowikivoyage',
    'rowiktionary',
    'ruewiki',
    'ruwiki',
    'ruwikibooks',
    'ruwikinews',
    'ruwikiquote',
    'ruwikisource',
    'ruwikiversity',
    'ruwikivoyage',
    'ruwiktionary',
    'rwwiki',
    'rwwiktionary',
    'sahwiki',
    'sahwikiquote',
    'sahwikisource',
    'satwiki',
    'sawiki',
    'sawikibooks',
    'sawikiquote',
    'sawikisource',
    'sawiktionary',
    'scnwiki',
    'scnwiktionary',
    'scowiki',
    'scwiki',
    'scwiktionary',
    'sdwiki',
    'sdwikinews',
    'sdwiktionary',
    'sewiki',
    'sewikibooks',
    'sgwiki',
    'sgwiktionary',
    'shiwiki',
    'shnwiki',
    'shnwikibooks',
    'shnwikinews',
    'shnwikivoyage',
    'shnwiktionary',
    'shwiki',
    'shwiktionary',
    'shywiktionary',
    'simplewiki',
    'simplewikibooks',
    'simplewikiquote',
    'simplewiktionary',
    'siwiki',
    'siwikibooks',
    'siwiktionary',
    'skrwiki',
    'skrwiktionary',
    'skwiki',
    'skwikibooks',
    'skwikiquote',
    'skwikisource',
    'skwiktionary',
    'slwiki',
    'slwikibooks',
    'slwikiquote',
    'slwikisource',
    'slwikiversity',
    'slwiktionary',
    'smnwiki',
    'smwiki',
    'smwiktionary',
    'snwiki',
    'snwiktionary',
    'sourceswiki',
    'sowiki',
    'sowiktionary',
    'specieswiki',
    'sqwiki',
    'sqwikibooks',
    'sqwikinews',
    'sqwikiquote',
    'sqwiktionary',
    'srnwiki',
    'srwiki',
    'srwikibooks',
    'srwikinews',
    'srwikiquote',
    'srwikisource',
    'srwiktionary',
    'sswiki',
    'sswiktionary',
    'stqwiki',
    'stwiki',
    'stwiktionary',
    'suwiki',
    'suwikibooks',
    'suwikiquote',
    'suwikisource',
    'suwiktionary',
    'svwiki',
    'svwikibooks',
    'svwikinews',
    'svwikiquote',
    'svwikisource',
    'svwikiversity',
    'svwikivoyage',
    'svwiktionary',
    'swwiki',
    'swwikibooks',
    'swwiktionary',
    'szlwiki',
    'szywiki',
    'tawiki',
    'tawikibooks',
    'tawikinews',
    'tawikiquote',
    'tawikisource',
    'tawiktionary',
    'taywiki',
    'tcywiki',
    'tetwiki',
    'tewiki',
    'tewikibooks',
    'tewikiquote',
    'tewikisource',
    'tewiktionary',
    'tgwiki',
    'tgwikibooks',
    'tgwiktionary',
    'thwiki',
    'thwikibooks',
    'thwikinews',
    'thwikiquote',
    'thwikisource',
    'thwiktionary',
    'tiwiki',
    'tiwiktionary',
    'tkwiki',
    'tkwikibooks',
    'tkwikiquote',
    'tkwiktionary',
    'tlwiki',
    'tlwikibooks',
    'tlwikiquote',
    'tlwiktionary',
    'tlywiki',
    'tnwiki',
    'tnwiktionary',
    'towiki',
    'towiktionary',
    'tpiwiki',
    'tpiwiktionary',
    'trvwiki',
    'trwiki',
    'trwikibooks',
    'trwikinews',
    'trwikiquote',
    'trwikisource',
    'trwikivoyage',
    'trwiktionary',
    'tswiki',
    'tswiktionary',
    'ttwiki',
    'ttwikibooks',
    'ttwikiquote',
    'ttwiktionary',
    'tumwiki',
    'twwiki',
    'twwiktionary',
    'tyvwiki',
    'tywiki',
    'udmwiki',
    'ugwiki',
    'ugwikibooks',
    'ugwikiquote',
    'ugwiktionary',
    'ukwiki',
    'ukwikibooks',
    'ukwikinews',
    'ukwikiquote',
    'ukwikisource',
    'ukwikivoyage',
    'ukwiktionary',
    'urwiki',
    'urwikibooks',
    'urwikiquote',
    'urwiktionary',
    'uzwiki',
    'uzwikibooks',
    'uzwikiquote',
    'uzwiktionary',
    'vecwiki',
    'vecwikisource',
    'vecwiktionary',
    'vepwiki',
    'vewiki',
    'viwiki',
    'viwikibooks',
    'viwikiquote',
    'viwikisource',
    'viwikivoyage',
    'viwiktionary',
    'vlswiki',
    'vowiki',
    'vowikibooks',
    'vowikiquote',
    'vowiktionary',
    'warwiki',
    'wawiki',
    'wawikibooks',
    'wawikisource',
    'wawiktionary',
    'wikidatawiki',
    'wikifunctionswiki',
    'wikimaniawiki',
    'wowiki',
    'wowikiquote',
    'wowiktionary',
    'wuuwiki',
    'xalwiki',
    'xhwiki',
    'xhwikibooks',
    'xhwiktionary',
    'xmfwiki',
    'yiwiki',
    'yiwikisource',
    'yiwiktionary',
    'yowiki',
    'yowikibooks',
    'yowiktionary',
    'yuewiktionary',
    'zawiki',
    'zawikibooks',
    'zawikiquote',
    'zawiktionary',
    'zeawiki',
    'zghwiki',
    'zh_classicalwiki',
    'zh_min_nanwiki',
    'zh_min_nanwikibooks',
    'zh_min_nanwikiquote',
    'zh_min_nanwikisource',
    'zh_min_nanwiktionary',
    'zh_yuewiki',
    'zhwiki',
    'zhwikibooks',
    'zhwikinews',
    'zhwikiquote',
    'zhwikisource',
    'zhwikiversity',
    'zhwikivoyage',
    'zhwiktionary',
    'zuwiki',
    'zuwikibooks',
    'zuwiktionary',
];

const wikidataBase = 'https://www.wikidata.org/wiki/';
function getSitelinkUrl({ site, title }) {
    rejectObsoleteInterface(arguments);
    if (!site)
        throw new Error('missing a site');
    if (!title)
        throw new Error('missing a title');
    if (isAKey(siteUrlBuilders, site)) {
        return siteUrlBuilders[site](title);
    }
    const shortSiteKey = site.replace(/wiki$/, '');
    if (isAKey(siteUrlBuilders, shortSiteKey)) {
        return siteUrlBuilders[shortSiteKey](title);
    }
    const { lang, project } = getSitelinkData(site);
    title = fixedEncodeURIComponent(replaceSpaceByUnderscores(title));
    return `https://${lang}.${project}.org/wiki/${title}`;
}
const wikimediaSite = (subdomain) => (title) => `https://${subdomain}.wikimedia.org/wiki/${title}`;
const siteUrlBuilders = {
    commons: wikimediaSite('commons'),
    foundation: wikimediaSite('foundation'),
    mediawiki: title => `https://www.mediawiki.org/wiki/${title}`,
    meta: wikimediaSite('meta'),
    outreach: wikimediaSite('outreach'),
    sources: title => `https://wikisource.org/wiki/${title}`,
    species: wikimediaSite('species'),
    wikidata: entityId => {
        const prefix = prefixByEntityLetter[entityId[0]];
        let title = prefix ? `${prefix}:${entityId}` : entityId;
        // Required for forms and senses
        title = title.replace('-', '#');
        return `${wikidataBase}${title}`;
    },
    wikifunctions: wikimediaSite('wikifunctions'),
    wikimania: wikimediaSite('wikimania'),
};
const prefixByEntityLetter = {
    E: 'EntitySchema',
    L: 'Lexeme',
    P: 'Property',
};
const sitelinkUrlPattern = /^https?:\/\/([\w-]{2,10})\.(\w+)\.org\/\w+\/(.*)/;
function getSitelinkData(site) {
    if (site.startsWith('http')) {
        const url = site;
        const matchData = url.match(sitelinkUrlPattern);
        if (!matchData)
            throw new Error(`invalid sitelink url: ${url}`);
        let [lang, project, title] = matchData.slice(1);
        title = decodeURIComponent(title);
        if (lang === 'commons') {
            return { lang: 'en', project: 'commons', key: 'commons', title, url };
        }
        if (!isOfType(projectNames, project)) {
            throw new Error(`project is unknown: ${project}`);
        }
        // Known case: wikidata, mediawiki
        if (lang === 'www') {
            return { lang: 'en', project, key: project, title, url };
        }
        // Support multi-parts language codes, such as be_x_old
        const sitelang = lang.replace(/-/g, '_');
        const key = `${sitelang}${project}`.replace('wikipedia', 'wiki');
        return { lang, project, key, title, url };
    }
    else {
        if (isAKey(specialSites, site)) {
            const project = specialSites[site];
            return { lang: 'en', project, key: site };
        }
        if (!isOfType(sites, site)) {
            throw new Error(`site not found: ${site}. Updating wikibase-sdk to a more recent version might fix the issue.`);
        }
        let [lang, projectSuffix, rest] = site.split('wik');
        // Detecting cases like 'frwikiwiki' that would return [ 'fr', 'i', 'i' ]
        if (rest != null)
            throw new Error(`invalid sitelink key: ${site}`);
        // Support keys such as be_x_oldwiki, which refers to be-x-old.wikipedia.org
        lang = lang.replace(/_/g, '-');
        const project = projectsBySuffix[projectSuffix];
        if (!project)
            throw new Error(`sitelink project not found: ${project}`);
        return { lang, project, key: site };
    }
}
const isSite = (site) => isOfType(sites, site);
/** @deprecated use isSite */
const isSitelinkKey = isSite;
const projectsBySuffix = {
    i: 'wikipedia',
    isource: 'wikisource',
    iquote: 'wikiquote',
    tionary: 'wiktionary',
    ibooks: 'wikibooks',
    iversity: 'wikiversity',
    ivoyage: 'wikivoyage',
    inews: 'wikinews',
};
const projectNames = [
    ...Object.values(projectsBySuffix),
    ...Object.values(specialSites),
];

var sitelinksHelpers = /*#__PURE__*/Object.freeze({
    __proto__: null,
    getSitelinkData: getSitelinkData,
    getSitelinkUrl: getSitelinkUrl,
    isSite: isSite,
    isSitelinkKey: isSitelinkKey
});

function simplifySitelinks(sitelinks, options = {}) {
    let { addUrl, keepBadges, keepAll } = options;
    keepBadges = keepBadges || keepAll;
    return typedKeys(sitelinks).reduce(aggregateValues({
        sitelinks,
        addUrl,
        keepBadges,
    }), {});
}
const aggregateValues = ({ sitelinks, addUrl, keepBadges }) => (index, key) => {
    // Accomodating for wikibase-cli, which might set the sitelink to null
    // to signify that a requested sitelink was not found
    if (sitelinks[key] == null) {
        index[key] = sitelinks[key];
        return index;
    }
    const { title, badges } = sitelinks[key];
    if (addUrl || keepBadges) {
        index[key] = { title };
        if (addUrl)
            index[key].url = getSitelinkUrl({ site: key, title });
        if (keepBadges)
            index[key].badges = badges;
    }
    else {
        index[key] = title;
    }
    return index;
};

const simplify$1 = {
    labels: simplifyLabels,
    descriptions: simplifyDescriptions,
    aliases: simplifyAliases,
    claims: simplifyClaims,
    statements: simplifyClaims,
    sitelinks: simplifySitelinks,
    lemmas: simplifyLemmas,
    forms: simplifyForms,
    senses: simplifySenses,
};
const simplifyEntity = (entity, options = {}) => {
    const { type } = entity;
    if (!type)
        throw new Error('missing entity type');
    const simplified = {
        id: entity.id,
        type,
        modified: entity.modified,
    };
    if (type === 'item') {
        simplifyIfDefined(entity, simplified, 'labels');
        simplifyIfDefined(entity, simplified, 'descriptions');
        simplifyIfDefined(entity, simplified, 'aliases');
        simplifyIfDefined(entity, simplified, 'claims', options);
        simplifyIfDefined(entity, simplified, 'sitelinks', options);
    }
    else if (type === 'property') {
        simplified.datatype = entity.datatype;
        simplifyIfDefined(entity, simplified, 'labels');
        simplifyIfDefined(entity, simplified, 'descriptions');
        simplifyIfDefined(entity, simplified, 'aliases');
        simplifyIfDefined(entity, simplified, 'claims', options);
    }
    else if (type === 'lexeme') {
        simplifyIfDefined(entity, simplified, 'lemmas');
        simplified.lexicalCategory = entity.lexicalCategory;
        simplified.language = entity.language;
        simplifyIfDefined(entity, simplified, 'claims', options);
        simplifyIfDefined(entity, simplified, 'forms', options);
        simplifyIfDefined(entity, simplified, 'senses', options);
    }
    else if (type === 'mediainfo') {
        simplifyIfDefined(entity, simplified, 'labels');
        simplifyIfDefined(entity, simplified, 'descriptions');
        simplifyIfDefined(entity, simplified, 'statements', options);
    }
    return simplified;
};
const simplifyIfDefined = (entity, simplified, attribute, options) => {
    if (entity[attribute] != null) {
        simplified[attribute] = simplify$1[attribute](entity[attribute], options);
    }
};
const simplifyEntities = (entities, options = {}) => {
    // @ts-expect-error support downloaded json directly
    if (entities.entities)
        entities = entities.entities;
    const { entityPrefix } = options;
    // TODO: key as string is only a best effort.
    // key is either EntityID or `${prefix}:${EntityId}` based on options.entityPrefix
    const result = {};
    for (const [key, entity] of Object.entries(entities)) {
        const resultKey = entityPrefix ? `${entityPrefix}:${key}` : key;
        result[resultKey] = simplifyEntity(entity, options);
    }
    return result;
};

function entities(res) {
    // @ts-expect-error Legacy convenience for the time the 'request' lib was all the rage
    res = res.body || res;
    const { entities } = res;
    return simplifyEntities(entities);
}
function pagesTitles(res) {
    // @ts-expect-error Same behavior as above
    res = res.body || res;
    return res.query.search.map(result => result.title);
}

var parse = /*#__PURE__*/Object.freeze({
    __proto__: null,
    entities: entities,
    pagesTitles: pagesTitles
});

function simplifySparqlResults(input) {
    if (typeof input === 'string') {
        input = JSON.parse(input);
    }
    const { vars } = input.head;
    const results = input.results.bindings;
    const { richVars, associatedVars, standaloneVars } = identifyVars(vars);
    const simplifiedSparqlResults = results.map(result => getSimplifiedResult(richVars, associatedVars, standaloneVars, result));
    return simplifiedSparqlResults;
}
function parseValue(valueObj) {
    // blank nodes will be filtered-out in order to get things simple
    if (!valueObj || valueObj.type === 'bnode')
        return null;
    const { value } = valueObj;
    if (valueObj.type === 'uri')
        return parseUri(value);
    const datatype = (valueObj.datatype || '').replace('http://www.w3.org/2001/XMLSchema#', '');
    if (datatype === 'decimal' || datatype === 'integer' || datatype === 'float' || datatype === 'double') {
        return parseFloat(value);
    }
    if (datatype === 'boolean') {
        return value === 'true';
    }
    // return the raw value if the datatype is missing
    return value;
}
function parseUri(uri) {
    // ex: http://www.wikidata.org/entity/statement/
    if (uri.match(/http.*\/entity\/statement\//)) {
        return convertStatementUriToGuid(uri);
    }
    return uri
        // ex: http://www.wikidata.org/entity/
        .replace(/^https?:\/\/.*\/entity\//, '')
        // ex: http://www.wikidata.org/prop/direct/
        .replace(/^https?:\/\/.*\/prop\/direct\//, '');
}
function convertStatementUriToGuid(uri) {
    // ex: http://www.wikidata.org/entity/statement/
    uri = uri.replace(/^https?:\/\/.*\/entity\/statement\//, '');
    const parts = uri.split('-');
    return parts[0] + '$' + parts.slice(1).join('-');
}
function identifyVars(vars) {
    let richVars = vars.filter(varName => {
        const isAssociatedPattern = new RegExp(`^${varName}[A-Z]\\w+`);
        return vars.some(v => isAssociatedPattern.test(v));
    });
    richVars = richVars.filter(richVar => {
        return !richVars.some(otherRichVar => {
            return richVar !== otherRichVar && richVar.startsWith(otherRichVar);
        });
    });
    const associatedVarPattern = new RegExp(`^(${richVars.join('|')})[A-Z]`);
    const associatedVars = vars.filter(varName => associatedVarPattern.test(varName));
    const standaloneVars = vars.filter(varName => {
        return !richVars.includes(varName) && !associatedVarPattern.test(varName);
    });
    return { richVars, associatedVars, standaloneVars };
}
function getSimplifiedResult(richVars, associatedVars, standaloneVars, input) {
    const simplifiedResult = {};
    for (const varName of richVars) {
        const richVarData = {};
        const value = parseValue(input[varName]);
        if (value != null)
            richVarData.value = value;
        for (const associatedVarName of associatedVars) {
            if (associatedVarName.startsWith(varName))
                addAssociatedValue(input, varName, associatedVarName, richVarData);
        }
        if (Object.keys(richVarData).length > 0)
            simplifiedResult[varName] = richVarData;
    }
    for (const varName of standaloneVars) {
        const value = parseValue(input[varName]);
        if (value != null)
            simplifiedResult[varName] = value;
    }
    return simplifiedResult;
}
function addAssociatedValue(input, varName, associatedVarName, richVarData) {
    // ex: propertyType => Type
    let shortAssociatedVarName = associatedVarName.split(varName)[1];
    // ex: Type => type
    shortAssociatedVarName = shortAssociatedVarName[0].toLowerCase() + shortAssociatedVarName.slice(1);
    // ex: altLabel => aliases
    shortAssociatedVarName = shortAssociatedVarName === 'altLabel' ? 'aliases' : shortAssociatedVarName;
    const associatedVarData = input[associatedVarName];
    if (associatedVarData != null)
        richVarData[shortAssociatedVarName] = associatedVarData.value;
}

var simplify = /*#__PURE__*/Object.freeze({
    __proto__: null,
    aliases: simplifyAliases,
    claim: simplifyClaim,
    claims: simplifyClaims,
    descriptions: simplifyDescriptions,
    entities: simplifyEntities,
    entity: simplifyEntity,
    form: simplifyForm,
    forms: simplifyForms,
    glosses: simplifyGlosses,
    labels: simplifyLabels,
    lemmas: simplifyLemmas,
    propertyClaims: simplifyPropertyClaims,
    propertyQualifiers: simplifyPropertyQualifiers,
    qualifier: simplifyQualifier,
    qualifiers: simplifyQualifiers,
    reference: simplifyReference,
    references: simplifyReferences,
    representations: simplifyRepresentations,
    sense: simplifySense,
    senses: simplifySenses,
    sitelinks: simplifySitelinks,
    snak: simplifySnak,
    sparqlResults: simplifySparqlResults
});

// See https://www.wikidata.org/w/api.php?action=help&modules=query%2Bsearch
const namespacePattern = /^\d+[|\d]*$/;
function cirrusSearchPagesFactory(buildUrl) {
    return function cirrusSearchPages(options) {
        rejectObsoleteInterface(arguments);
        // Accept sr parameters with or without prefix
        for (const [key, value] of Object.entries(options)) {
            if (key.startsWith('sr')) {
                const shortKey = key.replace(/^sr/, '');
                if (options[shortKey] != null)
                    throw new Error(`${shortKey} and ${key} are the same`);
                options[shortKey] = value;
            }
        }
        const { search, haswbstatement, format = 'json', limit, offset, profile, sort } = options;
        let { namespace, prop } = options;
        if (!(search || haswbstatement))
            throw new Error('missing "search" or "haswbstatement" parameter');
        let srsearch = '';
        if (search)
            srsearch += search;
        if (haswbstatement) {
            const statements = haswbstatement instanceof Array ? haswbstatement : [haswbstatement];
            for (const statement of statements) {
                if (statement[0] === '-')
                    srsearch += ` -haswbstatement:${statement.slice(1)}`;
                else
                    srsearch += ` haswbstatement:${statement}`;
            }
        }
        if (limit != null && (typeof limit !== 'number' || limit < 1)) {
            throw new Error(`invalid limit: ${limit}`);
        }
        if (offset != null && (typeof offset !== 'number' || offset < 0)) {
            throw new Error(`invalid offset: ${offset}`);
        }
        if (namespace instanceof Array)
            namespace = namespace.join('|');
        else if (typeof namespace === 'number')
            namespace = namespace.toString();
        if (namespace && !namespacePattern.test(namespace)) {
            throw new Error(`invalid namespace: ${namespace}`);
        }
        if (profile != null && typeof profile !== 'string') {
            throw new Error(`invalid profile: ${profile} (${typeof profile}, expected string)`);
        }
        if (sort != null && typeof sort !== 'string') {
            throw new Error(`invalid sort: ${sort} (${typeof sort}, expected string)`);
        }
        let srprop;
        if (prop != null) {
            if (prop instanceof Array)
                prop = prop.join('|');
            if (typeof prop !== 'string') {
                throw new Error(`invalid prop: ${prop} (${typeof prop}, expected string)`);
            }
            srprop = prop.toString();
        }
        return buildUrl({
            action: 'query',
            list: 'search',
            srsearch: srsearch.trim(),
            format,
            srnamespace: namespace,
            srlimit: limit,
            sroffset: offset,
            srqiprofile: profile,
            srsort: sort,
            srprop,
        });
    };
}

/** Ensure both via TypeScript and at runtime that the input value is of the expected type. Throws error when it is not */
function validate(name, testFn) {
    return function (value) {
        if (!testFn(value))
            throw new Error(`invalid ${name}: ${value} (type: ${typeOf(value)})`);
    };
}
const entityId = validate('entity id', isEntityId);
const propertyId = validate('property id', isPropertyId);
const entityPageTitle = validate('entity page title', isEntityPageTitle);
const revisionId = validate('revision id', isRevisionId);
function typeOf(value) {
    // just handling what differes from typeof
    const type = typeof value;
    if (type === 'object') {
        if (value === null)
            return 'null';
        if (value instanceof Array)
            return 'array';
        if (value instanceof Promise)
            return 'promise';
    }
    if (type === 'number') {
        if (Number.isNaN(value))
            return 'NaN';
    }
    return type;
}

function getEntitiesFactory(buildUrl) {
    return function getEntities({ ids, languages, props, format = 'json', redirects, }) {
        rejectObsoleteInterface(arguments);
        // ids can't be let empty
        if (!(ids && ids.length > 0))
            throw new Error('no id provided');
        // Allow to pass ids as a single string
        ids = forceArray(ids);
        ids.forEach(o => entityId(o));
        if (ids.length > 50) {
            console.warn(`getEntities accepts 50 ids max to match Wikidata API limitations:
      this request won't get all the desired entities.
      You can use getManyEntities instead to generate several request urls
      to work around this limitation`);
        }
        // Properties can be either one property as a string
        // or an array or properties;
        // either case me just want to deal with arrays
        const query = {
            action: 'wbgetentities',
            ids: ids.join('|'),
            format,
        };
        if (redirects === false)
            query.redirects = 'no';
        if (languages) {
            languages = forceArray(languages);
            query.languages = languages.join('|');
        }
        if (props && props.length > 0)
            query.props = forceArray(props).join('|');
        return buildUrl(query);
    };
}

function getEntitiesFromSitelinksFactory(buildUrl) {
    return function getEntitiesFromSitelinks({ titles, sites, languages, props, format = 'json', redirects, }) {
        rejectObsoleteInterface(arguments);
        // titles cant be let empty
        if (!(titles && titles.length > 0))
            throw new Error('no titles provided');
        // default to the English Wikipedia
        if (!(sites && sites.length > 0))
            sites = ['enwiki'];
        // Properties can be either one property as a string
        // or an array or properties;
        // either case me just want to deal with arrays
        titles = forceArray(titles);
        sites = forceArray(sites).map(parseSite);
        props = forceArray(props);
        const query = {
            action: 'wbgetentities',
            titles: titles.join('|'),
            sites: sites.join('|'),
            format,
        };
        // Normalizing only works if there is only one site and title
        if (sites.length === 1 && titles.length === 1) {
            query.normalize = true;
        }
        if (languages) {
            languages = forceArray(languages);
            query.languages = languages.join('|');
        }
        if (props.length > 0) {
            query.props = props.join('|');
        }
        if (redirects === false)
            query.redirects = 'no';
        return buildUrl(query);
    };
}
/** convert language code to Wikipedia sitelink code */
function parseSite(site) {
    if (isOfType(sites, site)) {
        return site;
    }
    else {
        const wiki = site.replace(/-/g, '_') + 'wiki';
        return wiki;
    }
}

function getEntityRevisionFactory(instance, wgScriptPath) {
    return function getEntityRevision({ id, revision }) {
        rejectObsoleteInterface(arguments);
        entityId(id);
        revisionId(revision);
        return `${instance}/${wgScriptPath}/index.php?title=Special:EntityData/${id}.json&revision=${revision}`;
    };
}

function getManyEntitiesFactory(buildUrl) {
    const getEntities = getEntitiesFactory(buildUrl);
    return function getManyEntities({ ids, languages, props, format, redirects }) {
        rejectObsoleteInterface(arguments);
        if (!(ids instanceof Array))
            throw new Error('getManyEntities expects an array of ids');
        return getChunks(ids)
            .map(idsGroup => getEntities({ ids: idsGroup, languages, props, format, redirects }));
    };
}
function getChunks(ids) {
    const chunks = [];
    while (ids.length > 0) {
        const chunk = ids.slice(0, 50);
        ids = ids.slice(50);
        chunks.push(chunk);
    }
    return chunks;
}

function sparqlQueryFactory(sparqlEndpoint) {
    return function sparqlQuery(sparql) {
        const query = fixedEncodeURIComponent(sparql);
        return `${sparqlEndpoint}?format=json&query=${query}`;
    };
}

// Fiter-out properties. Can't be filtered by
// `?subject a wikibase:Item`, as those triples are omitted
// https://www.mediawiki.org/wiki/Wikibase/Indexing/RDF_Dump_Format#WDQS_data_differences
const itemsOnly = 'FILTER NOT EXISTS { ?subject rdf:type wikibase:Property . } ';
const getReverseClaimsFactory = (sparqlEndpoint) => {
    const sparqlQuery = sparqlQueryFactory(sparqlEndpoint);
    return function getReverseClaims(options) {
        let { properties } = options;
        const { values, limit, caseInsensitive, keepProperties } = options;
        const valueFn = caseInsensitive ? caseInsensitiveValueQuery : directValueQuery;
        const filter = keepProperties ? '' : itemsOnly;
        // Allow to request values for several properties at once
        properties = forceArray(properties);
        properties.forEach(o => propertyId(o));
        const valueBlock = getValueBlock(values, valueFn, properties, filter);
        let sparql = `SELECT DISTINCT ?subject WHERE { ${valueBlock} }`;
        if (limit)
            sparql += ` LIMIT ${limit}`;
        return sparqlQuery(sparql);
    };
};
const getValueBlock = (values, valueFn, properties, filter) => {
    properties = properties.map(prefixifyProperty).join('|');
    if (!(values instanceof Array)) {
        return valueFn(properties, getValueString(values), filter);
    }
    const valuesBlocks = values
        .map(getValueString)
        .map(valStr => valueFn(properties, valStr, filter));
    return '{ ' + valuesBlocks.join('} UNION {') + ' }';
};
const getValueString = value => {
    if (isItemId(value)) {
        value = `wd:${value}`;
    }
    else if (typeof value === 'string') {
        value = `'${value}'`;
    }
    return value;
};
const directValueQuery = (properties, value, filter) => {
    return `?subject ${properties} ${value} .
    ${filter}`;
};
// Discussion on how to make this query optimal:
// http://stackoverflow.com/q/43073266/3324977
const caseInsensitiveValueQuery = (properties, value, filter) => {
    return `?subject ${properties} ?value .
    FILTER (lcase(?value) = ${value.toLowerCase()})
    ${filter}`;
};
const prefixifyProperty = property => 'wdt:' + property;

function getRevisionsFactory(buildUrl) {
    return function getRevisions({ ids, format, limit, start, end, prop, user, excludeuser, tag }) {
        rejectObsoleteInterface(arguments);
        ids = forceArray(ids);
        ids.forEach(o => entityPageTitle(o));
        const uniqueId = ids.length === 1;
        const query = {
            action: 'query',
            prop: 'revisions',
        };
        query.titles = ids.join('|');
        query.format = format || 'json';
        if (uniqueId)
            query.rvlimit = limit || 'max';
        if (uniqueId && start)
            query.rvstart = getEpochSeconds(start);
        if (uniqueId && end)
            query.rvend = getEpochSeconds(end);
        if (prop) {
            query.rvprop = forceArray(prop).join('|');
        }
        else {
            query.rvprop = 'ids|flags|timestamp|user|userid|size|slotsize|sha1|slotsha1|contentmodel|comment|parsedcomment|content|tags|roles|oresscores';
        }
        query.rvslots = '*';
        if (user)
            query.rvuser = user;
        if (excludeuser)
            query.rvexcludeuser = excludeuser;
        if (tag)
            query.rvtag = tag;
        return buildUrl(query);
    };
}
const getEpochSeconds = (date) => {
    // Return already formatted epoch seconds:
    // if a date in milliseconds appear to be earlier than 2000-01-01, that's probably
    // already seconds actually
    if (typeof date === 'number' && date < earliestPointInMs)
        return date;
    return Math.trunc(new Date(date).getTime() / 1000);
};
const earliestPointInMs = new Date('2000-01-01').getTime();

const EntityTypes = [
    'item',
    'property',
    'lexeme',
    'form',
    'sense',
    'entity-schema',
];

const searchEntitiesFactory = (buildUrl) => {
    return function searchEntities({ search, language = 'en', uselang, limit = '20', continue: continu = '0', format = 'json', type = 'item', }) {
        rejectObsoleteInterface(arguments);
        uselang = uselang || language;
        if (!(search && search.length > 0))
            throw new Error("search can't be empty");
        if (!isOfType(EntityTypes, type))
            throw new Error(`invalid type: ${type}`);
        return buildUrl({
            action: 'wbsearchentities',
            search,
            language,
            limit,
            continue: continu,
            format,
            uselang,
            type,
        });
    };
};

const isBrowser = typeof location !== 'undefined' && typeof document !== 'undefined';
function buildUrlFactory(instanceApiEndpoint) {
    return queryObj => {
        // Request CORS headers if the request is made from a browser
        // See https://www.wikidata.org/w/api.php ('origin' parameter)
        if (isBrowser)
            queryObj = Object.assign(Object.assign({}, queryObj), { origin: '*' });
        const queryEntries = Object.entries(queryObj)
            // Remove null or undefined parameters
            .filter(([, value]) => value != null)
            .map(([key, value]) => [key, String(value)]);
        const query = new URLSearchParams(queryEntries).toString();
        return instanceApiEndpoint + '?' + query;
    };
}

const tip = `Tip: if you just want to access functions that don't need an instance or a sparqlEndpoint,
those are also exposed directly on the module object. Exemple:
import { isItemId, simplify } from 'wikibase-sdk'`;
const common = Object.assign(Object.assign(Object.assign(Object.assign({ simplify,
    parse }, helpers), sitelinksHelpers), rankHelpers), timeHelpers);
function WBK(config) {
    if (!isPlainObject(config))
        throw new Error('invalid config');
    const { instance, sparqlEndpoint } = config;
    let { wgScriptPath = 'w' } = config;
    wgScriptPath = wgScriptPath.replace(/^\//, '');
    if (!(instance || sparqlEndpoint)) {
        throw new Error(`one of instance or sparqlEndpoint should be set at initialization.\n${tip}`);
    }
    let wikibaseApiFunctions;
    let instanceRoot;
    let instanceApiEndpoint;
    if (instance) {
        validateEndpoint('instance', instance);
        instanceRoot = instance
            .replace(/\/$/, '')
            .replace(`/${wgScriptPath}/api.php`, '');
        instanceApiEndpoint = `${instanceRoot}/${wgScriptPath}/api.php`;
        const buildUrl = buildUrlFactory(instanceApiEndpoint);
        wikibaseApiFunctions = {
            searchEntities: searchEntitiesFactory(buildUrl),
            cirrusSearchPages: cirrusSearchPagesFactory(buildUrl),
            getEntities: getEntitiesFactory(buildUrl),
            getManyEntities: getManyEntitiesFactory(buildUrl),
            getRevisions: getRevisionsFactory(buildUrl),
            getEntityRevision: getEntityRevisionFactory(instance, wgScriptPath),
            getEntitiesFromSitelinks: getEntitiesFromSitelinksFactory(buildUrl),
        };
    }
    else {
        wikibaseApiFunctions = {
            searchEntities: missingInstance('searchEntities'),
            cirrusSearchPages: missingInstance('cirrusSearchPages'),
            getEntities: missingInstance('getEntities'),
            getManyEntities: missingInstance('getManyEntities'),
            getRevisions: missingInstance('getRevisions'),
            getEntityRevision: missingInstance('getEntityRevision'),
            getEntitiesFromSitelinks: missingInstance('getEntitiesFromSitelinks'),
        };
    }
    let wikibaseQueryServiceFunctions;
    if (sparqlEndpoint) {
        validateEndpoint('sparqlEndpoint', sparqlEndpoint);
        wikibaseQueryServiceFunctions = {
            sparqlQuery: sparqlQueryFactory(sparqlEndpoint),
            getReverseClaims: getReverseClaimsFactory(sparqlEndpoint),
        };
    }
    else {
        wikibaseQueryServiceFunctions = {
            sparqlQuery: missingSparqlEndpoint('sparqlQuery'),
            getReverseClaims: missingSparqlEndpoint('getReverseClaims'),
        };
    }
    return Object.assign(Object.assign(Object.assign({ instance: {
            root: instanceRoot,
            apiEndpoint: instanceApiEndpoint,
        } }, common), wikibaseApiFunctions), wikibaseQueryServiceFunctions);
}
const validateEndpoint = (name, url) => {
    if (!(typeof url === 'string' && url.startsWith('http'))) {
        throw new Error(`invalid ${name}: ${url}`);
    }
};
const missingConfig = (missingParameter) => (name) => () => {
    throw new Error(`${name} requires ${missingParameter} to be set at initialization`);
};
const missingSparqlEndpoint = missingConfig('a sparqlEndpoint');
const missingInstance = missingConfig('an instance');

const wdk = WBK({
    instance: 'https://www.wikidata.org',
    sparqlEndpoint: 'https://query.wikidata.org/sparql',
});

exports.default = wdk;
exports.wdk = wdk;

},{}],129:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],130:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":129,"buffer":130,"ieee754":132}],131:[function(require,module,exports){
(function (global){(function (){
(function (global) {
  'use strict';

  function fetchPonyfill(options) {
    var Promise = options && options.Promise || global.Promise;
    var XMLHttpRequest = options && options.XMLHttpRequest || global.XMLHttpRequest;

    return (function () {
      var globalThis = Object.create(global, {
        fetch: {
          value: undefined,
          writable: true
        }
      });

      (function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
        typeof define === 'function' && define.amd ? define(['exports'], factory) :
        (factory((global.WHATWGFetch = {})));
      }(this, (function (exports) { 'use strict';

        var global =
          (typeof globalThis !== 'undefined' && globalThis) ||
          (typeof self !== 'undefined' && self) ||
          (typeof global !== 'undefined' && global);

        var support = {
          searchParams: 'URLSearchParams' in global,
          iterable: 'Symbol' in global && 'iterator' in Symbol,
          blob:
            'FileReader' in global &&
            'Blob' in global &&
            (function() {
              try {
                new Blob();
                return true
              } catch (e) {
                return false
              }
            })(),
          formData: 'FormData' in global,
          arrayBuffer: 'ArrayBuffer' in global
        };

        function isDataView(obj) {
          return obj && DataView.prototype.isPrototypeOf(obj)
        }

        if (support.arrayBuffer) {
          var viewClasses = [
            '[object Int8Array]',
            '[object Uint8Array]',
            '[object Uint8ClampedArray]',
            '[object Int16Array]',
            '[object Uint16Array]',
            '[object Int32Array]',
            '[object Uint32Array]',
            '[object Float32Array]',
            '[object Float64Array]'
          ];

          var isArrayBufferView =
            ArrayBuffer.isView ||
            function(obj) {
              return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
            };
        }

        function normalizeName(name) {
          if (typeof name !== 'string') {
            name = String(name);
          }
          if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {
            throw new TypeError('Invalid character in header field name')
          }
          return name.toLowerCase()
        }

        function normalizeValue(value) {
          if (typeof value !== 'string') {
            value = String(value);
          }
          return value
        }

        // Build a destructive iterator for the value list
        function iteratorFor(items) {
          var iterator = {
            next: function() {
              var value = items.shift();
              return {done: value === undefined, value: value}
            }
          };

          if (support.iterable) {
            iterator[Symbol.iterator] = function() {
              return iterator
            };
          }

          return iterator
        }

        function Headers(headers) {
          this.map = {};

          if (headers instanceof Headers) {
            headers.forEach(function(value, name) {
              this.append(name, value);
            }, this);
          } else if (Array.isArray(headers)) {
            headers.forEach(function(header) {
              this.append(header[0], header[1]);
            }, this);
          } else if (headers) {
            Object.getOwnPropertyNames(headers).forEach(function(name) {
              this.append(name, headers[name]);
            }, this);
          }
        }

        Headers.prototype.append = function(name, value) {
          name = normalizeName(name);
          value = normalizeValue(value);
          var oldValue = this.map[name];
          this.map[name] = oldValue ? oldValue + ', ' + value : value;
        };

        Headers.prototype['delete'] = function(name) {
          delete this.map[normalizeName(name)];
        };

        Headers.prototype.get = function(name) {
          name = normalizeName(name);
          return this.has(name) ? this.map[name] : null
        };

        Headers.prototype.has = function(name) {
          return this.map.hasOwnProperty(normalizeName(name))
        };

        Headers.prototype.set = function(name, value) {
          this.map[normalizeName(name)] = normalizeValue(value);
        };

        Headers.prototype.forEach = function(callback, thisArg) {
          for (var name in this.map) {
            if (this.map.hasOwnProperty(name)) {
              callback.call(thisArg, this.map[name], name, this);
            }
          }
        };

        Headers.prototype.keys = function() {
          var items = [];
          this.forEach(function(value, name) {
            items.push(name);
          });
          return iteratorFor(items)
        };

        Headers.prototype.values = function() {
          var items = [];
          this.forEach(function(value) {
            items.push(value);
          });
          return iteratorFor(items)
        };

        Headers.prototype.entries = function() {
          var items = [];
          this.forEach(function(value, name) {
            items.push([name, value]);
          });
          return iteratorFor(items)
        };

        if (support.iterable) {
          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
        }

        function consumed(body) {
          if (body.bodyUsed) {
            return Promise.reject(new TypeError('Already read'))
          }
          body.bodyUsed = true;
        }

        function fileReaderReady(reader) {
          return new Promise(function(resolve, reject) {
            reader.onload = function() {
              resolve(reader.result);
            };
            reader.onerror = function() {
              reject(reader.error);
            };
          })
        }

        function readBlobAsArrayBuffer(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsArrayBuffer(blob);
          return promise
        }

        function readBlobAsText(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsText(blob);
          return promise
        }

        function readArrayBufferAsText(buf) {
          var view = new Uint8Array(buf);
          var chars = new Array(view.length);

          for (var i = 0; i < view.length; i++) {
            chars[i] = String.fromCharCode(view[i]);
          }
          return chars.join('')
        }

        function bufferClone(buf) {
          if (buf.slice) {
            return buf.slice(0)
          } else {
            var view = new Uint8Array(buf.byteLength);
            view.set(new Uint8Array(buf));
            return view.buffer
          }
        }

        function Body() {
          this.bodyUsed = false;

          this._initBody = function(body) {
            /*
              fetch-mock wraps the Response object in an ES6 Proxy to
              provide useful test harness features such as flush. However, on
              ES5 browsers without fetch or Proxy support pollyfills must be used;
              the proxy-pollyfill is unable to proxy an attribute unless it exists
              on the object before the Proxy is created. This change ensures
              Response.bodyUsed exists on the instance, while maintaining the
              semantic of setting Request.bodyUsed in the constructor before
              _initBody is called.
            */
            this.bodyUsed = this.bodyUsed;
            this._bodyInit = body;
            if (!body) {
              this._bodyText = '';
            } else if (typeof body === 'string') {
              this._bodyText = body;
            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
              this._bodyBlob = body;
            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
              this._bodyFormData = body;
            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
              this._bodyText = body.toString();
            } else if (support.arrayBuffer && support.blob && isDataView(body)) {
              this._bodyArrayBuffer = bufferClone(body.buffer);
              // IE 10-11 can't handle a DataView body.
              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
              this._bodyArrayBuffer = bufferClone(body);
            } else {
              this._bodyText = body = Object.prototype.toString.call(body);
            }

            if (!this.headers.get('content-type')) {
              if (typeof body === 'string') {
                this.headers.set('content-type', 'text/plain;charset=UTF-8');
              } else if (this._bodyBlob && this._bodyBlob.type) {
                this.headers.set('content-type', this._bodyBlob.type);
              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
              }
            }
          };

          if (support.blob) {
            this.blob = function() {
              var rejected = consumed(this);
              if (rejected) {
                return rejected
              }

              if (this._bodyBlob) {
                return Promise.resolve(this._bodyBlob)
              } else if (this._bodyArrayBuffer) {
                return Promise.resolve(new Blob([this._bodyArrayBuffer]))
              } else if (this._bodyFormData) {
                throw new Error('could not read FormData body as blob')
              } else {
                return Promise.resolve(new Blob([this._bodyText]))
              }
            };

            this.arrayBuffer = function() {
              if (this._bodyArrayBuffer) {
                var isConsumed = consumed(this);
                if (isConsumed) {
                  return isConsumed
                }
                if (ArrayBuffer.isView(this._bodyArrayBuffer)) {
                  return Promise.resolve(
                    this._bodyArrayBuffer.buffer.slice(
                      this._bodyArrayBuffer.byteOffset,
                      this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength
                    )
                  )
                } else {
                  return Promise.resolve(this._bodyArrayBuffer)
                }
              } else {
                return this.blob().then(readBlobAsArrayBuffer)
              }
            };
          }

          this.text = function() {
            var rejected = consumed(this);
            if (rejected) {
              return rejected
            }

            if (this._bodyBlob) {
              return readBlobAsText(this._bodyBlob)
            } else if (this._bodyArrayBuffer) {
              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
            } else if (this._bodyFormData) {
              throw new Error('could not read FormData body as text')
            } else {
              return Promise.resolve(this._bodyText)
            }
          };

          if (support.formData) {
            this.formData = function() {
              return this.text().then(decode)
            };
          }

          this.json = function() {
            return this.text().then(JSON.parse)
          };

          return this
        }

        // HTTP methods whose capitalization should be normalized
        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

        function normalizeMethod(method) {
          var upcased = method.toUpperCase();
          return methods.indexOf(upcased) > -1 ? upcased : method
        }

        function Request(input, options) {
          if (!(this instanceof Request)) {
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
          }

          options = options || {};
          var body = options.body;

          if (input instanceof Request) {
            if (input.bodyUsed) {
              throw new TypeError('Already read')
            }
            this.url = input.url;
            this.credentials = input.credentials;
            if (!options.headers) {
              this.headers = new Headers(input.headers);
            }
            this.method = input.method;
            this.mode = input.mode;
            this.signal = input.signal;
            if (!body && input._bodyInit != null) {
              body = input._bodyInit;
              input.bodyUsed = true;
            }
          } else {
            this.url = String(input);
          }

          this.credentials = options.credentials || this.credentials || 'same-origin';
          if (options.headers || !this.headers) {
            this.headers = new Headers(options.headers);
          }
          this.method = normalizeMethod(options.method || this.method || 'GET');
          this.mode = options.mode || this.mode || null;
          this.signal = options.signal || this.signal;
          this.referrer = null;

          if ((this.method === 'GET' || this.method === 'HEAD') && body) {
            throw new TypeError('Body not allowed for GET or HEAD requests')
          }
          this._initBody(body);

          if (this.method === 'GET' || this.method === 'HEAD') {
            if (options.cache === 'no-store' || options.cache === 'no-cache') {
              // Search for a '_' parameter in the query string
              var reParamSearch = /([?&])_=[^&]*/;
              if (reParamSearch.test(this.url)) {
                // If it already exists then set the value with the current time
                this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());
              } else {
                // Otherwise add a new '_' parameter to the end with the current time
                var reQueryString = /\?/;
                this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();
              }
            }
          }
        }

        Request.prototype.clone = function() {
          return new Request(this, {body: this._bodyInit})
        };

        function decode(body) {
          var form = new FormData();
          body
            .trim()
            .split('&')
            .forEach(function(bytes) {
              if (bytes) {
                var split = bytes.split('=');
                var name = split.shift().replace(/\+/g, ' ');
                var value = split.join('=').replace(/\+/g, ' ');
                form.append(decodeURIComponent(name), decodeURIComponent(value));
              }
            });
          return form
        }

        function parseHeaders(rawHeaders) {
          var headers = new Headers();
          // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
          // https://tools.ietf.org/html/rfc7230#section-3.2
          var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
          // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill
          // https://github.com/github/fetch/issues/748
          // https://github.com/zloirock/core-js/issues/751
          preProcessedHeaders
            .split('\r')
            .map(function(header) {
              return header.indexOf('\n') === 0 ? header.substr(1, header.length) : header
            })
            .forEach(function(line) {
              var parts = line.split(':');
              var key = parts.shift().trim();
              if (key) {
                var value = parts.join(':').trim();
                headers.append(key, value);
              }
            });
          return headers
        }

        Body.call(Request.prototype);

        function Response(bodyInit, options) {
          if (!(this instanceof Response)) {
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
          }
          if (!options) {
            options = {};
          }

          this.type = 'default';
          this.status = options.status === undefined ? 200 : options.status;
          this.ok = this.status >= 200 && this.status < 300;
          this.statusText = 'statusText' in options ? options.statusText : '';
          this.headers = new Headers(options.headers);
          this.url = options.url || '';
          this._initBody(bodyInit);
        }

        Body.call(Response.prototype);

        Response.prototype.clone = function() {
          return new Response(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new Headers(this.headers),
            url: this.url
          })
        };

        Response.error = function() {
          var response = new Response(null, {status: 0, statusText: ''});
          response.type = 'error';
          return response
        };

        var redirectStatuses = [301, 302, 303, 307, 308];

        Response.redirect = function(url, status) {
          if (redirectStatuses.indexOf(status) === -1) {
            throw new RangeError('Invalid status code')
          }

          return new Response(null, {status: status, headers: {location: url}})
        };

        exports.DOMException = global.DOMException;
        try {
          new exports.DOMException();
        } catch (err) {
          exports.DOMException = function(message, name) {
            this.message = message;
            this.name = name;
            var error = Error(message);
            this.stack = error.stack;
          };
          exports.DOMException.prototype = Object.create(Error.prototype);
          exports.DOMException.prototype.constructor = exports.DOMException;
        }

        function fetch(input, init) {
          return new Promise(function(resolve, reject) {
            var request = new Request(input, init);

            if (request.signal && request.signal.aborted) {
              return reject(new exports.DOMException('Aborted', 'AbortError'))
            }

            var xhr = new XMLHttpRequest();

            function abortXhr() {
              xhr.abort();
            }

            xhr.onload = function() {
              var options = {
                status: xhr.status,
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || '')
              };
              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
              var body = 'response' in xhr ? xhr.response : xhr.responseText;
              setTimeout(function() {
                resolve(new Response(body, options));
              }, 0);
            };

            xhr.onerror = function() {
              setTimeout(function() {
                reject(new TypeError('Network request failed'));
              }, 0);
            };

            xhr.ontimeout = function() {
              setTimeout(function() {
                reject(new TypeError('Network request failed'));
              }, 0);
            };

            xhr.onabort = function() {
              setTimeout(function() {
                reject(new exports.DOMException('Aborted', 'AbortError'));
              }, 0);
            };

            function fixUrl(url) {
              try {
                return url === '' && global.location.href ? global.location.href : url
              } catch (e) {
                return url
              }
            }

            xhr.open(request.method, fixUrl(request.url), true);

            if (request.credentials === 'include') {
              xhr.withCredentials = true;
            } else if (request.credentials === 'omit') {
              xhr.withCredentials = false;
            }

            if ('responseType' in xhr) {
              if (support.blob) {
                xhr.responseType = 'blob';
              } else if (
                support.arrayBuffer &&
                request.headers.get('Content-Type') &&
                request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1
              ) {
                xhr.responseType = 'arraybuffer';
              }
            }

            if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers)) {
              Object.getOwnPropertyNames(init.headers).forEach(function(name) {
                xhr.setRequestHeader(name, normalizeValue(init.headers[name]));
              });
            } else {
              request.headers.forEach(function(value, name) {
                xhr.setRequestHeader(name, value);
              });
            }

            if (request.signal) {
              request.signal.addEventListener('abort', abortXhr);

              xhr.onreadystatechange = function() {
                // DONE (success or failure)
                if (xhr.readyState === 4) {
                  request.signal.removeEventListener('abort', abortXhr);
                }
              };
            }

            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
          })
        }

        fetch.polyfill = true;

        if (!global.fetch) {
          global.fetch = fetch;
          global.Headers = Headers;
          global.Request = Request;
          global.Response = Response;
        }

        exports.Headers = Headers;
        exports.Request = Request;
        exports.Response = Response;
        exports.fetch = fetch;

        Object.defineProperty(exports, '__esModule', { value: true });

      })));


      return {
        fetch: globalThis.fetch,
        Headers: globalThis.Headers,
        Request: globalThis.Request,
        Response: globalThis.Response,
        DOMException: globalThis.DOMException
      };
    }());
  }

  if (typeof define === 'function' && define.amd) {
    define(function () {
      return fetchPonyfill;
    });
  } else if (typeof exports === 'object') {
    module.exports = fetchPonyfill;
  } else {
    global.fetchPonyfill = fetchPonyfill;
  }
}(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof global !== 'undefined' ? global : this));


}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],132:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],133:[function(require,module,exports){
'use strict';


var loader = require('./lib/loader');
var dumper = require('./lib/dumper');


function renamed(from, to) {
  return function () {
    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +
      'Use yaml.' + to + ' instead, which is now safe by default.');
  };
}


module.exports.Type                = require('./lib/type');
module.exports.Schema              = require('./lib/schema');
module.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');
module.exports.JSON_SCHEMA         = require('./lib/schema/json');
module.exports.CORE_SCHEMA         = require('./lib/schema/core');
module.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');
module.exports.load                = loader.load;
module.exports.loadAll             = loader.loadAll;
module.exports.dump                = dumper.dump;
module.exports.YAMLException       = require('./lib/exception');

// Re-export all types in case user wants to create custom schema
module.exports.types = {
  binary:    require('./lib/type/binary'),
  float:     require('./lib/type/float'),
  map:       require('./lib/type/map'),
  null:      require('./lib/type/null'),
  pairs:     require('./lib/type/pairs'),
  set:       require('./lib/type/set'),
  timestamp: require('./lib/type/timestamp'),
  bool:      require('./lib/type/bool'),
  int:       require('./lib/type/int'),
  merge:     require('./lib/type/merge'),
  omap:      require('./lib/type/omap'),
  seq:       require('./lib/type/seq'),
  str:       require('./lib/type/str')
};

// Removed functions from JS-YAML 3.0.x
module.exports.safeLoad            = renamed('safeLoad', 'load');
module.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');
module.exports.safeDump            = renamed('safeDump', 'dump');

},{"./lib/dumper":135,"./lib/exception":136,"./lib/loader":137,"./lib/schema":138,"./lib/schema/core":139,"./lib/schema/default":140,"./lib/schema/failsafe":141,"./lib/schema/json":142,"./lib/type":144,"./lib/type/binary":145,"./lib/type/bool":146,"./lib/type/float":147,"./lib/type/int":148,"./lib/type/map":149,"./lib/type/merge":150,"./lib/type/null":151,"./lib/type/omap":152,"./lib/type/pairs":153,"./lib/type/seq":154,"./lib/type/set":155,"./lib/type/str":156,"./lib/type/timestamp":157}],134:[function(require,module,exports){
'use strict';


function isNothing(subject) {
  return (typeof subject === 'undefined') || (subject === null);
}


function isObject(subject) {
  return (typeof subject === 'object') && (subject !== null);
}


function toArray(sequence) {
  if (Array.isArray(sequence)) return sequence;
  else if (isNothing(sequence)) return [];

  return [ sequence ];
}


function extend(target, source) {
  var index, length, key, sourceKeys;

  if (source) {
    sourceKeys = Object.keys(source);

    for (index = 0, length = sourceKeys.length; index < length; index += 1) {
      key = sourceKeys[index];
      target[key] = source[key];
    }
  }

  return target;
}


function repeat(string, count) {
  var result = '', cycle;

  for (cycle = 0; cycle < count; cycle += 1) {
    result += string;
  }

  return result;
}


function isNegativeZero(number) {
  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);
}


module.exports.isNothing      = isNothing;
module.exports.isObject       = isObject;
module.exports.toArray        = toArray;
module.exports.repeat         = repeat;
module.exports.isNegativeZero = isNegativeZero;
module.exports.extend         = extend;

},{}],135:[function(require,module,exports){
'use strict';

/*eslint-disable no-use-before-define*/

var common              = require('./common');
var YAMLException       = require('./exception');
var DEFAULT_SCHEMA      = require('./schema/default');

var _toString       = Object.prototype.toString;
var _hasOwnProperty = Object.prototype.hasOwnProperty;

var CHAR_BOM                  = 0xFEFF;
var CHAR_TAB                  = 0x09; /* Tab */
var CHAR_LINE_FEED            = 0x0A; /* LF */
var CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */
var CHAR_SPACE                = 0x20; /* Space */
var CHAR_EXCLAMATION          = 0x21; /* ! */
var CHAR_DOUBLE_QUOTE         = 0x22; /* " */
var CHAR_SHARP                = 0x23; /* # */
var CHAR_PERCENT              = 0x25; /* % */
var CHAR_AMPERSAND            = 0x26; /* & */
var CHAR_SINGLE_QUOTE         = 0x27; /* ' */
var CHAR_ASTERISK             = 0x2A; /* * */
var CHAR_COMMA                = 0x2C; /* , */
var CHAR_MINUS                = 0x2D; /* - */
var CHAR_COLON                = 0x3A; /* : */
var CHAR_EQUALS               = 0x3D; /* = */
var CHAR_GREATER_THAN         = 0x3E; /* > */
var CHAR_QUESTION             = 0x3F; /* ? */
var CHAR_COMMERCIAL_AT        = 0x40; /* @ */
var CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */
var CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */
var CHAR_GRAVE_ACCENT         = 0x60; /* ` */
var CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */
var CHAR_VERTICAL_LINE        = 0x7C; /* | */
var CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */

var ESCAPE_SEQUENCES = {};

ESCAPE_SEQUENCES[0x00]   = '\\0';
ESCAPE_SEQUENCES[0x07]   = '\\a';
ESCAPE_SEQUENCES[0x08]   = '\\b';
ESCAPE_SEQUENCES[0x09]   = '\\t';
ESCAPE_SEQUENCES[0x0A]   = '\\n';
ESCAPE_SEQUENCES[0x0B]   = '\\v';
ESCAPE_SEQUENCES[0x0C]   = '\\f';
ESCAPE_SEQUENCES[0x0D]   = '\\r';
ESCAPE_SEQUENCES[0x1B]   = '\\e';
ESCAPE_SEQUENCES[0x22]   = '\\"';
ESCAPE_SEQUENCES[0x5C]   = '\\\\';
ESCAPE_SEQUENCES[0x85]   = '\\N';
ESCAPE_SEQUENCES[0xA0]   = '\\_';
ESCAPE_SEQUENCES[0x2028] = '\\L';
ESCAPE_SEQUENCES[0x2029] = '\\P';

var DEPRECATED_BOOLEANS_SYNTAX = [
  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',
  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'
];

var DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;

function compileStyleMap(schema, map) {
  var result, keys, index, length, tag, style, type;

  if (map === null) return {};

  result = {};
  keys = Object.keys(map);

  for (index = 0, length = keys.length; index < length; index += 1) {
    tag = keys[index];
    style = String(map[tag]);

    if (tag.slice(0, 2) === '!!') {
      tag = 'tag:yaml.org,2002:' + tag.slice(2);
    }
    type = schema.compiledTypeMap['fallback'][tag];

    if (type && _hasOwnProperty.call(type.styleAliases, style)) {
      style = type.styleAliases[style];
    }

    result[tag] = style;
  }

  return result;
}

function encodeHex(character) {
  var string, handle, length;

  string = character.toString(16).toUpperCase();

  if (character <= 0xFF) {
    handle = 'x';
    length = 2;
  } else if (character <= 0xFFFF) {
    handle = 'u';
    length = 4;
  } else if (character <= 0xFFFFFFFF) {
    handle = 'U';
    length = 8;
  } else {
    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');
  }

  return '\\' + handle + common.repeat('0', length - string.length) + string;
}


var QUOTING_TYPE_SINGLE = 1,
    QUOTING_TYPE_DOUBLE = 2;

function State(options) {
  this.schema        = options['schema'] || DEFAULT_SCHEMA;
  this.indent        = Math.max(1, (options['indent'] || 2));
  this.noArrayIndent = options['noArrayIndent'] || false;
  this.skipInvalid   = options['skipInvalid'] || false;
  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);
  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);
  this.sortKeys      = options['sortKeys'] || false;
  this.lineWidth     = options['lineWidth'] || 80;
  this.noRefs        = options['noRefs'] || false;
  this.noCompatMode  = options['noCompatMode'] || false;
  this.condenseFlow  = options['condenseFlow'] || false;
  this.quotingType   = options['quotingType'] === '"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;
  this.forceQuotes   = options['forceQuotes'] || false;
  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;

  this.implicitTypes = this.schema.compiledImplicit;
  this.explicitTypes = this.schema.compiledExplicit;

  this.tag = null;
  this.result = '';

  this.duplicates = [];
  this.usedDuplicates = null;
}

// Indents every line in a string. Empty lines (\n only) are not indented.
function indentString(string, spaces) {
  var ind = common.repeat(' ', spaces),
      position = 0,
      next = -1,
      result = '',
      line,
      length = string.length;

  while (position < length) {
    next = string.indexOf('\n', position);
    if (next === -1) {
      line = string.slice(position);
      position = length;
    } else {
      line = string.slice(position, next + 1);
      position = next + 1;
    }

    if (line.length && line !== '\n') result += ind;

    result += line;
  }

  return result;
}

function generateNextLine(state, level) {
  return '\n' + common.repeat(' ', state.indent * level);
}

function testImplicitResolving(state, str) {
  var index, length, type;

  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {
    type = state.implicitTypes[index];

    if (type.resolve(str)) {
      return true;
    }
  }

  return false;
}

// [33] s-white ::= s-space | s-tab
function isWhitespace(c) {
  return c === CHAR_SPACE || c === CHAR_TAB;
}

// Returns true if the character can be printed without escaping.
// From YAML 1.2: "any allowed characters known to be non-printable
// should also be escaped. [However,] This isn’t mandatory"
// Derived from nb-char - \t - #x85 - #xA0 - #x2028 - #x2029.
function isPrintable(c) {
  return  (0x00020 <= c && c <= 0x00007E)
      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)
      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)
      ||  (0x10000 <= c && c <= 0x10FFFF);
}

// [34] ns-char ::= nb-char - s-white
// [27] nb-char ::= c-printable - b-char - c-byte-order-mark
// [26] b-char  ::= b-line-feed | b-carriage-return
// Including s-white (for some reason, examples doesn't match specs in this aspect)
// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark
function isNsCharOrWhitespace(c) {
  return isPrintable(c)
    && c !== CHAR_BOM
    // - b-char
    && c !== CHAR_CARRIAGE_RETURN
    && c !== CHAR_LINE_FEED;
}

// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out
//                             c = flow-in   ⇒ ns-plain-safe-in
//                             c = block-key ⇒ ns-plain-safe-out
//                             c = flow-key  ⇒ ns-plain-safe-in
// [128] ns-plain-safe-out ::= ns-char
// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator
// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )
//                            | ( /* An ns-char preceding */ “#” )
//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )
function isPlainSafe(c, prev, inblock) {
  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);
  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);
  return (
    // ns-plain-safe
    inblock ? // c = flow-in
      cIsNsCharOrWhitespace
      : cIsNsCharOrWhitespace
        // - c-flow-indicator
        && c !== CHAR_COMMA
        && c !== CHAR_LEFT_SQUARE_BRACKET
        && c !== CHAR_RIGHT_SQUARE_BRACKET
        && c !== CHAR_LEFT_CURLY_BRACKET
        && c !== CHAR_RIGHT_CURLY_BRACKET
  )
    // ns-plain-char
    && c !== CHAR_SHARP // false on '#'
    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '
    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'
    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'
}

// Simplified test for values allowed as the first character in plain style.
function isPlainSafeFirst(c) {
  // Uses a subset of ns-char - c-indicator
  // where ns-char = nb-char - s-white.
  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part
  return isPrintable(c) && c !== CHAR_BOM
    && !isWhitespace(c) // - s-white
    // - (c-indicator ::=
    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”
    && c !== CHAR_MINUS
    && c !== CHAR_QUESTION
    && c !== CHAR_COLON
    && c !== CHAR_COMMA
    && c !== CHAR_LEFT_SQUARE_BRACKET
    && c !== CHAR_RIGHT_SQUARE_BRACKET
    && c !== CHAR_LEFT_CURLY_BRACKET
    && c !== CHAR_RIGHT_CURLY_BRACKET
    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “"”
    && c !== CHAR_SHARP
    && c !== CHAR_AMPERSAND
    && c !== CHAR_ASTERISK
    && c !== CHAR_EXCLAMATION
    && c !== CHAR_VERTICAL_LINE
    && c !== CHAR_EQUALS
    && c !== CHAR_GREATER_THAN
    && c !== CHAR_SINGLE_QUOTE
    && c !== CHAR_DOUBLE_QUOTE
    // | “%” | “@” | “`”)
    && c !== CHAR_PERCENT
    && c !== CHAR_COMMERCIAL_AT
    && c !== CHAR_GRAVE_ACCENT;
}

// Simplified test for values allowed as the last character in plain style.
function isPlainSafeLast(c) {
  // just not whitespace or colon, it will be checked to be plain character later
  return !isWhitespace(c) && c !== CHAR_COLON;
}

// Same as 'string'.codePointAt(pos), but works in older browsers.
function codePointAt(string, pos) {
  var first = string.charCodeAt(pos), second;
  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {
    second = string.charCodeAt(pos + 1);
    if (second >= 0xDC00 && second <= 0xDFFF) {
      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
    }
  }
  return first;
}

// Determines whether block indentation indicator is required.
function needIndentIndicator(string) {
  var leadingSpaceRe = /^\n* /;
  return leadingSpaceRe.test(string);
}

var STYLE_PLAIN   = 1,
    STYLE_SINGLE  = 2,
    STYLE_LITERAL = 3,
    STYLE_FOLDED  = 4,
    STYLE_DOUBLE  = 5;

// Determines which scalar styles are possible and returns the preferred style.
// lineWidth = -1 => no limit.
// Pre-conditions: str.length > 0.
// Post-conditions:
//    STYLE_PLAIN or STYLE_SINGLE => no \n are in the string.
//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).
//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).
function chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,
  testAmbiguousType, quotingType, forceQuotes, inblock) {

  var i;
  var char = 0;
  var prevChar = null;
  var hasLineBreak = false;
  var hasFoldableLine = false; // only checked if shouldTrackWidth
  var shouldTrackWidth = lineWidth !== -1;
  var previousLineBreak = -1; // count the first line correctly
  var plain = isPlainSafeFirst(codePointAt(string, 0))
          && isPlainSafeLast(codePointAt(string, string.length - 1));

  if (singleLineOnly || forceQuotes) {
    // Case: no block styles.
    // Check for disallowed characters to rule out plain and single.
    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {
      char = codePointAt(string, i);
      if (!isPrintable(char)) {
        return STYLE_DOUBLE;
      }
      plain = plain && isPlainSafe(char, prevChar, inblock);
      prevChar = char;
    }
  } else {
    // Case: block styles permitted.
    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {
      char = codePointAt(string, i);
      if (char === CHAR_LINE_FEED) {
        hasLineBreak = true;
        // Check if any line can be folded.
        if (shouldTrackWidth) {
          hasFoldableLine = hasFoldableLine ||
            // Foldable line = too long, and not more-indented.
            (i - previousLineBreak - 1 > lineWidth &&
             string[previousLineBreak + 1] !== ' ');
          previousLineBreak = i;
        }
      } else if (!isPrintable(char)) {
        return STYLE_DOUBLE;
      }
      plain = plain && isPlainSafe(char, prevChar, inblock);
      prevChar = char;
    }
    // in case the end is missing a \n
    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&
      (i - previousLineBreak - 1 > lineWidth &&
       string[previousLineBreak + 1] !== ' '));
  }
  // Although every style can represent \n without escaping, prefer block styles
  // for multiline, since they're more readable and they don't add empty lines.
  // Also prefer folding a super-long line.
  if (!hasLineBreak && !hasFoldableLine) {
    // Strings interpretable as another type have to be quoted;
    // e.g. the string 'true' vs. the boolean true.
    if (plain && !forceQuotes && !testAmbiguousType(string)) {
      return STYLE_PLAIN;
    }
    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;
  }
  // Edge case: block indentation indicator can only have one digit.
  if (indentPerLevel > 9 && needIndentIndicator(string)) {
    return STYLE_DOUBLE;
  }
  // At this point we know block styles are valid.
  // Prefer literal style unless we want to fold.
  if (!forceQuotes) {
    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;
  }
  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;
}

// Note: line breaking/folding is implemented for only the folded style.
// NB. We drop the last trailing newline (if any) of a returned block scalar
//  since the dumper adds its own newline. This always works:
//    • No ending newline => unaffected; already using strip "-" chomping.
//    • Ending newline    => removed then restored.
//  Importantly, this keeps the "+" chomp indicator from gaining an extra line.
function writeScalar(state, string, level, iskey, inblock) {
  state.dump = (function () {
    if (string.length === 0) {
      return state.quotingType === QUOTING_TYPE_DOUBLE ? '""' : "''";
    }
    if (!state.noCompatMode) {
      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {
        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('"' + string + '"') : ("'" + string + "'");
      }
    }

    var indent = state.indent * Math.max(1, level); // no 0-indent scalars
    // As indentation gets deeper, let the width decrease monotonically
    // to the lower bound min(state.lineWidth, 40).
    // Note that this implies
    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.
    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.
    // This behaves better than a constant minimum width which disallows narrower options,
    // or an indent threshold which causes the width to suddenly increase.
    var lineWidth = state.lineWidth === -1
      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);

    // Without knowing if keys are implicit/explicit, assume implicit for safety.
    var singleLineOnly = iskey
      // No block styles in flow mode.
      || (state.flowLevel > -1 && level >= state.flowLevel);
    function testAmbiguity(string) {
      return testImplicitResolving(state, string);
    }

    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,
      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {

      case STYLE_PLAIN:
        return string;
      case STYLE_SINGLE:
        return "'" + string.replace(/'/g, "''") + "'";
      case STYLE_LITERAL:
        return '|' + blockHeader(string, state.indent)
          + dropEndingNewline(indentString(string, indent));
      case STYLE_FOLDED:
        return '>' + blockHeader(string, state.indent)
          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));
      case STYLE_DOUBLE:
        return '"' + escapeString(string, lineWidth) + '"';
      default:
        throw new YAMLException('impossible error: invalid scalar style');
    }
  }());
}

// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.
function blockHeader(string, indentPerLevel) {
  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';

  // note the special case: the string '\n' counts as a "trailing" empty line.
  var clip =          string[string.length - 1] === '\n';
  var keep = clip && (string[string.length - 2] === '\n' || string === '\n');
  var chomp = keep ? '+' : (clip ? '' : '-');

  return indentIndicator + chomp + '\n';
}

// (See the note for writeScalar.)
function dropEndingNewline(string) {
  return string[string.length - 1] === '\n' ? string.slice(0, -1) : string;
}

// Note: a long line without a suitable break point will exceed the width limit.
// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.
function foldString(string, width) {
  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—
  // unless they're before or after a more-indented line, or at the very
  // beginning or end, in which case $k$ maps to $k$.
  // Therefore, parse each chunk as newline(s) followed by a content line.
  var lineRe = /(\n+)([^\n]*)/g;

  // first line (possibly an empty line)
  var result = (function () {
    var nextLF = string.indexOf('\n');
    nextLF = nextLF !== -1 ? nextLF : string.length;
    lineRe.lastIndex = nextLF;
    return foldLine(string.slice(0, nextLF), width);
  }());
  // If we haven't reached the first content line yet, don't add an extra \n.
  var prevMoreIndented = string[0] === '\n' || string[0] === ' ';
  var moreIndented;

  // rest of the lines
  var match;
  while ((match = lineRe.exec(string))) {
    var prefix = match[1], line = match[2];
    moreIndented = (line[0] === ' ');
    result += prefix
      + (!prevMoreIndented && !moreIndented && line !== ''
        ? '\n' : '')
      + foldLine(line, width);
    prevMoreIndented = moreIndented;
  }

  return result;
}

// Greedy line breaking.
// Picks the longest line under the limit each time,
// otherwise settles for the shortest line over the limit.
// NB. More-indented lines *cannot* be folded, as that would add an extra \n.
function foldLine(line, width) {
  if (line === '' || line[0] === ' ') return line;

  // Since a more-indented line adds a \n, breaks can't be followed by a space.
  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.
  var match;
  // start is an inclusive index. end, curr, and next are exclusive.
  var start = 0, end, curr = 0, next = 0;
  var result = '';

  // Invariants: 0 <= start <= length-1.
  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.
  // Inside the loop:
  //   A match implies length >= 2, so curr and next are <= length-2.
  while ((match = breakRe.exec(line))) {
    next = match.index;
    // maintain invariant: curr - start <= width
    if (next - start > width) {
      end = (curr > start) ? curr : next; // derive end <= length-2
      result += '\n' + line.slice(start, end);
      // skip the space that was output as \n
      start = end + 1;                    // derive start <= length-1
    }
    curr = next;
  }

  // By the invariants, start <= length-1, so there is something left over.
  // It is either the whole string or a part starting from non-whitespace.
  result += '\n';
  // Insert a break if the remainder is too long and there is a break available.
  if (line.length - start > width && curr > start) {
    result += line.slice(start, curr) + '\n' + line.slice(curr + 1);
  } else {
    result += line.slice(start);
  }

  return result.slice(1); // drop extra \n joiner
}

// Escapes a double-quoted string.
function escapeString(string) {
  var result = '';
  var char = 0;
  var escapeSeq;

  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {
    char = codePointAt(string, i);
    escapeSeq = ESCAPE_SEQUENCES[char];

    if (!escapeSeq && isPrintable(char)) {
      result += string[i];
      if (char >= 0x10000) result += string[i + 1];
    } else {
      result += escapeSeq || encodeHex(char);
    }
  }

  return result;
}

function writeFlowSequence(state, level, object) {
  var _result = '',
      _tag    = state.tag,
      index,
      length,
      value;

  for (index = 0, length = object.length; index < length; index += 1) {
    value = object[index];

    if (state.replacer) {
      value = state.replacer.call(object, String(index), value);
    }

    // Write only valid elements, put null instead of invalid elements.
    if (writeNode(state, level, value, false, false) ||
        (typeof value === 'undefined' &&
         writeNode(state, level, null, false, false))) {

      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');
      _result += state.dump;
    }
  }

  state.tag = _tag;
  state.dump = '[' + _result + ']';
}

function writeBlockSequence(state, level, object, compact) {
  var _result = '',
      _tag    = state.tag,
      index,
      length,
      value;

  for (index = 0, length = object.length; index < length; index += 1) {
    value = object[index];

    if (state.replacer) {
      value = state.replacer.call(object, String(index), value);
    }

    // Write only valid elements, put null instead of invalid elements.
    if (writeNode(state, level + 1, value, true, true, false, true) ||
        (typeof value === 'undefined' &&
         writeNode(state, level + 1, null, true, true, false, true))) {

      if (!compact || _result !== '') {
        _result += generateNextLine(state, level);
      }

      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
        _result += '-';
      } else {
        _result += '- ';
      }

      _result += state.dump;
    }
  }

  state.tag = _tag;
  state.dump = _result || '[]'; // Empty sequence if no valid values.
}

function writeFlowMapping(state, level, object) {
  var _result       = '',
      _tag          = state.tag,
      objectKeyList = Object.keys(object),
      index,
      length,
      objectKey,
      objectValue,
      pairBuffer;

  for (index = 0, length = objectKeyList.length; index < length; index += 1) {

    pairBuffer = '';
    if (_result !== '') pairBuffer += ', ';

    if (state.condenseFlow) pairBuffer += '"';

    objectKey = objectKeyList[index];
    objectValue = object[objectKey];

    if (state.replacer) {
      objectValue = state.replacer.call(object, objectKey, objectValue);
    }

    if (!writeNode(state, level, objectKey, false, false)) {
      continue; // Skip this pair because of invalid key;
    }

    if (state.dump.length > 1024) pairBuffer += '? ';

    pairBuffer += state.dump + (state.condenseFlow ? '"' : '') + ':' + (state.condenseFlow ? '' : ' ');

    if (!writeNode(state, level, objectValue, false, false)) {
      continue; // Skip this pair because of invalid value.
    }

    pairBuffer += state.dump;

    // Both key and value are valid.
    _result += pairBuffer;
  }

  state.tag = _tag;
  state.dump = '{' + _result + '}';
}

function writeBlockMapping(state, level, object, compact) {
  var _result       = '',
      _tag          = state.tag,
      objectKeyList = Object.keys(object),
      index,
      length,
      objectKey,
      objectValue,
      explicitPair,
      pairBuffer;

  // Allow sorting keys so that the output file is deterministic
  if (state.sortKeys === true) {
    // Default sorting
    objectKeyList.sort();
  } else if (typeof state.sortKeys === 'function') {
    // Custom sort function
    objectKeyList.sort(state.sortKeys);
  } else if (state.sortKeys) {
    // Something is wrong
    throw new YAMLException('sortKeys must be a boolean or a function');
  }

  for (index = 0, length = objectKeyList.length; index < length; index += 1) {
    pairBuffer = '';

    if (!compact || _result !== '') {
      pairBuffer += generateNextLine(state, level);
    }

    objectKey = objectKeyList[index];
    objectValue = object[objectKey];

    if (state.replacer) {
      objectValue = state.replacer.call(object, objectKey, objectValue);
    }

    if (!writeNode(state, level + 1, objectKey, true, true, true)) {
      continue; // Skip this pair because of invalid key.
    }

    explicitPair = (state.tag !== null && state.tag !== '?') ||
                   (state.dump && state.dump.length > 1024);

    if (explicitPair) {
      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
        pairBuffer += '?';
      } else {
        pairBuffer += '? ';
      }
    }

    pairBuffer += state.dump;

    if (explicitPair) {
      pairBuffer += generateNextLine(state, level);
    }

    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {
      continue; // Skip this pair because of invalid value.
    }

    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
      pairBuffer += ':';
    } else {
      pairBuffer += ': ';
    }

    pairBuffer += state.dump;

    // Both key and value are valid.
    _result += pairBuffer;
  }

  state.tag = _tag;
  state.dump = _result || '{}'; // Empty mapping if no valid pairs.
}

function detectType(state, object, explicit) {
  var _result, typeList, index, length, type, style;

  typeList = explicit ? state.explicitTypes : state.implicitTypes;

  for (index = 0, length = typeList.length; index < length; index += 1) {
    type = typeList[index];

    if ((type.instanceOf  || type.predicate) &&
        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&
        (!type.predicate  || type.predicate(object))) {

      if (explicit) {
        if (type.multi && type.representName) {
          state.tag = type.representName(object);
        } else {
          state.tag = type.tag;
        }
      } else {
        state.tag = '?';
      }

      if (type.represent) {
        style = state.styleMap[type.tag] || type.defaultStyle;

        if (_toString.call(type.represent) === '[object Function]') {
          _result = type.represent(object, style);
        } else if (_hasOwnProperty.call(type.represent, style)) {
          _result = type.represent[style](object, style);
        } else {
          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not "' + style + '" style');
        }

        state.dump = _result;
      }

      return true;
    }
  }

  return false;
}

// Serializes `object` and writes it to global `result`.
// Returns true on success, or false on invalid object.
//
function writeNode(state, level, object, block, compact, iskey, isblockseq) {
  state.tag = null;
  state.dump = object;

  if (!detectType(state, object, false)) {
    detectType(state, object, true);
  }

  var type = _toString.call(state.dump);
  var inblock = block;
  var tagStr;

  if (block) {
    block = (state.flowLevel < 0 || state.flowLevel > level);
  }

  var objectOrArray = type === '[object Object]' || type === '[object Array]',
      duplicateIndex,
      duplicate;

  if (objectOrArray) {
    duplicateIndex = state.duplicates.indexOf(object);
    duplicate = duplicateIndex !== -1;
  }

  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {
    compact = false;
  }

  if (duplicate && state.usedDuplicates[duplicateIndex]) {
    state.dump = '*ref_' + duplicateIndex;
  } else {
    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {
      state.usedDuplicates[duplicateIndex] = true;
    }
    if (type === '[object Object]') {
      if (block && (Object.keys(state.dump).length !== 0)) {
        writeBlockMapping(state, level, state.dump, compact);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + state.dump;
        }
      } else {
        writeFlowMapping(state, level, state.dump);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
        }
      }
    } else if (type === '[object Array]') {
      if (block && (state.dump.length !== 0)) {
        if (state.noArrayIndent && !isblockseq && level > 0) {
          writeBlockSequence(state, level - 1, state.dump, compact);
        } else {
          writeBlockSequence(state, level, state.dump, compact);
        }
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + state.dump;
        }
      } else {
        writeFlowSequence(state, level, state.dump);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
        }
      }
    } else if (type === '[object String]') {
      if (state.tag !== '?') {
        writeScalar(state, state.dump, level, iskey, inblock);
      }
    } else if (type === '[object Undefined]') {
      return false;
    } else {
      if (state.skipInvalid) return false;
      throw new YAMLException('unacceptable kind of an object to dump ' + type);
    }

    if (state.tag !== null && state.tag !== '?') {
      // Need to encode all characters except those allowed by the spec:
      //
      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */
      // [36] ns-hex-digit    ::=  ns-dec-digit
      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */
      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */
      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”
      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”
      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”
      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”
      //
      // Also need to encode '!' because it has special meaning (end of tag prefix).
      //
      tagStr = encodeURI(
        state.tag[0] === '!' ? state.tag.slice(1) : state.tag
      ).replace(/!/g, '%21');

      if (state.tag[0] === '!') {
        tagStr = '!' + tagStr;
      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {
        tagStr = '!!' + tagStr.slice(18);
      } else {
        tagStr = '!<' + tagStr + '>';
      }

      state.dump = tagStr + ' ' + state.dump;
    }
  }

  return true;
}

function getDuplicateReferences(object, state) {
  var objects = [],
      duplicatesIndexes = [],
      index,
      length;

  inspectNode(object, objects, duplicatesIndexes);

  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {
    state.duplicates.push(objects[duplicatesIndexes[index]]);
  }
  state.usedDuplicates = new Array(length);
}

function inspectNode(object, objects, duplicatesIndexes) {
  var objectKeyList,
      index,
      length;

  if (object !== null && typeof object === 'object') {
    index = objects.indexOf(object);
    if (index !== -1) {
      if (duplicatesIndexes.indexOf(index) === -1) {
        duplicatesIndexes.push(index);
      }
    } else {
      objects.push(object);

      if (Array.isArray(object)) {
        for (index = 0, length = object.length; index < length; index += 1) {
          inspectNode(object[index], objects, duplicatesIndexes);
        }
      } else {
        objectKeyList = Object.keys(object);

        for (index = 0, length = objectKeyList.length; index < length; index += 1) {
          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);
        }
      }
    }
  }
}

function dump(input, options) {
  options = options || {};

  var state = new State(options);

  if (!state.noRefs) getDuplicateReferences(input, state);

  var value = input;

  if (state.replacer) {
    value = state.replacer.call({ '': value }, '', value);
  }

  if (writeNode(state, 0, value, true, true)) return state.dump + '\n';

  return '';
}

module.exports.dump = dump;

},{"./common":134,"./exception":136,"./schema/default":140}],136:[function(require,module,exports){
// YAML error class. http://stackoverflow.com/questions/8458984
//
'use strict';


function formatError(exception, compact) {
  var where = '', message = exception.reason || '(unknown reason)';

  if (!exception.mark) return message;

  if (exception.mark.name) {
    where += 'in "' + exception.mark.name + '" ';
  }

  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';

  if (!compact && exception.mark.snippet) {
    where += '\n\n' + exception.mark.snippet;
  }

  return message + ' ' + where;
}


function YAMLException(reason, mark) {
  // Super constructor
  Error.call(this);

  this.name = 'YAMLException';
  this.reason = reason;
  this.mark = mark;
  this.message = formatError(this, false);

  // Include stack trace in error object
  if (Error.captureStackTrace) {
    // Chrome and NodeJS
    Error.captureStackTrace(this, this.constructor);
  } else {
    // FF, IE 10+ and Safari 6+. Fallback for others
    this.stack = (new Error()).stack || '';
  }
}


// Inherit from Error
YAMLException.prototype = Object.create(Error.prototype);
YAMLException.prototype.constructor = YAMLException;


YAMLException.prototype.toString = function toString(compact) {
  return this.name + ': ' + formatError(this, compact);
};


module.exports = YAMLException;

},{}],137:[function(require,module,exports){
'use strict';

/*eslint-disable max-len,no-use-before-define*/

var common              = require('./common');
var YAMLException       = require('./exception');
var makeSnippet         = require('./snippet');
var DEFAULT_SCHEMA      = require('./schema/default');


var _hasOwnProperty = Object.prototype.hasOwnProperty;


var CONTEXT_FLOW_IN   = 1;
var CONTEXT_FLOW_OUT  = 2;
var CONTEXT_BLOCK_IN  = 3;
var CONTEXT_BLOCK_OUT = 4;


var CHOMPING_CLIP  = 1;
var CHOMPING_STRIP = 2;
var CHOMPING_KEEP  = 3;


var PATTERN_NON_PRINTABLE         = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
var PATTERN_NON_ASCII_LINE_BREAKS = /[\x85\u2028\u2029]/;
var PATTERN_FLOW_INDICATORS       = /[,\[\]\{\}]/;
var PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\-]+!)$/i;
var PATTERN_TAG_URI               = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;


function _class(obj) { return Object.prototype.toString.call(obj); }

function is_EOL(c) {
  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);
}

function is_WHITE_SPACE(c) {
  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);
}

function is_WS_OR_EOL(c) {
  return (c === 0x09/* Tab */) ||
         (c === 0x20/* Space */) ||
         (c === 0x0A/* LF */) ||
         (c === 0x0D/* CR */);
}

function is_FLOW_INDICATOR(c) {
  return c === 0x2C/* , */ ||
         c === 0x5B/* [ */ ||
         c === 0x5D/* ] */ ||
         c === 0x7B/* { */ ||
         c === 0x7D/* } */;
}

function fromHexCode(c) {
  var lc;

  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
    return c - 0x30;
  }

  /*eslint-disable no-bitwise*/
  lc = c | 0x20;

  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {
    return lc - 0x61 + 10;
  }

  return -1;
}

function escapedHexLen(c) {
  if (c === 0x78/* x */) { return 2; }
  if (c === 0x75/* u */) { return 4; }
  if (c === 0x55/* U */) { return 8; }
  return 0;
}

function fromDecimalCode(c) {
  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
    return c - 0x30;
  }

  return -1;
}

function simpleEscapeSequence(c) {
  /* eslint-disable indent */
  return (c === 0x30/* 0 */) ? '\x00' :
        (c === 0x61/* a */) ? '\x07' :
        (c === 0x62/* b */) ? '\x08' :
        (c === 0x74/* t */) ? '\x09' :
        (c === 0x09/* Tab */) ? '\x09' :
        (c === 0x6E/* n */) ? '\x0A' :
        (c === 0x76/* v */) ? '\x0B' :
        (c === 0x66/* f */) ? '\x0C' :
        (c === 0x72/* r */) ? '\x0D' :
        (c === 0x65/* e */) ? '\x1B' :
        (c === 0x20/* Space */) ? ' ' :
        (c === 0x22/* " */) ? '\x22' :
        (c === 0x2F/* / */) ? '/' :
        (c === 0x5C/* \ */) ? '\x5C' :
        (c === 0x4E/* N */) ? '\x85' :
        (c === 0x5F/* _ */) ? '\xA0' :
        (c === 0x4C/* L */) ? '\u2028' :
        (c === 0x50/* P */) ? '\u2029' : '';
}

function charFromCodepoint(c) {
  if (c <= 0xFFFF) {
    return String.fromCharCode(c);
  }
  // Encode UTF-16 surrogate pair
  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF
  return String.fromCharCode(
    ((c - 0x010000) >> 10) + 0xD800,
    ((c - 0x010000) & 0x03FF) + 0xDC00
  );
}

var simpleEscapeCheck = new Array(256); // integer, for fast access
var simpleEscapeMap = new Array(256);
for (var i = 0; i < 256; i++) {
  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;
  simpleEscapeMap[i] = simpleEscapeSequence(i);
}


function State(input, options) {
  this.input = input;

  this.filename  = options['filename']  || null;
  this.schema    = options['schema']    || DEFAULT_SCHEMA;
  this.onWarning = options['onWarning'] || null;
  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents
  // if such documents have no explicit %YAML directive
  this.legacy    = options['legacy']    || false;

  this.json      = options['json']      || false;
  this.listener  = options['listener']  || null;

  this.implicitTypes = this.schema.compiledImplicit;
  this.typeMap       = this.schema.compiledTypeMap;

  this.length     = input.length;
  this.position   = 0;
  this.line       = 0;
  this.lineStart  = 0;
  this.lineIndent = 0;

  // position of first leading tab in the current line,
  // used to make sure there are no tabs in the indentation
  this.firstTabInLine = -1;

  this.documents = [];

  /*
  this.version;
  this.checkLineBreaks;
  this.tagMap;
  this.anchorMap;
  this.tag;
  this.anchor;
  this.kind;
  this.result;*/

}


function generateError(state, message) {
  var mark = {
    name:     state.filename,
    buffer:   state.input.slice(0, -1), // omit trailing \0
    position: state.position,
    line:     state.line,
    column:   state.position - state.lineStart
  };

  mark.snippet = makeSnippet(mark);

  return new YAMLException(message, mark);
}

function throwError(state, message) {
  throw generateError(state, message);
}

function throwWarning(state, message) {
  if (state.onWarning) {
    state.onWarning.call(null, generateError(state, message));
  }
}


var directiveHandlers = {

  YAML: function handleYamlDirective(state, name, args) {

    var match, major, minor;

    if (state.version !== null) {
      throwError(state, 'duplication of %YAML directive');
    }

    if (args.length !== 1) {
      throwError(state, 'YAML directive accepts exactly one argument');
    }

    match = /^([0-9]+)\.([0-9]+)$/.exec(args[0]);

    if (match === null) {
      throwError(state, 'ill-formed argument of the YAML directive');
    }

    major = parseInt(match[1], 10);
    minor = parseInt(match[2], 10);

    if (major !== 1) {
      throwError(state, 'unacceptable YAML version of the document');
    }

    state.version = args[0];
    state.checkLineBreaks = (minor < 2);

    if (minor !== 1 && minor !== 2) {
      throwWarning(state, 'unsupported YAML version of the document');
    }
  },

  TAG: function handleTagDirective(state, name, args) {

    var handle, prefix;

    if (args.length !== 2) {
      throwError(state, 'TAG directive accepts exactly two arguments');
    }

    handle = args[0];
    prefix = args[1];

    if (!PATTERN_TAG_HANDLE.test(handle)) {
      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');
    }

    if (_hasOwnProperty.call(state.tagMap, handle)) {
      throwError(state, 'there is a previously declared suffix for "' + handle + '" tag handle');
    }

    if (!PATTERN_TAG_URI.test(prefix)) {
      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');
    }

    try {
      prefix = decodeURIComponent(prefix);
    } catch (err) {
      throwError(state, 'tag prefix is malformed: ' + prefix);
    }

    state.tagMap[handle] = prefix;
  }
};


function captureSegment(state, start, end, checkJson) {
  var _position, _length, _character, _result;

  if (start < end) {
    _result = state.input.slice(start, end);

    if (checkJson) {
      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {
        _character = _result.charCodeAt(_position);
        if (!(_character === 0x09 ||
              (0x20 <= _character && _character <= 0x10FFFF))) {
          throwError(state, 'expected valid JSON character');
        }
      }
    } else if (PATTERN_NON_PRINTABLE.test(_result)) {
      throwError(state, 'the stream contains non-printable characters');
    }

    state.result += _result;
  }
}

function mergeMappings(state, destination, source, overridableKeys) {
  var sourceKeys, key, index, quantity;

  if (!common.isObject(source)) {
    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');
  }

  sourceKeys = Object.keys(source);

  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {
    key = sourceKeys[index];

    if (!_hasOwnProperty.call(destination, key)) {
      destination[key] = source[key];
      overridableKeys[key] = true;
    }
  }
}

function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,
  startLine, startLineStart, startPos) {

  var index, quantity;

  // The output is a plain object here, so keys can only be strings.
  // We need to convert keyNode to a string, but doing so can hang the process
  // (deeply nested arrays that explode exponentially using aliases).
  if (Array.isArray(keyNode)) {
    keyNode = Array.prototype.slice.call(keyNode);

    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {
      if (Array.isArray(keyNode[index])) {
        throwError(state, 'nested arrays are not supported inside keys');
      }

      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {
        keyNode[index] = '[object Object]';
      }
    }
  }

  // Avoid code execution in load() via toString property
  // (still use its own toString for arrays, timestamps,
  // and whatever user schema extensions happen to have @@toStringTag)
  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {
    keyNode = '[object Object]';
  }


  keyNode = String(keyNode);

  if (_result === null) {
    _result = {};
  }

  if (keyTag === 'tag:yaml.org,2002:merge') {
    if (Array.isArray(valueNode)) {
      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {
        mergeMappings(state, _result, valueNode[index], overridableKeys);
      }
    } else {
      mergeMappings(state, _result, valueNode, overridableKeys);
    }
  } else {
    if (!state.json &&
        !_hasOwnProperty.call(overridableKeys, keyNode) &&
        _hasOwnProperty.call(_result, keyNode)) {
      state.line = startLine || state.line;
      state.lineStart = startLineStart || state.lineStart;
      state.position = startPos || state.position;
      throwError(state, 'duplicated mapping key');
    }

    // used for this specific key only because Object.defineProperty is slow
    if (keyNode === '__proto__') {
      Object.defineProperty(_result, keyNode, {
        configurable: true,
        enumerable: true,
        writable: true,
        value: valueNode
      });
    } else {
      _result[keyNode] = valueNode;
    }
    delete overridableKeys[keyNode];
  }

  return _result;
}

function readLineBreak(state) {
  var ch;

  ch = state.input.charCodeAt(state.position);

  if (ch === 0x0A/* LF */) {
    state.position++;
  } else if (ch === 0x0D/* CR */) {
    state.position++;
    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {
      state.position++;
    }
  } else {
    throwError(state, 'a line break is expected');
  }

  state.line += 1;
  state.lineStart = state.position;
  state.firstTabInLine = -1;
}

function skipSeparationSpace(state, allowComments, checkIndent) {
  var lineBreaks = 0,
      ch = state.input.charCodeAt(state.position);

  while (ch !== 0) {
    while (is_WHITE_SPACE(ch)) {
      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {
        state.firstTabInLine = state.position;
      }
      ch = state.input.charCodeAt(++state.position);
    }

    if (allowComments && ch === 0x23/* # */) {
      do {
        ch = state.input.charCodeAt(++state.position);
      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);
    }

    if (is_EOL(ch)) {
      readLineBreak(state);

      ch = state.input.charCodeAt(state.position);
      lineBreaks++;
      state.lineIndent = 0;

      while (ch === 0x20/* Space */) {
        state.lineIndent++;
        ch = state.input.charCodeAt(++state.position);
      }
    } else {
      break;
    }
  }

  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {
    throwWarning(state, 'deficient indentation');
  }

  return lineBreaks;
}

function testDocumentSeparator(state) {
  var _position = state.position,
      ch;

  ch = state.input.charCodeAt(_position);

  // Condition state.position === state.lineStart is tested
  // in parent on each call, for efficiency. No needs to test here again.
  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&
      ch === state.input.charCodeAt(_position + 1) &&
      ch === state.input.charCodeAt(_position + 2)) {

    _position += 3;

    ch = state.input.charCodeAt(_position);

    if (ch === 0 || is_WS_OR_EOL(ch)) {
      return true;
    }
  }

  return false;
}

function writeFoldedLines(state, count) {
  if (count === 1) {
    state.result += ' ';
  } else if (count > 1) {
    state.result += common.repeat('\n', count - 1);
  }
}


function readPlainScalar(state, nodeIndent, withinFlowCollection) {
  var preceding,
      following,
      captureStart,
      captureEnd,
      hasPendingContent,
      _line,
      _lineStart,
      _lineIndent,
      _kind = state.kind,
      _result = state.result,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (is_WS_OR_EOL(ch)      ||
      is_FLOW_INDICATOR(ch) ||
      ch === 0x23/* # */    ||
      ch === 0x26/* & */    ||
      ch === 0x2A/* * */    ||
      ch === 0x21/* ! */    ||
      ch === 0x7C/* | */    ||
      ch === 0x3E/* > */    ||
      ch === 0x27/* ' */    ||
      ch === 0x22/* " */    ||
      ch === 0x25/* % */    ||
      ch === 0x40/* @ */    ||
      ch === 0x60/* ` */) {
    return false;
  }

  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {
    following = state.input.charCodeAt(state.position + 1);

    if (is_WS_OR_EOL(following) ||
        withinFlowCollection && is_FLOW_INDICATOR(following)) {
      return false;
    }
  }

  state.kind = 'scalar';
  state.result = '';
  captureStart = captureEnd = state.position;
  hasPendingContent = false;

  while (ch !== 0) {
    if (ch === 0x3A/* : */) {
      following = state.input.charCodeAt(state.position + 1);

      if (is_WS_OR_EOL(following) ||
          withinFlowCollection && is_FLOW_INDICATOR(following)) {
        break;
      }

    } else if (ch === 0x23/* # */) {
      preceding = state.input.charCodeAt(state.position - 1);

      if (is_WS_OR_EOL(preceding)) {
        break;
      }

    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||
               withinFlowCollection && is_FLOW_INDICATOR(ch)) {
      break;

    } else if (is_EOL(ch)) {
      _line = state.line;
      _lineStart = state.lineStart;
      _lineIndent = state.lineIndent;
      skipSeparationSpace(state, false, -1);

      if (state.lineIndent >= nodeIndent) {
        hasPendingContent = true;
        ch = state.input.charCodeAt(state.position);
        continue;
      } else {
        state.position = captureEnd;
        state.line = _line;
        state.lineStart = _lineStart;
        state.lineIndent = _lineIndent;
        break;
      }
    }

    if (hasPendingContent) {
      captureSegment(state, captureStart, captureEnd, false);
      writeFoldedLines(state, state.line - _line);
      captureStart = captureEnd = state.position;
      hasPendingContent = false;
    }

    if (!is_WHITE_SPACE(ch)) {
      captureEnd = state.position + 1;
    }

    ch = state.input.charCodeAt(++state.position);
  }

  captureSegment(state, captureStart, captureEnd, false);

  if (state.result) {
    return true;
  }

  state.kind = _kind;
  state.result = _result;
  return false;
}

function readSingleQuotedScalar(state, nodeIndent) {
  var ch,
      captureStart, captureEnd;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x27/* ' */) {
    return false;
  }

  state.kind = 'scalar';
  state.result = '';
  state.position++;
  captureStart = captureEnd = state.position;

  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
    if (ch === 0x27/* ' */) {
      captureSegment(state, captureStart, state.position, true);
      ch = state.input.charCodeAt(++state.position);

      if (ch === 0x27/* ' */) {
        captureStart = state.position;
        state.position++;
        captureEnd = state.position;
      } else {
        return true;
      }

    } else if (is_EOL(ch)) {
      captureSegment(state, captureStart, captureEnd, true);
      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
      captureStart = captureEnd = state.position;

    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
      throwError(state, 'unexpected end of the document within a single quoted scalar');

    } else {
      state.position++;
      captureEnd = state.position;
    }
  }

  throwError(state, 'unexpected end of the stream within a single quoted scalar');
}

function readDoubleQuotedScalar(state, nodeIndent) {
  var captureStart,
      captureEnd,
      hexLength,
      hexResult,
      tmp,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x22/* " */) {
    return false;
  }

  state.kind = 'scalar';
  state.result = '';
  state.position++;
  captureStart = captureEnd = state.position;

  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
    if (ch === 0x22/* " */) {
      captureSegment(state, captureStart, state.position, true);
      state.position++;
      return true;

    } else if (ch === 0x5C/* \ */) {
      captureSegment(state, captureStart, state.position, true);
      ch = state.input.charCodeAt(++state.position);

      if (is_EOL(ch)) {
        skipSeparationSpace(state, false, nodeIndent);

        // TODO: rework to inline fn with no type cast?
      } else if (ch < 256 && simpleEscapeCheck[ch]) {
        state.result += simpleEscapeMap[ch];
        state.position++;

      } else if ((tmp = escapedHexLen(ch)) > 0) {
        hexLength = tmp;
        hexResult = 0;

        for (; hexLength > 0; hexLength--) {
          ch = state.input.charCodeAt(++state.position);

          if ((tmp = fromHexCode(ch)) >= 0) {
            hexResult = (hexResult << 4) + tmp;

          } else {
            throwError(state, 'expected hexadecimal character');
          }
        }

        state.result += charFromCodepoint(hexResult);

        state.position++;

      } else {
        throwError(state, 'unknown escape sequence');
      }

      captureStart = captureEnd = state.position;

    } else if (is_EOL(ch)) {
      captureSegment(state, captureStart, captureEnd, true);
      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
      captureStart = captureEnd = state.position;

    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
      throwError(state, 'unexpected end of the document within a double quoted scalar');

    } else {
      state.position++;
      captureEnd = state.position;
    }
  }

  throwError(state, 'unexpected end of the stream within a double quoted scalar');
}

function readFlowCollection(state, nodeIndent) {
  var readNext = true,
      _line,
      _lineStart,
      _pos,
      _tag     = state.tag,
      _result,
      _anchor  = state.anchor,
      following,
      terminator,
      isPair,
      isExplicitPair,
      isMapping,
      overridableKeys = Object.create(null),
      keyNode,
      keyTag,
      valueNode,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch === 0x5B/* [ */) {
    terminator = 0x5D;/* ] */
    isMapping = false;
    _result = [];
  } else if (ch === 0x7B/* { */) {
    terminator = 0x7D;/* } */
    isMapping = true;
    _result = {};
  } else {
    return false;
  }

  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }

  ch = state.input.charCodeAt(++state.position);

  while (ch !== 0) {
    skipSeparationSpace(state, true, nodeIndent);

    ch = state.input.charCodeAt(state.position);

    if (ch === terminator) {
      state.position++;
      state.tag = _tag;
      state.anchor = _anchor;
      state.kind = isMapping ? 'mapping' : 'sequence';
      state.result = _result;
      return true;
    } else if (!readNext) {
      throwError(state, 'missed comma between flow collection entries');
    } else if (ch === 0x2C/* , */) {
      // "flow collection entries can never be completely empty", as per YAML 1.2, section 7.4
      throwError(state, "expected the node content, but found ','");
    }

    keyTag = keyNode = valueNode = null;
    isPair = isExplicitPair = false;

    if (ch === 0x3F/* ? */) {
      following = state.input.charCodeAt(state.position + 1);

      if (is_WS_OR_EOL(following)) {
        isPair = isExplicitPair = true;
        state.position++;
        skipSeparationSpace(state, true, nodeIndent);
      }
    }

    _line = state.line; // Save the current line.
    _lineStart = state.lineStart;
    _pos = state.position;
    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
    keyTag = state.tag;
    keyNode = state.result;
    skipSeparationSpace(state, true, nodeIndent);

    ch = state.input.charCodeAt(state.position);

    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {
      isPair = true;
      ch = state.input.charCodeAt(++state.position);
      skipSeparationSpace(state, true, nodeIndent);
      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
      valueNode = state.result;
    }

    if (isMapping) {
      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);
    } else if (isPair) {
      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));
    } else {
      _result.push(keyNode);
    }

    skipSeparationSpace(state, true, nodeIndent);

    ch = state.input.charCodeAt(state.position);

    if (ch === 0x2C/* , */) {
      readNext = true;
      ch = state.input.charCodeAt(++state.position);
    } else {
      readNext = false;
    }
  }

  throwError(state, 'unexpected end of the stream within a flow collection');
}

function readBlockScalar(state, nodeIndent) {
  var captureStart,
      folding,
      chomping       = CHOMPING_CLIP,
      didReadContent = false,
      detectedIndent = false,
      textIndent     = nodeIndent,
      emptyLines     = 0,
      atMoreIndented = false,
      tmp,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch === 0x7C/* | */) {
    folding = false;
  } else if (ch === 0x3E/* > */) {
    folding = true;
  } else {
    return false;
  }

  state.kind = 'scalar';
  state.result = '';

  while (ch !== 0) {
    ch = state.input.charCodeAt(++state.position);

    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {
      if (CHOMPING_CLIP === chomping) {
        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;
      } else {
        throwError(state, 'repeat of a chomping mode identifier');
      }

    } else if ((tmp = fromDecimalCode(ch)) >= 0) {
      if (tmp === 0) {
        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');
      } else if (!detectedIndent) {
        textIndent = nodeIndent + tmp - 1;
        detectedIndent = true;
      } else {
        throwError(state, 'repeat of an indentation width identifier');
      }

    } else {
      break;
    }
  }

  if (is_WHITE_SPACE(ch)) {
    do { ch = state.input.charCodeAt(++state.position); }
    while (is_WHITE_SPACE(ch));

    if (ch === 0x23/* # */) {
      do { ch = state.input.charCodeAt(++state.position); }
      while (!is_EOL(ch) && (ch !== 0));
    }
  }

  while (ch !== 0) {
    readLineBreak(state);
    state.lineIndent = 0;

    ch = state.input.charCodeAt(state.position);

    while ((!detectedIndent || state.lineIndent < textIndent) &&
           (ch === 0x20/* Space */)) {
      state.lineIndent++;
      ch = state.input.charCodeAt(++state.position);
    }

    if (!detectedIndent && state.lineIndent > textIndent) {
      textIndent = state.lineIndent;
    }

    if (is_EOL(ch)) {
      emptyLines++;
      continue;
    }

    // End of the scalar.
    if (state.lineIndent < textIndent) {

      // Perform the chomping.
      if (chomping === CHOMPING_KEEP) {
        state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
      } else if (chomping === CHOMPING_CLIP) {
        if (didReadContent) { // i.e. only if the scalar is not empty.
          state.result += '\n';
        }
      }

      // Break this `while` cycle and go to the funciton's epilogue.
      break;
    }

    // Folded style: use fancy rules to handle line breaks.
    if (folding) {

      // Lines starting with white space characters (more-indented lines) are not folded.
      if (is_WHITE_SPACE(ch)) {
        atMoreIndented = true;
        // except for the first content line (cf. Example 8.1)
        state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);

      // End of more-indented block.
      } else if (atMoreIndented) {
        atMoreIndented = false;
        state.result += common.repeat('\n', emptyLines + 1);

      // Just one line break - perceive as the same line.
      } else if (emptyLines === 0) {
        if (didReadContent) { // i.e. only if we have already read some scalar content.
          state.result += ' ';
        }

      // Several line breaks - perceive as different lines.
      } else {
        state.result += common.repeat('\n', emptyLines);
      }

    // Literal style: just add exact number of line breaks between content lines.
    } else {
      // Keep all line breaks except the header line break.
      state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
    }

    didReadContent = true;
    detectedIndent = true;
    emptyLines = 0;
    captureStart = state.position;

    while (!is_EOL(ch) && (ch !== 0)) {
      ch = state.input.charCodeAt(++state.position);
    }

    captureSegment(state, captureStart, state.position, false);
  }

  return true;
}

function readBlockSequence(state, nodeIndent) {
  var _line,
      _tag      = state.tag,
      _anchor   = state.anchor,
      _result   = [],
      following,
      detected  = false,
      ch;

  // there is a leading tab before this token, so it can't be a block sequence/mapping;
  // it can still be flow sequence/mapping or a scalar
  if (state.firstTabInLine !== -1) return false;

  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }

  ch = state.input.charCodeAt(state.position);

  while (ch !== 0) {
    if (state.firstTabInLine !== -1) {
      state.position = state.firstTabInLine;
      throwError(state, 'tab characters must not be used in indentation');
    }

    if (ch !== 0x2D/* - */) {
      break;
    }

    following = state.input.charCodeAt(state.position + 1);

    if (!is_WS_OR_EOL(following)) {
      break;
    }

    detected = true;
    state.position++;

    if (skipSeparationSpace(state, true, -1)) {
      if (state.lineIndent <= nodeIndent) {
        _result.push(null);
        ch = state.input.charCodeAt(state.position);
        continue;
      }
    }

    _line = state.line;
    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);
    _result.push(state.result);
    skipSeparationSpace(state, true, -1);

    ch = state.input.charCodeAt(state.position);

    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {
      throwError(state, 'bad indentation of a sequence entry');
    } else if (state.lineIndent < nodeIndent) {
      break;
    }
  }

  if (detected) {
    state.tag = _tag;
    state.anchor = _anchor;
    state.kind = 'sequence';
    state.result = _result;
    return true;
  }
  return false;
}

function readBlockMapping(state, nodeIndent, flowIndent) {
  var following,
      allowCompact,
      _line,
      _keyLine,
      _keyLineStart,
      _keyPos,
      _tag          = state.tag,
      _anchor       = state.anchor,
      _result       = {},
      overridableKeys = Object.create(null),
      keyTag        = null,
      keyNode       = null,
      valueNode     = null,
      atExplicitKey = false,
      detected      = false,
      ch;

  // there is a leading tab before this token, so it can't be a block sequence/mapping;
  // it can still be flow sequence/mapping or a scalar
  if (state.firstTabInLine !== -1) return false;

  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }

  ch = state.input.charCodeAt(state.position);

  while (ch !== 0) {
    if (!atExplicitKey && state.firstTabInLine !== -1) {
      state.position = state.firstTabInLine;
      throwError(state, 'tab characters must not be used in indentation');
    }

    following = state.input.charCodeAt(state.position + 1);
    _line = state.line; // Save the current line.

    //
    // Explicit notation case. There are two separate blocks:
    // first for the key (denoted by "?") and second for the value (denoted by ":")
    //
    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {

      if (ch === 0x3F/* ? */) {
        if (atExplicitKey) {
          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);
          keyTag = keyNode = valueNode = null;
        }

        detected = true;
        atExplicitKey = true;
        allowCompact = true;

      } else if (atExplicitKey) {
        // i.e. 0x3A/* : */ === character after the explicit key.
        atExplicitKey = false;
        allowCompact = true;

      } else {
        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');
      }

      state.position += 1;
      ch = following;

    //
    // Implicit notation case. Flow-style node as the key first, then ":", and the value.
    //
    } else {
      _keyLine = state.line;
      _keyLineStart = state.lineStart;
      _keyPos = state.position;

      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {
        // Neither implicit nor explicit notation.
        // Reading is done. Go to the epilogue.
        break;
      }

      if (state.line === _line) {
        ch = state.input.charCodeAt(state.position);

        while (is_WHITE_SPACE(ch)) {
          ch = state.input.charCodeAt(++state.position);
        }

        if (ch === 0x3A/* : */) {
          ch = state.input.charCodeAt(++state.position);

          if (!is_WS_OR_EOL(ch)) {
            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');
          }

          if (atExplicitKey) {
            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);
            keyTag = keyNode = valueNode = null;
          }

          detected = true;
          atExplicitKey = false;
          allowCompact = false;
          keyTag = state.tag;
          keyNode = state.result;

        } else if (detected) {
          throwError(state, 'can not read an implicit mapping pair; a colon is missed');

        } else {
          state.tag = _tag;
          state.anchor = _anchor;
          return true; // Keep the result of `composeNode`.
        }

      } else if (detected) {
        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');

      } else {
        state.tag = _tag;
        state.anchor = _anchor;
        return true; // Keep the result of `composeNode`.
      }
    }

    //
    // Common reading code for both explicit and implicit notations.
    //
    if (state.line === _line || state.lineIndent > nodeIndent) {
      if (atExplicitKey) {
        _keyLine = state.line;
        _keyLineStart = state.lineStart;
        _keyPos = state.position;
      }

      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {
        if (atExplicitKey) {
          keyNode = state.result;
        } else {
          valueNode = state.result;
        }
      }

      if (!atExplicitKey) {
        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);
        keyTag = keyNode = valueNode = null;
      }

      skipSeparationSpace(state, true, -1);
      ch = state.input.charCodeAt(state.position);
    }

    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {
      throwError(state, 'bad indentation of a mapping entry');
    } else if (state.lineIndent < nodeIndent) {
      break;
    }
  }

  //
  // Epilogue.
  //

  // Special case: last mapping's node contains only the key in explicit notation.
  if (atExplicitKey) {
    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);
  }

  // Expose the resulting mapping.
  if (detected) {
    state.tag = _tag;
    state.anchor = _anchor;
    state.kind = 'mapping';
    state.result = _result;
  }

  return detected;
}

function readTagProperty(state) {
  var _position,
      isVerbatim = false,
      isNamed    = false,
      tagHandle,
      tagName,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x21/* ! */) return false;

  if (state.tag !== null) {
    throwError(state, 'duplication of a tag property');
  }

  ch = state.input.charCodeAt(++state.position);

  if (ch === 0x3C/* < */) {
    isVerbatim = true;
    ch = state.input.charCodeAt(++state.position);

  } else if (ch === 0x21/* ! */) {
    isNamed = true;
    tagHandle = '!!';
    ch = state.input.charCodeAt(++state.position);

  } else {
    tagHandle = '!';
  }

  _position = state.position;

  if (isVerbatim) {
    do { ch = state.input.charCodeAt(++state.position); }
    while (ch !== 0 && ch !== 0x3E/* > */);

    if (state.position < state.length) {
      tagName = state.input.slice(_position, state.position);
      ch = state.input.charCodeAt(++state.position);
    } else {
      throwError(state, 'unexpected end of the stream within a verbatim tag');
    }
  } else {
    while (ch !== 0 && !is_WS_OR_EOL(ch)) {

      if (ch === 0x21/* ! */) {
        if (!isNamed) {
          tagHandle = state.input.slice(_position - 1, state.position + 1);

          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {
            throwError(state, 'named tag handle cannot contain such characters');
          }

          isNamed = true;
          _position = state.position + 1;
        } else {
          throwError(state, 'tag suffix cannot contain exclamation marks');
        }
      }

      ch = state.input.charCodeAt(++state.position);
    }

    tagName = state.input.slice(_position, state.position);

    if (PATTERN_FLOW_INDICATORS.test(tagName)) {
      throwError(state, 'tag suffix cannot contain flow indicator characters');
    }
  }

  if (tagName && !PATTERN_TAG_URI.test(tagName)) {
    throwError(state, 'tag name cannot contain such characters: ' + tagName);
  }

  try {
    tagName = decodeURIComponent(tagName);
  } catch (err) {
    throwError(state, 'tag name is malformed: ' + tagName);
  }

  if (isVerbatim) {
    state.tag = tagName;

  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {
    state.tag = state.tagMap[tagHandle] + tagName;

  } else if (tagHandle === '!') {
    state.tag = '!' + tagName;

  } else if (tagHandle === '!!') {
    state.tag = 'tag:yaml.org,2002:' + tagName;

  } else {
    throwError(state, 'undeclared tag handle "' + tagHandle + '"');
  }

  return true;
}

function readAnchorProperty(state) {
  var _position,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x26/* & */) return false;

  if (state.anchor !== null) {
    throwError(state, 'duplication of an anchor property');
  }

  ch = state.input.charCodeAt(++state.position);
  _position = state.position;

  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
    ch = state.input.charCodeAt(++state.position);
  }

  if (state.position === _position) {
    throwError(state, 'name of an anchor node must contain at least one character');
  }

  state.anchor = state.input.slice(_position, state.position);
  return true;
}

function readAlias(state) {
  var _position, alias,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x2A/* * */) return false;

  ch = state.input.charCodeAt(++state.position);
  _position = state.position;

  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
    ch = state.input.charCodeAt(++state.position);
  }

  if (state.position === _position) {
    throwError(state, 'name of an alias node must contain at least one character');
  }

  alias = state.input.slice(_position, state.position);

  if (!_hasOwnProperty.call(state.anchorMap, alias)) {
    throwError(state, 'unidentified alias "' + alias + '"');
  }

  state.result = state.anchorMap[alias];
  skipSeparationSpace(state, true, -1);
  return true;
}

function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {
  var allowBlockStyles,
      allowBlockScalars,
      allowBlockCollections,
      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent
      atNewLine  = false,
      hasContent = false,
      typeIndex,
      typeQuantity,
      typeList,
      type,
      flowIndent,
      blockIndent;

  if (state.listener !== null) {
    state.listener('open', state);
  }

  state.tag    = null;
  state.anchor = null;
  state.kind   = null;
  state.result = null;

  allowBlockStyles = allowBlockScalars = allowBlockCollections =
    CONTEXT_BLOCK_OUT === nodeContext ||
    CONTEXT_BLOCK_IN  === nodeContext;

  if (allowToSeek) {
    if (skipSeparationSpace(state, true, -1)) {
      atNewLine = true;

      if (state.lineIndent > parentIndent) {
        indentStatus = 1;
      } else if (state.lineIndent === parentIndent) {
        indentStatus = 0;
      } else if (state.lineIndent < parentIndent) {
        indentStatus = -1;
      }
    }
  }

  if (indentStatus === 1) {
    while (readTagProperty(state) || readAnchorProperty(state)) {
      if (skipSeparationSpace(state, true, -1)) {
        atNewLine = true;
        allowBlockCollections = allowBlockStyles;

        if (state.lineIndent > parentIndent) {
          indentStatus = 1;
        } else if (state.lineIndent === parentIndent) {
          indentStatus = 0;
        } else if (state.lineIndent < parentIndent) {
          indentStatus = -1;
        }
      } else {
        allowBlockCollections = false;
      }
    }
  }

  if (allowBlockCollections) {
    allowBlockCollections = atNewLine || allowCompact;
  }

  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {
    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {
      flowIndent = parentIndent;
    } else {
      flowIndent = parentIndent + 1;
    }

    blockIndent = state.position - state.lineStart;

    if (indentStatus === 1) {
      if (allowBlockCollections &&
          (readBlockSequence(state, blockIndent) ||
           readBlockMapping(state, blockIndent, flowIndent)) ||
          readFlowCollection(state, flowIndent)) {
        hasContent = true;
      } else {
        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||
            readSingleQuotedScalar(state, flowIndent) ||
            readDoubleQuotedScalar(state, flowIndent)) {
          hasContent = true;

        } else if (readAlias(state)) {
          hasContent = true;

          if (state.tag !== null || state.anchor !== null) {
            throwError(state, 'alias node should not have any properties');
          }

        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {
          hasContent = true;

          if (state.tag === null) {
            state.tag = '?';
          }
        }

        if (state.anchor !== null) {
          state.anchorMap[state.anchor] = state.result;
        }
      }
    } else if (indentStatus === 0) {
      // Special case: block sequences are allowed to have same indentation level as the parent.
      // http://www.yaml.org/spec/1.2/spec.html#id2799784
      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);
    }
  }

  if (state.tag === null) {
    if (state.anchor !== null) {
      state.anchorMap[state.anchor] = state.result;
    }

  } else if (state.tag === '?') {
    // Implicit resolving is not allowed for non-scalar types, and '?'
    // non-specific tag is only automatically assigned to plain scalars.
    //
    // We only need to check kind conformity in case user explicitly assigns '?'
    // tag, for example like this: "!<?> [0]"
    //
    if (state.result !== null && state.kind !== 'scalar') {
      throwError(state, 'unacceptable node kind for !<?> tag; it should be "scalar", not "' + state.kind + '"');
    }

    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {
      type = state.implicitTypes[typeIndex];

      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched
        state.result = type.construct(state.result);
        state.tag = type.tag;
        if (state.anchor !== null) {
          state.anchorMap[state.anchor] = state.result;
        }
        break;
      }
    }
  } else if (state.tag !== '!') {
    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {
      type = state.typeMap[state.kind || 'fallback'][state.tag];
    } else {
      // looking for multi type
      type = null;
      typeList = state.typeMap.multi[state.kind || 'fallback'];

      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {
        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {
          type = typeList[typeIndex];
          break;
        }
      }
    }

    if (!type) {
      throwError(state, 'unknown tag !<' + state.tag + '>');
    }

    if (state.result !== null && type.kind !== state.kind) {
      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be "' + type.kind + '", not "' + state.kind + '"');
    }

    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched
      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');
    } else {
      state.result = type.construct(state.result, state.tag);
      if (state.anchor !== null) {
        state.anchorMap[state.anchor] = state.result;
      }
    }
  }

  if (state.listener !== null) {
    state.listener('close', state);
  }
  return state.tag !== null ||  state.anchor !== null || hasContent;
}

function readDocument(state) {
  var documentStart = state.position,
      _position,
      directiveName,
      directiveArgs,
      hasDirectives = false,
      ch;

  state.version = null;
  state.checkLineBreaks = state.legacy;
  state.tagMap = Object.create(null);
  state.anchorMap = Object.create(null);

  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
    skipSeparationSpace(state, true, -1);

    ch = state.input.charCodeAt(state.position);

    if (state.lineIndent > 0 || ch !== 0x25/* % */) {
      break;
    }

    hasDirectives = true;
    ch = state.input.charCodeAt(++state.position);
    _position = state.position;

    while (ch !== 0 && !is_WS_OR_EOL(ch)) {
      ch = state.input.charCodeAt(++state.position);
    }

    directiveName = state.input.slice(_position, state.position);
    directiveArgs = [];

    if (directiveName.length < 1) {
      throwError(state, 'directive name must not be less than one character in length');
    }

    while (ch !== 0) {
      while (is_WHITE_SPACE(ch)) {
        ch = state.input.charCodeAt(++state.position);
      }

      if (ch === 0x23/* # */) {
        do { ch = state.input.charCodeAt(++state.position); }
        while (ch !== 0 && !is_EOL(ch));
        break;
      }

      if (is_EOL(ch)) break;

      _position = state.position;

      while (ch !== 0 && !is_WS_OR_EOL(ch)) {
        ch = state.input.charCodeAt(++state.position);
      }

      directiveArgs.push(state.input.slice(_position, state.position));
    }

    if (ch !== 0) readLineBreak(state);

    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {
      directiveHandlers[directiveName](state, directiveName, directiveArgs);
    } else {
      throwWarning(state, 'unknown document directive "' + directiveName + '"');
    }
  }

  skipSeparationSpace(state, true, -1);

  if (state.lineIndent === 0 &&
      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&
      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&
      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {
    state.position += 3;
    skipSeparationSpace(state, true, -1);

  } else if (hasDirectives) {
    throwError(state, 'directives end mark is expected');
  }

  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);
  skipSeparationSpace(state, true, -1);

  if (state.checkLineBreaks &&
      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {
    throwWarning(state, 'non-ASCII line breaks are interpreted as content');
  }

  state.documents.push(state.result);

  if (state.position === state.lineStart && testDocumentSeparator(state)) {

    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {
      state.position += 3;
      skipSeparationSpace(state, true, -1);
    }
    return;
  }

  if (state.position < (state.length - 1)) {
    throwError(state, 'end of the stream or a document separator is expected');
  } else {
    return;
  }
}


function loadDocuments(input, options) {
  input = String(input);
  options = options || {};

  if (input.length !== 0) {

    // Add tailing `\n` if not exists
    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&
        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {
      input += '\n';
    }

    // Strip BOM
    if (input.charCodeAt(0) === 0xFEFF) {
      input = input.slice(1);
    }
  }

  var state = new State(input, options);

  var nullpos = input.indexOf('\0');

  if (nullpos !== -1) {
    state.position = nullpos;
    throwError(state, 'null byte is not allowed in input');
  }

  // Use 0 as string terminator. That significantly simplifies bounds check.
  state.input += '\0';

  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {
    state.lineIndent += 1;
    state.position += 1;
  }

  while (state.position < (state.length - 1)) {
    readDocument(state);
  }

  return state.documents;
}


function loadAll(input, iterator, options) {
  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {
    options = iterator;
    iterator = null;
  }

  var documents = loadDocuments(input, options);

  if (typeof iterator !== 'function') {
    return documents;
  }

  for (var index = 0, length = documents.length; index < length; index += 1) {
    iterator(documents[index]);
  }
}


function load(input, options) {
  var documents = loadDocuments(input, options);

  if (documents.length === 0) {
    /*eslint-disable no-undefined*/
    return undefined;
  } else if (documents.length === 1) {
    return documents[0];
  }
  throw new YAMLException('expected a single document in the stream, but found more');
}


module.exports.loadAll = loadAll;
module.exports.load    = load;

},{"./common":134,"./exception":136,"./schema/default":140,"./snippet":143}],138:[function(require,module,exports){
'use strict';

/*eslint-disable max-len*/

var YAMLException = require('./exception');
var Type          = require('./type');


function compileList(schema, name) {
  var result = [];

  schema[name].forEach(function (currentType) {
    var newIndex = result.length;

    result.forEach(function (previousType, previousIndex) {
      if (previousType.tag === currentType.tag &&
          previousType.kind === currentType.kind &&
          previousType.multi === currentType.multi) {

        newIndex = previousIndex;
      }
    });

    result[newIndex] = currentType;
  });

  return result;
}


function compileMap(/* lists... */) {
  var result = {
        scalar: {},
        sequence: {},
        mapping: {},
        fallback: {},
        multi: {
          scalar: [],
          sequence: [],
          mapping: [],
          fallback: []
        }
      }, index, length;

  function collectType(type) {
    if (type.multi) {
      result.multi[type.kind].push(type);
      result.multi['fallback'].push(type);
    } else {
      result[type.kind][type.tag] = result['fallback'][type.tag] = type;
    }
  }

  for (index = 0, length = arguments.length; index < length; index += 1) {
    arguments[index].forEach(collectType);
  }
  return result;
}


function Schema(definition) {
  return this.extend(definition);
}


Schema.prototype.extend = function extend(definition) {
  var implicit = [];
  var explicit = [];

  if (definition instanceof Type) {
    // Schema.extend(type)
    explicit.push(definition);

  } else if (Array.isArray(definition)) {
    // Schema.extend([ type1, type2, ... ])
    explicit = explicit.concat(definition);

  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {
    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })
    if (definition.implicit) implicit = implicit.concat(definition.implicit);
    if (definition.explicit) explicit = explicit.concat(definition.explicit);

  } else {
    throw new YAMLException('Schema.extend argument should be a Type, [ Type ], ' +
      'or a schema definition ({ implicit: [...], explicit: [...] })');
  }

  implicit.forEach(function (type) {
    if (!(type instanceof Type)) {
      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');
    }

    if (type.loadKind && type.loadKind !== 'scalar') {
      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');
    }

    if (type.multi) {
      throw new YAMLException('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');
    }
  });

  explicit.forEach(function (type) {
    if (!(type instanceof Type)) {
      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');
    }
  });

  var result = Object.create(Schema.prototype);

  result.implicit = (this.implicit || []).concat(implicit);
  result.explicit = (this.explicit || []).concat(explicit);

  result.compiledImplicit = compileList(result, 'implicit');
  result.compiledExplicit = compileList(result, 'explicit');
  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);

  return result;
};


module.exports = Schema;

},{"./exception":136,"./type":144}],139:[function(require,module,exports){
// Standard YAML's Core schema.
// http://www.yaml.org/spec/1.2/spec.html#id2804923
//
// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
// So, Core schema has no distinctions from JSON schema is JS-YAML.


'use strict';


module.exports = require('./json');

},{"./json":142}],140:[function(require,module,exports){
// JS-YAML's default schema for `safeLoad` function.
// It is not described in the YAML specification.
//
// This schema is based on standard YAML's Core schema and includes most of
// extra types described at YAML tag repository. (http://yaml.org/type/)


'use strict';


module.exports = require('./core').extend({
  implicit: [
    require('../type/timestamp'),
    require('../type/merge')
  ],
  explicit: [
    require('../type/binary'),
    require('../type/omap'),
    require('../type/pairs'),
    require('../type/set')
  ]
});

},{"../type/binary":145,"../type/merge":150,"../type/omap":152,"../type/pairs":153,"../type/set":155,"../type/timestamp":157,"./core":139}],141:[function(require,module,exports){
// Standard YAML's Failsafe schema.
// http://www.yaml.org/spec/1.2/spec.html#id2802346


'use strict';


var Schema = require('../schema');


module.exports = new Schema({
  explicit: [
    require('../type/str'),
    require('../type/seq'),
    require('../type/map')
  ]
});

},{"../schema":138,"../type/map":149,"../type/seq":154,"../type/str":156}],142:[function(require,module,exports){
// Standard YAML's JSON schema.
// http://www.yaml.org/spec/1.2/spec.html#id2803231
//
// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
// So, this schema is not such strict as defined in the YAML specification.
// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.


'use strict';


module.exports = require('./failsafe').extend({
  implicit: [
    require('../type/null'),
    require('../type/bool'),
    require('../type/int'),
    require('../type/float')
  ]
});

},{"../type/bool":146,"../type/float":147,"../type/int":148,"../type/null":151,"./failsafe":141}],143:[function(require,module,exports){
'use strict';


var common = require('./common');


// get snippet for a single line, respecting maxLength
function getLine(buffer, lineStart, lineEnd, position, maxLineLength) {
  var head = '';
  var tail = '';
  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;

  if (position - lineStart > maxHalfLength) {
    head = ' ... ';
    lineStart = position - maxHalfLength + head.length;
  }

  if (lineEnd - position > maxHalfLength) {
    tail = ' ...';
    lineEnd = position + maxHalfLength - tail.length;
  }

  return {
    str: head + buffer.slice(lineStart, lineEnd).replace(/\t/g, '→') + tail,
    pos: position - lineStart + head.length // relative position
  };
}


function padStart(string, max) {
  return common.repeat(' ', max - string.length) + string;
}


function makeSnippet(mark, options) {
  options = Object.create(options || null);

  if (!mark.buffer) return null;

  if (!options.maxLength) options.maxLength = 79;
  if (typeof options.indent      !== 'number') options.indent      = 1;
  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;
  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;

  var re = /\r?\n|\r|\0/g;
  var lineStarts = [ 0 ];
  var lineEnds = [];
  var match;
  var foundLineNo = -1;

  while ((match = re.exec(mark.buffer))) {
    lineEnds.push(match.index);
    lineStarts.push(match.index + match[0].length);

    if (mark.position <= match.index && foundLineNo < 0) {
      foundLineNo = lineStarts.length - 2;
    }
  }

  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;

  var result = '', i, line;
  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;
  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);

  for (i = 1; i <= options.linesBefore; i++) {
    if (foundLineNo - i < 0) break;
    line = getLine(
      mark.buffer,
      lineStarts[foundLineNo - i],
      lineEnds[foundLineNo - i],
      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),
      maxLineLength
    );
    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +
      ' | ' + line.str + '\n' + result;
  }

  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);
  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +
    ' | ' + line.str + '\n';
  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\n';

  for (i = 1; i <= options.linesAfter; i++) {
    if (foundLineNo + i >= lineEnds.length) break;
    line = getLine(
      mark.buffer,
      lineStarts[foundLineNo + i],
      lineEnds[foundLineNo + i],
      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),
      maxLineLength
    );
    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +
      ' | ' + line.str + '\n';
  }

  return result.replace(/\n$/, '');
}


module.exports = makeSnippet;

},{"./common":134}],144:[function(require,module,exports){
'use strict';

var YAMLException = require('./exception');

var TYPE_CONSTRUCTOR_OPTIONS = [
  'kind',
  'multi',
  'resolve',
  'construct',
  'instanceOf',
  'predicate',
  'represent',
  'representName',
  'defaultStyle',
  'styleAliases'
];

var YAML_NODE_KINDS = [
  'scalar',
  'sequence',
  'mapping'
];

function compileStyleAliases(map) {
  var result = {};

  if (map !== null) {
    Object.keys(map).forEach(function (style) {
      map[style].forEach(function (alias) {
        result[String(alias)] = style;
      });
    });
  }

  return result;
}

function Type(tag, options) {
  options = options || {};

  Object.keys(options).forEach(function (name) {
    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {
      throw new YAMLException('Unknown option "' + name + '" is met in definition of "' + tag + '" YAML type.');
    }
  });

  // TODO: Add tag format check.
  this.options       = options; // keep original options in case user wants to extend this type later
  this.tag           = tag;
  this.kind          = options['kind']          || null;
  this.resolve       = options['resolve']       || function () { return true; };
  this.construct     = options['construct']     || function (data) { return data; };
  this.instanceOf    = options['instanceOf']    || null;
  this.predicate     = options['predicate']     || null;
  this.represent     = options['represent']     || null;
  this.representName = options['representName'] || null;
  this.defaultStyle  = options['defaultStyle']  || null;
  this.multi         = options['multi']         || false;
  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);

  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {
    throw new YAMLException('Unknown kind "' + this.kind + '" is specified for "' + tag + '" YAML type.');
  }
}

module.exports = Type;

},{"./exception":136}],145:[function(require,module,exports){
'use strict';

/*eslint-disable no-bitwise*/


var Type = require('../type');


// [ 64, 65, 66 ] -> [ padding, CR, LF ]
var BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';


function resolveYamlBinary(data) {
  if (data === null) return false;

  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;

  // Convert one by one.
  for (idx = 0; idx < max; idx++) {
    code = map.indexOf(data.charAt(idx));

    // Skip CR/LF
    if (code > 64) continue;

    // Fail on illegal characters
    if (code < 0) return false;

    bitlen += 6;
  }

  // If there are any bits left, source was corrupted
  return (bitlen % 8) === 0;
}

function constructYamlBinary(data) {
  var idx, tailbits,
      input = data.replace(/[\r\n=]/g, ''), // remove CR/LF & padding to simplify scan
      max = input.length,
      map = BASE64_MAP,
      bits = 0,
      result = [];

  // Collect by 6*4 bits (3 bytes)

  for (idx = 0; idx < max; idx++) {
    if ((idx % 4 === 0) && idx) {
      result.push((bits >> 16) & 0xFF);
      result.push((bits >> 8) & 0xFF);
      result.push(bits & 0xFF);
    }

    bits = (bits << 6) | map.indexOf(input.charAt(idx));
  }

  // Dump tail

  tailbits = (max % 4) * 6;

  if (tailbits === 0) {
    result.push((bits >> 16) & 0xFF);
    result.push((bits >> 8) & 0xFF);
    result.push(bits & 0xFF);
  } else if (tailbits === 18) {
    result.push((bits >> 10) & 0xFF);
    result.push((bits >> 2) & 0xFF);
  } else if (tailbits === 12) {
    result.push((bits >> 4) & 0xFF);
  }

  return new Uint8Array(result);
}

function representYamlBinary(object /*, style*/) {
  var result = '', bits = 0, idx, tail,
      max = object.length,
      map = BASE64_MAP;

  // Convert every three bytes to 4 ASCII characters.

  for (idx = 0; idx < max; idx++) {
    if ((idx % 3 === 0) && idx) {
      result += map[(bits >> 18) & 0x3F];
      result += map[(bits >> 12) & 0x3F];
      result += map[(bits >> 6) & 0x3F];
      result += map[bits & 0x3F];
    }

    bits = (bits << 8) + object[idx];
  }

  // Dump tail

  tail = max % 3;

  if (tail === 0) {
    result += map[(bits >> 18) & 0x3F];
    result += map[(bits >> 12) & 0x3F];
    result += map[(bits >> 6) & 0x3F];
    result += map[bits & 0x3F];
  } else if (tail === 2) {
    result += map[(bits >> 10) & 0x3F];
    result += map[(bits >> 4) & 0x3F];
    result += map[(bits << 2) & 0x3F];
    result += map[64];
  } else if (tail === 1) {
    result += map[(bits >> 2) & 0x3F];
    result += map[(bits << 4) & 0x3F];
    result += map[64];
    result += map[64];
  }

  return result;
}

function isBinary(obj) {
  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';
}

module.exports = new Type('tag:yaml.org,2002:binary', {
  kind: 'scalar',
  resolve: resolveYamlBinary,
  construct: constructYamlBinary,
  predicate: isBinary,
  represent: representYamlBinary
});

},{"../type":144}],146:[function(require,module,exports){
'use strict';

var Type = require('../type');

function resolveYamlBoolean(data) {
  if (data === null) return false;

  var max = data.length;

  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||
         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));
}

function constructYamlBoolean(data) {
  return data === 'true' ||
         data === 'True' ||
         data === 'TRUE';
}

function isBoolean(object) {
  return Object.prototype.toString.call(object) === '[object Boolean]';
}

module.exports = new Type('tag:yaml.org,2002:bool', {
  kind: 'scalar',
  resolve: resolveYamlBoolean,
  construct: constructYamlBoolean,
  predicate: isBoolean,
  represent: {
    lowercase: function (object) { return object ? 'true' : 'false'; },
    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },
    camelcase: function (object) { return object ? 'True' : 'False'; }
  },
  defaultStyle: 'lowercase'
});

},{"../type":144}],147:[function(require,module,exports){
'use strict';

var common = require('../common');
var Type   = require('../type');

var YAML_FLOAT_PATTERN = new RegExp(
  // 2.5e4, 2.5 and integers
  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +
  // .2e4, .2
  // special case, seems not from spec
  '|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +
  // .inf
  '|[-+]?\\.(?:inf|Inf|INF)' +
  // .nan
  '|\\.(?:nan|NaN|NAN))$');

function resolveYamlFloat(data) {
  if (data === null) return false;

  if (!YAML_FLOAT_PATTERN.test(data) ||
      // Quick hack to not allow integers end with `_`
      // Probably should update regexp & check speed
      data[data.length - 1] === '_') {
    return false;
  }

  return true;
}

function constructYamlFloat(data) {
  var value, sign;

  value  = data.replace(/_/g, '').toLowerCase();
  sign   = value[0] === '-' ? -1 : 1;

  if ('+-'.indexOf(value[0]) >= 0) {
    value = value.slice(1);
  }

  if (value === '.inf') {
    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;

  } else if (value === '.nan') {
    return NaN;
  }
  return sign * parseFloat(value, 10);
}


var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;

function representYamlFloat(object, style) {
  var res;

  if (isNaN(object)) {
    switch (style) {
      case 'lowercase': return '.nan';
      case 'uppercase': return '.NAN';
      case 'camelcase': return '.NaN';
    }
  } else if (Number.POSITIVE_INFINITY === object) {
    switch (style) {
      case 'lowercase': return '.inf';
      case 'uppercase': return '.INF';
      case 'camelcase': return '.Inf';
    }
  } else if (Number.NEGATIVE_INFINITY === object) {
    switch (style) {
      case 'lowercase': return '-.inf';
      case 'uppercase': return '-.INF';
      case 'camelcase': return '-.Inf';
    }
  } else if (common.isNegativeZero(object)) {
    return '-0.0';
  }

  res = object.toString(10);

  // JS stringifier can build scientific format without dots: 5e-100,
  // while YAML requres dot: 5.e-100. Fix it with simple hack

  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;
}

function isFloat(object) {
  return (Object.prototype.toString.call(object) === '[object Number]') &&
         (object % 1 !== 0 || common.isNegativeZero(object));
}

module.exports = new Type('tag:yaml.org,2002:float', {
  kind: 'scalar',
  resolve: resolveYamlFloat,
  construct: constructYamlFloat,
  predicate: isFloat,
  represent: representYamlFloat,
  defaultStyle: 'lowercase'
});

},{"../common":134,"../type":144}],148:[function(require,module,exports){
'use strict';

var common = require('../common');
var Type   = require('../type');

function isHexCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||
         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||
         ((0x61/* a */ <= c) && (c <= 0x66/* f */));
}

function isOctCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));
}

function isDecCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));
}

function resolveYamlInteger(data) {
  if (data === null) return false;

  var max = data.length,
      index = 0,
      hasDigits = false,
      ch;

  if (!max) return false;

  ch = data[index];

  // sign
  if (ch === '-' || ch === '+') {
    ch = data[++index];
  }

  if (ch === '0') {
    // 0
    if (index + 1 === max) return true;
    ch = data[++index];

    // base 2, base 8, base 16

    if (ch === 'b') {
      // base 2
      index++;

      for (; index < max; index++) {
        ch = data[index];
        if (ch === '_') continue;
        if (ch !== '0' && ch !== '1') return false;
        hasDigits = true;
      }
      return hasDigits && ch !== '_';
    }


    if (ch === 'x') {
      // base 16
      index++;

      for (; index < max; index++) {
        ch = data[index];
        if (ch === '_') continue;
        if (!isHexCode(data.charCodeAt(index))) return false;
        hasDigits = true;
      }
      return hasDigits && ch !== '_';
    }


    if (ch === 'o') {
      // base 8
      index++;

      for (; index < max; index++) {
        ch = data[index];
        if (ch === '_') continue;
        if (!isOctCode(data.charCodeAt(index))) return false;
        hasDigits = true;
      }
      return hasDigits && ch !== '_';
    }
  }

  // base 10 (except 0)

  // value should not start with `_`;
  if (ch === '_') return false;

  for (; index < max; index++) {
    ch = data[index];
    if (ch === '_') continue;
    if (!isDecCode(data.charCodeAt(index))) {
      return false;
    }
    hasDigits = true;
  }

  // Should have digits and should not end with `_`
  if (!hasDigits || ch === '_') return false;

  return true;
}

function constructYamlInteger(data) {
  var value = data, sign = 1, ch;

  if (value.indexOf('_') !== -1) {
    value = value.replace(/_/g, '');
  }

  ch = value[0];

  if (ch === '-' || ch === '+') {
    if (ch === '-') sign = -1;
    value = value.slice(1);
    ch = value[0];
  }

  if (value === '0') return 0;

  if (ch === '0') {
    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);
    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);
    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);
  }

  return sign * parseInt(value, 10);
}

function isInteger(object) {
  return (Object.prototype.toString.call(object)) === '[object Number]' &&
         (object % 1 === 0 && !common.isNegativeZero(object));
}

module.exports = new Type('tag:yaml.org,2002:int', {
  kind: 'scalar',
  resolve: resolveYamlInteger,
  construct: constructYamlInteger,
  predicate: isInteger,
  represent: {
    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },
    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },
    decimal:     function (obj) { return obj.toString(10); },
    /* eslint-disable max-len */
    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }
  },
  defaultStyle: 'decimal',
  styleAliases: {
    binary:      [ 2,  'bin' ],
    octal:       [ 8,  'oct' ],
    decimal:     [ 10, 'dec' ],
    hexadecimal: [ 16, 'hex' ]
  }
});

},{"../common":134,"../type":144}],149:[function(require,module,exports){
'use strict';

var Type = require('../type');

module.exports = new Type('tag:yaml.org,2002:map', {
  kind: 'mapping',
  construct: function (data) { return data !== null ? data : {}; }
});

},{"../type":144}],150:[function(require,module,exports){
'use strict';

var Type = require('../type');

function resolveYamlMerge(data) {
  return data === '<<' || data === null;
}

module.exports = new Type('tag:yaml.org,2002:merge', {
  kind: 'scalar',
  resolve: resolveYamlMerge
});

},{"../type":144}],151:[function(require,module,exports){
'use strict';

var Type = require('../type');

function resolveYamlNull(data) {
  if (data === null) return true;

  var max = data.length;

  return (max === 1 && data === '~') ||
         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));
}

function constructYamlNull() {
  return null;
}

function isNull(object) {
  return object === null;
}

module.exports = new Type('tag:yaml.org,2002:null', {
  kind: 'scalar',
  resolve: resolveYamlNull,
  construct: constructYamlNull,
  predicate: isNull,
  represent: {
    canonical: function () { return '~';    },
    lowercase: function () { return 'null'; },
    uppercase: function () { return 'NULL'; },
    camelcase: function () { return 'Null'; },
    empty:     function () { return '';     }
  },
  defaultStyle: 'lowercase'
});

},{"../type":144}],152:[function(require,module,exports){
'use strict';

var Type = require('../type');

var _hasOwnProperty = Object.prototype.hasOwnProperty;
var _toString       = Object.prototype.toString;

function resolveYamlOmap(data) {
  if (data === null) return true;

  var objectKeys = [], index, length, pair, pairKey, pairHasKey,
      object = data;

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];
    pairHasKey = false;

    if (_toString.call(pair) !== '[object Object]') return false;

    for (pairKey in pair) {
      if (_hasOwnProperty.call(pair, pairKey)) {
        if (!pairHasKey) pairHasKey = true;
        else return false;
      }
    }

    if (!pairHasKey) return false;

    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);
    else return false;
  }

  return true;
}

function constructYamlOmap(data) {
  return data !== null ? data : [];
}

module.exports = new Type('tag:yaml.org,2002:omap', {
  kind: 'sequence',
  resolve: resolveYamlOmap,
  construct: constructYamlOmap
});

},{"../type":144}],153:[function(require,module,exports){
'use strict';

var Type = require('../type');

var _toString = Object.prototype.toString;

function resolveYamlPairs(data) {
  if (data === null) return true;

  var index, length, pair, keys, result,
      object = data;

  result = new Array(object.length);

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];

    if (_toString.call(pair) !== '[object Object]') return false;

    keys = Object.keys(pair);

    if (keys.length !== 1) return false;

    result[index] = [ keys[0], pair[keys[0]] ];
  }

  return true;
}

function constructYamlPairs(data) {
  if (data === null) return [];

  var index, length, pair, keys, result,
      object = data;

  result = new Array(object.length);

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];

    keys = Object.keys(pair);

    result[index] = [ keys[0], pair[keys[0]] ];
  }

  return result;
}

module.exports = new Type('tag:yaml.org,2002:pairs', {
  kind: 'sequence',
  resolve: resolveYamlPairs,
  construct: constructYamlPairs
});

},{"../type":144}],154:[function(require,module,exports){
'use strict';

var Type = require('../type');

module.exports = new Type('tag:yaml.org,2002:seq', {
  kind: 'sequence',
  construct: function (data) { return data !== null ? data : []; }
});

},{"../type":144}],155:[function(require,module,exports){
'use strict';

var Type = require('../type');

var _hasOwnProperty = Object.prototype.hasOwnProperty;

function resolveYamlSet(data) {
  if (data === null) return true;

  var key, object = data;

  for (key in object) {
    if (_hasOwnProperty.call(object, key)) {
      if (object[key] !== null) return false;
    }
  }

  return true;
}

function constructYamlSet(data) {
  return data !== null ? data : {};
}

module.exports = new Type('tag:yaml.org,2002:set', {
  kind: 'mapping',
  resolve: resolveYamlSet,
  construct: constructYamlSet
});

},{"../type":144}],156:[function(require,module,exports){
'use strict';

var Type = require('../type');

module.exports = new Type('tag:yaml.org,2002:str', {
  kind: 'scalar',
  construct: function (data) { return data !== null ? data : ''; }
});

},{"../type":144}],157:[function(require,module,exports){
'use strict';

var Type = require('../type');

var YAML_DATE_REGEXP = new RegExp(
  '^([0-9][0-9][0-9][0-9])'          + // [1] year
  '-([0-9][0-9])'                    + // [2] month
  '-([0-9][0-9])$');                   // [3] day

var YAML_TIMESTAMP_REGEXP = new RegExp(
  '^([0-9][0-9][0-9][0-9])'          + // [1] year
  '-([0-9][0-9]?)'                   + // [2] month
  '-([0-9][0-9]?)'                   + // [3] day
  '(?:[Tt]|[ \\t]+)'                 + // ...
  '([0-9][0-9]?)'                    + // [4] hour
  ':([0-9][0-9])'                    + // [5] minute
  ':([0-9][0-9])'                    + // [6] second
  '(?:\\.([0-9]*))?'                 + // [7] fraction
  '(?:[ \\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour
  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute

function resolveYamlTimestamp(data) {
  if (data === null) return false;
  if (YAML_DATE_REGEXP.exec(data) !== null) return true;
  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;
  return false;
}

function constructYamlTimestamp(data) {
  var match, year, month, day, hour, minute, second, fraction = 0,
      delta = null, tz_hour, tz_minute, date;

  match = YAML_DATE_REGEXP.exec(data);
  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);

  if (match === null) throw new Error('Date resolve error');

  // match: [1] year [2] month [3] day

  year = +(match[1]);
  month = +(match[2]) - 1; // JS month starts with 0
  day = +(match[3]);

  if (!match[4]) { // no hour
    return new Date(Date.UTC(year, month, day));
  }

  // match: [4] hour [5] minute [6] second [7] fraction

  hour = +(match[4]);
  minute = +(match[5]);
  second = +(match[6]);

  if (match[7]) {
    fraction = match[7].slice(0, 3);
    while (fraction.length < 3) { // milli-seconds
      fraction += '0';
    }
    fraction = +fraction;
  }

  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute

  if (match[9]) {
    tz_hour = +(match[10]);
    tz_minute = +(match[11] || 0);
    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds
    if (match[9] === '-') delta = -delta;
  }

  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));

  if (delta) date.setTime(date.getTime() - delta);

  return date;
}

function representYamlTimestamp(object /*, style*/) {
  return object.toISOString();
}

module.exports = new Type('tag:yaml.org,2002:timestamp', {
  kind: 'scalar',
  resolve: resolveYamlTimestamp,
  construct: constructYamlTimestamp,
  instanceOf: Date,
  represent: representYamlTimestamp
});

},{"../type":144}],158:[function(require,module,exports){
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    define([], factory) /* global define */
  } else if (typeof module === 'object' && module.exports) {
    module.exports = factory()
  } else {
    root.moo = factory()
  }
}(this, function() {
  'use strict';

  var hasOwnProperty = Object.prototype.hasOwnProperty
  var toString = Object.prototype.toString
  var hasSticky = typeof new RegExp().sticky === 'boolean'

  /***************************************************************************/

  function isRegExp(o) { return o && toString.call(o) === '[object RegExp]' }
  function isObject(o) { return o && typeof o === 'object' && !isRegExp(o) && !Array.isArray(o) }

  function reEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&')
  }
  function reGroups(s) {
    var re = new RegExp('|' + s)
    return re.exec('').length - 1
  }
  function reCapture(s) {
    return '(' + s + ')'
  }
  function reUnion(regexps) {
    if (!regexps.length) return '(?!)'
    var source =  regexps.map(function(s) {
      return "(?:" + s + ")"
    }).join('|')
    return "(?:" + source + ")"
  }

  function regexpOrLiteral(obj) {
    if (typeof obj === 'string') {
      return '(?:' + reEscape(obj) + ')'

    } else if (isRegExp(obj)) {
      // TODO: consider /u support
      if (obj.ignoreCase) throw new Error('RegExp /i flag not allowed')
      if (obj.global) throw new Error('RegExp /g flag is implied')
      if (obj.sticky) throw new Error('RegExp /y flag is implied')
      if (obj.multiline) throw new Error('RegExp /m flag is implied')
      return obj.source

    } else {
      throw new Error('Not a pattern: ' + obj)
    }
  }

  function pad(s, length) {
    if (s.length > length) {
      return s
    }
    return Array(length - s.length + 1).join(" ") + s
  }

  function lastNLines(string, numLines) {
    var position = string.length
    var lineBreaks = 0;
    while (true) {
      var idx = string.lastIndexOf("\n", position - 1)
      if (idx === -1) {
        break;
      } else {
        lineBreaks++
      }
      position = idx
      if (lineBreaks === numLines) {
        break;
      }
      if (position === 0) {
        break;
      }
    }
    var startPosition = 
      lineBreaks < numLines ?
      0 : 
      position + 1
    return string.substring(startPosition).split("\n")
  }

  function objectToRules(object) {
    var keys = Object.getOwnPropertyNames(object)
    var result = []
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i]
      var thing = object[key]
      var rules = [].concat(thing)
      if (key === 'include') {
        for (var j = 0; j < rules.length; j++) {
          result.push({include: rules[j]})
        }
        continue
      }
      var match = []
      rules.forEach(function(rule) {
        if (isObject(rule)) {
          if (match.length) result.push(ruleOptions(key, match))
          result.push(ruleOptions(key, rule))
          match = []
        } else {
          match.push(rule)
        }
      })
      if (match.length) result.push(ruleOptions(key, match))
    }
    return result
  }

  function arrayToRules(array) {
    var result = []
    for (var i = 0; i < array.length; i++) {
      var obj = array[i]
      if (obj.include) {
        var include = [].concat(obj.include)
        for (var j = 0; j < include.length; j++) {
          result.push({include: include[j]})
        }
        continue
      }
      if (!obj.type) {
        throw new Error('Rule has no type: ' + JSON.stringify(obj))
      }
      result.push(ruleOptions(obj.type, obj))
    }
    return result
  }

  function ruleOptions(type, obj) {
    if (!isObject(obj)) {
      obj = { match: obj }
    }
    if (obj.include) {
      throw new Error('Matching rules cannot also include states')
    }

    // nb. error and fallback imply lineBreaks
    var options = {
      defaultType: type,
      lineBreaks: !!obj.error || !!obj.fallback,
      pop: false,
      next: null,
      push: null,
      error: false,
      fallback: false,
      value: null,
      type: null,
      shouldThrow: false,
    }

    // Avoid Object.assign(), so we support IE9+
    for (var key in obj) {
      if (hasOwnProperty.call(obj, key)) {
        options[key] = obj[key]
      }
    }

    // type transform cannot be a string
    if (typeof options.type === 'string' && type !== options.type) {
      throw new Error("Type transform cannot be a string (type '" + options.type + "' for token '" + type + "')")
    }

    // convert to array
    var match = options.match
    options.match = Array.isArray(match) ? match : match ? [match] : []
    options.match.sort(function(a, b) {
      return isRegExp(a) && isRegExp(b) ? 0
           : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length
    })
    return options
  }

  function toRules(spec) {
    return Array.isArray(spec) ? arrayToRules(spec) : objectToRules(spec)
  }

  var defaultErrorRule = ruleOptions('error', {lineBreaks: true, shouldThrow: true})
  function compileRules(rules, hasStates) {
    var errorRule = null
    var fast = Object.create(null)
    var fastAllowed = true
    var unicodeFlag = null
    var groups = []
    var parts = []

    // If there is a fallback rule, then disable fast matching
    for (var i = 0; i < rules.length; i++) {
      if (rules[i].fallback) {
        fastAllowed = false
      }
    }

    for (var i = 0; i < rules.length; i++) {
      var options = rules[i]

      if (options.include) {
        // all valid inclusions are removed by states() preprocessor
        throw new Error('Inheritance is not allowed in stateless lexers')
      }

      if (options.error || options.fallback) {
        // errorRule can only be set once
        if (errorRule) {
          if (!options.fallback === !errorRule.fallback) {
            throw new Error("Multiple " + (options.fallback ? "fallback" : "error") + " rules not allowed (for token '" + options.defaultType + "')")
          } else {
            throw new Error("fallback and error are mutually exclusive (for token '" + options.defaultType + "')")
          }
        }
        errorRule = options
      }

      var match = options.match.slice()
      if (fastAllowed) {
        while (match.length && typeof match[0] === 'string' && match[0].length === 1) {
          var word = match.shift()
          fast[word.charCodeAt(0)] = options
        }
      }

      // Warn about inappropriate state-switching options
      if (options.pop || options.push || options.next) {
        if (!hasStates) {
          throw new Error("State-switching options are not allowed in stateless lexers (for token '" + options.defaultType + "')")
        }
        if (options.fallback) {
          throw new Error("State-switching options are not allowed on fallback tokens (for token '" + options.defaultType + "')")
        }
      }

      // Only rules with a .match are included in the RegExp
      if (match.length === 0) {
        continue
      }
      fastAllowed = false

      groups.push(options)

      // Check unicode flag is used everywhere or nowhere
      for (var j = 0; j < match.length; j++) {
        var obj = match[j]
        if (!isRegExp(obj)) {
          continue
        }

        if (unicodeFlag === null) {
          unicodeFlag = obj.unicode
        } else if (unicodeFlag !== obj.unicode && options.fallback === false) {
          throw new Error('If one rule is /u then all must be')
        }
      }

      // convert to RegExp
      var pat = reUnion(match.map(regexpOrLiteral))

      // validate
      var regexp = new RegExp(pat)
      if (regexp.test("")) {
        throw new Error("RegExp matches empty string: " + regexp)
      }
      var groupCount = reGroups(pat)
      if (groupCount > 0) {
        throw new Error("RegExp has capture groups: " + regexp + "\nUse (?: … ) instead")
      }

      // try and detect rules matching newlines
      if (!options.lineBreaks && regexp.test('\n')) {
        throw new Error('Rule should declare lineBreaks: ' + regexp)
      }

      // store regex
      parts.push(reCapture(pat))
    }


    // If there's no fallback rule, use the sticky flag so we only look for
    // matches at the current index.
    //
    // If we don't support the sticky flag, then fake it using an irrefutable
    // match (i.e. an empty pattern).
    var fallbackRule = errorRule && errorRule.fallback
    var flags = hasSticky && !fallbackRule ? 'ym' : 'gm'
    var suffix = hasSticky || fallbackRule ? '' : '|'

    if (unicodeFlag === true) flags += "u"
    var combined = new RegExp(reUnion(parts) + suffix, flags)
    return {regexp: combined, groups: groups, fast: fast, error: errorRule || defaultErrorRule}
  }

  function compile(rules) {
    var result = compileRules(toRules(rules))
    return new Lexer({start: result}, 'start')
  }

  function checkStateGroup(g, name, map) {
    var state = g && (g.push || g.next)
    if (state && !map[state]) {
      throw new Error("Missing state '" + state + "' (in token '" + g.defaultType + "' of state '" + name + "')")
    }
    if (g && g.pop && +g.pop !== 1) {
      throw new Error("pop must be 1 (in token '" + g.defaultType + "' of state '" + name + "')")
    }
  }
  function compileStates(states, start) {
    var all = states.$all ? toRules(states.$all) : []
    delete states.$all

    var keys = Object.getOwnPropertyNames(states)
    if (!start) start = keys[0]

    var ruleMap = Object.create(null)
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i]
      ruleMap[key] = toRules(states[key]).concat(all)
    }
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i]
      var rules = ruleMap[key]
      var included = Object.create(null)
      for (var j = 0; j < rules.length; j++) {
        var rule = rules[j]
        if (!rule.include) continue
        var splice = [j, 1]
        if (rule.include !== key && !included[rule.include]) {
          included[rule.include] = true
          var newRules = ruleMap[rule.include]
          if (!newRules) {
            throw new Error("Cannot include nonexistent state '" + rule.include + "' (in state '" + key + "')")
          }
          for (var k = 0; k < newRules.length; k++) {
            var newRule = newRules[k]
            if (rules.indexOf(newRule) !== -1) continue
            splice.push(newRule)
          }
        }
        rules.splice.apply(rules, splice)
        j--
      }
    }

    var map = Object.create(null)
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i]
      map[key] = compileRules(ruleMap[key], true)
    }

    for (var i = 0; i < keys.length; i++) {
      var name = keys[i]
      var state = map[name]
      var groups = state.groups
      for (var j = 0; j < groups.length; j++) {
        checkStateGroup(groups[j], name, map)
      }
      var fastKeys = Object.getOwnPropertyNames(state.fast)
      for (var j = 0; j < fastKeys.length; j++) {
        checkStateGroup(state.fast[fastKeys[j]], name, map)
      }
    }

    return new Lexer(map, start)
  }

  function keywordTransform(map) {

    // Use a JavaScript Map to map keywords to their corresponding token type
    // unless Map is unsupported, then fall back to using an Object:
    var isMap = typeof Map !== 'undefined'
    var reverseMap = isMap ? new Map : Object.create(null)

    var types = Object.getOwnPropertyNames(map)
    for (var i = 0; i < types.length; i++) {
      var tokenType = types[i]
      var item = map[tokenType]
      var keywordList = Array.isArray(item) ? item : [item]
      keywordList.forEach(function(keyword) {
        if (typeof keyword !== 'string') {
          throw new Error("keyword must be string (in keyword '" + tokenType + "')")
        }
        if (isMap) {
          reverseMap.set(keyword, tokenType)
        } else {
          reverseMap[keyword] = tokenType
        }
      })
    }
    return function(k) {
      return isMap ? reverseMap.get(k) : reverseMap[k]
    }
  }

  /***************************************************************************/

  var Lexer = function(states, state) {
    this.startState = state
    this.states = states
    this.buffer = ''
    this.stack = []
    this.reset()
  }

  Lexer.prototype.reset = function(data, info) {
    this.buffer = data || ''
    this.index = 0
    this.line = info ? info.line : 1
    this.col = info ? info.col : 1
    this.queuedToken = info ? info.queuedToken : null
    this.queuedText = info ? info.queuedText: "";
    this.queuedThrow = info ? info.queuedThrow : null
    this.setState(info ? info.state : this.startState)
    this.stack = info && info.stack ? info.stack.slice() : []
    return this
  }

  Lexer.prototype.save = function() {
    return {
      line: this.line,
      col: this.col,
      state: this.state,
      stack: this.stack.slice(),
      queuedToken: this.queuedToken,
      queuedText: this.queuedText,
      queuedThrow: this.queuedThrow,
    }
  }

  Lexer.prototype.setState = function(state) {
    if (!state || this.state === state) return
    this.state = state
    var info = this.states[state]
    this.groups = info.groups
    this.error = info.error
    this.re = info.regexp
    this.fast = info.fast
  }

  Lexer.prototype.popState = function() {
    this.setState(this.stack.pop())
  }

  Lexer.prototype.pushState = function(state) {
    this.stack.push(this.state)
    this.setState(state)
  }

  var eat = hasSticky ? function(re, buffer) { // assume re is /y
    return re.exec(buffer)
  } : function(re, buffer) { // assume re is /g
    var match = re.exec(buffer)
    // will always match, since we used the |(?:) trick
    if (match[0].length === 0) {
      return null
    }
    return match
  }

  Lexer.prototype._getGroup = function(match) {
    var groupCount = this.groups.length
    for (var i = 0; i < groupCount; i++) {
      if (match[i + 1] !== undefined) {
        return this.groups[i]
      }
    }
    throw new Error('Cannot find token type for matched text')
  }

  function tokenToString() {
    return this.value
  }

  Lexer.prototype.next = function() {
    var index = this.index

    // If a fallback token matched, we don't need to re-run the RegExp
    if (this.queuedGroup) {
      var token = this._token(this.queuedGroup, this.queuedText, index)
      this.queuedGroup = null
      this.queuedText = ""
      return token
    }

    var buffer = this.buffer
    if (index === buffer.length) {
      return // EOF
    }

    // Fast matching for single characters
    var group = this.fast[buffer.charCodeAt(index)]
    if (group) {
      return this._token(group, buffer.charAt(index), index)
    }

    // Execute RegExp
    var re = this.re
    re.lastIndex = index
    var match = eat(re, buffer)

    // Error tokens match the remaining buffer
    var error = this.error
    if (match == null) {
      return this._token(error, buffer.slice(index, buffer.length), index)
    }

    var group = this._getGroup(match)
    var text = match[0]

    if (error.fallback && match.index !== index) {
      this.queuedGroup = group
      this.queuedText = text

      // Fallback tokens contain the unmatched portion of the buffer
      return this._token(error, buffer.slice(index, match.index), index)
    }

    return this._token(group, text, index)
  }

  Lexer.prototype._token = function(group, text, offset) {
    // count line breaks
    var lineBreaks = 0
    if (group.lineBreaks) {
      var matchNL = /\n/g
      var nl = 1
      if (text === '\n') {
        lineBreaks = 1
      } else {
        while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex }
      }
    }

    var token = {
      type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,
      value: typeof group.value === 'function' ? group.value(text) : text,
      text: text,
      toString: tokenToString,
      offset: offset,
      lineBreaks: lineBreaks,
      line: this.line,
      col: this.col,
    }
    // nb. adding more props to token object will make V8 sad!

    var size = text.length
    this.index += size
    this.line += lineBreaks
    if (lineBreaks !== 0) {
      this.col = size - nl + 1
    } else {
      this.col += size
    }

    // throw, if no rule with {error: true}
    if (group.shouldThrow) {
      var err = new Error(this.formatError(token, "invalid syntax"))
      throw err;
    }

    if (group.pop) this.popState()
    else if (group.push) this.pushState(group.push)
    else if (group.next) this.setState(group.next)

    return token
  }

  if (typeof Symbol !== 'undefined' && Symbol.iterator) {
    var LexerIterator = function(lexer) {
      this.lexer = lexer
    }

    LexerIterator.prototype.next = function() {
      var token = this.lexer.next()
      return {value: token, done: !token}
    }

    LexerIterator.prototype[Symbol.iterator] = function() {
      return this
    }

    Lexer.prototype[Symbol.iterator] = function() {
      return new LexerIterator(this)
    }
  }

  Lexer.prototype.formatError = function(token, message) {
    if (token == null) {
      // An undefined token indicates EOF
      var text = this.buffer.slice(this.index)
      var token = {
        text: text,
        offset: this.index,
        lineBreaks: text.indexOf('\n') === -1 ? 0 : 1,
        line: this.line,
        col: this.col,
      }
    }
    
    var numLinesAround = 2
    var firstDisplayedLine = Math.max(token.line - numLinesAround, 1)
    var lastDisplayedLine = token.line + numLinesAround
    var lastLineDigits = String(lastDisplayedLine).length
    var displayedLines = lastNLines(
        this.buffer, 
        (this.line - token.line) + numLinesAround + 1
      )
      .slice(0, 5)
    var errorLines = []
    errorLines.push(message + " at line " + token.line + " col " + token.col + ":")
    errorLines.push("")
    for (var i = 0; i < displayedLines.length; i++) {
      var line = displayedLines[i]
      var lineNo = firstDisplayedLine + i
      errorLines.push(pad(String(lineNo), lastLineDigits) + "  " + line);
      if (lineNo === token.line) {
        errorLines.push(pad("", lastLineDigits + token.col + 1) + "^")
      }
    }
    return errorLines.join("\n")
  }

  Lexer.prototype.clone = function() {
    return new Lexer(this.states, this.state)
  }

  Lexer.prototype.has = function(tokenType) {
    return true
  }


  return {
    compile: compile,
    states: compileStates,
    error: Object.freeze({error: true}),
    fallback: Object.freeze({fallback: true}),
    keywords: keywordTransform,
  }

}));

},{}],159:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],160:[function(require,module,exports){
/* eslint-env browser */

const { Buffer } = require('buffer/')

function syncFetch (...args) {
  const request = new syncFetch.Request(...args)

  const xhr = new XMLHttpRequest()
  xhr.withCredentials = request.credentials === 'include'
  xhr.timeout = request[INTERNALS].timeout

  // Request
  xhr.open(request.method, request.url, false)

  let useBinaryEncoding = false
  try {
    // Only allowed in Worker scope, not available in older browsers
    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType#Synchronous_XHR_restrictions
    xhr.responseType = 'arraybuffer'
  } catch (e) {
    // Not in Worker scope; instead, attempt this alternative method
    // https://web.archive.org/web/20071103070418/http://mgran.blogspot.com/2006/08/downloading-binary-streams-with.html
    xhr.overrideMimeType('text/plain; charset=x-user-defined')
    useBinaryEncoding = true
  }

  for (const header of request.headers) {
    xhr.setRequestHeader(...header)
  }

  xhr.send(request.body || null)

  // Response
  let headers = xhr.getAllResponseHeaders()
  headers = headers && headers.split('\r\n').filter(Boolean).map(header => header.split(': ', 2))

  let body = xhr.response
  if (useBinaryEncoding) {
    const buffer = Buffer.alloc(body.length)
    for (let i = 0; i < body.length; i++) {
      buffer[i] = body.charCodeAt(i) & 0xff
    }
    body = buffer
  }

  const response = new syncFetch.Response(body, {
    headers,
    status: xhr.status,
    statusText: xhr.statusText
  })

  response[INTERNALS].url = xhr.responseURL
  response[INTERNALS].redirected = xhr.responseURL !== request.url

  return response
}

const INTERNALS = Symbol('SyncFetch Internals')
const REQ_UNSUPPORTED = ['mode', 'cache', 'redirect', 'referrer', 'integrity']
const HTTP_STATUS = {
  100: 'Continue',
  101: 'Switching Protocols',
  200: 'OK',
  201: 'Created',
  202: 'Accepted',
  203: 'Non-Authoritative Information',
  204: 'No Content',
  205: 'Reset Content',
  206: 'Partial Content',
  300: 'Multiple Choices',
  301: 'Moved Permanently',
  302: 'Found',
  303: 'See Other',
  304: 'Not Modified',
  305: 'Use Proxy',
  307: 'Temporary Redirect',
  400: 'Bad Request',
  401: 'Unauthorized',
  402: 'Payment Required',
  403: 'Forbidden',
  404: 'Not Found',
  405: 'Method Not Allowed',
  406: 'Not Acceptable',
  407: 'Proxy Authentication Required',
  408: 'Request Timeout',
  409: 'Conflict',
  410: 'Gone',
  411: 'Length Required',
  412: 'Precondition Failed',
  413: 'Payload Too Large',
  414: 'URI Too Long',
  415: 'Unsupported Media Type',
  416: 'Range Not Satisfiable',
  417: 'Expectation Failed',
  426: 'Upgrade Required',
  500: 'Internal Server Error',
  501: 'Not Implemented',
  502: 'Bad Gateway',
  503: 'Service Unavailable',
  504: 'Gateway Timeout',
  505: 'HTTP Version Not Supported'
}

class SyncRequest {
  constructor (resource, init = {}) {
    for (const option of REQ_UNSUPPORTED) {
      if (option in init) {
        throw new TypeError(`option ${option} not supported`)
      }
    }

    if (init.credentials === 'same-origin') {
      throw new TypeError('option credentials with value \'same-origin\' not supported')
    }

    this[INTERNALS] = {
      method: init.method || 'GET',
      headers: new syncFetch.Headers(init.headers),
      body: init.body ? Buffer.from(init.body) : null,
      credentials: init.credentials || 'omit',

      // Non-spec
      timeout: init.timeout || 0
    }

    if (typeof resource === 'string') {
      this[INTERNALS].url = resource
    } else if (resource instanceof SyncRequest) {
      this[INTERNALS].url = resource.url
      if (!init.method) {
        this[INTERNALS].method = resource.method
      }
      if (!init.headers) {
        this[INTERNALS].headers = resource.headers
      }
      if (!init.body) {
        this[INTERNALS].body = resource[INTERNALS].body
      }
      if (!init.credentials) {
        this[INTERNALS].credentials = resource.credentials
      }
    } else {
      throw new TypeError('Request input should be a URL string or a Request object')
    }
  }

  get cache () {
    return 'default'
  }

  get credentials () {
    return this[INTERNALS].credentials
  }

  get destination () {
    return ''
  }

  get headers () {
    return this[INTERNALS].headers
  }

  get integrity () {
    return ''
  }

  get method () {
    return this[INTERNALS].method
  }

  get mode () {
    return 'cors'
  }

  get priority () {
    return 'auto'
  }

  get redirect () {
    return 'follow'
  }

  get referrer () {
    return 'about:client'
  }

  get referrerPolicy () {
    return ''
  }

  get url () {
    return this[INTERNALS].url
  }

  clone () {
    checkBody(this)
    return new SyncRequest(this.url, this[INTERNALS])
  }
}

class SyncResponse {
  constructor (body, init = {}) {
    this[INTERNALS] = {
      body: body ? Buffer.from(body) : null,
      bodyUsed: false,

      headers: new syncFetch.Headers(init.headers),
      status: init.status,
      statusText: init.statusText
    }
  }

  get headers () {
    return this[INTERNALS].headers
  }

  get ok () {
    const status = this[INTERNALS].status
    return status >= 200 && status < 300
  }

  get redirected () {
    return this[INTERNALS].redirected
  }

  get status () {
    return this[INTERNALS].status
  }

  get statusText () {
    return this[INTERNALS].statusText
  }

  get url () {
    return this[INTERNALS].url
  }

  clone () {
    return this.redirect(this[INTERNALS].url, this[INTERNALS].status)
  }

  redirect (url, status) {
    checkBody(this)

    const response = new SyncResponse(this[INTERNALS].body, {
      headers: this[INTERNALS].headers,
      status: status || this[INTERNALS].status,
      statusText: HTTP_STATUS[status] || this[INTERNALS].statusText
    })

    response[INTERNALS].url = url || this[INTERNALS].url
    response[INTERNALS].redirected = this[INTERNALS].redirected

    return response
  }
}

class Body {
  constructor (body) {
    this[INTERNALS] = {
      body: Buffer.from(body),
      bodyUsed: false
    }
  }

  get bodyUsed () {
    return this[INTERNALS].bodyUsed
  }

  static mixin (prototype) {
    for (const name of Object.getOwnPropertyNames(Body.prototype)) {
      if (name === 'constructor') { continue }
      const desc = Object.getOwnPropertyDescriptor(Body.prototype, name)
      Object.defineProperty(prototype, name, { ...desc, enumerable: true })
    }
  }

  arrayBuffer () {
    const buffer = consumeBody(this)
    return buffer.buffer.slice(buffer.byteOffset, buffer.byteOffset + buffer.byteLength)
  }

  blob () {
    const type = this.headers && this.headers.get('content-type')
    return new Blob([consumeBody(this)], type && { type })
  }

  text () {
    return consumeBody(this).toString()
  }

  json () {
    try {
      return JSON.parse(consumeBody(this).toString())
    } catch (err) {
      throw new TypeError(`invalid json response body at ${this.url} reason: ${err.message}`, 'invalid-json')
    }
  }

  buffer () {
    return consumeBody(this).clone()
  }
}

function checkBody (body) {
  if (body.bodyUsed) {
    throw new TypeError(`body used already for: ${body.url}`)
  }
}

function consumeBody (body) {
  checkBody(body)
  body[INTERNALS].bodyUsed = true
  return body[INTERNALS].body || Buffer.alloc(0)
}

Body.mixin(SyncRequest.prototype)
Body.mixin(SyncResponse.prototype)

class Headers {
  constructor (headers) {
    if (headers instanceof syncFetch.Headers) {
      this[INTERNALS] = { ...headers[INTERNALS] }
    } else {
      this[INTERNALS] = {}

      if (Array.isArray(headers)) {
        for (const [name, value] of headers) {
          this.append(name, value)
        }
      } else if (typeof headers === 'object') {
        for (const name in headers) {
          this.set(name, headers[name])
        }
      }
    }
  }

  // modification
  append (name, value) {
    name = name.toLowerCase()
    if (!this[INTERNALS][name]) {
      this[INTERNALS][name] = []
    }
    this[INTERNALS][name].push(value)
  }

  delete (name) {
    delete this[INTERNALS][name.toLowerCase()]
  }

  set (name, value) {
    this[INTERNALS][name.toLowerCase()] = [value]
  }

  // access
  entries () {
    const pairs = []
    for (const name in this[INTERNALS]) {
      for (const value of this[INTERNALS][name]) {
        pairs.push([name, value])
      }
    }
    return pairs
  }

  get (name) {
    name = name.toLowerCase()
    return name in this[INTERNALS] ? this[INTERNALS][name].join(', ') : null
  }

  keys () {
    return Object.keys(this[INTERNALS])
  }

  has (name) {
    return name.toLowerCase() in this[INTERNALS]
  }

  values () {
    const values = []
    for (const name in this[INTERNALS]) {
      for (const value of this[INTERNALS][name]) {
        values.push(value)
      }
    }
    return values
  }

  * [Symbol.iterator] () {
    for (const name in this[INTERNALS]) {
      for (const value of this[INTERNALS][name]) {
        yield [name, value]
      }
    }
  }
}

syncFetch.Headers = Headers
syncFetch.Request = SyncRequest
syncFetch.Response = SyncResponse
module.exports = syncFetch

},{"buffer/":161}],161:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var customInspectSymbol =
  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation
    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
    : null

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    var proto = { foo: function () { return 42 } }
    Object.setPrototypeOf(proto, Uint8Array.prototype)
    Object.setPrototypeOf(arr, proto)
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  Object.setPrototypeOf(buf, Buffer.prototype)
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayView(value)
  }

  if (value == null) {
    throw new TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof SharedArrayBuffer !== 'undefined' &&
      (isInstance(value, SharedArrayBuffer) ||
      (value && isInstance(value.buffer, SharedArrayBuffer)))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)
Object.setPrototypeOf(Buffer, Uint8Array)

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayView (arrayView) {
  if (isInstance(arrayView, Uint8Array)) {
    var copy = new Uint8Array(arrayView)
    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)
  }
  return fromArrayLike(arrayView)
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(buf, Buffer.prototype)

  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      if (pos + buf.length > buffer.length) {
        Buffer.from(buf).copy(buffer, pos)
      } else {
        Uint8Array.prototype.set.call(
          buffer,
          buf,
          pos
        )
      }
    } else if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    } else {
      buf.copy(buffer, pos)
    }
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}
if (customInspectSymbol) {
  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
      case 'latin1':
      case 'binary':
        return asciiWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF)
      ? 4
      : (firstByte > 0xDF)
          ? 3
          : (firstByte > 0xBF)
              ? 2
              : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += hexSliceLookupTable[buf[i]]
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
  for (var i = 0; i < bytes.length - 1; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(newBuf, Buffer.prototype)

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUintLE =
Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUintBE =
Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUint8 =
Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUint16LE =
Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUint16BE =
Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUint32LE =
Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUint32BE =
Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUintLE =
Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUintBE =
Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUint8 =
Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUint16LE =
Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUint16BE =
Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUint32LE =
Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUint32BE =
Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  } else if (typeof val === 'boolean') {
    val = Number(val)
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
var hexSliceLookupTable = (function () {
  var alphabet = '0123456789abcdef'
  var table = new Array(256)
  for (var i = 0; i < 16; ++i) {
    var i16 = i * 16
    for (var j = 0; j < 16; ++j) {
      table[i16 + j] = alphabet[i] + alphabet[j]
    }
  }
  return table
})()

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":129,"buffer":130,"ieee754":132}],162:[function(require,module,exports){
(function (global){(function (){
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (factory((global.WHATWGFetch = {})));
}(this, (function (exports) { 'use strict';

  /* eslint-disable no-prototype-builtins */
  var g =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof self !== 'undefined' && self) ||
    // eslint-disable-next-line no-undef
    (typeof global !== 'undefined' && global) ||
    {};

  var support = {
    searchParams: 'URLSearchParams' in g,
    iterable: 'Symbol' in g && 'iterator' in Symbol,
    blob:
      'FileReader' in g &&
      'Blob' in g &&
      (function() {
        try {
          new Blob();
          return true
        } catch (e) {
          return false
        }
      })(),
    formData: 'FormData' in g,
    arrayBuffer: 'ArrayBuffer' in g
  };

  function isDataView(obj) {
    return obj && DataView.prototype.isPrototypeOf(obj)
  }

  if (support.arrayBuffer) {
    var viewClasses = [
      '[object Int8Array]',
      '[object Uint8Array]',
      '[object Uint8ClampedArray]',
      '[object Int16Array]',
      '[object Uint16Array]',
      '[object Int32Array]',
      '[object Uint32Array]',
      '[object Float32Array]',
      '[object Float64Array]'
    ];

    var isArrayBufferView =
      ArrayBuffer.isView ||
      function(obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
      };
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {
      throw new TypeError('Invalid character in header field name: "' + name + '"')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function() {
        var value = items.shift();
        return {done: value === undefined, value: value}
      }
    };

    if (support.iterable) {
      iterator[Symbol.iterator] = function() {
        return iterator
      };
    }

    return iterator
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value);
      }, this);
    } else if (Array.isArray(headers)) {
      headers.forEach(function(header) {
        if (header.length != 2) {
          throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)
        }
        this.append(header[0], header[1]);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var oldValue = this.map[name];
    this.map[name] = oldValue ? oldValue + ', ' + value : value;
  };

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function(name) {
    name = normalizeName(name);
    return this.has(name) ? this.map[name] : null
  };

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  };

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = normalizeValue(value);
  };

  Headers.prototype.forEach = function(callback, thisArg) {
    for (var name in this.map) {
      if (this.map.hasOwnProperty(name)) {
        callback.call(thisArg, this.map[name], name, this);
      }
    }
  };

  Headers.prototype.keys = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push(name);
    });
    return iteratorFor(items)
  };

  Headers.prototype.values = function() {
    var items = [];
    this.forEach(function(value) {
      items.push(value);
    });
    return iteratorFor(items)
  };

  Headers.prototype.entries = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items)
  };

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body._noBody) return
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result);
      };
      reader.onerror = function() {
        reject(reader.error);
      };
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);
    var encoding = match ? match[1] : 'utf-8';
    reader.readAsText(blob, encoding);
    return promise
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]);
    }
    return chars.join('')
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0)
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer
    }
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function(body) {
      /*
        fetch-mock wraps the Response object in an ES6 Proxy to
        provide useful test harness features such as flush. However, on
        ES5 browsers without fetch or Proxy support pollyfills must be used;
        the proxy-pollyfill is unable to proxy an attribute unless it exists
        on the object before the Proxy is created. This change ensures
        Response.bodyUsed exists on the instance, while maintaining the
        semantic of setting Request.bodyUsed in the constructor before
        _initBody is called.
      */
      // eslint-disable-next-line no-self-assign
      this.bodyUsed = this.bodyUsed;
      this._bodyInit = body;
      if (!body) {
        this._noBody = true;
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);
        // IE 10-11 can't handle a DataView body.
        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        this._bodyText = body = Object.prototype.toString.call(body);
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this);
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      };
    }

    this.arrayBuffer = function() {
      if (this._bodyArrayBuffer) {
        var isConsumed = consumed(this);
        if (isConsumed) {
          return isConsumed
        } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {
          return Promise.resolve(
            this._bodyArrayBuffer.buffer.slice(
              this._bodyArrayBuffer.byteOffset,
              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength
            )
          )
        } else {
          return Promise.resolve(this._bodyArrayBuffer)
        }
      } else if (support.blob) {
        return this.blob().then(readBlobAsArrayBuffer)
      } else {
        throw new Error('could not read as ArrayBuffer')
      }
    };

    this.text = function() {
      var rejected = consumed(this);
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text')
      } else {
        return Promise.resolve(this._bodyText)
      }
    };

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      };
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    };

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method
  }

  function Request(input, options) {
    if (!(this instanceof Request)) {
      throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
    }

    options = options || {};
    var body = options.body;

    if (input instanceof Request) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      this.signal = input.signal;
      if (!body && input._bodyInit != null) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    } else {
      this.url = String(input);
    }

    this.credentials = options.credentials || this.credentials || 'same-origin';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.signal = options.signal || this.signal || (function () {
      if ('AbortController' in g) {
        var ctrl = new AbortController();
        return ctrl.signal;
      }
    }());
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body);

    if (this.method === 'GET' || this.method === 'HEAD') {
      if (options.cache === 'no-store' || options.cache === 'no-cache') {
        // Search for a '_' parameter in the query string
        var reParamSearch = /([?&])_=[^&]*/;
        if (reParamSearch.test(this.url)) {
          // If it already exists then set the value with the current time
          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());
        } else {
          // Otherwise add a new '_' parameter to the end with the current time
          var reQueryString = /\?/;
          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();
        }
      }
    }
  }

  Request.prototype.clone = function() {
    return new Request(this, {body: this._bodyInit})
  };

  function decode(body) {
    var form = new FormData();
    body
      .trim()
      .split('&')
      .forEach(function(bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
    return form
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers();
    // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
    // https://tools.ietf.org/html/rfc7230#section-3.2
    var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill
    // https://github.com/github/fetch/issues/748
    // https://github.com/zloirock/core-js/issues/751
    preProcessedHeaders
      .split('\r')
      .map(function(header) {
        return header.indexOf('\n') === 0 ? header.substr(1, header.length) : header
      })
      .forEach(function(line) {
        var parts = line.split(':');
        var key = parts.shift().trim();
        if (key) {
          var value = parts.join(':').trim();
          try {
            headers.append(key, value);
          } catch (error) {
            console.warn('Response ' + error.message);
          }
        }
      });
    return headers
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!(this instanceof Response)) {
      throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
    }
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = options.status === undefined ? 200 : options.status;
    if (this.status < 200 || this.status > 599) {
      throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].")
    }
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;
    this.headers = new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  };

  Response.error = function() {
    var response = new Response(null, {status: 200, statusText: ''});
    response.ok = false;
    response.status = 0;
    response.type = 'error';
    return response
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  };

  exports.DOMException = g.DOMException;
  try {
    new exports.DOMException();
  } catch (err) {
    exports.DOMException = function(message, name) {
      this.message = message;
      this.name = name;
      var error = Error(message);
      this.stack = error.stack;
    };
    exports.DOMException.prototype = Object.create(Error.prototype);
    exports.DOMException.prototype.constructor = exports.DOMException;
  }

  function fetch(input, init) {
    return new Promise(function(resolve, reject) {
      var request = new Request(input, init);

      if (request.signal && request.signal.aborted) {
        return reject(new exports.DOMException('Aborted', 'AbortError'))
      }

      var xhr = new XMLHttpRequest();

      function abortXhr() {
        xhr.abort();
      }

      xhr.onload = function() {
        var options = {
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        // This check if specifically for when a user fetches a file locally from the file system
        // Only if the status is out of a normal range
        if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {
          options.status = 200;
        } else {
          options.status = xhr.status;
        }
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        setTimeout(function() {
          resolve(new Response(body, options));
        }, 0);
      };

      xhr.onerror = function() {
        setTimeout(function() {
          reject(new TypeError('Network request failed'));
        }, 0);
      };

      xhr.ontimeout = function() {
        setTimeout(function() {
          reject(new TypeError('Network request timed out'));
        }, 0);
      };

      xhr.onabort = function() {
        setTimeout(function() {
          reject(new exports.DOMException('Aborted', 'AbortError'));
        }, 0);
      };

      function fixUrl(url) {
        try {
          return url === '' && g.location.href ? g.location.href : url
        } catch (e) {
          return url
        }
      }

      xhr.open(request.method, fixUrl(request.url), true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      } else if (request.credentials === 'omit') {
        xhr.withCredentials = false;
      }

      if ('responseType' in xhr) {
        if (support.blob) {
          xhr.responseType = 'blob';
        } else if (
          support.arrayBuffer
        ) {
          xhr.responseType = 'arraybuffer';
        }
      }

      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {
        var names = [];
        Object.getOwnPropertyNames(init.headers).forEach(function(name) {
          names.push(normalizeName(name));
          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));
        });
        request.headers.forEach(function(value, name) {
          if (names.indexOf(name) === -1) {
            xhr.setRequestHeader(name, value);
          }
        });
      } else {
        request.headers.forEach(function(value, name) {
          xhr.setRequestHeader(name, value);
        });
      }

      if (request.signal) {
        request.signal.addEventListener('abort', abortXhr);

        xhr.onreadystatechange = function() {
          // DONE (success or failure)
          if (xhr.readyState === 4) {
            request.signal.removeEventListener('abort', abortXhr);
          }
        };
      }

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    })
  }

  fetch.polyfill = true;

  if (!g.fetch) {
    g.fetch = fetch;
    g.Headers = Headers;
    g.Request = Request;
    g.Response = Response;
  }

  exports.Headers = Headers;
  exports.Request = Request;
  exports.Response = Response;
  exports.fetch = fetch;

  Object.defineProperty(exports, '__esModule', { value: true });

})));

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],163:[function(require,module,exports){
const toDateObject = require('./wikibase_time_to_date_object')

const helpers = {}
helpers.isNumericId = id => /^[1-9][0-9]*$/.test(id)
helpers.isEntityId = id => /^((Q|P|L|M)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)$/.test(id)
helpers.isEntitySchemaId = id => /^E[1-9][0-9]*$/.test(id)
helpers.isItemId = id => /^Q[1-9][0-9]*$/.test(id)
helpers.isPropertyId = id => /^P[1-9][0-9]*$/.test(id)
helpers.isLexemeId = id => /^L[1-9][0-9]*$/.test(id)
helpers.isFormId = id => /^L[1-9][0-9]*-F[1-9][0-9]*$/.test(id)
helpers.isSenseId = id => /^L[1-9][0-9]*-S[1-9][0-9]*$/.test(id)
helpers.isGuid = guid => /^((Q|P|L)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)\$[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(guid)
helpers.isHash = hash => /^[0-9a-f]{40}$/.test(hash)
helpers.isPropertyClaimsId = id => {
  const [ entityId, propertyId ] = id.split('#')
  return helpers.isEntityId(entityId) && helpers.isPropertyId(propertyId)
}
helpers.isRevisionId = id => /^\d+$/.test(id)

helpers.isEntityPageTitle = title => {
  if (typeof title !== 'string') return false
  let [ namespace, id ] = title.split(':')
  if (namespace && id) {
    return isEntityNamespace(namespace) && helpers[`is${namespace}Id`](id)
  } else {
    id = namespace
    return helpers.isItemId(id)
  }
}

const entityNamespaces = [ 'Item', 'Property', 'Lexeme' ]

const isEntityNamespace = str => entityNamespaces.includes(str)

const isNonNestedEntityId = id => /^(Q|P|L)[1-9][0-9]*$/.test(id)

helpers.getNumericId = id => {
  if (!isNonNestedEntityId(id)) throw new Error(`invalid entity id: ${id}`)
  return id.replace(/^(Q|P|L)/, '')
}

helpers.wikibaseTimeToDateObject = toDateObject

// Try to parse the date or return the input
const bestEffort = fn => value => {
  try {
    return fn(value)
  } catch (err) {
    value = value.time || value

    const sign = value[0]
    let [ yearMonthDay, withinDay ] = value.slice(1).split('T')
    yearMonthDay = yearMonthDay.replace(/-00/g, '-01')

    return `${sign}${yearMonthDay}T${withinDay}`
  }
}

const toEpochTime = wikibaseTime => toDateObject(wikibaseTime).getTime()
const toISOString = wikibaseTime => toDateObject(wikibaseTime).toISOString()

// A date format that knows just three precisions:
// 'yyyy', 'yyyy-mm', and 'yyyy-mm-dd' (including negative and non-4 digit years)
// Should be able to handle the old and the new Wikidata time:
// - in the old one, units below the precision where set to 00
// - in the new one, those months and days are set to 01 in those cases,
//   so when we can access the full claim object, we check the precision
//   to recover the old format
const toSimpleDay = wikibaseTime => {
  // Also accept claim datavalue.value objects, and actually prefer those,
  // as we can check the precision
  if (typeof wikibaseTime === 'object') {
    const { time, precision } = wikibaseTime
    // Year precision
    if (precision === 9) wikibaseTime = time.replace('-01-01T', '-00-00T')
    // Month precision
    else if (precision === 10) wikibaseTime = time.replace('-01T', '-00T')
    else wikibaseTime = time
  }

  return wikibaseTime.split('T')[0]
  // Remove positive years sign
  .replace(/^\+/, '')
  // Remove years padding zeros
  .replace(/^(-?)0+/, '$1')
  // Remove days if not included in the Wikidata date precision
  .replace(/-00$/, '')
  // Remove months if not included in the Wikidata date precision
  .replace(/-00$/, '')
}

helpers.wikibaseTimeToEpochTime = bestEffort(toEpochTime)
helpers.wikibaseTimeToISOString = bestEffort(toISOString)
helpers.wikibaseTimeToSimpleDay = bestEffort(toSimpleDay)

helpers.getImageUrl = (filename, width) => {
  let url = `https://commons.wikimedia.org/wiki/Special:FilePath/${filename}`
  if (typeof width === 'number') url += `?width=${width}`
  return url
}

helpers.getEntityIdFromGuid = guid => {
  const parts = guid.split(/[$-]/)
  if (parts.length === 6) {
    // Examples:
    // - q520$BCA8D9DE-B467-473B-943C-6FD0C5B3D02C
    // - P6216-a7fd6230-496e-6b47-ca4a-dcec5dbd7f95
    return parts[0].toUpperCase()
  } else if (parts.length === 7) {
    // Examples:
    // - L525-S1$66D20252-8CEC-4DB1-8B00-D713CFF42E48
    // - L525-F2-52c9b382-02f5-4413-9923-26ade74f5a0d
    return parts.slice(0, 2).join('-').toUpperCase()
  } else {
    throw new Error(`invalid guid: ${guid}`)
  }
}

module.exports = helpers

},{"./wikibase_time_to_date_object":178}],164:[function(require,module,exports){
const { wikibaseTimeToISOString, wikibaseTimeToEpochTime, wikibaseTimeToSimpleDay } = require('./helpers')

const simple = datavalue => datavalue.value

const monolingualtext = (datavalue, options) => {
  return options.keepRichValues ? datavalue.value : datavalue.value.text
}

const entity = (datavalue, options) => prefixedId(datavalue, options.entityPrefix)

const entityLetter = {
  item: 'Q',
  lexeme: 'L',
  property: 'P'
}

const prefixedId = (datavalue, prefix) => {
  const { value } = datavalue
  const id = value.id || entityLetter[value['entity-type']] + value['numeric-id']
  return typeof prefix === 'string' ? `${prefix}:${id}` : id
}

const quantity = (datavalue, options) => {
  const { value } = datavalue
  const amount = parseFloat(value.amount)
  if (options.keepRichValues) {
    const richValue = {
      amount: parseFloat(value.amount),
      // ex: http://www.wikidata.org/entity/
      unit: value.unit.replace(/^https?:\/\/.*\/entity\//, '')
    }
    if (value.upperBound != null) richValue.upperBound = parseFloat(value.upperBound)
    if (value.lowerBound != null) richValue.lowerBound = parseFloat(value.lowerBound)
    return richValue
  } else {
    return amount
  }
}

const coordinate = (datavalue, options) => {
  if (options.keepRichValues) {
    return datavalue.value
  } else {
    return [ datavalue.value.latitude, datavalue.value.longitude ]
  }
}

const time = (datavalue, options) => {
  let timeValue
  if (typeof options.timeConverter === 'function') {
    timeValue = options.timeConverter(datavalue.value)
  } else {
    timeValue = getTimeConverter(options.timeConverter)(datavalue.value)
  }
  if (options.keepRichValues) {
    const { timezone, before, after, precision, calendarmodel } = datavalue.value
    return { time: timeValue, timezone, before, after, precision, calendarmodel }
  } else {
    return timeValue
  }
}

const getTimeConverter = (key = 'iso') => {
  const converter = timeConverters[key]
  if (!converter) throw new Error(`invalid converter key: ${JSON.stringify(key).substring(0, 100)}`)
  return converter
}

// Each time converter should be able to accept 2 keys of arguments:
// - either datavalue.value objects (prefered as it gives access to the precision)
// - or the time string (datavalue.value.time)
const timeConverters = {
  iso: wikibaseTimeToISOString,
  epoch: wikibaseTimeToEpochTime,
  'simple-day': wikibaseTimeToSimpleDay,
  none: wikibaseTime => wikibaseTime.time || wikibaseTime
}

const parsers = {
  commonsMedia: simple,
  'external-id': simple,
  'geo-shape': simple,
  'globe-coordinate': coordinate,
  math: simple,
  monolingualtext,
  'musical-notation': simple,
  quantity,
  string: simple,
  'tabular-data': simple,
  time,
  url: simple,
  'wikibase-entityid': entity,
  'wikibase-form': entity,
  'wikibase-item': entity,
  'wikibase-lexeme': entity,
  'wikibase-property': entity,
  'wikibase-sense': entity
}

module.exports = {
  parsers,
  parse: (datatype, datavalue, options, claimId) => {
    // Known case of missing datatype: form.claims, sense.claims
    datatype = datatype || datavalue.type
    // Known case requiring this: legacy "muscial notation" datatype
    datatype = datatype.replace(' ', '-')

    try {
      return parsers[datatype](datavalue, options)
    } catch (err) {
      if (err.message === 'parsers[datatype] is not a function') {
        err.message = `${datatype} claim parser isn't implemented
        Claim id: ${claimId}
        Please report to https://github.com/maxlath/wikibase-sdk/issues`
      }
      throw err
    }
  }
}

},{"./helpers":163}],165:[function(require,module,exports){
const { simplifyEntity } = require('./simplify_entity')

const wb = {
  entities: res => {
    // Legacy convenience for the time the 'request' lib was all the rage
    res = res.body || res
    const { entities } = res
    Object.keys(entities).forEach(entityId => {
      entities[entityId] = simplifyEntity(entities[entityId])
    })
    return entities
  },

  pagesTitles: res => {
    // Same behavior as above
    res = res.body || res
    return res.query.search.map(result => result.title)
  }
}

module.exports = {
  wb,
  // Legacy
  wd: wb
}

},{"./simplify_entity":169}],166:[function(require,module,exports){
const truthyPropertyClaims = propClaims => {
  const aggregate = propClaims.reduce(aggregatePerRank, {})
  // on truthyness: https://www.mediawiki.org/wiki/Wikibase/Indexing/RDF_Dump_Format#Truthy_statements
  return aggregate.preferred || aggregate.normal || []
}

const nonDeprecatedPropertyClaims = propClaims => {
  return propClaims.filter(claim => claim.rank !== 'deprecated')
}

const aggregatePerRank = (aggregate, claim) => {
  const { rank } = claim
  aggregate[rank] || (aggregate[rank] = [])
  aggregate[rank].push(claim)
  return aggregate
}

const truthyClaims = claims => {
  const truthClaimsOnly = {}
  Object.keys(claims).forEach(property => {
    truthClaimsOnly[property] = truthyPropertyClaims(claims[property])
  })
  return truthClaimsOnly
}

module.exports = { truthyClaims, truthyPropertyClaims, nonDeprecatedPropertyClaims }

},{}],167:[function(require,module,exports){
const { labels, descriptions, aliases, lemmas, glosses } = require('./simplify_text_attributes')

const {
  simplifyClaim: claim,
  simplifyPropertyClaims: propertyClaims,
  simplifyClaims: claims,
  simplifyQualifier: qualifier,
  simplifyPropertyQualifiers: propertyQualifiers,
  simplifyQualifiers: qualifiers,
  simplifyReferences: references,
} = require('./simplify_claims')

const { simplifyForm: form, simplifyForms: forms } = require('./simplify_forms')
const { simplifySense: sense, simplifySenses: senses } = require('./simplify_senses')

const sitelinks = require('./simplify_sitelinks')
const sparqlResults = require('./simplify_sparql_results')

module.exports = {
  labels,
  descriptions,
  aliases,
  claim,
  propertyClaims,
  claims,
  qualifier,
  propertyQualifiers,
  qualifiers,
  references,
  sitelinks,

  // Aliases
  snak: claim,
  propertySnaks: propertyClaims,
  snaks: claims,

  // Lexemes
  lemmas,
  glosses,
  form,
  forms,
  sense,
  senses,

  sparqlResults

  // Set in ./simplify_entity
  // entity,
  // entities,
}

},{"./simplify_claims":168,"./simplify_forms":170,"./simplify_senses":171,"./simplify_sitelinks":172,"./simplify_sparql_results":173,"./simplify_text_attributes":174}],168:[function(require,module,exports){
const { parse: parseClaim } = require('./parse_claim')
const { uniq } = require('../utils/utils')
const { truthyPropertyClaims, nonDeprecatedPropertyClaims } = require('./rank')

// Expects an entity 'claims' object
// Ex: entity.claims
const simplifyClaims = (claims, ...options) => {
  const { propertyPrefix } = parseOptions(options)
  const simpleClaims = {}
  for (let id in claims) {
    const propClaims = claims[id]
    if (propertyPrefix) {
      id = propertyPrefix + ':' + id
    }
    simpleClaims[id] = simplifyPropertyClaims(propClaims, ...options)
  }
  return simpleClaims
}

// Expects the 'claims' array of a particular property
// Ex: entity.claims.P369
const simplifyPropertyClaims = (propClaims, ...options) => {
  // Avoid to throw on empty inputs to allow to simplify claims array
  // without having to know if the entity as claims for this property
  // Ex: simplifyPropertyClaims(entity.claims.P124211616)
  if (propClaims == null || propClaims.length === 0) return []

  const { keepNonTruthy, keepNonDeprecated, areSubSnaks } = parseOptions(options)

  if (keepNonDeprecated) {
    propClaims = nonDeprecatedPropertyClaims(propClaims)
  } else if (!(keepNonTruthy || areSubSnaks)) {
    propClaims = truthyPropertyClaims(propClaims)
  }

  propClaims = propClaims
    .map(claim => simplifyClaim(claim, ...options))
    // Filter-out novalue and somevalue claims,
    // unless a novalueValue or a somevalueValue is passed in options
    .filter(defined)

  // Deduplicate values unless we return a rich value object
  if (propClaims[0] && typeof propClaims[0] !== 'object') {
    return uniq(propClaims)
  } else {
    return propClaims
  }
}

// Considers null as defined
const defined = obj => obj !== undefined

// Expects a single claim object
// Ex: entity.claims.P369[0]
const simplifyClaim = (claim, ...options) => {
  options = parseOptions(options)
  const { keepQualifiers, keepReferences, keepIds, keepHashes, keepTypes, keepSnaktypes, keepRanks } = parseKeepOptions(options)

  // tries to replace wikidata deep claim object by a simple value
  // e.g. a string, an entity Qid or an epoch time number
  const { mainsnak, rank } = claim

  let value, datatype, datavalue, snaktype, isQualifierSnak, isReferenceSnak
  if (mainsnak) {
    datatype = mainsnak.datatype
    datavalue = mainsnak.datavalue
    snaktype = mainsnak.snaktype
  } else {
    // Qualifiers have no mainsnak, and define datatype, datavalue on claim
    datavalue = claim.datavalue
    datatype = claim.datatype
    snaktype = claim.snaktype
    // Duck typing the sub-snak type
    if (claim.hash) isQualifierSnak = true
    else isReferenceSnak = true
  }

  if (datavalue) {
    value = parseClaim(datatype, datavalue, options, claim.id)
  } else {
    if (snaktype === 'somevalue') value = options.somevalueValue
    else if (snaktype === 'novalue') value = options.novalueValue
    else throw new Error('no datavalue or special snaktype found')
  }

  // Qualifiers should not attempt to keep sub-qualifiers or references
  if (isQualifierSnak) {
    if (!(keepHashes || keepTypes || keepSnaktypes)) return value

    const valueObj = { value }

    if (keepHashes) valueObj.hash = claim.hash
    if (keepTypes) valueObj.type = datatype
    if (keepSnaktypes) valueObj.snaktype = snaktype

    return valueObj
  }
  if (isReferenceSnak) {
    if (!keepTypes) return value

    return { type: datatype, value }
  }
  // No need to test keepHashes as it has no effect if neither
  // keepQualifiers or keepReferences is true
  if (!(keepQualifiers || keepReferences || keepIds || keepTypes || keepSnaktypes || keepRanks)) {
    return value
  }

  // When keeping qualifiers or references, the value becomes an object
  // instead of a direct value
  const valueObj = { value }

  if (keepTypes) valueObj.type = datatype

  if (keepSnaktypes) valueObj.snaktype = snaktype

  if (keepRanks) valueObj.rank = rank

  const subSnaksOptions = getSubSnakOptions(options)
  subSnaksOptions.keepHashes = keepHashes

  if (keepQualifiers) {
    valueObj.qualifiers = simplifyQualifiers(claim.qualifiers, subSnaksOptions)
  }

  if (keepReferences) {
    claim.references = claim.references || []
    valueObj.references = simplifyReferences(claim.references, subSnaksOptions)
  }

  if (keepIds) valueObj.id = claim.id

  return valueObj
}

const parseOptions = options => {
  if (options == null) return {}

  if (options[0] && typeof options[0] === 'object') return options[0]

  // Legacy interface
  const [ entityPrefix, propertyPrefix, keepQualifiers ] = options
  return { entityPrefix, propertyPrefix, keepQualifiers }
}

const simplifyQualifiers = (qualifiers, options) => {
  return simplifyClaims(qualifiers, getSubSnakOptions(options))
}

const simplifyPropertyQualifiers = (propertyQualifiers, options) => {
  return simplifyPropertyClaims(propertyQualifiers, getSubSnakOptions(options))
}

const simplifyReferences = (references, options) => {
  return references.map(refRecord => {
    return simplifyReferenceRecord(refRecord, options)
  })
}

const simplifyReferenceRecord = (refRecord, options) => {
  const subSnaksOptions = getSubSnakOptions(options)
  const snaks = simplifyClaims(refRecord.snaks, subSnaksOptions)
  if (subSnaksOptions.keepHashes) return { snaks, hash: refRecord.hash }
  else return snaks
}

const getSubSnakOptions = (options = {}) => {
  if (options.areSubSnaks) return options
  // Using a new object so that the original options object isn't modified
  else return Object.assign({}, options, { areSubSnaks: true })
}

const keepOptions = [ 'keepQualifiers', 'keepReferences', 'keepIds', 'keepHashes', 'keepTypes', 'keepSnaktypes', 'keepRanks', 'keepRichValues' ]

const parseKeepOptions = options => {
  if (options.keepAll) {
    keepOptions.forEach(optionName => {
      if (options[optionName] == null) options[optionName] = true
    })
  }
  return options
}

module.exports = {
  simplifyClaims,
  simplifyPropertyClaims,
  simplifyClaim,
  simplifyQualifiers,
  simplifyPropertyQualifiers,
  simplifyQualifier: simplifyClaim,
  simplifyReferences,
}

},{"../utils/utils":189,"./parse_claim":164,"./rank":166}],169:[function(require,module,exports){
const simplify = require('./simplify')

const simplifyEntity = (entity, options) => {
  const { type } = entity
  const simplified = {
    id: entity.id,
    type,
    modified: entity.modified
  }

  if (entity.datatype) simplified.datatype = entity.datatype

  if (type === 'item') {
    simplifyIfDefined(entity, simplified, 'labels')
    simplifyIfDefined(entity, simplified, 'descriptions')
    simplifyIfDefined(entity, simplified, 'aliases')
    simplifyIfDefined(entity, simplified, 'claims', options)
    simplifyIfDefined(entity, simplified, 'sitelinks', options)
  } else if (type === 'property') {
    simplified.datatype = entity.datatype
    simplifyIfDefined(entity, simplified, 'labels')
    simplifyIfDefined(entity, simplified, 'descriptions')
    simplifyIfDefined(entity, simplified, 'aliases')
    simplifyIfDefined(entity, simplified, 'claims', options)
  } else if (type === 'lexeme') {
    simplifyIfDefined(entity, simplified, 'lemmas')
    simplified.lexicalCategory = entity.lexicalCategory
    simplified.language = entity.language
    simplifyIfDefined(entity, simplified, 'claims', options)
    simplifyIfDefined(entity, simplified, 'forms', options)
    simplifyIfDefined(entity, simplified, 'senses', options)
  }

  return simplified
}

const simplifyIfDefined = (entity, simplified, attribute, options) => {
  if (entity[attribute] != null) {
    simplified[attribute] = simplify[attribute](entity[attribute], options)
  }
}

const simplifyEntities = (entities, options = {}) => {
  if (entities.entities) entities = entities.entities
  const { entityPrefix } = options
  return Object.keys(entities).reduce((obj, key) => {
    const entity = entities[key]
    if (entityPrefix) key = `${entityPrefix}:${key}`
    obj[key] = simplifyEntity(entity, options)
    return obj
  }, {})
}

// Set those here instead of in ./simplify to avoid a circular dependency
simplify.entity = simplifyEntity
simplify.entities = simplifyEntities

module.exports = { simplifyEntity, simplifyEntities }

},{"./simplify":167}],170:[function(require,module,exports){
const { isFormId } = require('./helpers')
const { representations: simplifyRepresentations } = require('./simplify_text_attributes')
const { simplifyClaims } = require('./simplify_claims')

const simplifyForm = (form, options) => {
  const { id, representations, grammaticalFeatures, claims } = form
  if (!isFormId(id)) throw new Error('invalid form object')
  return {
    id,
    representations: simplifyRepresentations(representations),
    grammaticalFeatures,
    claims: simplifyClaims(claims, options)
  }
}

const simplifyForms = (forms, options) => forms.map(form => simplifyForm(form, options))

module.exports = { simplifyForm, simplifyForms }

},{"./helpers":163,"./simplify_claims":168,"./simplify_text_attributes":174}],171:[function(require,module,exports){
const { isSenseId } = require('./helpers')
const { glosses: simplifyGlosses } = require('./simplify_text_attributes')
const { simplifyClaims } = require('./simplify_claims')

const simplifySense = (sense, options) => {
  const { id, glosses, claims } = sense
  if (!isSenseId(id)) throw new Error('invalid sense object')
  return {
    id,
    glosses: simplifyGlosses(glosses),
    claims: simplifyClaims(claims, options)
  }
}

const simplifySenses = (senses, options) => senses.map(sense => simplifySense(sense, options))

module.exports = { simplifySense, simplifySenses }

},{"./helpers":163,"./simplify_claims":168,"./simplify_text_attributes":174}],172:[function(require,module,exports){
const { getSitelinkUrl } = require('./sitelinks')

module.exports = (sitelinks, options = {}) => {
  let { addUrl, keepBadges, keepAll } = options
  keepBadges = keepBadges || keepAll
  return Object.keys(sitelinks).reduce(aggregateValues({
    sitelinks,
    addUrl,
    keepBadges
  }), {})
}

const aggregateValues = ({ sitelinks, addUrl, keepBadges }) => (index, key) => {
  // Accomodating for wikibase-cli, which might set the sitelink to null
  // to signify that a requested sitelink was not found
  if (sitelinks[key] == null) {
    index[key] = sitelinks[key]
    return index
  }

  const { title, badges } = sitelinks[key]
  if (addUrl || keepBadges) {
    index[key] = { title }
    if (addUrl) index[key].url = getSitelinkUrl(key, title)
    if (keepBadges) index[key].badges = badges
  } else {
    index[key] = title
  }
  return index
}

},{"./sitelinks":175}],173:[function(require,module,exports){
module.exports = (input, options = {}) => {
  if (typeof input === 'string') input = JSON.parse(input)

  const { vars } = input.head
  const results = input.results.bindings

  if (vars.length === 1 && options.minimize === true) {
    const varName = vars[0]
    return results
    .map(result => parseValue(result[varName]))
    // filtering-out bnodes
    .filter(result => result != null)
  }

  const { richVars, associatedVars, standaloneVars } = identifyVars(vars)
  return results.map(getSimplifiedResult(richVars, associatedVars, standaloneVars))
}

const parseValue = valueObj => {
  if (!(valueObj)) return
  let { datatype } = valueObj
  datatype = datatype && datatype.replace('http://www.w3.org/2001/XMLSchema#', '')
  const parser = parsers[valueObj.type] || getDatatypesParsers(datatype)
  return parser(valueObj)
}

const parsers = {
  uri: valueObj => parseUri(valueObj.value),
  // blank nodes will be filtered-out in order to get things simple
  bnode: () => null
}

const numberParser = valueObj => parseFloat(valueObj.value)

const getDatatypesParsers = datatype => {
  datatype = datatype && datatype.replace('http://www.w3.org/2001/XMLSchema#', '')
  return datatypesParsers[datatype] || passValue
}

const datatypesParsers = {
  decimal: numberParser,
  integer: numberParser,
  float: numberParser,
  double: numberParser,
  boolean: valueObj => valueObj.value === 'true'
}

// return the raw value if the datatype is missing
const passValue = valueObj => valueObj.value

const parseUri = uri => {
  // ex: http://www.wikidata.org/entity/statement/
  if (uri.match(/http.*\/entity\/statement\//)) {
    return convertStatementUriToGuid(uri)
  }

  return uri
  // ex: http://www.wikidata.org/entity/
  .replace(/^https?:\/\/.*\/entity\//, '')
  // ex: http://www.wikidata.org/prop/direct/
  .replace(/^https?:\/\/.*\/prop\/direct\//, '')
}

const convertStatementUriToGuid = uri => {
  // ex: http://www.wikidata.org/entity/statement/
  uri = uri.replace(/^https?:\/\/.*\/entity\/statement\//, '')
  const parts = uri.split('-')
  return parts[0] + '$' + parts.slice(1).join('-')
}

const identifyVars = vars => {
  let richVars = vars.filter(varName => vars.some(isAssociatedVar(varName)))
  richVars = richVars.filter(richVar => {
    return !richVars.some(otherRichVar => {
      return richVar !== otherRichVar && richVar.startsWith(otherRichVar)
    })
  })
  const associatedVarPattern = new RegExp(`^(${richVars.join('|')})[A-Z]`)
  const associatedVars = vars.filter(varName => associatedVarPattern.test(varName))
  const standaloneVars = vars.filter(varName => {
    return !richVars.includes(varName) && !associatedVarPattern.test(varName)
  })
  return { richVars, associatedVars, standaloneVars }
}

const isAssociatedVar = varNameA => {
  const pattern = new RegExp(`^${varNameA}[A-Z]\\w+`)
  return pattern.test.bind(pattern)
}

const getSimplifiedResult = (richVars, associatedVars, standaloneVars) => result => {
  const simplifiedResult = {}
  for (const varName of richVars) {
    const richVarData = {}
    const value = parseValue(result[varName])
    if (value != null) richVarData.value = value
    for (const associatedVarName of associatedVars) {
      if (associatedVarName.startsWith(varName)) addAssociatedValue(result, varName, associatedVarName, richVarData)
    }
    if (Object.keys(richVarData).length > 0) simplifiedResult[varName] = richVarData
  }
  for (const varName of standaloneVars) {
    simplifiedResult[varName] = parseValue(result[varName])
  }
  return simplifiedResult
}

const addAssociatedValue = (result, varName, associatedVarName, richVarData) => {
  // ex: propertyType => Type
  let shortAssociatedVarName = associatedVarName.split(varName)[1]
  // ex: Type => type
  shortAssociatedVarName = shortAssociatedVarName[0].toLowerCase() + shortAssociatedVarName.slice(1)
  // ex: altLabel => aliases
  shortAssociatedVarName = specialNames[shortAssociatedVarName] || shortAssociatedVarName
  const associatedVarData = result[associatedVarName]
  if (associatedVarData != null) richVarData[shortAssociatedVarName] = associatedVarData.value
}

const specialNames = {
  altLabel: 'aliases'
}

},{}],174:[function(require,module,exports){
const simplifyTextAttributes = multivalue => data => {
  const simplified = {}
  Object.keys(data).forEach(lang => {
    const obj = data[lang]
    if (obj != null) {
      simplified[lang] = multivalue ? obj.map(getValue) : obj.value
    } else {
      simplified[lang] = multivalue ? [] : null
    }
  })
  return simplified
}

const getValue = obj => obj.value

const singleValue = simplifyTextAttributes(false)

module.exports = {
  labels: singleValue,
  descriptions: singleValue,
  aliases: simplifyTextAttributes(true),
  lemmas: singleValue,
  representations: singleValue,
  glosses: singleValue
}

},{}],175:[function(require,module,exports){
const { fixedEncodeURIComponent, replaceSpaceByUnderscores, isPlainObject } = require('../utils/utils')
const wikidataBase = 'https://www.wikidata.org/wiki/'
const languages = require('./sitelinks_languages')

const getSitelinkUrl = (site, title) => {
  if (isPlainObject(site)) {
    title = site.title
    site = site.site
  }

  if (!site) throw new Error('missing a site')
  if (!title) throw new Error('missing a title')

  const shortSiteKey = site.replace(/wiki$/, '')
  const specialUrlBuilder = siteUrlBuilders[shortSiteKey] || siteUrlBuilders[site]
  if (specialUrlBuilder) return specialUrlBuilder(title)

  const { lang, project } = getSitelinkData(site)
  title = fixedEncodeURIComponent(replaceSpaceByUnderscores(title))
  return `https://${lang}.${project}.org/wiki/${title}`
}

const wikimediaSite = subdomain => title => `https://${subdomain}.wikimedia.org/wiki/${title}`

const siteUrlBuilders = {
  commons: wikimediaSite('commons'),
  mediawiki: title => `https://www.mediawiki.org/wiki/${title}`,
  meta: wikimediaSite('meta'),
  species: wikimediaSite('species'),
  wikidata: entityId => {
    const prefix = prefixByEntityLetter[entityId[0]]
    let title = prefix ? `${prefix}:${entityId}` : entityId
    // Required for forms and senses
    title = title.replace('-', '#')
    return `${wikidataBase}${title}`
  },
  wikimania: wikimediaSite('wikimania')
}

const prefixByEntityLetter = {
  E: 'EntitySchema',
  L: 'Lexeme',
  P: 'Property',
}

const sitelinkUrlPattern = /^https?:\/\/([\w-]{2,10})\.(\w+)\.org\/\w+\/(.*)/

const getSitelinkData = site => {
  if (site.startsWith('http')) {
    const url = site
    const matchData = url.match(sitelinkUrlPattern)
    if (!matchData) throw new Error(`invalid sitelink url: ${url}`)
    let [ lang, project, title ] = matchData.slice(1)
    title = decodeURIComponent(title)
    let key
    // Known case: wikidata, mediawiki
    if (lang === 'www') {
      lang = 'en'
      key = project
    } else if (lang === 'commons') {
      lang = 'en'
      project = key = 'commons'
    } else {
      // Support multi-parts language codes, such as be_x_old
      lang = lang.replace(/-/g, '_')
      key = `${lang}${project}`.replace('wikipedia', 'wiki')
    }
    return { lang, project, key, title, url }
  } else {
    const key = site
    const specialProjectName = specialSites[key]
    if (specialProjectName) return { lang: 'en', project: specialProjectName, key }

    let [ lang, projectSuffix, rest ] = key.split('wik')

    // Detecting cases like 'frwikiwiki' that would return [ 'fr', 'i', 'i' ]
    if (rest != null) throw new Error(`invalid sitelink key: ${key}`)

    if (languages.indexOf(lang) === -1) {
      throw new Error(`sitelink lang not found: ${lang}. Updating wikibase-sdk to a more recent version might fix the issue.`)
    }

    // Support keys such as be_x_oldwiki, which refers to be-x-old.wikipedia.org
    lang = lang.replace(/_/g, '-')

    const project = projectsBySuffix[projectSuffix]
    if (!project) throw new Error(`sitelink project not found: ${project}`)

    return { lang, project, key }
  }
}

const specialSites = {
  commonswiki: 'commons',
  mediawikiwiki: 'mediawiki',
  metawiki: 'meta',
  specieswiki: 'specieswiki',
  wikidatawiki: 'wikidata',
  wikimaniawiki: 'wikimania'
}

const isSitelinkKey = site => {
  try {
    // relies on getSitelinkData validation
    getSitelinkData(site)
    return true
  } catch (err) {
    return false
  }
}

const projectsBySuffix = {
  i: 'wikipedia',
  isource: 'wikisource',
  iquote: 'wikiquote',
  tionary: 'wiktionary',
  ibooks: 'wikibooks',
  iversity: 'wikiversity',
  ivoyage: 'wikivoyage',
  inews: 'wikinews'
}

module.exports = { getSitelinkUrl, getSitelinkData, isSitelinkKey }

},{"../utils/utils":189,"./sitelinks_languages":176}],176:[function(require,module,exports){
// Generated by 'npm run update-sitelinks-languages'
module.exports = [
  'aa',
  'ab',
  'ace',
  'ady',
  'af',
  'ak',
  'als',
  'alt',
  'ami',
  'am',
  'ang',
  'an',
  'arc',
  'ar',
  'ary',
  'arz',
  'ast',
  'as',
  'atj',
  'avk',
  'av',
  'awa',
  'ay',
  'azb',
  'az',
  'ban',
  'bar',
  'bat_smg',
  'ba',
  'bcl',
  'be_x_old',
  'be',
  'bg',
  'bh',
  'bi',
  'bjn',
  'bm',
  'bn',
  'bo',
  'bpy',
  'br',
  'bs',
  'bug',
  'bxr',
  'ca',
  'cbk_zam',
  'cdo',
  'ceb',
  'ce',
  'cho',
  'chr',
  'ch',
  'chy',
  'ckb',
  'co',
  'crh',
  'cr',
  'csb',
  'cs',
  'cu',
  'cv',
  'cy',
  'dag',
  'da',
  'de',
  'din',
  'diq',
  'dsb',
  'dty',
  'dv',
  'dz',
  'ee',
  'el',
  'eml',
  'en',
  'eo',
  'es',
  'et',
  'eu',
  'ext',
  'fa',
  'ff',
  'fiu_vro',
  'fi',
  'fj',
  'fo',
  'frp',
  'frr',
  'fr',
  'fur',
  'fy',
  'gag',
  'gan',
  'ga',
  'gcr',
  'gd',
  'glk',
  'gl',
  'gn',
  'gom',
  'gor',
  'got',
  'gu',
  'guw',
  'gv',
  'hak',
  'ha',
  'haw',
  'he',
  'hif',
  'hi',
  'ho',
  'hr',
  'hsb',
  'ht',
  'hu',
  'hy',
  'hyw',
  'hz',
  'ia',
  'id',
  'ie',
  'ig',
  'ii',
  'ik',
  'ilo',
  'inh',
  'io',
  'is',
  'it',
  'iu',
  'jam',
  'ja',
  'jbo',
  'jv',
  'kaa',
  'kab',
  'ka',
  'kbd',
  'kbp',
  'kcg',
  'kg',
  'ki',
  'kj',
  'kk',
  'kl',
  'km',
  'kn',
  'koi',
  'ko',
  'krc',
  'kr',
  'ksh',
  'ks',
  'ku',
  'kv',
  'kw',
  'ky',
  'lad',
  'la',
  'lbe',
  'lb',
  'lez',
  'lfn',
  'lg',
  'lij',
  'li',
  'lld',
  'lmo',
  'ln',
  'lo',
  'lrc',
  'ltg',
  'lt',
  'lv',
  'mad',
  'mai',
  'map_bms',
  'mdf',
  'mg',
  'mhr',
  'mh',
  'min',
  'mi',
  'mk',
  'ml',
  'mni',
  'mn',
  'mnw',
  'mo',
  'mrj',
  'mr',
  'ms',
  'mt',
  'mus',
  'mwl',
  'myv',
  'my',
  'mzn',
  'nah',
  'nap',
  'na',
  'nds_nl',
  'nds',
  'ne',
  'new',
  'ng',
  'nia',
  'nl',
  'nn',
  'nov',
  'no',
  'nqo',
  'nrm',
  'nso',
  'nv',
  'ny',
  'oc',
  'olo',
  'om',
  'or',
  'os',
  'pag',
  'pam',
  'pap',
  'pa',
  'pcd',
  'pdc',
  'pfl',
  'pih',
  'pi',
  'pl',
  'pms',
  'pnb',
  'pnt',
  'ps',
  'pt',
  'pwn',
  'qu',
  'rm',
  'rmy',
  'rn',
  'roa_rup',
  'roa_tara',
  'ro',
  'rue',
  'ru',
  'rw',
  'sah',
  'sat',
  'sa',
  'scn',
  'sco',
  'sc',
  'sd',
  'se',
  'sg',
  'shi',
  'shn',
  'sh',
  'shy',
  'simple',
  'si',
  'skr',
  'sk',
  'sl',
  'smn',
  'sm',
  'sn',
  'sources',
  'so',
  'sq',
  'srn',
  'sr',
  'ss',
  'stq',
  'st',
  'su',
  'sv',
  'sw',
  'szl',
  'szy',
  'ta',
  'tay',
  'tcy',
  'tet',
  'te',
  'tg',
  'th',
  'ti',
  'tk',
  'tl',
  'tn',
  'to',
  'tpi',
  'trv',
  'tr',
  'ts',
  'tt',
  'tum',
  'tw',
  'tyv',
  'ty',
  'udm',
  'ug',
  'uk',
  'ur',
  'uz',
  'vec',
  'vep',
  've',
  'vi',
  'vls',
  'vo',
  'war',
  'wa',
  'wo',
  'wuu',
  'xal',
  'xh',
  'xmf',
  'yi',
  'yo',
  'yue',
  'za',
  'zea',
  'zh_classical',
  'zh_min_nan',
  'zh_yue',
  'zh',
  'zu'
]

},{}],177:[function(require,module,exports){
const helpers = require('./helpers')

const validate = (name, testName) => value => {
  if (!helpers[testName](value)) throw new Error(`invalid ${name}: ${value}`)
}

module.exports = {
  entityId: validate('entity id', 'isEntityId'),
  propertyId: validate('property id', 'isPropertyId'),
  entityPageTitle: validate('entity page title', 'isEntityPageTitle'),
  revisionId: validate('revision id', 'isRevisionId')
}

},{"./helpers":163}],178:[function(require,module,exports){
module.exports = wikibaseTime => {
  // Also accept claim datavalue.value objects
  if (typeof wikibaseTime === 'object') {
    wikibaseTime = wikibaseTime.time
  }

  const sign = wikibaseTime[0]
  let [ yearMonthDay, withinDay ] = wikibaseTime.slice(1).split('T')

  // Wikidata generates invalid ISO dates to indicate precision
  // ex: +1990-00-00T00:00:00Z to indicate 1990 with year precision
  yearMonthDay = yearMonthDay.replace(/-00/g, '-01')
  const rest = `${yearMonthDay}T${withinDay}`

  return fullDateData(sign, rest)
}

const fullDateData = (sign, rest) => {
  const year = rest.split('-')[0]
  const needsExpandedYear = sign === '-' || year.length > 4

  return needsExpandedYear ? expandedYearDate(sign, rest, year) : new Date(rest)
}

const expandedYearDate = (sign, rest, year) => {
  let date
  // Using ISO8601 expanded notation for negative years or positive
  // years with more than 4 digits: adding up to 2 leading zeros
  // when needed. Can't find the documentation again, but testing
  // with `new Date(date)` gives a good clue of the implementation
  if (year.length === 4) {
    date = `${sign}00${rest}`
  } else if (year.length === 5) {
    date = `${sign}0${rest}`
  } else {
    date = sign + rest
  }
  return new Date(date)
}

},{}],179:[function(require,module,exports){
// See https://www.wikidata.org/w/api.php?action=help&modules=query%2Bsearch

const { isPlainObject } = require('../utils/utils')
const namespacePattern = /^\d+[|\d]*$/

module.exports = buildUrl => params => {
  if (!isPlainObject(params)) {
    throw new Error(`expected parameters to be passed as an object, got ${params} (${typeof params})`)
  }

  // Accept sr parameters with or without prefix
  for (const key in params) {
    if (key.startsWith('sr')) {
      const shortKey = key.replace(/^sr/, '')
      if (params[shortKey] != null) throw new Error(`${shortKey} and ${key} are the same`)
      params[shortKey] = params[key]
    }
  }

  const { search, haswbstatement, format = 'json', limit, offset, profile, sort } = params
  let { namespace, prop } = params

  if (!(search || haswbstatement)) throw new Error('missing "search" or "haswbstatement" parameter')

  let srsearch = ''
  if (search) srsearch += search

  if (haswbstatement) {
    const statements = haswbstatement instanceof Array ? haswbstatement : [ haswbstatement ]
    for (const statement of statements) {
      if (statement[0] === '-') srsearch += ` -haswbstatement:${statement.slice(1)}`
      else srsearch += ` haswbstatement:${statement}`
    }
  }

  if (limit != null && (typeof limit !== 'number' || limit < 1)) {
    throw new Error(`invalid limit: ${limit}`)
  }

  if (offset != null && (typeof offset !== 'number' || offset < 0)) {
    throw new Error(`invalid offset: ${offset}`)
  }

  if (namespace instanceof Array) namespace = namespace.join('|')
  else if (typeof namespace === 'number') namespace = namespace.toString()

  if (namespace && !namespacePattern.test(namespace)) {
    throw new Error(`invalid namespace: ${namespace}`)
  }

  if (profile != null && typeof profile !== 'string') {
    throw new Error(`invalid profile: ${profile} (${typeof profile}, expected string)`)
  }

  if (sort != null && typeof sort !== 'string') {
    throw new Error(`invalid sort: ${sort} (${typeof sort}, expected string)`)
  }

  if (prop != null) {
    if (namespace instanceof Array) prop = prop.join('|')
    if (typeof prop !== 'string') {
      throw new Error(`invalid prop: ${prop} (${typeof prop}, expected string)`)
    }
  }

  return buildUrl({
    action: 'query',
    list: 'search',
    srsearch: srsearch.trim(),
    format,
    srnamespace: namespace,
    srlimit: limit,
    sroffset: offset,
    srqiprofile: profile,
    srsort: sort,
    srprop: prop,
  })
}

},{"../utils/utils":189}],180:[function(require,module,exports){
const { isPlainObject, forceArray, shortLang } = require('../utils/utils')
const validate = require('../helpers/validate')

module.exports = buildUrl => (ids, languages, props, format, redirects) => {
  // Polymorphism: arguments can be passed as an object keys
  if (isPlainObject(ids)) {
    ({ ids, languages, props, format, redirects } = ids)
  }

  format = format || 'json'

  // ids can't be let empty
  if (!(ids && ids.length > 0)) throw new Error('no id provided')

  // Allow to pass ids as a single string
  ids = forceArray(ids)

  ids.forEach(validate.entityId)

  if (ids.length > 50) {
    console.warn(`getEntities accepts 50 ids max to match Wikidata API limitations:
      this request won't get all the desired entities.
      You can use getManyEntities instead to generate several request urls
      to work around this limitation`)
  }

  // Properties can be either one property as a string
  // or an array or properties;
  // either case me just want to deal with arrays

  const query = {
    action: 'wbgetentities',
    ids: ids.join('|'),
    format
  }

  if (redirects === false) query.redirects = 'no'

  if (languages) {
    languages = forceArray(languages).map(shortLang)
    query.languages = languages.join('|')
  }

  if (props && props.length > 0) query.props = forceArray(props).join('|')

  return buildUrl(query)
}

},{"../helpers/validate":177,"../utils/utils":189}],181:[function(require,module,exports){
const { isPlainObject, forceArray, shortLang } = require('../utils/utils')

module.exports = buildUrl => (titles, sites, languages, props, format, redirects) => {
  // polymorphism: arguments can be passed as an object keys
  if (isPlainObject(titles)) {
    // Not using destructuring assigment there as it messes with both babel and standard
    const params = titles
    titles = params.titles
    sites = params.sites
    languages = params.languages
    props = params.props
    format = params.format
    redirects = params.redirects
  }

  format = format || 'json'

  // titles cant be let empty
  if (!(titles && titles.length > 0)) throw new Error('no titles provided')
  // default to the English Wikipedia
  if (!(sites && sites.length > 0)) sites = [ 'enwiki' ]

  // Properties can be either one property as a string
  // or an array or properties;
  // either case me just want to deal with arrays
  titles = forceArray(titles)
  sites = forceArray(sites).map(parseSite)
  props = forceArray(props)

  const query = {
    action: 'wbgetentities',
    titles: titles.join('|'),
    sites: sites.join('|'),
    format
  }

  // Normalizing only works if there is only one site and title
  if (sites.length === 1 && titles.length === 1) {
    query.normalize = true
  }

  if (languages) {
    languages = forceArray(languages).map(shortLang)
    query.languages = languages.join('|')
  }

  if (props && props.length > 0) query.props = props.join('|')

  if (redirects === false) query.redirects = 'no'

  return buildUrl(query)
}

// convert 2 letters language code to Wikipedia sitelinks code
const parseSite = site => site.length === 2 ? `${site}wiki` : site

},{"../utils/utils":189}],182:[function(require,module,exports){
const validate = require('../helpers/validate')
const { isPlainObject } = require('../utils/utils')

module.exports = (instance, wgScriptPath) => (id, revision) => {
  if (isPlainObject(id)) {
    revision = id.revision
    id = id.id
  }
  validate.entityId(id)
  validate.revisionId(revision)
  return `${instance}/${wgScriptPath}/index.php?title=Special:EntityData/${id}.json&revision=${revision}`
}

},{"../helpers/validate":177,"../utils/utils":189}],183:[function(require,module,exports){
const { isPlainObject } = require('../utils/utils')

module.exports = buildUrl => {
  const getEntities = require('./get_entities')(buildUrl)
  return (ids, languages, props, format, redirects) => {
    // Polymorphism: arguments can be passed as an object keys
    if (isPlainObject(ids)) {
      ({ ids, languages, props, format, redirects } = ids)
    }

    if (!(ids instanceof Array)) throw new Error('getManyEntities expects an array of ids')

    return getIdsGroups(ids)
    .map(idsGroup => getEntities(idsGroup, languages, props, format, redirects))
  }
}

const getIdsGroups = ids => {
  const groups = []
  while (ids.length > 0) {
    const group = ids.slice(0, 50)
    ids = ids.slice(50)
    groups.push(group)
  }
  return groups
}

},{"../utils/utils":189,"./get_entities":180}],184:[function(require,module,exports){
const { forceArray } = require('../utils/utils')
const { isItemId } = require('../helpers/helpers')
const validate = require('../helpers/validate')

// Fiter-out properties. Can't be filtered by
// `?subject a wikibase:Item`, as those triples are omitted
// https://www.mediawiki.org/wiki/Wikibase/Indexing/RDF_Dump_Format#WDQS_data_differences
const itemsOnly = 'FILTER NOT EXISTS { ?subject rdf:type wikibase:Property . } '

module.exports = sparqlEndpoint => {
  const sparqlQuery = require('./sparql_query')(sparqlEndpoint)
  return (property, value, options = {}) => {
    const { limit, caseInsensitive, keepProperties } = options
    const valueFn = caseInsensitive ? caseInsensitiveValueQuery : directValueQuery
    const filter = keepProperties ? '' : itemsOnly

    // Allow to request values for several properties at once
    let properties = forceArray(property)
    properties.forEach(validate.propertyId)
    properties = properties.map(prefixifyProperty).join('|')

    const valueBlock = getValueBlock(value, valueFn, properties, filter)
    let sparql = `SELECT DISTINCT ?subject WHERE { ${valueBlock} }`
    if (limit) sparql += ` LIMIT ${limit}`
    return sparqlQuery(sparql)
  }
}

const getValueBlock = (value, valueFn, properties, filter) => {
  if (!(value instanceof Array)) {
    return valueFn(properties, getValueString(value), filter)
  }

  const valuesBlocks = value
    .map(getValueString)
    .map(valStr => valueFn(properties, valStr, filter))

  return '{ ' + valuesBlocks.join('} UNION {') + ' }'
}

const getValueString = value => {
  if (isItemId(value)) {
    value = `wd:${value}`
  } else if (typeof value === 'string') {
    value = `'${value}'`
  }
  return value
}

const directValueQuery = (properties, value, filter, limit) => {
  return `?subject ${properties} ${value} .
    ${filter}`
}

// Discussion on how to make this query optimal:
// http://stackoverflow.com/q/43073266/3324977
const caseInsensitiveValueQuery = (properties, value, filter, limit) => {
  return `?subject ${properties} ?value .
    FILTER (lcase(?value) = ${value.toLowerCase()})
    ${filter}`
}

const prefixifyProperty = property => 'wdt:' + property

},{"../helpers/helpers":163,"../helpers/validate":177,"../utils/utils":189,"./sparql_query":187}],185:[function(require,module,exports){
const { forceArray } = require('../utils/utils')
const validate = require('../helpers/validate')

// See https://www.wikidata.org/w/api.php?action=help&modules=query+revisions

module.exports = buildUrl => (ids, options = {}) => {
  ids = forceArray(ids)
  ids.forEach(validate.entityPageTitle)

  const uniqueId = ids.length === 1
  const query = {
    action: 'query',
    prop: 'revisions'
  }

  query.titles = ids.join('|')
  query.format = options.format || 'json'
  if (uniqueId) query.rvlimit = options.limit || 'max'
  if (uniqueId && options.start) query.rvstart = getEpochSeconds(options.start)
  if (uniqueId && options.end) query.rvend = getEpochSeconds(options.end)

  const { prop, user, excludeuser, tag } = options
  if (prop) {
    query.rvprop = forceArray(prop).join('|')
  } else {
    query.rvprop = 'ids|flags|timestamp|user|userid|size|slotsize|sha1|slotsha1|contentmodel|comment|parsedcomment|content|tags|roles|oresscores'
  }
  query.rvslots = '*'
  if (user) query.rvuser = user
  if (excludeuser) query.rvexcludeuser = excludeuser
  if (tag) query.rvtag = tag

  return buildUrl(query)
}

const getEpochSeconds = date => {
  // Return already formatted epoch seconds:
  // if a date in milliseconds appear to be earlier than 2000-01-01, that's probably
  // already seconds actually
  if (typeof date === 'number' && date < earliestPointInMs) return date
  return Math.trunc(new Date(date).getTime() / 1000)
}

const earliestPointInMs = new Date('2000-01-01').getTime()

},{"../helpers/validate":177,"../utils/utils":189}],186:[function(require,module,exports){
const { isPlainObject } = require('../utils/utils')
const types = [ 'item', 'property', 'lexeme', 'form', 'sense' ]

module.exports = buildUrl => (search, language, limit, format, uselang) => {
  // Using the variable 'offset' instead of 'continue' as the later is a reserved word
  let type, offset

  // polymorphism: arguments can be passed as an object keys
  if (isPlainObject(search)) {
    // Not using destructuring assigment there as it messes with both babel and standard
    const params = search
    search = params.search
    language = params.language
    limit = params.limit
    offset = params.continue
    format = params.format
    uselang = params.uselang
    type = params.type
  }

  if (!(search && search.length > 0)) throw new Error("search can't be empty")

  language = language || 'en'
  uselang = uselang || language
  limit = limit || '20'
  format = format || 'json'
  type = type || 'item'
  offset = offset || '0'

  if (!types.includes(type)) throw new Error(`invalid type: ${type}`)

  return buildUrl({
    action: 'wbsearchentities',
    search,
    language,
    limit,
    continue: offset,
    format,
    uselang,
    type
  })
}

},{"../utils/utils":189}],187:[function(require,module,exports){
const { fixedEncodeURIComponent } = require('../utils/utils')

module.exports = sparqlEndpoint => sparql => {
  const query = fixedEncodeURIComponent(sparql)
  return `${sparqlEndpoint}?format=json&query=${query}`
}

},{"../utils/utils":189}],188:[function(require,module,exports){
const isBrowser = typeof location !== 'undefined' && typeof document !== 'undefined'

const stringifyQuery = queryObj => new URLSearchParams(queryObj).toString()

module.exports = instanceApiEndpoint => queryObj => {
  // Request CORS headers if the request is made from a browser
  // See https://www.wikidata.org/w/api.php ('origin' parameter)
  if (isBrowser) queryObj.origin = '*'

  // Remove null or undefined parameters
  Object.keys(queryObj).forEach(key => {
    if (queryObj[key] == null) delete queryObj[key]
  })

  return instanceApiEndpoint + '?' + stringifyQuery(queryObj)
}

},{}],189:[function(require,module,exports){
module.exports = {
  // Ex: keep only 'fr' in 'fr_FR'
  shortLang: language => language.toLowerCase().split('_')[0],

  // a polymorphism helper:
  // accept either a string or an array and return an array
  forceArray: array => {
    if (typeof array === 'string') array = [ array ]
    return array || []
  },

  // simplistic implementation to filter-out arrays
  isPlainObject: obj => {
    if (!obj || typeof obj !== 'object' || obj instanceof Array) return false
    return true
  },

  // encodeURIComponent ignores !, ', (, ), and *
  // cf https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent#Description
  fixedEncodeURIComponent: str => {
    return encodeURIComponent(str).replace(/[!'()*]/g, encodeCharacter)
  },

  replaceSpaceByUnderscores: str => str.replace(/\s/g, '_'),

  uniq: array => Array.from(new Set(array))
}

const encodeCharacter = char => '%' + char.charCodeAt(0).toString(16)

},{}],190:[function(require,module,exports){
const { isPlainObject } = require('./utils/utils')

const simplify = require('./helpers/simplify')
const parse = require('./helpers/parse_responses')
const helpers = require('./helpers/helpers')
const sitelinksHelpers = require('../lib/helpers/sitelinks')
const rankHelpers = require('../lib/helpers/rank')
const tip = `Tip: if you just want to access functions that don't need an instance or a sparqlEndpoint,
those are also exposed directly on the module object. Exemple:
const { isItemId, simplify } = require('wikibase-sdk')`

const common = Object.assign({ simplify, parse }, helpers, sitelinksHelpers, rankHelpers)

const WBK = config => {
  if (!isPlainObject(config)) throw new Error('invalid config')
  const { instance, sparqlEndpoint } = config
  let { wgScriptPath = 'w' } = config

  wgScriptPath = wgScriptPath.replace(/^\//, '')

  if (!(instance || sparqlEndpoint)) {
    throw new Error(`one of instance or sparqlEndpoint should be set at initialization.\n${tip}`)
  }

  let wikibaseApiFunctions, instanceRoot, instanceApiEndpoint
  if (instance) {
    validateEndpoint('instance', instance)

    instanceRoot = instance
      .replace(/\/$/, '')
      .replace(`/${wgScriptPath}/api.php`, '')

    instanceApiEndpoint = `${instanceRoot}/${wgScriptPath}/api.php`

    const buildUrl = require('./utils/build_url')(instanceApiEndpoint)

    wikibaseApiFunctions = {
      searchEntities: require('./queries/search_entities')(buildUrl),
      cirrusSearchPages: require('./queries/cirrus_search')(buildUrl),
      getEntities: require('./queries/get_entities')(buildUrl),
      getManyEntities: require('./queries/get_many_entities')(buildUrl),
      getRevisions: require('./queries/get_revisions')(buildUrl),
      getEntityRevision: require('./queries/get_entity_revision')(instance, wgScriptPath),
      getEntitiesFromSitelinks: require('./queries/get_entities_from_sitelinks')(buildUrl)
    }
  } else {
    wikibaseApiFunctions = {
      searchEntities: missingInstance('searchEntities'),
      cirrusSearchPages: missingInstance('cirrusSearchPages'),
      getEntities: missingInstance('getEntities'),
      getManyEntities: missingInstance('getManyEntities'),
      getRevisions: missingInstance('getRevisions'),
      getEntityRevision: missingInstance('getEntityRevision'),
      getEntitiesFromSitelinks: missingInstance('getEntitiesFromSitelinks')
    }
  }

  let wikibaseQueryServiceFunctions
  if (sparqlEndpoint) {
    validateEndpoint('sparqlEndpoint', sparqlEndpoint)
    wikibaseQueryServiceFunctions = {
      sparqlQuery: require('./queries/sparql_query')(sparqlEndpoint),
      getReverseClaims: require('./queries/get_reverse_claims')(sparqlEndpoint)
    }
  } else {
    wikibaseQueryServiceFunctions = {
      sparqlQuery: missingSparqlEndpoint('sparqlQuery'),
      getReverseClaims: missingSparqlEndpoint('getReverseClaims')
    }
  }

  const parsedData = {
    instance: {
      root: instanceRoot,
      apiEndpoint: instanceApiEndpoint
    }
  }

  return Object.assign(parsedData, common, wikibaseApiFunctions, wikibaseQueryServiceFunctions)
}

// Make heplpers that don't require an instance to be specified available
// directly on the exported function object
Object.assign(WBK, common)

const validateEndpoint = (name, url) => {
  if (!(typeof url === 'string' && url.startsWith('http'))) {
    throw new Error(`invalid ${name}: ${url}`)
  }
}

const missingConfig = missingParameter => name => () => {
  throw new Error(`${name} requires ${missingParameter} to be set at initialization`)
}

const missingSparqlEndpoint = missingConfig('a sparqlEndpoint')
const missingInstance = missingConfig('an instance')

module.exports = WBK

},{"../lib/helpers/rank":166,"../lib/helpers/sitelinks":175,"./helpers/helpers":163,"./helpers/parse_responses":165,"./helpers/simplify":167,"./queries/cirrus_search":179,"./queries/get_entities":180,"./queries/get_entities_from_sitelinks":181,"./queries/get_entity_revision":182,"./queries/get_many_entities":183,"./queries/get_reverse_claims":184,"./queries/get_revisions":185,"./queries/search_entities":186,"./queries/sparql_query":187,"./utils/build_url":188,"./utils/utils":189}],191:[function(require,module,exports){
module.exports = require('wikibase-sdk')({
  instance: 'https://www.wikidata.org',
  sparqlEndpoint: 'https://query.wikidata.org/sparql'
})

},{"wikibase-sdk":190}],"citation-js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Cite", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "logger", {
  enumerable: true,
  get: function () {
    return _logger.default;
  }
});
exports.version = exports.util = exports.plugins = void 0;
var _index = _interopRequireDefault(require("./Cite/index.js"));
var plugins = _interopRequireWildcard(require("./plugins/index.js"));
exports.plugins = plugins;
var util = _interopRequireWildcard(require("./util/index.js"));
exports.util = util;
var _logger = _interopRequireDefault(require("./logger.js"));
var _package = _interopRequireDefault(require("../package.json"));
require("./plugin-common/index.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const version = exports.version = _package.default.version;
},{"../package.json":42,"./Cite/index.js":3,"./logger.js":10,"./plugin-common/index.js":11,"./plugins/index.js":22,"./util/index.js":38}]},{},[50,76,79,85,89,92,94,101,109,116,122,127]);
